cset: moving following pidspec: 16081
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.320788491 seconds)
loading group "string"... done (took 0.570648345 seconds)
loading group "linalg"... done (took 7.197098421 seconds)
loading group "parallel"... done (took 0.168530995 seconds)
loading group "find"... done (took 1.130096771 seconds)
loading group "tuple"... done (took 1.763311769 seconds)
loading group "dates"... done (took 1.228699898 seconds)
loading group "micro"... done (took 0.226972991 seconds)
loading group "io"... done (took 1.036658412 seconds)
loading group "scalar"... done (took 40.5663761 seconds)
loading group "sparse"... done (took 13.030507502 seconds)
loading group "broadcast"... done (took 1.012837118 seconds)
loading group "union"... done (took 14.45338183 seconds)
loading group "simd"... done (took 4.778214124 seconds)
loading group "random"... done (took 9.489662972 seconds)
loading group "problem"... done (took 1.997787379 seconds)
loading group "array"... done (took 22.331410394 seconds)
loading group "misc"... done (took 2.048895011 seconds)
loading group "sort"... done (took 3.404424332 seconds)
loading group "collection"... done (took 19.344909804 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.572521272 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.159822128 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.152063023 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.149463642 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191898744 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.159212581 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15929701 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098271934 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.036032615 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180195562 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153582443 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.531375867 seconds)
done (took 5.369429628 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.220303495 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092390588 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103405082 seconds)
  done (took 0.96466081 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077279963 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143561392 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094869791 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.076612161 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094393284 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077617454 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094278296 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076612703 seconds)
  done (took 1.431540205 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.084845516 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097259531 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.080135556 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095662161 seconds)
  done (took 1.130584132 seconds)
done (took 4.605107426 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.886348488 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.284828146 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203724202 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465376048 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.201568083 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.219367446 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684323775 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.335428357 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.267938141 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102777214 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.136958526 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.398616946 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139637165 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.684142416 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089727187 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127038244 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.185625499 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.461507991 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081577459 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111175576 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117805391 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140200693 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129940871 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089062856 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18412285 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080094568 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194140489 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110609064 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080922896 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.278626957 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202246331 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.689137295 seconds)
  done (took 11.176398516 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.108117094 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13240174 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097252337 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136426695 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132312737 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099668279 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082511571 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096376999 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120146741 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174261172 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112416288 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.134743563 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095241634 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080985415 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114577443 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244456869 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10173044 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.1172002 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101558611 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088866724 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139547667 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113429429 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093415518 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.11188811 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168069065 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.210449102 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.127565454 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125100831 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09585493 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098248183 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144215301 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157335697 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076368688 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.098904363 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173503059 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123665883 seconds)
  done (took 5.216788368 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.152603091 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187293464 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122216539 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.172091579 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080629778 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14702566 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096652404 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115297204 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.261319174 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.19079698 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.495582202 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142445904 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097726769 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097032874 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080949236 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096547393 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.465811997 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.159899028 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136731468 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097296514 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10638439 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102573777 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367875829 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080022859 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096080223 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081852873 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081927068 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16425233 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082497224 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.223678113 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099229916 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103558017 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132354542 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191771098 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123777654 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133437238 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077661055 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095470427 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.1730446 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084859677 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097571889 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.118605507 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132813535 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117001232 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097688673 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095621336 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.193475631 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078850721 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.108540667 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11389397 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.94210269 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181373281 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.123123755 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098773873 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.308293789 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099540792 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098706257 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077886166 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.123689982 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.27233787 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.193112661 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.101749654 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080425251 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099611054 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096797331 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08196063 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382152426 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09974525 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.690204648 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083184037 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108748861 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082719667 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098522007 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104479804 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09082911 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117308403 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.076925296 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098282851 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081867901 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098846713 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078454452 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101792785 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109278738 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.219724674 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079672109 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.099041393 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077292239 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118219795 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126562973 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084238457 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09708169 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114453398 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099294234 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097254178 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116319931 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099663958 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109024102 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081252982 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141663558 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096643822 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.160822208 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096459139 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125970183 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101597138 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114790308 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114938705 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101113647 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.171040416 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078429579 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09620531 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080385521 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097738712 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081391519 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101230396 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092087587 seconds)
  done (took 22.905812956 seconds)
done (took 41.223551577 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.317533329 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105202678 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103021333 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103336887 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08312436 seconds)
  done (took 1.563493393 seconds)
done (took 2.389255332 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.163898726 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112986811 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095840238 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.128741578 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07613367 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.133835278 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.132212346 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09261571 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.131807176 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094796716 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109030415 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094353618 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074945459 seconds)
  done (took 2.294184159 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093897814 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115443937 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081229856 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110644702 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075095275 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111697546 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090989115 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117717056 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108532126 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084138299 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0929383 seconds)
  done (took 1.901413445 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092751483 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112602913 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082714617 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113042919 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07752376 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113319972 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095611709 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119007186 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111514227 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08621132 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095854095 seconds)
  done (took 1.919732024 seconds)
done (took 6.933487013 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089935667 seconds)
  done (took 0.906670198 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.767195572 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.995333315 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.095461747 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149242825 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.230808916 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192359644 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.479545785 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125956815 seconds)
  done (took 11.064192193 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.123778981 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.102349786 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103107044 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085090071 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104590877 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.080451445 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099940908 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101271387 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082257435 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103017655 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083846127 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103479092 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085780671 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103690459 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104052338 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08406388 seconds)
  done (took 2.425044813 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11792157 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117328501 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10961369 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111503945 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086374738 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108751237 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108178681 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088701648 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.104451457 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106133417 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09057987 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108947681 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105226217 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080566324 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108164914 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109638012 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086343262 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108283066 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.089350258 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.110362692 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109580563 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.078650613 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.106001541 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108571009 seconds)
  done (took 3.39279085 seconds)
done (took 18.609053697 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158977609 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108166599 seconds)
  done (took 1.089495469 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094766648 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112794737 seconds)
  done (took 1.032741453 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.095934858 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096469487 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121299981 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111149227 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080709453 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099941251 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120736223 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.08064446 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.100203419 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080697088 seconds)
  done (took 1.815907508 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082235847 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109400394 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102683073 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094892574 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107831692 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096975786 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088858575 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102165554 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11324876 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078380632 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103899244 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116900342 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087226768 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119439061 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10724145 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08364917 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104955045 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.1007125 seconds)
  done (took 2.63057297 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079831227 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098723358 seconds)
  done (took 1.006502832 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080886794 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094599193 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081707385 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100259909 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095555153 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077970612 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.0961249 seconds)
  done (took 1.454418155 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.431496188 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118246241 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.286951457 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085300896 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123677129 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302360779 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.101742268 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085296351 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.106613078 seconds)
  done (took 2.532402583 seconds)
done (took 12.388380544 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094106192 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115827076 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112895824 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.467502999 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108087115 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.1016347 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148416161 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.251432822 seconds)
done (took 2.232589053 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.142590983 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.575887379 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.433573124 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.237710567 seconds)
  done (took 2.081635991 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.401684291 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099962254 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085933478 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08290295 seconds)
  done (took 1.510172933 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08035862 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099832062 seconds)
  done (took 1.019261669 seconds)
done (took 5.592480325 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080661014 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131656754 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079148562 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.100405792 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082974962 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.10047045 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077281661 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.099364658 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080537191 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099923017 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079865875 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.100512778 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.080159077 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100635396 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076975463 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098139591 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079169309 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.098633882 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077491186 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098396894 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079588816 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097980017 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096163229 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079073311 seconds)
  done (took 3.048580713 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.097972291 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098769639 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105183176 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.0875923 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104747245 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085782441 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105601806 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099030168 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087132679 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102006078 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083605334 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.105219598 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10079638 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085283165 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103521988 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.084815325 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.105763854 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101090919 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083805765 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103608725 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.085944496 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101045305 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103459084 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08581284 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.104021892 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103259922 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086308218 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100458804 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085854137 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.104167748 seconds)
  done (took 3.732196016 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085207785 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093753424 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079697404 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10595951 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.0794612 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100045026 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07862856 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099794384 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079545006 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098712834 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079902883 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09867754 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078023499 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100047499 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079293119 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102076698 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114854587 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.08012529 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097818287 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08025564 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100433411 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078373568 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097534303 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079136403 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096679446 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079016606 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097706172 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078773454 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098566965 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078050989 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101752696 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082104625 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097776498 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085077705 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102552327 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078091531 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102452886 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078329868 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099124586 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.077428105 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.098086059 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.077691704 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.098596965 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.084804736 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.098519126 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.080079021 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.099223727 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098748354 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080348509 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101558794 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078649742 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097093109 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080977734 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.0989977 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083305581 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.098317748 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079086273 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.098101377 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080070749 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09826071 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.077832373 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.09827611 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.080477995 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.100009864 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11187597 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087268072 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096847539 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081706449 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098431135 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081736384 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100021202 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092932888 seconds)
  done (took 7.361270242 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.134531872 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124561045 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079928135 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098752268 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07497851 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097184394 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080079995 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097704551 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098208188 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086341452 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099159373 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080947884 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100266654 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095348167 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100363917 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079486005 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104957942 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096468897 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079581509 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101830657 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079946195 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103171695 seconds)
  done (took 2.942960053 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.205650686 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106931255 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144678379 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108592941 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083449357 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108973375 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102955306 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0872876 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104717286 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083948226 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104134796 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104276886 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08410998 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10350898 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08352822 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104440749 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104679277 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084232339 seconds)
  done (took 2.758666247 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091826235 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.2085438 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10217461 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10252792 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101495743 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084854573 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106996769 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108796091 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085083518 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100692266 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090538043 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104265192 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103448151 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082673999 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103457347 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083263639 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104121733 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081585065 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110501359 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106263728 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086523305 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111578387 seconds)
  done (took 3.114279876 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09564129 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103550612 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119601661 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086147572 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09713834 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080871064 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108726185 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080932035 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109345281 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102388375 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083652745 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099636751 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087502823 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102302456 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.085981192 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102635727 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1029974 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083311408 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10331507 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077722478 seconds)
  done (took 2.764155644 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100961882 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100630606 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083178754 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112452116 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10329739 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08214411 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111006333 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103383334 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082841936 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127580597 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103236036 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082810112 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111606349 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108324034 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082375271 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11152089 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111132968 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110435084 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083542766 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102507259 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128648448 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083943038 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11265718 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102187062 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084748743 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102916611 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083256742 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109218499 seconds)
  done (took 3.677549115 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080902124 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100570422 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080426711 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099414046 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080883797 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098500753 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080246764 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09850706 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083022286 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098274084 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083405883 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101013022 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08235505 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.10059476 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082870731 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101217156 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082213997 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099451147 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079554149 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098761814 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082139795 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101064248 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082304441 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099452826 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079827923 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101477642 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079972185 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099498615 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082400361 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100660572 seconds)
  done (took 3.575812727 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089719107 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108013233 seconds)
  done (took 1.053305794 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078278749 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117002866 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079298521 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105931726 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086092371 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103390749 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110210352 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087286023 seconds)
  done (took 1.624559703 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095692924 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111795892 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083576257 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115817864 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112471803 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098857706 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.174873731 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.105306127 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088070624 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.102400228 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116340423 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082085945 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109190912 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083087425 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108155698 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088863745 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101111782 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107444939 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.08729153 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101066073 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083891825 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11181911 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083884814 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103980937 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083384323 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114309832 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115840938 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083436357 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106613248 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108994708 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089473552 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095945154 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08306906 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10331515 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08096561 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112883609 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119217556 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086847504 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112536904 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083490565 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114354463 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097383146 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087785746 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110654866 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093335089 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10488387 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083679441 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.099096684 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080277255 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.105955487 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097169201 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08358758 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.100412236 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091026716 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106723461 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093203348 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.102521324 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103129145 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087194723 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106026345 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090254108 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105666636 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084762951 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.103651584 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089324349 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.109270903 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11315797 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078311479 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096803241 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081118859 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.114163616 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125921319 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090566311 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104312154 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084234624 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.101517429 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086650089 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104945811 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108813525 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089764973 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.104188087 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088936348 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112405563 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102840285 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085986873 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111767031 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.080551983 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105895029 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080441631 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121154853 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.102055472 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.08133469 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.101719877 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093094497 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.107041886 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082059541 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.102249494 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109975978 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077528721 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103833935 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084563462 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104389099 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093543882 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109651548 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109289874 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092028689 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.111928427 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102846106 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087972157 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099922975 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084350792 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102525349 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089905442 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.097575914 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085382564 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104332486 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083651471 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112496051 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101613395 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.08353041 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111820737 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088579045 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103875181 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07906188 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107504564 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103413134 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087793126 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.112531841 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.081353528 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.099685403 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078850457 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107301249 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102503026 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088729768 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108676868 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087327703 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.099156035 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080963929 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.108561564 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112742121 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084579116 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.104701045 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090112432 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.105869921 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081874691 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110709762 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106393966 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083663219 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.110207204 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084634407 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.099145126 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086714115 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107462122 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081624298 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108509596 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107197085 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087453561 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104356009 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081771255 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.110030328 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104618322 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083511764 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102650768 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083670021 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114721341 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084991655 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.099763768 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.0804924 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.111434616 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.09960648 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084859261 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102646741 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087338098 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104489121 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081571856 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.103868322 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084866235 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117122781 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108755926 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084677704 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110800247 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094919875 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105862451 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105941726 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084375911 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105700966 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.08522788 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.114534369 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089397762 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110629284 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.106884585 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081854469 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110651762 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092460977 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.104119957 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080799498 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103618103 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107497684 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090101391 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10838916 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084157725 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103453251 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083463614 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108424302 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105625578 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084595878 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103022767 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088895908 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104813526 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.08936866 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106199934 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115099528 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087629926 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.100410389 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085936308 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103126462 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109071234 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080612184 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.1008996 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08365938 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105129436 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083725263 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10780141 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077859103 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112035786 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09117577 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10588578 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082184261 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105807437 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111395696 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086487615 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108880518 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08746821 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111729689 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115103854 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083589019 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107287525 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094422097 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105371344 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078057989 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110597988 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080752892 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.10519371 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102515672 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08357475 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107806151 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093521111 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112851463 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077350819 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108455827 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102183474 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.0831829 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098944611 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088763292 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107847098 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084185658 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112304416 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08529439 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.106543506 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108092209 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086286782 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105516718 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.0853099 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108353339 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084295498 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.108163624 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102474016 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088343773 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10364625 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082585572 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106425086 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084316396 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105261825 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088912069 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10584284 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08408602 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.108181835 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105119974 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086601252 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104864372 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083212232 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108122259 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083981582 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105481055 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086572219 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.101322604 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112233626 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08496118 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113055393 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084272729 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.102123168 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088670767 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.108607001 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109003064 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086375412 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105584239 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08547967 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.105227899 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086765907 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112788354 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08122166 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.117486834 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114357586 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084527238 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109125422 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083660359 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.10777215 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082199171 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.107394383 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104940945 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084658329 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103972286 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08991326 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108079721 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084053281 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108136116 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085066368 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.106064593 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105279522 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079135778 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.104203247 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084747827 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105501346 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09508695 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.1070111 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08380929 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.105705437 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105021519 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083677073 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.10207922 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092310055 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11505768 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106464561 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09258529 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104972298 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085182677 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116827363 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078605644 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.106024471 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102015112 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083145528 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113146887 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085912523 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.115580313 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083947883 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105291023 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081031583 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106767727 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082746294 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.101056882 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102687324 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090683297 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104260553 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092837442 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10573957 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087535329 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107190851 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115555366 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084288029 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105050167 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085315217 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.10360929 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084568411 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.104666539 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086738548 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.107641402 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081154105 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.104161311 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083332799 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.106764401 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105279606 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086095794 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.107200109 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091351695 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105794335 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086954944 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109832603 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077678093 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.112315203 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.105315075 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085580047 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104380812 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088353576 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109343106 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085926005 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115833614 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105311376 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085895473 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105193368 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08249348 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.106013069 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084085282 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106617448 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082967866 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107804366 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112846723 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083293389 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109017296 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08472693 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10636068 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091519357 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.107569727 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107457449 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093368147 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105694411 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08626802 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114611185 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088450091 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109948421 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10606382 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086562108 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112311378 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083384084 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113977793 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083714642 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107990393 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10677097 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084232065 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105703169 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085594178 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105872841 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091301075 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107672116 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083822762 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.106361022 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082653981 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107550322 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109759784 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092978946 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108589409 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087690137 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.102229643 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080943448 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108344588 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.082253189 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.108363842 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108461291 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091368896 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.108624582 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085577512 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10527836 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09391182 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11238875 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109271153 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083994577 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10863589 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085999721 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109273617 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086662911 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106320274 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085190923 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110362613 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107164273 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085328173 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113914653 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088605779 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107881025 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086015496 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.108231891 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084225594 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.102909585 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106061149 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088098706 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112155168 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087476338 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105960444 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093208742 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100492159 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101733829 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08733502 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105446023 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090066625 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.102019985 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085198877 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108724129 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085484193 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102616837 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10407068 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084222861 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.108288148 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084958291 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101123883 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096284852 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.116466944 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107984609 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085952075 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105027724 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080792798 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.101441328 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084620276 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105799248 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084071626 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113929762 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080291293 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103686233 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096471229 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082643773 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105689301 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.08530955 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101770918 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080981302 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.105755825 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087295435 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112550195 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083302304 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.106511119 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109621474 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089535936 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.104862169 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089575713 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.104399468 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088913568 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121335556 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106228951 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086690399 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113972059 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092825067 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10856406 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08020007 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.109084388 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10954746 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084991942 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.107635353 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085937124 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123455209 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107876612 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082532122 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103302372 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.084762436 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103568917 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090388883 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105471834 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.082399584 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107411744 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.103753312 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09215406 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105300515 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110188243 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086100427 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10604403 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081306572 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103065684 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.080254088 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102633555 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.083585835 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105879776 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106886486 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091050063 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102615858 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092386465 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112776269 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105021238 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080128975 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.101855538 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082975571 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098171269 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.083383853 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101557607 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080088989 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102112475 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080118399 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105011869 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086602506 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105387518 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103210413 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.08270171 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096464454 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085121271 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105951414 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083294351 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100657346 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.082063523 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.1052737 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.085412339 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107899956 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100633202 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084888079 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104418342 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083108134 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099674457 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088494576 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103038865 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085449703 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103955815 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081235627 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104988202 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1073777 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088243351 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10443377 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.084167007 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.112287 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105790969 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080775147 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100127259 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089388063 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102064871 seconds)
  done (took 59.141067616 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14592317 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079464646 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098533007 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078133846 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11204764 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097828154 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079638982 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099029694 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079632936 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102493917 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078632727 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099500671 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086085901 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123321973 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113026639 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103771201 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077410248 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100107263 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077402414 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10074176 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108411769 seconds)
  done (took 2.951562339 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102800681 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120545951 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11538398 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117731052 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088207113 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114351613 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113678934 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093467879 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.118093421 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111273086 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11764251 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093502224 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.11080583 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110513795 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110325575 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09201701 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118720857 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108603237 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.094825047 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114926506 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111966379 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.1140172 seconds)
  done (took 3.301417596 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084596901 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102065062 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084513935 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097883036 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082562202 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098152749 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086452296 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102049667 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085742596 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103377235 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080117507 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103067409 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.083259942 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.099821696 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102524574 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081583459 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150663549 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107636288 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082306041 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10617307 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.07759519 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107529542 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.076647539 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.100114515 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101674419 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087392193 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104231144 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080853386 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104002215 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081845498 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103489047 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079863346 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105644963 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08232708 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.103340319 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.080136932 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104164703 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.081393847 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.100286224 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100112557 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084754357 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099093138 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083075018 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104235904 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081118903 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102317135 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084316552 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104639983 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.077061749 seconds)
  done (took 5.517341509 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.101307555 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.15884003 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085979495 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142611006 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119384324 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11099272 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08695405 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141524637 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102142177 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081259867 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122206796 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12022881 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102476939 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08937458 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107038513 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.081755952 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.108027017 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101118329 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087525461 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103972724 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.085763844 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111455971 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118486149 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117401603 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.086533699 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104420835 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102403723 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.088759599 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117640935 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110497509 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.088737361 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112689692 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122440669 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.087578463 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104361905 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106005195 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100312387 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105290089 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105803982 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.081007129 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.106139024 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087300531 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111181697 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121068096 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082696029 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110278193 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104063837 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.079640502 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118763267 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105903163 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.091318164 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120264124 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109267011 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083070299 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113390937 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121872036 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083524228 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104791603 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.110059522 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099728694 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107171977 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112007335 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.100688978 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.11176144 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117176014 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.123268468 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092597833 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113227487 seconds)
  done (took 8.217052965 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092324509 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.1112342 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118821029 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121815044 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093112706 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.116040445 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115447525 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093112248 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115694583 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121621767 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114449359 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.139443771 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089721834 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120675221 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115936615 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09524666 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116767453 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114696362 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094784278 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116048209 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115649743 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123496938 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094081164 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124459442 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146645086 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111130786 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09377147 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116360868 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124881386 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092812881 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128131656 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114428206 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110195866 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119508262 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.101480381 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.111407875 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102267287 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089787323 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.112254399 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111100852 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084177227 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121040921 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111646423 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.084317444 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112279827 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111194531 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119221849 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123135448 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093226145 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115800067 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110654691 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11866996 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089989435 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111069372 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11910184 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145703649 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118863962 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098409989 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112492065 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119405678 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119909035 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127615737 seconds)
  done (took 7.853471292 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104903622 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115412612 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.115541164 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.07746657 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105002339 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107164356 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081562064 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103011774 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091091884 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.114504446 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117523739 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107040513 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090744626 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116226254 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109085058 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111577318 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08790883 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109007255 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113389061 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088206683 seconds)
  done (took 2.993985569 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09282208 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12330015 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.082524688 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111912311 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107611208 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088954523 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107436892 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0859252 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106284556 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107631052 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09424083 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116345723 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104945269 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090612889 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116725037 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110367831 seconds)
  done (took 2.580397452 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095976415 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116967823 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119434471 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083116909 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10491381 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080071176 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106913314 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100029079 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080869492 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120614622 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083649007 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.1096503 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10384712 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083120305 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101070168 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087186254 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101495829 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08147385 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106473302 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118387011 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09522722 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105012396 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.083907196 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107505885 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104715447 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090228098 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106042609 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080731235 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.104191879 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104446302 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084702514 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113601584 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08007795 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104038244 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.080815177 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.103528455 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103866145 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085173845 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108112188 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.084699497 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10555819 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.08178326 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106845194 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106332813 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080714945 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106477115 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.079653983 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.111541175 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.080885257 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106511008 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104833777 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085980294 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10679375 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.093316593 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111878902 seconds)
  done (took 6.31699215 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099151165 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109433889 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078980229 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103769608 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086098491 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108256479 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085791549 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107874122 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10696853 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08281149 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107454231 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086973695 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107761115 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086275587 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107687051 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107617885 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080557088 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107827005 seconds)
  done (took 2.69738283 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090351857 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105589668 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09102169 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105860993 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08281939 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109028339 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079295384 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104037784 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081687396 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.106255635 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104194946 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.0868508 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103382311 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.085827105 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106142409 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08312228 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108496967 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082140935 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106258756 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078666447 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109225022 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102986807 seconds)
  done (took 3.046837306 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.111188784 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.121241722 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.089162589 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.222627595 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.098578048 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.128601983 seconds)
  done (took 1.704179636 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109257688 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120305168 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10577676 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106555999 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117083351 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086964263 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108228824 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107338702 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115740776 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099823826 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108907841 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117670412 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115354154 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094572049 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114474149 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116953132 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089355457 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113621793 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11088616 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131902382 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091441217 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1221359 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111746593 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089990223 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113312328 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117902294 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09470403 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120840836 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108041707 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115971476 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090603888 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107976618 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117618021 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120325942 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088093022 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117629863 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106331311 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125916346 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092666408 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116332445 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108848487 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09166325 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116727303 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113189174 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115824075 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08670761 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113062999 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107036651 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086640847 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132932418 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114210041 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116702139 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092031318 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117423405 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116954888 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132617242 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121614121 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116820112 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092030102 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121713251 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117493544 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113647683 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115665277 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100514692 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114119872 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11675998 seconds)
  done (took 8.191455257 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101394074 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126929171 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107868339 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099388887 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116823296 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108361426 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106457881 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089161195 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108392718 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084373689 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150277452 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108934252 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117332008 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116261781 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086172156 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109425127 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107518987 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094190358 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107654393 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134243993 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107810486 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115596083 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094370596 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116604142 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121810393 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114066434 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086880888 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109116002 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107075357 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08663002 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113863472 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107513357 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094942274 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108446079 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116651424 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107412234 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087078443 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11387434 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107783848 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092446608 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116318732 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126836139 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107985622 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086854347 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121734026 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107635407 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085222846 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108528379 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107511946 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086494889 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12158666 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121748475 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12206716 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116072517 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086679504 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108751056 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1065837 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087217894 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108641475 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114081342 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095619853 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107949408 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134520285 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107582728 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086487776 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116846833 seconds)
  done (took 8.031784952 seconds)
done (took 159.034500316 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215987583 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.202177961 seconds)
  done (took 1.35667409 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087031108 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135818963 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095176183 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169017127 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084435071 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140244373 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138140897 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097442524 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106275089 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084625401 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106962966 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086777314 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171503236 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.0838905 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107243896 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085654349 seconds)
  done (took 2.725496902 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113454526 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.243544918 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.128579188 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.086755836 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.117320171 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.115192639 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08884267 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.117441838 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093454433 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.108822166 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.089632857 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107115638 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.082961525 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108059251 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.088177959 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.109816409 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.082722089 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.109666238 seconds)
  done (took 2.941794768 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111946368 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150736473 seconds)
  done (took 1.208426449 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.242170699 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163415645 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.231314272 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.489495433 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.29234628 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.371455128 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.212587395 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.218090086 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.160620325 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.199513432 seconds)
  done (took 3.522196451 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117087764 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180936557 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318583395 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158790098 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.104695004 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125922181 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155813697 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129763284 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.121314737 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100569389 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121604191 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118410936 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136873206 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092757227 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115457788 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.094520558 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141182315 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114734559 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.092217592 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117498724 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.13793445 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.08392754 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11503302 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113075142 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.096605384 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118197491 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083879923 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106562601 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114479083 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.091959974 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113939128 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123603074 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096066739 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173037563 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.099952156 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.171876548 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.095829518 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111743928 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.091725836 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.112069127 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117140338 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.094361918 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.12540072 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117364317 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083452263 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118229014 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.082909803 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.106407679 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113307536 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097351936 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114973659 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.111418186 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.151193436 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.094945312 seconds)
  done (took 7.390331698 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.783010965 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.153960056 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087698877 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.883017107 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113906791 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126693844 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.782246562 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117096122 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258135811 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.765176283 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134012906 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100883972 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232253612 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.239531502 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958881568 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313088465 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.646520521 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125440408 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.132397626 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156127236 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123872147 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141746602 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.136836394 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.457822558 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.090949036 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113965101 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121152737 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100270808 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160970544 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.128667177 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118344091 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179270837 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250689204 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203466353 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120505099 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093062795 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115694944 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.17321699 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269536065 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193457813 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.183261975 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113262967 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112986324 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103828826 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135352733 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112469141 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166376567 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.177682187 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172341415 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120195108 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123859964 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10131562 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125967781 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167673142 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.126127452 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.324042137 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314564126 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093963362 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127606849 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.131739552 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.24017859 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127161621 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228829057 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143740731 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192207812 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115947628 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779204133 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171704171 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092767853 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122165464 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124569884 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097668248 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126974233 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171956701 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.395942904 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128832222 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096516743 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116685111 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230176065 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.131274392 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116931802 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165504953 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119939071 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10331181 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130076569 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126636433 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172794349 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.237646342 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128076662 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123976558 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098256747 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130879772 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.119406115 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.217579088 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222143036 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16630311 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212303169 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127241516 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.168158806 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172072655 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125924029 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.174878458 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126954648 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128227034 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103471118 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220476075 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.150352826 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.128854838 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096839691 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124784905 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151761035 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.133345493 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122760902 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.175726463 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.48114187 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.195404889 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.092152438 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.134430789 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098520596 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187911599 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099596694 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265596982 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126495463 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.173852208 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124835426 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.091446738 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125800169 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166984963 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126673122 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126166891 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104594716 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123925201 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.239459679 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222236989 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124962717 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222485275 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188443706 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123261126 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175919567 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127470392 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170992472 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124110274 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102535194 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122004395 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800039671 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09995695 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12231267 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119147871 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198721048 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088656144 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124642908 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.127280154 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086188967 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780716458 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.131124942 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103451148 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.127112074 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121273627 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102734561 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124440707 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.120182832 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167122041 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231928621 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101434154 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124606202 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.129598258 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.164373558 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.119513782 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106953668 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.131507506 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.130715839 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101225381 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118224182 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.130568784 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16867088 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163970532 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223935104 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.594236993 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094609799 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12995123 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232223281 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094013607 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291717356 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125442393 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228605235 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167765811 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.124708791 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288243528 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.193820053 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.199032125 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.108986013 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195059375 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091060766 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124594799 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167788287 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.117287401 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100092409 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.188707988 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106543331 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127542116 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.969606222 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087713106 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245434858 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.091523312 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.175050002 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119651833 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122944836 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.273179122 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116331851 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132505592 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.167867701 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119048008 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105502714 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.717736122 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.123061217 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101469297 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118495342 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224124334 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.167768306 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125845188 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101281529 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123694398 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16428636 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.234245761 seconds)
  done (took 44.76471147 seconds)
done (took 64.854612916 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27615958 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214625349 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.265418298 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.16913725 seconds)
  done (took 1.967267345 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170139931 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148437367 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119938136 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108228678 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150890816 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087102454 seconds)
  done (took 1.755893622 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.359280477 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274545197 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239657612 seconds)
  done (took 1.846067362 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.28533305 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.242791042 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.477883449 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323308969 seconds)
  done (took 2.423342637 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.205576878 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.136156763 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.115926552 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105720821 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.200457218 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248763653 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147231944 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.209206693 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103853744 seconds)
  done (took 2.488629832 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.204085289 seconds)
done (took 11.656613389 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.134483911 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.252945532 seconds)
    (3/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.279378294 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.107344887 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.28537674 seconds)
    (6/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.207122599 seconds)
    (7/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.179431014 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.132615009 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.247142234 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.127927242 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.102408065 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.283017612 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.100668523 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.224236899 seconds)
    (15/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.265666707 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.177067167 seconds)
    (17/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.21514102 seconds)
    (18/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.270576579 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.163695405 seconds)
    (20/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.153473933 seconds)
    (21/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.161346067 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.223214466 seconds)
    (23/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.109845339 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.121802854 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.180216918 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.139295242 seconds)
    (27/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.205742312 seconds)
    (28/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095641406 seconds)
    (29/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.118465843 seconds)
    (30/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.098640582 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.228849895 seconds)
    (32/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.197589278 seconds)
    (33/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.203215779 seconds)
    (34/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.10685279 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.123661003 seconds)
    (36/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.123106442 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.172654122 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.096489058 seconds)
    (39/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.135493079 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.200436442 seconds)
    (41/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.128458259 seconds)
    (42/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.197483278 seconds)
    (43/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.156987375 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.189967549 seconds)
    (45/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.183299905 seconds)
    (46/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.115068033 seconds)
    (47/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090317306 seconds)
    (48/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.1916321 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.092019169 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.116097996 seconds)
    (51/309) benchmarking ("sort", Int8, false)...
    done (took 0.184329771 seconds)
    (52/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.212944001 seconds)
    (53/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.204290851 seconds)
    (54/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066370921 seconds)
    (55/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121609765 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.08616666 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110229784 seconds)
    (58/309) benchmarking ("sort", Float32, false)...
    done (took 0.146713953 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.154264395 seconds)
    (60/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.113303591 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.115559256 seconds)
    (62/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.180328639 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.135337368 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.108577046 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.164730138 seconds)
    (66/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108090033 seconds)
    (67/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.188437821 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115152793 seconds)
    (69/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.211347123 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.139897174 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.202025613 seconds)
    (72/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092206349 seconds)
    (73/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.190601598 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 0.084862566 seconds)
    (75/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.096453138 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.122904039 seconds)
    (77/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.180769648 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.14945068 seconds)
    (79/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101270604 seconds)
    (80/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.154499973 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.13643937 seconds)
    (82/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.146579353 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.112378175 seconds)
    (84/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.120516621 seconds)
    (85/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065117795 seconds)
    (86/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142883555 seconds)
    (87/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.216430724 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.115038144 seconds)
    (89/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136070576 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.064616137 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110149456 seconds)
    (92/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.115857921 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112395987 seconds)
    (94/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.159391718 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.065577573 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.172915462 seconds)
    (97/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.214873582 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116554877 seconds)
    (99/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.093361024 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066525732 seconds)
    (101/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.09120807 seconds)
    (102/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066352089 seconds)
    (103/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.172872984 seconds)
    (104/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.085464646 seconds)
    (105/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135187781 seconds)
    (106/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.089044495 seconds)
    (107/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097411792 seconds)
    (108/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.115138672 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.168278595 seconds)
    (110/309) benchmarking ("sort", Float64, false)...
    done (took 0.171504417 seconds)
    (111/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.248683579 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118171702 seconds)
    (113/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067024097 seconds)
    (114/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113222637 seconds)
    (115/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090852923 seconds)
    (116/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.109895004 seconds)
    (117/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.08423594 seconds)
    (118/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113425388 seconds)
    (119/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06948354 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.180254277 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.116251388 seconds)
    (122/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100838477 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.399539739 seconds)
    (124/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.094142173 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.133735255 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.088948765 seconds)
    (127/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.154416824 seconds)
    (128/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.110295546 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091374226 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.115859142 seconds)
    (131/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.114421411 seconds)
    (132/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.110303435 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.210394636 seconds)
    (134/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.076265014 seconds)
    (135/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.119758136 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.091141362 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109264805 seconds)
    (138/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066730557 seconds)
    (139/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11518832 seconds)
    (140/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.115792465 seconds)
    (141/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.090161205 seconds)
    (142/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068177993 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.083629972 seconds)
    (144/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117544861 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.136898647 seconds)
    (146/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.151621249 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.138166603 seconds)
    (148/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066393075 seconds)
    (149/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.179109249 seconds)
    (150/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.123149037 seconds)
    (151/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09169291 seconds)
    (152/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.107328374 seconds)
    (153/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078303963 seconds)
    (154/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067639467 seconds)
    (155/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136118911 seconds)
    (156/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066104207 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126935255 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.109992221 seconds)
    (159/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066410363 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.092627113 seconds)
    (161/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.120496005 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.135655819 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086815616 seconds)
    (164/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.064259746 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.138620124 seconds)
    (166/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066294613 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109655961 seconds)
    (168/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.121383343 seconds)
    (169/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097090011 seconds)
    (170/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.144991145 seconds)
    (171/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111484986 seconds)
    (172/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.116836404 seconds)
    (173/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.110674555 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10926469 seconds)
    (175/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.089870577 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.13595552 seconds)
    (177/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.065924762 seconds)
    (178/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.100227966 seconds)
    (179/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066922804 seconds)
    (180/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.116137347 seconds)
    (181/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.065981494 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107983785 seconds)
    (183/309) benchmarking ("sort", BigInt, false)...
    done (took 0.21651712 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090562816 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115982988 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.097099311 seconds)
    (187/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.099638255 seconds)
    (188/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094200719 seconds)
    (189/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.089008625 seconds)
    (190/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066787544 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.092272679 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.199763648 seconds)
    (193/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.108807342 seconds)
    (194/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.118630905 seconds)
    (195/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.08982505 seconds)
    (196/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.096001078 seconds)
    (197/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.189148491 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107661768 seconds)
    (199/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.139637527 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109213324 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.084876172 seconds)
    (202/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.11527508 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.150677185 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.105173247 seconds)
    (205/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124809792 seconds)
    (206/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.176302101 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110808459 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118432302 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093130203 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.091599783 seconds)
    (211/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067500375 seconds)
    (212/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.074275418 seconds)
    (213/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125335116 seconds)
    (214/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11052287 seconds)
    (215/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.213223729 seconds)
    (216/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.091313572 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.090651602 seconds)
    (218/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109926956 seconds)
    (219/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065831915 seconds)
    (220/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.065093213 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.130821561 seconds)
    (222/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.106989894 seconds)
    (223/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095460669 seconds)
    (224/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.089151162 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.108585538 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.159724835 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.135978905 seconds)
    (228/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.164564978 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.189464503 seconds)
    (230/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.155772649 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.102054362 seconds)
    (232/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.096585235 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.115986625 seconds)
    (234/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.121502798 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.165397975 seconds)
    (236/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.09886323 seconds)
    (237/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.104088698 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.096369742 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.072556587 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.113723052 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.117763143 seconds)
    (242/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.091308983 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.145472877 seconds)
    (244/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110491095 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066055221 seconds)
    (246/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.121108936 seconds)
    (247/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.091460546 seconds)
    (248/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.095686812 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.153182295 seconds)
    (250/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118674265 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.21233812 seconds)
    (252/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.0847181 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.111923051 seconds)
    (254/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.065893521 seconds)
    (255/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.114342139 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089741094 seconds)
    (257/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.096839513 seconds)
    (258/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.083236633 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.148529388 seconds)
    (260/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.09315845 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.096429311 seconds)
    (262/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091427495 seconds)
    (263/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116961224 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122395378 seconds)
    (265/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.09207274 seconds)
    (266/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.067226978 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067214867 seconds)
    (268/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.090552538 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069457571 seconds)
    (270/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.11008796 seconds)
    (271/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067302517 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.177440069 seconds)
    (273/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.109806637 seconds)
    (274/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119431364 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109462287 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110757552 seconds)
    (277/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.106812486 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086927495 seconds)
    (279/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.15318141 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090042923 seconds)
    (281/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.094206353 seconds)
    (282/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.098881636 seconds)
    (283/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117601219 seconds)
    (284/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.093067157 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.13420187 seconds)
    (286/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067113544 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109575149 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.085641857 seconds)
    (289/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.091327966 seconds)
    (290/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.086639393 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115887121 seconds)
    (292/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.088199869 seconds)
    (293/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.100575621 seconds)
    (294/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086732472 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.107811441 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086239814 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.179154812 seconds)
    (298/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.090286409 seconds)
    (299/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.12216515 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.13640815 seconds)
    (301/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.099581576 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.120394087 seconds)
    (303/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.082401589 seconds)
    (304/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.094256343 seconds)
    (305/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.12405413 seconds)
    (306/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.080547068 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.110787853 seconds)
    (308/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067321348 seconds)
    (309/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.12457881 seconds)
  done (took 39.971102981 seconds)
done (took 40.945344571 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099251239 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.134357758 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094444123 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135142606 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.121847843 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09066523 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117050249 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096144169 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123507934 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.122174377 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098330127 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069000115 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.12033456 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118393074 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095659008 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.134176972 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121043096 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094486989 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117762069 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084526334 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117735587 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085817909 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112047378 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070106285 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.119866927 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093118307 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116413635 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.094330304 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.110440263 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.084785617 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.114430792 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.092079444 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.110221983 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.098655323 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.117653415 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.116565681 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095937606 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119920059 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087290338 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109873783 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.093537587 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.109977022 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.091579439 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.11827944 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.090790932 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.116419971 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093272591 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123025037 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.134301884 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08727109 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.118641576 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.09489545 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.119834388 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.092155867 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.11490704 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11780301 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091638426 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137096228 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.094481329 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115592334 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.092532582 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.121577604 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.089222644 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.119153526 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117131782 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.096255483 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.121983521 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.090791893 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.120309562 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.090582172 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.110747558 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.093126512 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.115075403 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.108606641 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096166625 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12020799 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086410508 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.114457671 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093133458 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.114356027 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.085276839 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111930769 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.088039696 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.117409582 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087630161 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.093240105 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090136544 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.115177373 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.085996288 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.117540991 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.092010901 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.116484911 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088056946 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121754747 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.084768986 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.116364907 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.085265014 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.111587881 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.087032074 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.115387696 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.085260149 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112976605 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.094239031 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112866881 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.091254935 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122558048 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.109158861 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.092592923 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.108872538 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.086464351 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124348751 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.095303559 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.110375457 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087878926 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110053951 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.092081237 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110465705 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.084973446 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111144785 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.085646974 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116932392 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.084967042 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113224924 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.091970799 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124704368 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.108306297 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.091222877 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111097097 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087339705 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.114682851 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.086912768 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.108807456 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.088905256 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077298363 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113179729 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.084992898 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119898995 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110864913 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095770697 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111245701 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095652398 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.115077025 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.092244637 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116207833 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.084578355 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.097516375 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088685933 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111631449 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.088544033 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.110300828 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088624614 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.110062672 seconds)
done (took 16.833716091 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087803238 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182471733 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15015739 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140870934 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106015489 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111735629 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11970978 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118277618 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113052896 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140465453 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.108553063 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131375171 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146133675 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085822648 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.110763976 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090459485 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.111565157 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101351483 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145275894 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132038292 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16269837 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085306013 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14564102 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134468544 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.094094437 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.137959656 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110450686 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091180394 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.113423895 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103066435 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.13170856 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.0893589 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111957644 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131112675 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104591374 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118913698 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086449718 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117758074 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085967794 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111177753 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137523192 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107592366 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.11679102 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.090974248 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115730248 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.087797066 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.113492526 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11959742 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098198954 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115147983 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.099917194 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154589822 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.115377067 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.119881283 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086884644 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121233346 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.095889733 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.114254138 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.086687589 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.114215885 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.085373913 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.115201491 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124961384 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.115350738 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.116337903 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118805981 seconds)
  done (took 8.615903613 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10486896 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137814925 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103859181 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132567311 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110675118 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087398982 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111857746 seconds)
  done (took 1.822846828 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088648047 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132577844 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109814529 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135218644 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.129889221 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108297299 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12288538 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087132393 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.147034507 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.087458583 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133981025 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150913195 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088467308 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119397884 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135038095 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087567599 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135458666 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087413414 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114898336 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110666876 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115913057 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132435686 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089771268 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.111978855 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102211552 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11266584 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16061586 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093227528 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113017902 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091545823 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111484422 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.162279829 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101995835 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124243156 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087141909 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128629281 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.125387826 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088375374 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.127942907 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092881483 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126278686 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.087733521 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114645952 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085399349 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118057863 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.097136188 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.115324416 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.087998601 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116310758 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131797746 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.08913736 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125835615 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088317126 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116786301 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.088713965 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119091549 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097887188 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115052161 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.106405767 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115965992 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13024609 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104515484 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127195764 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.102915696 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116631459 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.125136934 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102719687 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114960352 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092169284 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.115866508 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104319874 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111147186 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.088503595 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.124302976 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.087842184 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.137512453 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.134173645 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089773887 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123111799 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.087368907 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113635695 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.087852657 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.136721238 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090576605 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114229038 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11595469 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09177214 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.109326662 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088126321 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.115071787 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086798439 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.113047227 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092379443 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.112980732 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091708931 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130310935 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.088882639 seconds)
  done (took 11.770706893 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090454108 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113193556 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092221762 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113704701 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089427662 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115129133 seconds)
  done (took 1.666015453 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.112498755 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116965936 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102423052 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120475401 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155592566 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.101548643 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130497303 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122117059 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.105496029 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127017474 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127389778 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.103945058 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134898948 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119799235 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103531885 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119712969 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.102583731 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124826578 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125482234 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09513471 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135939002 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.118597027 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096270959 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130641909 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.090871374 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.12064862 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123742674 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101419372 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126442794 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.09537511 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121086693 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116356612 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094899393 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122835729 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.126847128 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095205923 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120948358 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.09261415 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125140934 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.115737585 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104381871 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121087398 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.099546751 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.119469881 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122080913 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.094519886 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.11860369 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122327157 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104425797 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.117700997 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.09271371 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120774935 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.092370697 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119919901 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119163303 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095813686 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119437518 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128369949 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095533667 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120229966 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090943724 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118172156 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12101161 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.093039838 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.127779674 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.092219732 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120830506 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120129712 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096579453 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.11986195 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.09224396 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.11818344 seconds)
  done (took 9.212883318 seconds)
done (took 34.117113683 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.688620801 seconds)
  done (took 1.733150536 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.718169258 seconds)
  done (took 1.765956872 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.876265731 seconds)
  done (took 17.924351571 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.510724967 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.596235476 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.818439098 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.183004704 seconds)
  done (took 3.155470596 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.955726564 seconds)
  done (took 2.022545526 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.243853293 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232662529 seconds)
  done (took 1.528780263 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.78815908 seconds)
  done (took 1.847311921 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.379660298 seconds)
  done (took 2.430704547 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.330859344 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183681599 seconds)
  done (took 1.575385828 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.548657357 seconds)
  done (took 1.608986429 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.405864421 seconds)
  done (took 8.470723229 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.257168366 seconds)
  done (took 1.335238447 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.298345914 seconds)
  done (took 1.365089676 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.541498236 seconds)
  done (took 4.611361666 seconds)
done (took 52.428239269 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098710484 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125739863 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100872998 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123523017 seconds)
  done (took 1.512869393 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101587649 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120655228 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09852455 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120430462 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.098726847 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.122896519 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121010359 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100216556 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121053146 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.094927592 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120643104 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.092865362 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.124427316 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120082012 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09271184 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122771609 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.097928769 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120995187 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121479984 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096047368 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117207051 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09718059 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123692271 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093007887 seconds)
  done (took 3.709623439 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099742443 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117501513 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096149409 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116524272 seconds)
  done (took 1.503529395 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100500622 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141327721 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.135918647 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100035308 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142508637 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135006379 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092690183 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115302685 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093316166 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.123147966 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089104402 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.148381881 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136491615 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.097994876 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126521444 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087398405 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116170671 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.134887433 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099764703 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124571803 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.091978541 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124113802 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089026938 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139490003 seconds)
  done (took 3.854829598 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.156532732 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.150689275 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13780562 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.093654695 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.155403602 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139696222 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087059924 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140680844 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.085986847 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130494417 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116275529 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132806631 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127666211 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.086869308 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114097162 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088765584 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128300123 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.126661713 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.089998506 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.143260819 seconds)
  done (took 3.505168716 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098094329 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115892314 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088737473 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115019638 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098224582 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119582027 seconds)
  done (took 1.711934657 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090616948 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113054261 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090503772 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.112621391 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093191755 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113640444 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088539091 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11371866 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089762916 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113162235 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089449643 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112495744 seconds)
  done (took 2.29506619 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.485788704 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119156023 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093685969 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113246354 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121056291 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088411865 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128952379 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.090916545 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140479063 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088015741 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115908804 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089893043 seconds)
  done (took 2.749494983 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233306878 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125063816 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291195489 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194964323 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157788435 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16928901 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151408566 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163365302 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19490747 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15564614 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231549347 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193016819 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152520642 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188429488 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138532135 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143605991 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196506156 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242549897 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153588249 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204568572 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224462956 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162014308 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177068865 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148100784 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112358729 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168002057 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120628752 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127312513 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203281977 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202943282 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196432539 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168695827 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14864278 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235322293 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251462584 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203072285 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186696898 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134024855 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.139357019 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167276425 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271371115 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145420867 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21182739 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163727073 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130224357 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189517313 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191976325 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173026749 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146812514 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111939966 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225161788 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217910274 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.227384503 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143523858 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137462587 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15783832 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.193239641 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12374605 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250893742 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232083414 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185702764 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.100015201 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152889616 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194528161 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212125664 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.17266947 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186562308 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152055647 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191253369 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18605014 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189522362 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193065222 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181909051 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139619111 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168877112 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17117436 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167630021 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253230429 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174068637 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121631005 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165146573 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147312341 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101807107 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192933029 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124021528 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209845491 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148995496 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.133168141 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160607945 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156910291 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158105731 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198617604 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194916997 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153254499 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110594848 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152858678 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128037922 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214260996 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111060384 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157709174 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15758428 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130523827 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174081981 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124146575 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175569512 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.121375691 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174469753 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180796306 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.124100239 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129781662 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149508544 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149925265 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176612052 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222315477 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111793706 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132893586 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20219712 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200874158 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.120569177 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202098567 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198964951 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.140765921 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146918572 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197869245 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243441575 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111753604 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2305308 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152692545 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105212444 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132815849 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174723496 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153880371 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159794584 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13107239 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178098289 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231830254 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097848068 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136728099 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183334745 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13077734 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10150519 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184131767 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119343584 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.137941374 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143831497 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148471948 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178937393 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1768391 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152037211 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163122001 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149041504 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249993662 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146662705 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.149221983 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11887128 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120888831 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.188341295 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220657258 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103386143 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229982127 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172510864 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152768397 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168645421 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105367115 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172580117 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130384145 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118367012 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19152913 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16474634 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161849471 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196961167 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161717904 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.177542431 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.20722633 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173410007 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172181637 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162573085 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157821164 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.135093216 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130617176 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189356839 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096610113 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.141525287 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132136536 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153655443 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114545483 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134151818 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222169812 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173441297 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124561853 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157664117 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149059768 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180120354 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128277222 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176233082 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177481493 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14828168 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199104109 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221860321 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188069732 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140990699 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201147246 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120331142 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096388746 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.139668844 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167119709 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135815971 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138723742 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1723644 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188755046 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19001239 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182450599 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171983948 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180787446 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197192774 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.130355634 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169421442 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189588207 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1813919 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.193835243 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144744312 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.121328068 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17477247 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156069041 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252681877 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171916452 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183151074 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247432478 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.158191856 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138962073 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127246883 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214198914 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161693045 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182514268 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153097455 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117676321 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15767371 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.1313316 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157456484 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206817605 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135083553 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216320235 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148242494 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186097094 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132755197 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169802332 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156015138 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162393665 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08190352 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172741274 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229497611 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154057197 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174701961 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196068523 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139242612 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.182554101 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214447256 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220996626 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115102942 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157584231 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165990559 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168807101 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17383121 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176166281 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15908555 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186267743 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156113222 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135940844 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138480103 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146455262 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121545788 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132894066 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145865561 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17219904 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140245513 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191936097 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169856466 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167395692 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177847865 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.157587077 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149161711 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12873837 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251593253 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181174952 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246851841 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125632202 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.213416339 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210435787 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134896478 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110653363 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.140621947 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184600743 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137555554 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194592454 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.15155546 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158651298 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178522082 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190391617 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141670452 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.096361258 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157825372 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174751722 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17194368 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15240306 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.162494501 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239353835 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.121032994 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133565174 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174100864 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164077751 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125409044 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229515284 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.086551982 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153093173 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133178687 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11455754 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165828639 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236723371 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.112492306 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.190786038 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169733767 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166765451 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17072802 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15249465 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151170684 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167345309 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198970599 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213249265 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.107738596 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158271232 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177477503 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23026151 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167405339 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.116603886 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231421493 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200012615 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.201862966 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.150177886 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176042439 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172409964 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162007843 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212218104 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113202251 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231051968 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108228273 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22521348 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161630201 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146439034 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173091527 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.146782996 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112432432 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21303802 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179016763 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111600075 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13858347 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168005173 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181796582 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1615598 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129416753 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184770907 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.132778399 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198293895 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266079336 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141455846 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131001846 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146870375 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135731237 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158815942 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159160971 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138359999 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.136864339 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233840587 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.110028662 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223231143 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204181206 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174831773 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211276443 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121110658 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.690765038 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.134940405 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192129877 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159058265 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241600031 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154796854 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178432259 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162887254 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175039309 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203559993 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16445174 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.239352164 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191418574 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.203687778 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110334502 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158330889 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164106982 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.148013904 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158059048 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173228798 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164699933 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.158914565 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.186320322 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174681749 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14351779 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14462134 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201350709 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155931743 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188000487 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180779872 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137470769 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169015552 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183700979 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133756841 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178608758 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23563854 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117387207 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152047822 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132895636 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155505396 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267059323 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.103497617 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228676859 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181698729 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15666765 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165409962 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144554562 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185438456 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157035849 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17573861 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145214372 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157653258 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155502947 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136911952 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.100427072 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155302111 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165091338 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149645038 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157189285 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163814772 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191409175 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.093286818 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146137856 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156055022 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187438547 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243040038 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137404415 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107423171 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161374391 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151502117 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.180494191 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18099689 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.140355834 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139117784 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.106349245 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157280407 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113076118 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153587702 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156786356 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164941508 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234973343 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113350962 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281442472 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144642857 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159544046 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.096583462 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133539075 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152258185 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146963357 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157553234 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128348816 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261285716 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.156208569 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.111955458 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156102581 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.135235862 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11458576 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173281294 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171098215 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211863618 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12466495 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.117829775 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165301517 seconds)
  done (took 81.270981526 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161912066 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133904746 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147799423 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202056538 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176420926 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268509861 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.21107633 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253508956 seconds)
  done (took 2.706935016 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093156329 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145429239 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.151302384 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131849478 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091185246 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118786724 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.331533444 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13012489 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090658976 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.139191586 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.144343825 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.118693601 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.509010909 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.088855693 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120521671 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109937457 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.118272207 seconds)
  done (took 3.77839062 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.45792961 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.708360661 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.476050393 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.125376253 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.031426991 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.135951535 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.654292613 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.212176681 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094979892 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.478405726 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.769731055 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160478863 seconds)
  done (took 18.456288733 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098535734 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.118299744 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.106944823 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135205803 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.094535425 seconds)
  done (took 1.713075691 seconds)
done (took 129.833912258 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103581429 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.390663756 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072006159 seconds)
  done (took 1.652805611 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107816558 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135757127 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107830468 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134514169 seconds)
  done (took 1.650115693 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098184782 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125832308 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108252905 seconds)
  done (took 1.490087432 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.322153178 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189819194 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.144268494 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105861272 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127645389 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102310522 seconds)
  done (took 1.492950165 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096890233 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126567865 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097413196 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128685814 seconds)
  done (took 1.612439324 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094735051 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070597627 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100492762 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074505561 seconds)
  done (took 1.497497609 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11367006 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13084585 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10289188 seconds)
  done (took 1.512830571 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129595235 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.137914776 seconds)
  done (took 1.432831471 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105916842 seconds)
  done (took 1.266256974 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117099844 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169061798 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.193787706 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164281515 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.224518078 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.162745672 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.110472551 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.141584204 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130184548 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143111371 seconds)
  done (took 2.72317659 seconds)
done (took 18.250073041 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103119154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.417130096 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383302724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143573404 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722379363 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379583647 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.070374307 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14508252 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162807623 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092152472 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137872589 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678148693 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.026788441 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.377532879 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983091447 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.471380136 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67535449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122115518 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090020188 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121033816 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.055337609 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094729679 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120256487 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091853844 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702811704 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.397121005 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121787227 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.469972869 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092972332 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125459557 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383966949 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122420859 seconds)
  done (took 17.235498324 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094957089 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172357164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.103203862 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138159442 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122868081 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09420276 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123648116 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093610285 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179494388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122696479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110489009 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120716829 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123066291 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095504387 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139361404 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091925281 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123745018 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092283447 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121606553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092307061 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139577887 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120484065 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094423742 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120039113 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093647606 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135498556 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093496923 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120210702 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091041867 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128148573 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125441615 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095486423 seconds)
  done (took 4.877920615 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140735702 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183618081 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128414371 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125299494 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169079329 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123127059 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200085854 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117158998 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18152249 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125465935 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137540123 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092758073 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157210806 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.100153598 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142896487 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120787288 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096902294 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120622393 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091821996 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123176684 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110711215 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121778246 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121716564 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093353292 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.120873453 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106825804 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123517309 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.091706171 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121328429 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126480807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100399761 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122363945 seconds)
  done (took 5.211227715 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097266219 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127016906 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108685721 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137939251 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09665416 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126693676 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098773215 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124901321 seconds)
  done (took 2.084205754 seconds)
done (took 30.570517329 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.103484762 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.121609809 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.09935284 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134456 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.097066713 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131720374 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090367 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.128416845 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.098706212 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.12787188 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.100876871 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.122586384 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122739475 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.096219195 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.125995419 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092883928 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.1324491 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102066033 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132222045 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.10257092 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.124263873 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.104036181 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12803947 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131411738 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104390848 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131710405 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.10381307 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.128886615 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.094015439 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.124159213 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.093810905 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.133093612 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.092000477 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.131945865 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.0910816 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.123181545 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.118407648 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093278184 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133168589 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10066487 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124107896 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.09855004 seconds)
  done (took 5.92915288 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107751233 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.137029385 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104882565 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080349344 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115412618 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08059253 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136951697 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079022002 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108570748 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107483586 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074171391 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10711937 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078113198 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071850192 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.107881274 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075513662 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.10809403 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07664871 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076104475 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105385576 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080543299 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072084136 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109734702 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079012173 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073749651 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110223433 seconds)
  done (took 3.645118394 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099848429 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.1352149 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111516902 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182156895 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158752872 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099072042 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132355095 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109048301 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.139870084 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117767089 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096194828 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148585375 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109272309 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128290929 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090292776 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13822788 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.104089047 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.123844546 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126594817 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112259446 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136405192 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10084016 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142677468 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.10449719 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.121685586 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091946732 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.126197319 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133754408 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097914813 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130214747 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09683213 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124649935 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.092036581 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.13532758 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.131186734 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.097749264 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141273468 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102428087 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129670616 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091382416 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.127458822 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.09164221 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141707347 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165532913 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09592835 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127838721 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.09836 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132511609 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.090723334 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.139888856 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128040582 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093261506 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123205738 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091976206 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.119756344 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106174531 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122430974 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093833714 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130272579 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.093337234 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.133263833 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.095016518 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139030856 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089610795 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130750071 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.118993663 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093522761 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.11781996 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113536397 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123179804 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160912392 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097167203 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.120541546 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10514029 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12765389 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096997463 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.120604951 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106275211 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131480889 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093975907 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.131649652 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.122697487 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097297379 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.137774868 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095164641 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.122414021 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.097311232 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128712387 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.097394158 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.121507909 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.104877794 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.132094882 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.093366036 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140082357 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120530615 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.099270181 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126826544 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.09596508 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.120934547 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108941811 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.126804305 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.120295008 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.107939138 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119886381 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095030487 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.129921933 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.096936604 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.120428923 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.096675003 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128741296 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.092211472 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122837288 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.09419065 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.123861774 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.100791607 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127577289 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.125166505 seconds)
  done (took 14.827972078 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.225519477 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214043722 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.094045433 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.235546768 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.106175474 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.13342415 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209148644 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.122567407 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125788659 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.121155676 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.096969393 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.160596999 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124613187 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.169329058 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.13249749 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.091121683 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142942499 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.162915421 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.210608112 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.203503603 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.140935746 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100190487 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.124508523 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.093262785 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.122925363 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.100122975 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141047644 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133804283 seconds)
  done (took 5.225590766 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106940273 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15603442 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097012725 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145482994 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146445674 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092148417 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126862811 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.092547155 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135905545 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134519932 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098484589 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.1290264 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.103776628 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133102854 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.091575796 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.133211544 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.129638417 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09495235 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124846476 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.099511883 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129349299 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.103391318 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128671924 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.096600448 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.131283105 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.090699745 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.116408059 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141652815 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.094299047 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.14762441 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.092164257 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131442978 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.131324355 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093217258 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12063812 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094908372 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.123573082 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095536995 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.122699845 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091135662 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121675251 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.081994083 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119932088 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106507842 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129532977 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.086174273 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128273782 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.097422602 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128591843 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.089748105 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.125660783 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.094283589 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.127544766 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.101192837 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12789989 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.096598366 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.12777429 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.084629051 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.128644466 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.093163014 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.114440555 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090271811 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126666003 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.085782169 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.131319554 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.095786823 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.123621084 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.093398205 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.129062117 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126339242 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096091905 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.124325705 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091808976 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.122522179 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098496767 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.125954072 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095838259 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120885289 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093338154 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.122814224 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07562705 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.120925837 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07503793 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.094535823 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.122876794 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.089694363 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.125741383 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126891047 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110355202 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.124791755 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.098767839 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.124099222 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.091109359 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.125455414 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.082112017 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.126457498 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.107006614 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141384891 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122654137 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.094660874 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.136066386 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.096630814 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123018978 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075760845 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129620321 seconds)
  done (took 12.991071023 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.116083903 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.147650622 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094333349 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.136420988 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.146193648 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.117345736 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.12998511 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.098543657 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.125800777 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112534848 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.122761034 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.099902144 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128404014 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.104743915 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.146062874 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.129895444 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097749926 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.132033868 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.103670893 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.159143972 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.105141787 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.139504045 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.132984262 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094672788 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126097555 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.105835763 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.150272579 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.102776774 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.132397341 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.106058487 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.133874976 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.147247609 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.108905876 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127255787 seconds)
  done (took 5.36585188 seconds)
done (took 49.154531444 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.310131384 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.509040727 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.270587697 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.242998937 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.31236841 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.306441683 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.283183152 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.265513922 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.308221048 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.271601602 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.499472836 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.937364957 seconds)
done (took 59.711600896 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.375220311 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.405935758 seconds)
    (2/2) benchmarking "String"...
    done (took 1.532745996 seconds)
  done (took 4.131414458 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.61643683 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.306383948 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.56301774 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.267340524 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.286468726 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.722874584 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.950671244 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.586461685 seconds)
  done (took 28.875144743 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.277408725 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.65063293 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.816177867 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.813554026 seconds)
  done (took 18.749066862 seconds)
done (took 61.939888013 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.26667351 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.331027463 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.283686734 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.247352233 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.397682297 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.293829237 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.645480253 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.27058817 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.292955289 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.251958503 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.290529816 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.276397472 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.266353467 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.662660387 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.265714733 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.265155458 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.297947996 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.856465457 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.656689618 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.26898697 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.293750837 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.33772574 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.272590457 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.264883377 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.268351053 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.265497252 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.267619927 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.265165235 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.479816706 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.269179302 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.354726564 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.817781654 seconds)
  done (took 192.737808943 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.262948839 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.091869801 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.241613563 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.284692422 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.578874489 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.46227726 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.395025305 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.709797621 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.284442155 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.287726644 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.432568546 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.262601085 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.489010387 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.246867366 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.271912114 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.349131568 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.473293647 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.5033775 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.27907976 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.533549296 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.281132886 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.370829145 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.295894657 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.387904808 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.278023866 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.371098908 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.288692251 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.323780985 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.454256889 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.400892937 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.303924933 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.287000428 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.827431493 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.120157075 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.289658144 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.300933225 seconds)
  done (took 151.210380875 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.535995787 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.26177647 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.261255087 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.261569146 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.290852487 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.261672829 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.770676979 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.772902213 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.760398765 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.704914289 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.325617283 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.455784605 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.263957546 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.35329969 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.276108251 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.263958497 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.278112902 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.307142602 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.262395398 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.26274666 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.769752606 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.279578398 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.246168199 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.273144086 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.263734873 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292754135 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.650264466 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.263654691 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292717548 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.5754414 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.310033991 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.263975009 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.542779456 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.034955299 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.370582564 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.265010227 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293102495 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.263829129 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.527571708 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.264425986 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.264832925 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.265761599 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.824451349 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.265030609 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.771664594 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.268654705 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.132325075 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.265568574 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.265268254 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.264634491 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.797494815 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.697513209 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.284848881 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.263944223 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.265081064 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.265233365 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.264579493 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.29507878 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.266091048 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.591777062 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.362521878 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.284349717 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.266560962 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.26787722 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293540061 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.267196621 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.480492941 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.263479072 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.317967568 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.319664222 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.481619165 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.772440476 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.269663781 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.357806845 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.381083521 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.263645295 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.266604198 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.264421306 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.267404646 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.265400919 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.368740636 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.267328062 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.639983372 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.271683779 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.26608098 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.324517426 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.35887573 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.264607255 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.536549038 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.268919654 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.265167055 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.924955857 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.357864419 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.267017176 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.266069908 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.26759513 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.641276189 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.775708761 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.420659095 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.272319562 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.676753515 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.273155068 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.657903943 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.765900765 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.839211126 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.271794182 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.371017781 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.273103391 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.268499138 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.267210701 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.29510907 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.285566469 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.325450091 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.267372016 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.662469334 seconds)
  done (took 351.452215441 seconds)
done (took 698.12975942 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.942817726 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.886595093 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.03149718 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.906516685 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.887678866 seconds)
  done (took 10.846916144 seconds)
done (took 12.03915026 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.453559212 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.450840397 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.323972495 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.452535852 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.298005796 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.470518002 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.432464459 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.29120462 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.369311514 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.346864941 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.36960432 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.319393669 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.295945237 seconds)
  done (took 19.064127219 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.577359367 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.566164232 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.330998741 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.58450196 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.306197703 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.584042177 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.461545744 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.47518881 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.482805206 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.302852238 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.283748845 seconds)
  done (took 17.152239676 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.599634783 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.573077332 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.335336236 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.581643146 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.311225353 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.582089859 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.475337203 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.481656301 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.481045143 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.303157628 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.284932071 seconds)
  done (took 17.204129893 seconds)
done (took 54.613542167 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.277159716 seconds)
  done (took 2.46876002 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.307921543 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.470375618 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.297588012 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.283731493 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.278527894 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.280309317 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.283063827 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.280335235 seconds)
  done (took 11.675426444 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.278626777 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.278098889 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.278120502 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.280526824 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.281575001 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.275385999 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.277123889 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.278721374 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.275424204 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.278983443 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.280659443 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.277013832 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.278778609 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.276870539 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.280649147 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.278470888 seconds)
  done (took 21.649352782 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.279078267 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.276872954 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.281041894 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.279883412 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.278890493 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.280402136 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.278936555 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.277694425 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.280041016 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.27862802 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.280250757 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.278981576 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.277738118 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.27872804 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.279735023 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.27814353 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.27934414 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.277604985 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.28163461 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.280102467 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.280013274 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.279420437 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.282888996 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.278968383 seconds)
  done (took 31.902689426 seconds)
done (took 68.889534128 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.210804565 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.825958232 seconds)
  done (took 9.231763325 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.280616499 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.284162241 seconds)
  done (took 3.762918085 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.280695761 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.282607479 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.281731237 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.282289358 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.282666546 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.284188779 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.282125189 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.282583463 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.282538575 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.283689507 seconds)
  done (took 14.020476305 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.280200571 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.284989949 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.282208129 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.283154381 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.282113318 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.28077581 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.28331662 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.283492692 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.282313298 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.279217573 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.281009554 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.282543738 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.283477398 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.282619563 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.283339435 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.28033222 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.28033842 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.28081825 seconds)
  done (took 24.273709544 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.280364005 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.28401752 seconds)
  done (took 3.761241523 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.279768727 seconds)
    (2/7) benchmarking "second"...
    done (took 1.281819359 seconds)
    (3/7) benchmarking "month"...
    done (took 1.282443932 seconds)
    (4/7) benchmarking "year"...
    done (took 1.281527088 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.28292266 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.280467175 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.282387719 seconds)
  done (took 10.167612592 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.282520248 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.459326728 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.555292364 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.902044694 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.286454338 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.288344474 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.13172786 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.288481692 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.287868885 seconds)
  done (took 14.68098938 seconds)
done (took 81.094553595 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.258013417 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.292305238 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.396080506 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.302754135 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.296502645 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.620831815 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.335624711 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.40540155 seconds)
done (took 38.106370938 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.294756896 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.016111122 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.016349727 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.291722694 seconds)
  done (took 11.523768831 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.265952915 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.166775827 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.264167099 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.258416774 seconds)
  done (took 18.15390902 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.247214928 seconds)
    (2/2) benchmarking "read"...
    done (took 1.617994589 seconds)
  done (took 5.059933155 seconds)
done (took 42.231899065 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282997618 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.286686389 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.28777069 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.282627831 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.28624485 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.283428856 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.282904314 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.283508476 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.287746139 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.28474726 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.285442004 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.2853221 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.286131789 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283464544 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283234948 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282188829 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285482167 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.285057215 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286081102 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281361103 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287577256 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.286011912 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.283413985 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.285048749 seconds)
  done (took 32.03465953 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.288071445 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.286383386 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.288186955 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.286618783 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.284331777 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.288573557 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.28701398 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.283078586 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.286834916 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.288603001 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284472538 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.283556497 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.288707854 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.285232073 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28721603 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.28455005 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.290126843 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283360968 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2887033 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.28288134 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.28782859 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283850073 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.285804015 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289999693 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.285546705 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289660509 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.291301864 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.286304544 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286959861 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.287394564 seconds)
  done (took 39.802023663 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.292362075 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.294838056 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.289034826 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.289286793 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.289914428 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.288184964 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.287444297 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.285700317 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.288570421 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.290020803 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.289912483 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.288110248 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.291452132 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.286892269 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.289696 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.289382456 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.291060263 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.290994995 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.290107265 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.290208016 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.289714316 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.289838335 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.28986799 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.290574471 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.290466934 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.291271092 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.289673779 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.290192386 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.292643426 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.291840343 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.289743512 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.287034431 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.291653348 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.291530943 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.290724544 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.291480176 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.294720862 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.29322386 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.291629024 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.291549865 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.292255272 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.290888247 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.291827183 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.289617824 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.291586694 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.291926639 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.291976571 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.293080356 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.290169688 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.294233862 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.292339269 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.29237809 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.29084408 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.29425212 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.290768143 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.292917516 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.293936075 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.290746343 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.292459382 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.292704909 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.291700833 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.294810204 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.294119012 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.294429906 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.295068457 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.295309617 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.29174799 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.294845799 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.292024465 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.291862069 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.293670984 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.293800953 seconds)
  done (took 94.181483973 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.293375155 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294239494 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.289724673 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.291563429 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289857567 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.294171732 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.290931946 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295073004 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291799759 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.294063491 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294707278 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293124822 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293531481 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294419563 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293745008 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.292300225 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.294071166 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292940275 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.296045973 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296366492 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295104577 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.29337853 seconds)
  done (took 29.660884808 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291315803 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295932416 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.293006203 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.296156766 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.292371552 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296244564 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.296578759 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.294281543 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296288516 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292542892 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291009225 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295529556 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295190772 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293847735 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293217449 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2939403 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296169071 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.291930361 seconds)
  done (took 24.500175945 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.296957828 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.294379761 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.298588807 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.292679479 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.293552082 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.295098423 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295236559 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.29545612 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.296507221 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.295102082 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.295334538 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296529711 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.297529813 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293263298 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297126833 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.295004068 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.2981982 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295094282 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298638022 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294358514 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.293563996 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296978024 seconds)
  done (took 29.71561657 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298495278 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29981036 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.29600346 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29663773 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.293089115 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.296511162 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.297528203 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.296901758 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.300597561 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.297785213 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296965254 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.300260419 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.297406759 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297662847 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.295659851 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293711953 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298296648 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296232637 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301090442 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.297882216 seconds)
  done (took 27.160388306 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.298729364 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296226501 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.299283512 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300021869 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298173655 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.293197416 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296314039 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.296271885 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295424669 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.297973833 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.299854757 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.296015315 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298863518 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.297702369 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292711407 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296740756 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.30174822 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.298299529 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.297994319 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301861744 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.299519547 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.30076049 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.298428793 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.298801605 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296918638 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302101682 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296839267 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.300286903 seconds)
  done (took 37.558822541 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301858151 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.302097396 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.298722002 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.301890396 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.299302892 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.298949415 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.300852824 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.295154021 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.302170157 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.299601004 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.300297064 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.300151755 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.302168718 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.300100855 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.301490702 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.303352893 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301452184 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.302255514 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29793777 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29604424 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.299578212 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29701813 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.299761151 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295347158 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296607289 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.297970417 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29139522 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292853232 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292271507 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.292638068 seconds)
  done (took 40.17310318 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.309922308 seconds)
    (2/2) benchmarking "in"...
    done (took 1.313266501 seconds)
  done (took 3.830457935 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.2893785 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290812735 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.289882984 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.288053288 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.289149952 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.2917975 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.289896758 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286750859 seconds)
  done (took 11.522662886 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.290213229 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.289468762 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.289501934 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.289668688 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.288813098 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.290098513 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.292601891 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.307012416 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.290281266 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.29088182 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.295139881 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.295547001 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.291624177 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.289566743 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.286471115 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.289699927 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.2860793 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.287225746 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.288735995 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.287891702 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28770731 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.288216731 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285771947 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.281623379 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.285823636 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.294445715 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.306919938 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.28520251 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285312072 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.28525329 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.282430052 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.279849771 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.283042579 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.28321949 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.282214982 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.282693264 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.293424142 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.298671392 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.28716068 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.299016677 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280621714 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.278961486 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.280842954 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.282151982 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280878594 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.278819388 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.278225354 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.275238792 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.278528107 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.281421717 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.281971261 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.277756388 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.276586077 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.280119542 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.277186741 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283697907 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.296435142 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.278809364 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.28251714 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.289606761 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.303488871 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.295613999 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274770311 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.274443451 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282752809 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.292720207 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280367428 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.292637163 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.268016805 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.270556024 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.278945188 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.301915516 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.294677305 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.272304919 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273372367 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.273169026 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268653359 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268509844 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.277084125 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.291018976 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.269817223 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269999214 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278095224 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.286774792 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.266245641 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.266821393 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.267391856 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.267707161 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.266912469 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277019895 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.285397206 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.267674505 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.263671137 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.264338618 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.265648392 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.264080249 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.263900355 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264979815 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.261511419 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.264260887 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261932928 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.2654536 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.269353435 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262962263 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26229326 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.270250489 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.280992416 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261915901 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.26727865 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.259087258 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26254092 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.261515504 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.265767628 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.258573409 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264645527 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.26467537 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.258781848 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.259571741 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.25840486 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.259393471 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267339287 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.280677116 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.261799289 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.256991928 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.261564386 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.266640263 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257846367 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.260400191 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.258031931 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.255888627 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.256292006 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.258428347 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.256807888 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.256642874 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25738464 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258924911 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.253483086 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.257161549 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.259400091 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.256390899 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.257157445 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.255714374 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.257868733 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.257746222 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.256155323 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.258139106 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.263550248 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.273015311 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.255545073 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.257084137 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.253102691 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255496555 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.256762491 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.255791857 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25817862 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255213605 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.253966805 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.254756754 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25530229 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.255578862 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254827931 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.255422821 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258422145 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.25418584 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.257203065 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.253173311 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.251369821 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.253707323 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.254406613 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.253617738 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.253933784 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.25190004 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.255846768 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.260229567 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.253656593 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.253754928 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.256726302 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253893688 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254987665 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253430886 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.254847503 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.259254833 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.252063734 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.260945365 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.271304266 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254264458 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.253723738 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.252304825 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.250681299 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252626899 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.254731585 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.257853161 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262998914 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275527804 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.254221483 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.255058331 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.252856602 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.254096169 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.254885455 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.251619666 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.252644947 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251083851 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252208718 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25018084 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.252414193 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.250706048 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.249757459 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.25118235 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.250945623 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.25150543 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253549184 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.250095523 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250620062 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.247581363 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250121804 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251097097 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.249853262 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.246815325 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.251229794 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.248109745 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.250622928 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.250586788 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.257347811 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.247244651 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251239541 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250881973 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.250460162 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.248000689 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.250125983 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252131208 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.248847301 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256547181 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.2686078 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.249896104 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256378199 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.267718133 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.247544313 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.251275952 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.24919891 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.246073137 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.251447745 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.255444208 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.249985209 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.249100219 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.248868224 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248254176 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249022912 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.255081623 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.263716145 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.247644533 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.249455223 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.24985609 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.246038947 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.249083141 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.249028862 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.249164035 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250156466 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248336117 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.250281851 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249917954 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.248426575 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.248608099 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.24902543 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250502619 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.253871823 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.252980269 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.248569781 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.250871339 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.249325724 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.251068739 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.248992747 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.248525633 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.2493352 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259499991 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.271810236 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25591098 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.268496219 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.248952817 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255228104 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.26805602 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.25283574 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24890391 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248725327 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.250237261 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.249175066 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.246756051 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250061518 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.250521218 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250506574 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.250718088 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.252991323 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.24965965 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.248590221 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.250265654 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.250718609 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.250616369 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.250368023 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.250087539 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.252878639 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251063115 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.248562413 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.248419747 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256656721 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268118563 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.252649836 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.248678145 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.248319057 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.249268664 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.249817884 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.249802147 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.253114445 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.256044406 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.252615304 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.257090046 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.25015172 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258504101 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.248665017 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.251158849 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.255331048 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.246675961 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.248146319 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.248687215 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.248641828 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255737242 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.268944459 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.248944946 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.253034943 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249403661 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.249059161 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.249409244 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.248555451 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249831851 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.249499935 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257735546 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.268233321 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.251762801 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25060241 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.246169931 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.24991316 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.250238843 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.248760918 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252359069 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.250044209 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.249904907 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.24950436 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.249989625 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.250207752 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.251459137 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.25003532 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.248417654 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.250633075 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256327808 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.270826362 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25373242 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.250757581 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.26016738 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268534959 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258129603 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.271482593 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.250641974 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.250864959 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.250677587 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.251451564 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.249453675 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.252034865 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.251002745 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.252632111 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.253490872 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.251630351 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.252894132 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.250937836 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.252107942 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.251453057 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259514867 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270773296 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.252950649 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256050088 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.251274647 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.255023106 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.257698536 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.254600575 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.251803108 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.254568558 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260569508 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258997153 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.251673402 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.252203896 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253062981 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251373871 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.252871792 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.252893207 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.252676178 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.252822958 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.252816057 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.252928155 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255902917 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.252830319 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.253682345 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255238239 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.253969008 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.26298013 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.272991132 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.254949248 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253033594 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.253859854 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.252773136 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.252801713 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.252735176 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254184629 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252930227 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.254625935 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258915035 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.257768483 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.256271571 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.252982755 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.25235346 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.25350474 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.254293727 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253419975 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.253600561 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254711913 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.254658719 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.254569015 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.255146111 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.253476428 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.25446814 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.254596416 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254412715 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255431663 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.259601809 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253884503 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.251534882 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.2531838 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255690255 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.253543407 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.255105053 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.263143556 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276004564 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.263555728 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.262256277 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.258367233 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.254811183 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256400574 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.26119119 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.254326893 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.255243136 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.256240059 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.2570711 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.255754678 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.25883607 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255588775 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.263079178 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.274810751 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.255275162 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262764755 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.274335704 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255360795 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.257658428 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.259000693 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.25566749 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.254158487 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.256463759 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.255699012 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263482775 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.276348566 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25727766 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258309994 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.254596096 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.257345414 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260672344 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257400865 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.257666159 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.255397174 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.258566689 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254877812 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25683838 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.254037082 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.256125384 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.256085525 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.258565658 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.26208692 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.25347764 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257711734 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.255402716 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.256168629 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255164033 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25594298 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.253216472 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.253532905 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.256982928 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254869047 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.255057868 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.256734813 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.254607169 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.255957245 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.255432618 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255894075 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258596074 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.262797232 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.26026416 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.253361202 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.254070762 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.255963488 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.257606919 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254483476 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.257122824 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254961585 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.255592395 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.255145739 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254085184 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.255419168 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.256589346 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269285732 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.273686938 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255918055 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.253724443 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258373262 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.25567177 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.252304566 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.255429431 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.257188748 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.259851705 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.262670868 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.256941796 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262797328 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274834313 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.256180393 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.258246366 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.258173345 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.262746655 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.258660715 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256349244 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.25680772 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.261212818 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.271795642 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257124553 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265383396 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281730233 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.275702829 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.25801547 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.257841902 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256875664 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.257729717 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.259402574 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.257557523 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.25782759 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257995131 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.256831825 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.258533802 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262114137 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.257856945 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.258174945 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.257990634 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.258134344 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.259176149 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.255925664 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.258725941 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.25794928 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.25724762 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.257731166 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.259269378 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.259291725 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268375798 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.281519377 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.258306509 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.259195822 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.256741557 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.262125506 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.260805184 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26699569 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.265873438 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.258430226 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.259039828 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.259970078 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259121814 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.257173816 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.259031684 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.258647048 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258299805 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.257592544 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.270893036 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282920832 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.264325745 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.259478818 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260408859 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.259779787 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260525121 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260148355 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259824204 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.262080418 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.259982881 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263062792 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.260096937 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.260067849 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.262258389 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.267181302 seconds)
  done (took 752.497588465 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25891094 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258079174 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.257864176 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25768418 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258019592 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257366248 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258474157 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258126695 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.258269958 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.257684865 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.257340424 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259307601 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258557459 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258052652 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258965005 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258645611 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258933352 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.259935831 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.259365747 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258980479 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.259424755 seconds)
  done (took 27.607474849 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.262226849 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.258142082 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.259782317 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.262228124 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258731155 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.261396306 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.25924897 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262422011 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.262041168 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259733071 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.261567108 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261892449 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.258501965 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.259133391 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259874266 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261916782 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.261349288 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259000737 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.262106508 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.260163747 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261918862 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.26051233 seconds)
  done (took 28.914617627 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.263047936 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.263722025 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.26199307 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.260906698 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.2628735 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.260193762 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.263321633 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.263399171 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.263402621 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.263410797 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.261505377 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.263784867 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.268247704 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.266721549 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.26431031 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.263426676 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.408413607 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.264216803 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.264245718 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.264061301 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.262567991 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.268785816 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.280231369 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.260798881 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.262069598 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.263896084 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.263900372 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.263317903 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.263802572 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.265516019 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.266943383 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.263823151 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.263855953 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.265797182 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.263877697 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.265484654 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.268101728 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.264798518 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.262540419 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.265610187 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.273738899 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.28154781 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.265615857 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.270471637 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.284568556 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.264272776 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.2680876 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.271535965 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.262469783 seconds)
  done (took 63.346527193 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.266710367 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.266273827 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.263230179 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.26512298 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.265880486 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.264375104 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.266158862 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.26535483 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.263725153 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.26364892 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.266361764 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.264112156 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.264295094 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.266704322 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.265945395 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.264293668 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.265722041 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.263864517 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.264179068 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.264168637 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.264816755 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.267215056 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.266978594 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.264581866 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.266690283 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.265097546 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.26423318 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.267746653 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.265393645 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.264617872 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.268161299 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.26667585 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.267367709 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.265893293 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.264058771 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.267031588 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.267479606 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.26460468 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267614533 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.265446496 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.267935357 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267459086 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.267579242 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.269131937 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.265974676 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.265880259 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.265739933 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.264918278 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.267233108 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.267636379 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.268547299 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.2668757 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.268277286 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.266258225 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.268972788 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.269373723 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.266035419 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.26587267 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.268764876 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.267451825 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.26493431 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.268521102 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.266215368 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.268200995 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.269015344 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.266407251 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.267582991 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.26926964 seconds)
  done (took 87.294708845 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270155052 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.269331211 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269795809 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270151249 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.270069603 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.269869078 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268620364 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.270480848 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.270603471 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.27029739 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.270214898 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.270316856 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.270298593 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.270678108 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.270457305 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.270512595 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.269962542 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270559406 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.270887674 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271190046 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.271485916 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.270863253 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.271749379 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.270914761 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.271226919 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.270922549 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27102533 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.272743701 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271948036 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.2714277 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272370914 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.271401399 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.271254642 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.271544846 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.272256898 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.272113308 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.271166399 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270972394 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.272106068 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.271440203 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.271375271 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.272557737 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.272444289 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.271917065 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273088578 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.272757236 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.271725634 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.272418876 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.273205988 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.272396375 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.272014686 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273519574 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273004789 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273438037 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.271740801 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.27258524 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272851078 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274030285 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272345621 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.272856602 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273853074 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.272874361 seconds)
  done (took 80.025602152 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274222787 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.272840472 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.271277393 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.270553857 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.273194612 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.271147596 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.272624648 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.273741714 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.274698181 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.273298686 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273350561 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.271829308 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272571625 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273445491 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.27205336 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271474177 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271705768 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.271726111 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273973645 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.271295891 seconds)
  done (took 26.643072645 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.27158699 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.273976161 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.271996136 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.272167158 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.274745913 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.272624233 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.27491467 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274987479 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272588322 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275340902 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.27494308 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.275158708 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272599075 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.272523249 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.276086147 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.272415285 seconds)
  done (took 21.570586177 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.273869163 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.275363417 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.275725067 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.27554617 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.273188338 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.272742405 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.275893667 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.272145233 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.273855887 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.275889269 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.275497451 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.276512212 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.276458873 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.277221003 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.273804656 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.276194725 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.274227219 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.273213741 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.27679817 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.277242633 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.27467408 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.27404368 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.275531853 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.277577734 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.27358579 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.274399722 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.273573485 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.272946988 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.274009507 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.276534435 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.273780227 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.274397561 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.274126011 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.27525355 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.277120169 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.275629879 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.277539227 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.277394001 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.27613019 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.276993232 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.278507705 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.275659141 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.276884065 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.277786825 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.275035611 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.277415569 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.275746703 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.275655961 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.275241493 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.274751316 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.278061199 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.27817093 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.278851893 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.278501403 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.277966025 seconds)
  done (took 71.356243858 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.278073817 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.278786609 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.275869057 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.278799201 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.279034876 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.276731452 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.279590407 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.276988575 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27666659 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.279021495 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277443976 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.27836114 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276758261 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.27907415 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.277180515 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279942935 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.276540303 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27729337 seconds)
  done (took 24.197935276 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.278386954 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.277605847 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.28106381 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.278254691 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.277381658 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280878933 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278008482 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.279530871 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279823311 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.279178061 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277845908 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.280899916 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280314839 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.281284495 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.278997719 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277384448 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.281016455 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280542801 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.278953302 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277775806 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.281845285 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280263926 seconds)
  done (took 29.344369299 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.281306088 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.279547929 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.280130622 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.294982363 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.296888396 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.301674424 seconds)
  done (took 8.933057337 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286138145 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281597499 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278957452 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282279304 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28119237 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278286702 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279770115 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279052469 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281497376 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279206272 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278991321 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282326715 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2818031 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280186459 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281962315 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282219727 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279407665 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279552595 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280365334 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282625483 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279697489 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283432046 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280211443 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279851774 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279535945 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279861064 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282679501 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281403224 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279644615 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284010253 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283213103 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280727752 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283573799 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281217938 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284321612 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284357915 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279528107 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28342636 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283897929 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281118468 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.284536314 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284277838 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284434274 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281194815 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284234338 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282070751 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282489571 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282532578 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283158599 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285156423 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284379216 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282896074 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284196174 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284137978 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2856384 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285907807 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282111501 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281974833 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284831225 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282775198 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282588228 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285695734 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282747499 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282295369 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285812542 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283370467 seconds)
  done (took 85.849967136 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282724999 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282043714 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283035396 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283533503 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282011877 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282883593 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282767368 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282733352 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283565109 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282138646 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286755156 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28319793 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28354575 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283165163 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282814093 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28376774 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2835026 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28505339 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282741321 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286683196 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28297411 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283601016 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284079242 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283664373 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284340431 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286953379 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28399006 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284454541 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285634749 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284152321 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283584708 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283858713 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283928923 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285946889 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285635444 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284886702 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284842262 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283943146 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28507435 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287647505 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28411589 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288092854 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285050783 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286387778 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285882697 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286154298 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285580403 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284953598 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285090477 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285774257 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285302537 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28585709 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286116772 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28494273 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285729816 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286202546 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286267207 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286255301 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285854403 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288112012 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286651982 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286819041 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290225943 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286357235 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286379912 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286379451 seconds)
  done (took 86.00767096 seconds)
done (took 1764.930744928 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.342510265 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.380620878 seconds)
  done (took 13.928425368 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.453640651 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.404034073 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.28763914 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.318793052 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.28791562 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.288884179 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.305543607 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.288270544 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.286974099 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.288138914 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.287932709 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.473874174 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.343591669 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.288771626 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.287688025 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.379419556 seconds)
  done (took 42.478073439 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.310528489 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.295395415 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.403312644 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.316384303 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.316133631 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.47591012 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.352464132 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.295485456 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.461444515 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.336705193 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.820896046 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.317162522 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.294776184 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.384828262 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.315758656 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.476377036 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.535304191 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.808567172 seconds)
  done (took 29.725486206 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.726339054 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.305301906 seconds)
  done (took 9.241807065 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.323534563 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.306252771 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.33768003 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.303350247 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.301295057 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.30880794 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.370389109 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.372621489 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.299169135 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.294077269 seconds)
  done (took 64.427519409 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.314919865 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.295204753 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.295400357 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.294218798 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.286723611 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.307324113 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.293954742 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.285944957 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.765562598 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.423064217 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.319997075 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.300725327 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.312925622 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.297131474 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.292621273 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.32979254 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.436047738 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.311235315 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.293422076 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.300762066 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.295548082 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.403164738 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.337662614 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.29483125 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.419067256 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.784663795 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.304737977 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.303488973 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.41696871 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.31247699 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.295562482 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.29611511 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.297503584 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.870077464 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.847137516 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.310364375 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.336742197 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.303772331 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.29355369 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.430283994 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.314987574 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.302565421 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.288907034 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.805785678 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.453840896 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.408796308 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.483150939 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.299149293 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.29809379 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.356036373 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.297275309 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.298582748 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.32465262 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.050485547 seconds)
  done (took 109.10579464 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.3004414 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.777476553 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460571196 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.314106955 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.148978573 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.098263419 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.306991216 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.568860967 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.31851674 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.29108364 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.582205257 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.793562763 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.309923623 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.324097034 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.84730846 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.33462528 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292633955 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.197749028 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.307237927 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.296983061 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.701666391 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308999188 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.30978028 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.556618982 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.330711341 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.746211321 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.699920198 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.820937218 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.308088654 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.291694402 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.754238091 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.308746041 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.334494424 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.293007664 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.561999763 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.639143128 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.631634272 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.315328152 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.336885018 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.295774651 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.314297407 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.743098626 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.642360405 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.30972598 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.292236592 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.763388415 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.308801658 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.29958011 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.292561586 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.500033278 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.211824741 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.293583971 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.681419446 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.293041777 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.5511944 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.379561222 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.293753803 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.774819212 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310289336 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.433863509 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.355648566 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.295693422 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.29892604 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296416659 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.294220533 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.631515491 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.558235109 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.296727664 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.633119134 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.76412942 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.318379608 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.818208056 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.240910918 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.30790976 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.344280179 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.299350863 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.006258544 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.788002098 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.343109406 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.294496438 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.617592986 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.314629212 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.568672215 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.310210645 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.29403384 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.711440416 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.319298145 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.341441536 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.295653075 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.295720777 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.074056272 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.298071697 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.572175993 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.31303824 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.295466881 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.294911658 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.307332923 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.295328554 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.29683268 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.297923448 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.816485775 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.316839684 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.424766827 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.315034608 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295701516 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.295480042 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.29694221 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.297317153 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.520461839 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.769529066 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.301442101 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.298125008 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.297010436 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.297419753 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.501699942 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.301798488 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.591912861 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.313784574 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297382398 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.319195205 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.122826053 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.321284199 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295890456 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.318948891 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.136212114 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.519302305 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.315431812 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.297781981 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.297906198 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.313362824 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.600935713 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.297313747 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.377336717 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.300382945 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.991643697 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.347079325 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.322956705 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.87636108 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.302829047 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.256062246 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.318892884 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.2980519 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598962695 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.565732302 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.544366328 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.308012101 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.298181181 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.995416557 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.368464427 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.44660073 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.316326419 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.439219294 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.495333018 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.458703307 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.300236191 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.863974801 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.299645894 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.517765702 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.298430827 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611733237 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.78032168 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.315022528 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.299088067 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.996022834 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.960686485 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.906902357 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.301222642 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.570655964 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.300277799 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.755032706 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.299575947 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.30047262 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.896482469 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.301515336 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.304834902 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.299398149 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.300109013 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.37486655 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.474831924 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.024190459 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.305238516 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.749512398 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.383636817 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300513869 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.316431444 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.300485191 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.651122944 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.374583183 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.302846709 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.322025345 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.301620255 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.300881889 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.761241395 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.285063294 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.302449883 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.454071257 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.92570615 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.317945401 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.302778915 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.939076498 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.523071212 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.798049478 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.336783061 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.599919618 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.32318927 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.341307883 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.087375445 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.390995306 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.760875944 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.321380019 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.303307116 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.910479687 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.317561671 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.353113566 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.302680451 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.303689398 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.831314818 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.319569852 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.303026461 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.601638299 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.302869697 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.556618808 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.302623524 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.333198492 seconds)
  done (took 1104.6361822 seconds)
done (took 1374.749069518 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.30247105 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.30454283 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.290421489 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.312890664 seconds)
  done (took 26.435465569 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.315340636 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.310581063 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.311646921 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.310897236 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.312017032 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.311616222 seconds)
  done (took 9.099042335 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.376016086 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.304060244 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.310140838 seconds)
  done (took 19.217003574 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.524085126 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.620151749 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.667758402 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.56187114 seconds)
  done (took 10.601803621 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.311982379 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.31410663 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.313247193 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.314187265 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.316104088 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.316566272 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.313547477 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.313733002 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.315860138 seconds)
  done (took 13.056552275 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.111718601 seconds)
done (took 84.746264447 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.065106065 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.308982774 seconds)
    (3/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.033168088 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.023078361 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.779136833 seconds)
    (6/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.486165131 seconds)
    (7/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.604716329 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.56615126 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.427488582 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.361884559 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.305252642 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.350045647 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.333904995 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.40921614 seconds)
    (15/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.844294028 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.289554632 seconds)
    (17/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.186028479 seconds)
    (18/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.844276636 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.671499184 seconds)
    (20/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.049718896 seconds)
    (21/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.622187306 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.307640539 seconds)
    (23/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.318326553 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.334480072 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.654035687 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.324021178 seconds)
    (27/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.706672318 seconds)
    (28/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.352868631 seconds)
    (29/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.37257475 seconds)
    (30/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.358339113 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.307498521 seconds)
    (32/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.729245549 seconds)
    (33/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.456742564 seconds)
    (34/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.685940166 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.439588177 seconds)
    (36/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.434959761 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.307612078 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.779592018 seconds)
    (39/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.934652337 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.315487899 seconds)
    (41/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.317254579 seconds)
    (42/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.565140135 seconds)
    (43/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.515754796 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.324635052 seconds)
    (45/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.317348925 seconds)
    (46/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.320216242 seconds)
    (47/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.513190665 seconds)
    (48/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.562590262 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.419012783 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.562950656 seconds)
    (51/309) benchmarking ("sort", Int8, false)...
    done (took 4.361236502 seconds)
    (52/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.308721266 seconds)
    (53/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.629365426 seconds)
    (54/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.672370981 seconds)
    (55/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.439977979 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.305936087 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.379648338 seconds)
    (58/309) benchmarking ("sort", Float32, false)...
    done (took 5.30488824 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.374410746 seconds)
    (60/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.391965963 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.927898314 seconds)
    (62/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.899972303 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.719209156 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.208382093 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.37585587 seconds)
    (66/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.668457188 seconds)
    (67/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.292213809 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.757226973 seconds)
    (69/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.135510576 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.305577694 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.629653953 seconds)
    (72/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.424451721 seconds)
    (73/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.820875122 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 5.465097126 seconds)
    (75/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.735049312 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.716679717 seconds)
    (77/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.336205374 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.316574603 seconds)
    (79/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.015493936 seconds)
    (80/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.318716545 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.948754968 seconds)
    (82/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.326912204 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.148240867 seconds)
    (84/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.394184794 seconds)
    (85/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.88011292 seconds)
    (86/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.292695795 seconds)
    (87/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.325793981 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.144605521 seconds)
    (89/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.326814039 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.537194971 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.898010036 seconds)
    (92/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.339304494 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.711515117 seconds)
    (94/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.537961539 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.637831443 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.331888068 seconds)
    (97/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.626649474 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.335178816 seconds)
    (99/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.505442088 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.178969605 seconds)
    (101/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.956585678 seconds)
    (102/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.290682647 seconds)
    (103/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.321529978 seconds)
    (104/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.396819148 seconds)
    (105/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.336419495 seconds)
    (106/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.291228613 seconds)
    (107/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.400911424 seconds)
    (108/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.390613384 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.309541125 seconds)
    (110/309) benchmarking ("sort", Float64, false)...
    done (took 5.590495874 seconds)
    (111/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.035919889 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.351671136 seconds)
    (113/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.71822412 seconds)
    (114/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.414274164 seconds)
    (115/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.046012739 seconds)
    (116/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.433107617 seconds)
    (117/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.350882725 seconds)
    (118/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.375477263 seconds)
    (119/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.312596989 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 1.824098061 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.349690056 seconds)
    (122/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.484681434 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.291128898 seconds)
    (124/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.387625387 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.590039573 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.961525297 seconds)
    (127/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.598003841 seconds)
    (128/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.432679258 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.046806965 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.571780105 seconds)
    (131/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.920164081 seconds)
    (132/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.334339282 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.311700953 seconds)
    (134/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.591234249 seconds)
    (135/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.320281073 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.413213712 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.93408898 seconds)
    (138/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.619873837 seconds)
    (139/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.354191106 seconds)
    (140/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.909369918 seconds)
    (141/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.136011856 seconds)
    (142/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.318377956 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.053333869 seconds)
    (144/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.336955853 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.14672129 seconds)
    (146/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.882981685 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.351760702 seconds)
    (148/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.180878614 seconds)
    (149/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.871236068 seconds)
    (150/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.014085666 seconds)
    (151/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.356586034 seconds)
    (152/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.066838103 seconds)
    (153/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.356644377 seconds)
    (154/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.332619734 seconds)
    (155/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.331104442 seconds)
    (156/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.346736496 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.641000155 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.444598722 seconds)
    (159/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.57320021 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.334507276 seconds)
    (161/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.336714557 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.357824985 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.314902048 seconds)
    (164/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.57595861 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.618981767 seconds)
    (166/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.866305064 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.884408796 seconds)
    (168/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.498435885 seconds)
    (169/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.396861926 seconds)
    (170/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.655386171 seconds)
    (171/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.396556791 seconds)
    (172/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.32232124 seconds)
    (173/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.495083276 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.736189126 seconds)
    (175/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.354587916 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.358121757 seconds)
    (177/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.299372257 seconds)
    (178/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.553408543 seconds)
    (179/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.294888983 seconds)
    (180/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.320258711 seconds)
    (181/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.100497975 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.130507543 seconds)
    (183/309) benchmarking ("sort", BigInt, false)...
    done (took 6.313218917 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.816450696 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.340087153 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.313056566 seconds)
    (187/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.661610443 seconds)
    (188/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.412637157 seconds)
    (189/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.13991178 seconds)
    (190/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.157925137 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.355979644 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.084682621 seconds)
    (193/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.452929939 seconds)
    (194/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.44119965 seconds)
    (195/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.059482754 seconds)
    (196/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.314212302 seconds)
    (197/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.877990895 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.754233273 seconds)
    (199/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.314198486 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.389686232 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.328940259 seconds)
    (202/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.331640739 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.303439929 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.76261337 seconds)
    (205/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.476954143 seconds)
    (206/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.679491223 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.331371854 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.942981051 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.534346401 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.603793545 seconds)
    (211/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.114404426 seconds)
    (212/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.683374372 seconds)
    (213/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.653623757 seconds)
    (214/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.379334465 seconds)
    (215/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.597791693 seconds)
    (216/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.697619599 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.355513066 seconds)
    (218/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.331665009 seconds)
    (219/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.682619478 seconds)
    (220/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.86462066 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.729850698 seconds)
    (222/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.357379775 seconds)
    (223/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.342260074 seconds)
    (224/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.719558789 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.684859567 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.432430447 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.758823599 seconds)
    (228/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.510861825 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.335905671 seconds)
    (230/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.605600723 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.166447933 seconds)
    (232/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.640117148 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.39467799 seconds)
    (234/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.360943325 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.334912164 seconds)
    (236/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.298305639 seconds)
    (237/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.441879115 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.090395209 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.671879634 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.219802343 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.629398815 seconds)
    (242/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.859979604 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.420801978 seconds)
    (244/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.523983046 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.733187975 seconds)
    (246/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.372695483 seconds)
    (247/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.348480443 seconds)
    (248/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.298352948 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.425663901 seconds)
    (250/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.709850931 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.411703831 seconds)
    (252/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.347173858 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.244820332 seconds)
    (254/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.926006542 seconds)
    (255/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.408760375 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.666863763 seconds)
    (257/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.517582739 seconds)
    (258/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.150776976 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.367519738 seconds)
    (260/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.449064444 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.727773619 seconds)
    (262/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.562324637 seconds)
    (263/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.399584967 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.386938595 seconds)
    (265/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.329054018 seconds)
    (266/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.516630914 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.115747276 seconds)
    (268/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.89742573 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.313055315 seconds)
    (270/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.430364649 seconds)
    (271/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.685815699 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.321569714 seconds)
    (273/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.33884736 seconds)
    (274/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.401605671 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.925476805 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.726293148 seconds)
    (277/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.418373123 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.146759095 seconds)
    (279/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.100775204 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.43720894 seconds)
    (281/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.477056869 seconds)
    (282/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.337463313 seconds)
    (283/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.132735897 seconds)
    (284/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.343760374 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.258640369 seconds)
    (286/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.834604894 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.731104738 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.339938594 seconds)
    (289/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.868763038 seconds)
    (290/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.333735053 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.361909178 seconds)
    (292/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.401130392 seconds)
    (293/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.741843117 seconds)
    (294/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.335337145 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.247877985 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.963833249 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.321415712 seconds)
    (298/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.320045497 seconds)
    (299/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.43453678 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.360959599 seconds)
    (301/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.347466899 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.342255989 seconds)
    (303/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.664081945 seconds)
    (304/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.320624218 seconds)
    (305/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.433484063 seconds)
    (306/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.581768252 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.232713871 seconds)
    (308/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.535327865 seconds)
    (309/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.246487956 seconds)
  done (took 913.328490875 seconds)
done (took 914.557172433 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.354085187 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34789089 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.331598411 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.35345331 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.444457464 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.356606107 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.342599159 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.333426565 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.379425262 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.381524359 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.33097862 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.355152474 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.334851266 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.332251747 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.331611762 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347163352 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.335573177 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.333825032 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.349073692 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.342446765 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.348091915 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.331690949 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.382644365 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.35597829 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.336890157 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.336273224 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.336319693 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.352140698 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.445123966 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.33885208 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.337110711 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.345183146 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.335668168 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.332245427 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.328604816 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.353117929 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.345276092 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.343349604 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.337685803 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.366544292 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.723593277 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.350259536 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.336533384 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.334882042 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.334913887 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.33914403 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.335201366 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.340315371 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347134522 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347310511 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.715905883 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.365566302 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.338024179 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.334363865 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.346313165 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.336206801 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.337522569 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.351022453 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.35416581 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.351447066 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.324315128 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.339376167 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.337255211 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.351177715 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.343610596 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.756561475 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.347468769 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.338070812 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.727283801 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.357744638 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.757546466 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.360287629 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.33712922 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.350805139 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.366603772 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.343955295 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.331454607 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.336049587 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.343991865 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.334801059 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.347841344 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349390301 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.341425579 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.336838326 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.350142139 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.360710256 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.347043059 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.338364744 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.34515113 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.356234512 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.345290217 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.348674182 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.339983636 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.332330751 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.347051966 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.340871741 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.340630412 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.340866575 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.34263852 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.348615461 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.726955148 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370742714 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.3345039 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.334834925 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.336982531 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.351423012 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.727576065 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.354598743 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.35922178 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.3853483 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.34016521 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.328616948 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.342839253 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.354511493 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.347136878 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.341101798 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.335215226 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.336276992 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.730995328 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.370160792 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.339831422 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.337880337 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.355050894 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.341248665 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.33511886 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.345473952 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.340544333 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.352912095 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.459768303 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.348986571 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.370258396 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.337720276 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.341097988 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.364242866 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.355304739 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.370741171 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.341807622 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.355331974 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.355423389 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.336348407 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.350864857 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.350610551 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.340331966 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.34627525 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.334684433 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.363836995 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.353305988 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352553132 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.361510301 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.461149355 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.33777816 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.33174823 seconds)
done (took 225.339820208 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.415908446 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.336742703 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.438769418 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.337041027 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.455432597 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.437073797 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.335445112 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.335147889 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.334408707 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.741874692 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.335257219 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.335980313 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.337389303 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.33679911 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.44073657 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.3388413 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.335653305 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.675920247 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.338264037 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.418403297 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.336448493 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.335532817 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.337641586 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.717299755 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.33497966 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.331138413 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.40903334 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.339097001 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.707584202 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.336747012 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.333472587 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.683601634 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.428224396 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.355435339 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.348467745 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.346629165 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.439236885 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.357747132 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.420879373 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.439397309 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.422437379 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.37769528 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.340352029 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.340659363 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.340706979 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.340888133 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.338284796 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.367189784 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.334483605 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.338634135 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.704212656 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.350040418 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.347775581 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.337793927 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.337860429 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.361432329 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.337801199 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.342168897 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.441236697 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.341145881 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.403736869 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.750562153 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.715560735 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.341510115 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.338935775 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.338993116 seconds)
  done (took 148.984486792 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.406005321 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.424331606 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.450973545 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.357433091 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.394375086 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.458137044 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.357102303 seconds)
  done (took 11.101073301 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.346917901 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.343057747 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.391124941 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.390852503 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.341567121 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.48858804 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.342030537 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.35213021 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.339008476 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.394565663 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.343133332 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.343423711 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.348361145 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.336846192 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.390053396 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.35333527 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.456637145 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.343243588 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.343156734 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.499510982 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.340654795 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.349335475 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.393863344 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.354225248 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.344055406 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.349030484 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.915013371 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.343482251 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.341031773 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.343898524 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.340578946 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.381401531 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.343775122 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.340093569 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.34092097 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.458265216 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.343200091 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.342243561 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.343472608 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.337970605 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.34358291 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.345058322 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.343841016 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.341485171 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.344618194 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.366424989 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.344378646 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.344787334 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.344008836 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.345163264 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.394097988 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.344798085 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.341868626 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.342099672 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.399803403 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351264236 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.345539738 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.34193849 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.34446156 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.341523667 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.501273498 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.391975291 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.344598633 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.392850146 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345808485 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.345204043 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.344457601 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.3455808 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.398302565 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.347160703 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.394089533 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.34389164 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.500730915 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.368855241 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.346756528 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.348897439 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.348930454 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.344901852 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.339960065 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.351571081 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.343841003 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.347643868 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.351057919 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.343817479 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.34240325 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.447887823 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.455036038 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.344255842 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.359273737 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.353345427 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.344751953 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.400082256 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.3473002 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.344352792 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.398903401 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.46137025 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.400612548 seconds)
  done (took 154.235118637 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.352591677 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.356962329 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.347740722 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.364464197 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.347640715 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.347456779 seconds)
  done (took 9.377213927 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.3502091 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.348168483 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.347975412 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.347967126 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.347606568 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.347888682 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.349312807 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.349532823 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.350798883 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.347561762 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.348702157 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.349535828 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.349140417 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.348604046 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.34852876 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.348187109 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.348037717 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.346244251 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.348390094 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.34863823 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.452274782 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.349702148 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34980397 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.349396698 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.352009848 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.348780848 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355871841 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.348154513 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.349961219 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.355373574 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.368274247 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.349901865 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.350632449 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.354029304 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.352896828 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.350543845 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352746724 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.350175027 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.348413509 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.35014623 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.350378867 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350074689 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.349944198 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.350051231 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.351717691 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.353583448 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.352908509 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.357560298 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.349806686 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.351497683 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.351986576 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.349918637 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.349912352 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.351352084 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.352481557 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371733492 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.354833512 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.351174778 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.351411335 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.351044252 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.351227997 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.351301049 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353676865 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.355509878 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.349961554 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.351988667 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.352872478 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.354825264 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351690092 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.351626087 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.35231991 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.350171842 seconds)
  done (took 99.653372891 seconds)
done (took 424.601560779 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.665249225 seconds)
  done (took 7.928890236 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.403151847 seconds)
  done (took 7.666776226 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.421414093 seconds)
  done (took 21.690293777 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.431689787 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.414075292 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.376705216 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.356704262 seconds)
  done (took 26.845416016 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.650237804 seconds)
  done (took 7.916715842 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.358785934 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.345470879 seconds)
  done (took 13.970358878 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.837488403 seconds)
  done (took 8.104080102 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.462784148 seconds)
  done (took 7.72947724 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.358263387 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.382903699 seconds)
  done (took 14.261306146 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.33043116 seconds)
  done (took 7.597812954 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.58547585 seconds)
  done (took 8.85212018 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.362306803 seconds)
  done (took 7.630492411 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.431160377 seconds)
  done (took 7.699155089 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.240313536 seconds)
  done (took 9.507851801 seconds)
done (took 158.664884986 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.347506599 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.35286941 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.34972566 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.347495146 seconds)
  done (took 26.665284282 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.38925676 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.390290455 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.390535105 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.398925199 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.392121228 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.390141262 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.381855289 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.381708315 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.399734123 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.393441062 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.39152906 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.391905016 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.389598545 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.382327301 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.392650618 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.390246424 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.401027365 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.393034076 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.397349848 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.393314967 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.3573065 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.400288878 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.393336061 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.357846159 seconds)
  done (took 34.60724475 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.880039821 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.426728135 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.509742606 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.408721687 seconds)
  done (took 7.494700219 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.40977269 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.409993922 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.421177237 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.459825985 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.48720761 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.420075956 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.382770529 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.378458123 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.364568263 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.40981959 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.486344937 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.426568181 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.49587791 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.357361181 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.53847299 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.357721034 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.356993809 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.409783381 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.461066827 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.474876664 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.358708131 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.409691901 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.413976811 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.426420702 seconds)
  done (took 35.387008042 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.371870512 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.366619075 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.356798711 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.357447626 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.379118292 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.357622092 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.358699868 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.359519032 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.357196187 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.363840089 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.357216015 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.370071843 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.357730467 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.356609651 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.364028959 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.36001422 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.364184304 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.358171437 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.356853287 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.359580399 seconds)
  done (took 28.503862879 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.352570706 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.206854302 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.704372564 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.608419131 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.351999856 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.359829204 seconds)
  done (took 27.855261405 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.43114853 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.577021194 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.358864067 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.713790601 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.804516217 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.377624624 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.359892742 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.599128983 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.913435444 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.905980553 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.42389188 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.428119864 seconds)
  done (took 20.164985406 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.354656169 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.356674055 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.372351762 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.376050724 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.414044017 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.3809797 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.367668526 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.354831854 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.420712328 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.436259512 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.381023142 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.416227419 seconds)
  done (took 37.905166509 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442303389 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402908831 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.231306686 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197968174 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.073821213 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567417144 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.176124728 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.813501265 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.359248107 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63038318 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356051322 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445218353 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.612547729 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36944879 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360655609 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.35568883 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.599725936 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854394401 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363451782 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.392630101 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38204794 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.359220029 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.494762462 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.387521903 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567995507 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.335843472 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.618250923 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.132974932 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644959623 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37607368 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367701352 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358079191 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632094929 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012290768 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478952577 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368304989 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.134134175 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.902833763 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.34650151 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.403836213 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365085162 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.360549088 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368456164 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359454247 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.292532551 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367900493 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826135373 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.363325794 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.069472769 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358872651 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370265504 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453166465 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.362230228 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.929077165 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.448712845 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.365483987 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.357339657 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36504087 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930737868 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.873768973 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36152703 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.31800435 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.814150713 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.396472839 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006998131 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.480145049 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.362997471 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.36305477 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294856982 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.449759159 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376635658 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50804367 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.386058518 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009961925 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075681327 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.380014105 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.292261978 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918310502 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367150494 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.29967273 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588201747 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.136408634 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295694097 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.30553632 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.295749695 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070402341 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374103289 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.697076133 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373575695 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.817125419 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.370245282 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377326485 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384777155 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583517067 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.240018779 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361313238 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.3670741 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489998414 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383177338 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.816207994 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296215884 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.364835934 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61696903 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.573687715 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36228374 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.363430033 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596282287 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36843335 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.389541894 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.372599517 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.378461795 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.951680495 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392966645 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.856358018 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380324445 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.138298073 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101634803 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377679724 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.468322491 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.368861554 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607363406 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.119413243 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.250681396 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429382619 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365966799 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.36218484 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.503396119 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.214759915 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.247110697 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.36015125 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363410093 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.39985033 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.364680521 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308698394 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.371525471 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378480844 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.142453328 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.58669331 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364263456 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64600869 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298660996 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511893836 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.374851411 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.586245121 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.555483041 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.38159281 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62279902 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36612437 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373955975 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380484365 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383538272 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460839283 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386070327 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.37795578 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.627756438 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.368706465 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.368227981 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.500869581 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.145593627 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373491391 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.370639422 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.276611175 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960283319 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360130342 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372849571 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.25524564 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.378750271 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433430545 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371826699 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.37624901 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.158851885 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.270221117 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.37108891 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.363676317 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58868644 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376503812 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.425697779 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444248604 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.576608591 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.963571595 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39778007 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.302083506 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.079023579 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.061080166 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36674673 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.54799971 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36785768 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377030283 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378467383 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.952406209 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.962113804 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387358018 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.42580414 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.374617247 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.377673761 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.374019773 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369288469 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.160130161 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.881983704 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371248377 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.405202173 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511787422 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.382153896 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302839079 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.885763506 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375069201 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36873295 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.146831258 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403113838 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.419989663 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854194903 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628712436 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.133588283 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379293255 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.60042334 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.402982264 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.368206959 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383711138 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375418569 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.37716456 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377732652 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.380452667 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.445702776 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.80902322 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937797635 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095373277 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945946921 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306371163 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.372022756 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.27567698 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.830248071 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303661748 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.026715949 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555586651 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.857715788 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314240424 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583991325 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.566605378 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15150896 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380763475 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598460268 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281179522 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.372354108 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401995012 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581418197 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403849928 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.376119508 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.308046569 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.65297917 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643032233 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377319699 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450328197 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.835166945 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372831818 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.149603482 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.370490338 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.66341212 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.570024353 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.916286748 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.758700937 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371703813 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387334141 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854233826 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376977503 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.898004168 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011061971 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398354321 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.592076321 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307813408 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.382875016 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.383122343 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.368293379 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.663195412 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.376720404 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.627506974 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38362032 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307766416 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.383462134 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927294301 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.247117748 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.379617446 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373670697 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114504099 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391911198 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66620152 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.396228385 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.157701154 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377564813 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.30905241 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308852247 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.067298303 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376375299 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350166736 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886352649 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.815872894 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.440017616 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395005766 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.225969264 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.630306057 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.388042584 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.978282677 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618128131 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.243907422 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397211755 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.474506032 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375539791 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.357505227 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.257219384 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.611260489 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293136869 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.598981714 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.248456917 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.282784325 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.374038492 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586716311 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.257629364 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37971688 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620007222 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.111614057 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.386383603 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090677811 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419044012 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380159099 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.388622791 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.829194553 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381820964 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445768742 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386244916 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.386293726 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.386941499 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547540359 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385092651 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37884655 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.389605326 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470467968 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.911582899 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.166346193 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.15041956 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984326215 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144250909 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.999668317 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407816731 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.377120657 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386004815 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312854287 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525547076 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.903034456 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64984021 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507283575 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.89681906 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398474905 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384816981 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390889682 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592189919 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651785668 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.248720639 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388584382 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.042528216 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.53732179 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388986003 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.589524044 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892608337 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959359252 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504113369 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.385560995 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.842584895 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652921174 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.47043529 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378758711 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.966982415 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.397648269 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.687021641 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.407329526 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385690163 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527153831 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388240677 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028282094 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.41524714 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.539407545 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.153932109 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.520100427 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638684899 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.844846969 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.396235647 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987651144 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.123983807 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642181833 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450163455 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38976832 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.493474664 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526503884 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.377698341 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.276830163 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37964135 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226450334 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.090775589 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.388843693 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986165535 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665169039 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.378522379 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.383020228 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404022252 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.390160981 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604042932 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083691156 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612036921 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392157574 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.383633783 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.373166236 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987085679 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419061505 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316084205 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.385252486 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623551969 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.642947681 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406960555 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.834225335 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.092892908 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943191361 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.359908415 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403651693 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383862809 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.111457641 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992311001 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.198439957 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877796068 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.045424155 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38270632 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662883138 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.387444191 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381577625 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683110905 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.386449582 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.382299528 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418632534 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.989639129 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178497756 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.391216126 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.483477686 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.326920839 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.609242098 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.096934569 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316506741 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3908489 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.56145703 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381681766 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512711439 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392098465 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.392331113 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393353265 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.122383005 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666757574 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.387468594 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.367268804 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.3788713 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.392903328 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396537804 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656904489 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389419781 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.059166433 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.734238229 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.638822159 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.388268371 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.371457242 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.387143396 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385189239 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.101411797 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.354591544 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.973463396 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963535162 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.392259639 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.401944971 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387788573 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.600805099 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596928428 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385157405 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39679479 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385959032 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406689886 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.279044903 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.151748156 seconds)
  done (took 1606.222108934 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.420563326 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.391551994 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.386651747 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.432110109 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.406587208 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.463834371 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.449693932 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.451559249 seconds)
  done (took 52.70320663 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.387250371 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.539250791 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.415702002 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.388487449 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.395945703 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.399600194 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.842061627 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.390367315 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.395275267 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.395100064 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.3922748 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.387016639 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.045875902 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.395689726 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.391913986 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.389093739 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.396016147 seconds)
  done (took 66.249937162 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.385496406 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.990638617 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.490496525 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.392022067 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.342774354 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.413645401 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.231419284 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.411456584 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.400813436 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.672407055 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.051485119 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.435669917 seconds)
  done (took 85.522196939 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.393726573 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.394623264 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.394737601 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.395061451 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.394005446 seconds)
  done (took 8.27564541 seconds)
done (took 2038.825347544 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.633132359 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.098348462 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.003238273 seconds)
  done (took 5.404791724 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.534991537 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.58275804 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.703243243 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.708805155 seconds)
  done (took 7.831838554 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.670021156 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.774617821 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.5733023 seconds)
  done (took 6.321544406 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.800149685 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.391092936 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.53256715 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.388087858 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.393481984 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.393845206 seconds)
  done (took 20.478522494 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.391052802 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.393635877 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.390903804 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.392819259 seconds)
  done (took 6.871517822 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.367948678 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.057232484 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.369787716 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.392529743 seconds)
  done (took 18.49102687 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.138745853 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.15224231 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.134182785 seconds)
  done (took 7.728728638 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.397203987 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.241878562 seconds)
  done (took 9.942671237 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.681903569 seconds)
  done (took 2.985658584 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.523696128 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.716295045 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.472370707 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.375521253 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.512406172 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.185354903 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.005662543 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.595392784 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.346973323 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.536324711 seconds)
  done (took 28.574722275 seconds)
done (took 128.291259244 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.191757681 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.628698787 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.594565834 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.201658191 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.610814336 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.595149822 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.809974655 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.172482166 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.670469241 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.663813713 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.163173967 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.61225671 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.54255364 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.629914582 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.542223107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.752578992 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.611106088 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.231024639 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.87894827 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.043519231 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.811081467 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.799393486 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.992753045 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.82282705 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.614352702 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.550401391 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.381680524 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.768793578 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.059363773 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.404096803 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.549544604 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.219352715 seconds)
  done (took 194.426823885 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.390364579 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.407529442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.406697018 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.389956426 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.415032196 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.390996854 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.4087262 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.408348408 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.418433791 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.394466529 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.390144015 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.39068369 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.390508274 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.407955048 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.410650101 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.407835636 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.393761813 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.40554823 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.39155718 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.400470522 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.391586774 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.390173447 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.4061216 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.390824913 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.392666629 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.392265764 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.391449595 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.423667005 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.403788026 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.392256897 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.391488932 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.392448324 seconds)
  done (took 206.086273523 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.39214095 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.393968344 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.402339454 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.39385507 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.392227637 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.410810241 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.391523669 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.392375838 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.410823291 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.396824605 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.409372169 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.4080017 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.393211934 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.393964014 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.402836032 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.393213425 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.392359849 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.393110724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.393666303 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.393992642 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.400868424 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.396302376 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.394798897 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.394176995 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.401185661 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.393994616 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.393248862 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.410025549 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.410601719 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.398789661 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.398656231 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.394165818 seconds)
  done (took 206.047901855 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.589304822 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.400764852 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.400122299 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.338587658 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.402206643 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.401070587 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.40049143 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.598909195 seconds)
  done (took 14.841491896 seconds)
done (took 622.706705645 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.642727359 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.355648557 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.595750453 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.422165411 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.174626352 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.441017696 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.421106571 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.589557697 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.313843971 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.592226844 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.618352711 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.436327529 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.756984796 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.420789019 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.670730667 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.52507527 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.293139673 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.408253586 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.731713754 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.960465166 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.677619895 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.844318698 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.606538225 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.318146213 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.78486926 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.844637293 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.091732311 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.281542664 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.440503652 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.735387386 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.969800306 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.342358838 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.481488751 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.47909322 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.534218303 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.514133247 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.310247531 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.476335597 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.617202561 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.608820315 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.967552107 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.14655183 seconds)
  done (took 93.755157252 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.38819348 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.388823722 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.386081484 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.386691229 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.3885818 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.386958515 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.387128977 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.386995822 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.387060441 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.387174997 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.386256819 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.387653855 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.387640289 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.388578554 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.387558918 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.387036965 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.387280507 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.390756944 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.387417218 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.387131774 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.388246743 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.387170634 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.388942912 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.388152743 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.389339425 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.388188847 seconds)
  done (took 37.394537095 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.406584834 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.652492228 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.814708269 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.41625975 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.405019898 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.409317232 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.482766297 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.409170561 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.409639378 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.408188079 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.557786583 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.408926714 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43950664 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.838924419 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.416271017 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.407513891 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.407602231 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.406992579 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.661350967 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.415896248 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.503771896 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.407921934 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.48401505 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.418705293 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.427429653 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.407564701 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.411488188 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.958441122 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.429042767 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.558001147 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.198567057 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.486254468 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.920251672 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.848977082 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.214909027 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.416479021 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.408138601 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.563710355 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.410325242 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.407257544 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.485407767 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.408131399 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.823970359 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.048480599 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.428340528 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.409252051 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.976660903 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.583701313 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.652195167 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.417766715 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.850984576 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.417598321 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.410684221 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.410045903 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.652072927 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.417202224 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.409601383 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.989174056 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.437572534 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.486267125 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.410932423 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.410004492 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.67012163 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.411652312 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.658693994 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.411926271 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.41719139 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.431155442 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.829542495 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.418471274 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.071256313 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.433533659 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.409870001 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.561396688 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.659347036 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.012890226 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.433867905 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.673514807 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.942060906 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.504657228 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.416404201 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.949343565 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.50822274 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.415843904 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.413335187 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.413409732 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.412426793 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.458450155 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.486790504 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.99334402 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.075344661 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.009168179 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.5095943 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.424765267 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.413512794 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.989356347 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.433365562 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.412302049 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.82631358 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.065955381 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.433475148 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.420566002 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.071465732 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.440592684 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.489995175 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.42011271 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.835656607 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.419889023 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.459619124 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.412932234 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.418875544 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.433424703 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.490152949 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.42124616 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.413303966 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.038942985 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.590852435 seconds)
  done (took 185.300880672 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.407516485 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.422668656 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.406761065 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.422573635 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.406223042 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.412336207 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.405974179 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.406760559 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.413412717 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.405622685 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.407968923 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.407079698 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.408457902 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.407950756 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.436205419 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.414581816 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.018892781 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.407476614 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.409001983 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.40675812 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.205504795 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.41346742 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.407497838 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.406423345 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.409396652 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.410681302 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.413712887 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.429468916 seconds)
  done (took 154.251220702 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.416590094 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.971990716 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.433994415 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.545483267 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.438325979 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.413788641 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.543044918 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.473188639 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.436027824 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.41464782 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.413808709 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.713794905 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.416872685 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.924903195 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.607440041 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.563342961 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.929382434 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.441158358 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.414833909 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.414611771 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.547335792 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.427185596 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.715855436 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.978345271 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.438134415 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.977986281 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.403336882 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.41668243 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.414727603 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.981237456 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.439468828 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.715851433 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.493135763 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.477237404 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.002600135 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.952281791 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.950529389 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.568777883 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.423478637 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.415601428 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.415153388 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.401253612 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.981860247 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.440312986 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.417408317 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.972985031 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.443793643 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.418334785 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.425217564 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.415548648 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.475171234 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.494025631 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.739829055 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.996761646 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.51829424 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.44606133 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.546465715 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.81235234 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.42361515 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.929910127 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.404034077 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.988613076 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.441982869 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.401515782 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.418047986 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.422304459 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.565990885 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.552587011 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.937381026 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.435584088 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.928032288 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.584276752 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.421797982 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.418019778 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.41962537 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.985269915 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.953626897 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.58405747 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.555216177 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.614137312 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.409385764 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.418629523 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.403822866 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.495578387 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.422196848 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.986249743 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.94932502 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.437723026 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.420878108 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.421201874 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.420689694 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.592980451 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.008756407 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.515267737 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.923996055 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.739515484 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.723556511 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.421900659 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.480648989 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.436603957 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.725194257 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.421882073 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.477347621 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.875485229 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.72704933 seconds)
  done (took 168.597127591 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.658420283 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.605024738 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.510806663 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.550367666 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.008292281 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.98130492 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.62429261 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.571262554 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.534311192 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.678498128 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.558173951 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.50858079 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.596769212 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.498226992 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.144715453 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.509833508 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.529042809 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.562776134 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.531630994 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.414403294 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.054984036 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.701408797 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.593926796 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.281492221 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.512154194 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.211553083 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.975060496 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.948219859 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.587296176 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.675298366 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.958562228 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.525860719 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.37235293 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.107939405 seconds)
  done (took 67.41150475 seconds)
done (took 708.021888471 seconds)
SAVING RESULT...
DONE!
