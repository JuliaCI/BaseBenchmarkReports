cset: moving following pidspec: 6834
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.344677584 seconds)
loading group "string"... done (took 0.571533573 seconds)
loading group "linalg"... done (took 7.397663058 seconds)
loading group "parallel"... done (took 0.172825469 seconds)
loading group "find"... done (took 1.149477485 seconds)
loading group "tuple"... done (took 1.812588301 seconds)
loading group "dates"... done (took 1.232845316 seconds)
loading group "micro"... done (took 0.228165759 seconds)
loading group "io"... done (took 1.151955626 seconds)
loading group "scalar"... done (took 39.397576648 seconds)
loading group "sparse"... done (took 12.722342218 seconds)
loading group "broadcast"... done (took 0.99320081 seconds)
loading group "union"... done (took 13.664440891 seconds)
loading group "simd"... done (took 4.575067665 seconds)
loading group "random"... done (took 9.424094945 seconds)
loading group "problem"... done (took 1.923111785 seconds)
loading group "array"... done (took 21.785831308 seconds)
loading group "misc"... done (took 2.020893827 seconds)
loading group "sort"... done (took 3.326490345 seconds)
loading group "collection"... done (took 19.025968969 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.555177962 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.152732854 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.144919757 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.143658945 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.184396178 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154270802 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.152616941 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.095207265 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.961235483 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.169663043 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.148371192 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.519793457 seconds)
done (took 5.128845928 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.23706465 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091205836 seconds)
    (2/2) benchmarking "String"...
    done (took 0.101849713 seconds)
  done (took 0.887973989 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.075058731 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.141132815 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09563544 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.076979747 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09541752 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076102241 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094226324 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076608722 seconds)
  done (took 1.355582264 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.083950437 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096209103 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.079453779 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095906485 seconds)
  done (took 1.056522816 seconds)
done (took 4.318351662 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.860438628 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.266582138 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.197645859 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.457474427 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19667585 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214973747 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.666287697 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.263806248 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.261903852 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100874475 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.132968574 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.39037424 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137202733 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.669514831 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088017992 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.120717422 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176397514 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.363124895 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079938766 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108576758 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.114478393 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.138488979 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.126087178 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090762849 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183925936 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.078571932 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.188514608 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106702463 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.077126441 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.266381308 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201196906 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684129995 seconds)
  done (took 10.747432331 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.107064793 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.129328287 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097363683 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136329389 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.131845411 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099505372 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083369854 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096239756 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12063889 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173895324 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.111205157 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135033878 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095849101 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081462673 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114617745 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.241474471 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.102309692 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.11577479 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099665168 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087612252 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136354233 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.11106702 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.091202234 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108280996 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165499539 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206992067 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.124020195 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126542404 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096675579 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093900833 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143728035 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157579649 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093554171 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079504208 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169881485 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122008592 seconds)
  done (took 5.100751224 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.115284949 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.182944926 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117831012 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165818863 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.078920725 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.137879151 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.091995152 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110710441 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.248643239 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.149822616 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.480804957 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.136752009 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096623096 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094973751 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080056673 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094236661 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.421519327 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156207506 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133134987 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098552223 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104386427 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100147925 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365325941 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079792152 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098282161 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080798306 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.080747284 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159667412 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081428326 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.188514777 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099558973 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.110142103 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101272825 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130624257 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194779473 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12490007 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.115208111 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096735461 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.076161836 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.190979056 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088312901 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.121490612 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101495323 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097724199 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13253335 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133893965 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.080307168 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096394058 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.194885889 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097170722 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.095231178 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097006966 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.894194269 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.178655914 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.119293878 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095990136 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.30054881 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097300147 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09618398 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080726821 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.256904505 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.189919831 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097620081 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094844053 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078281878 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097047579 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.376535246 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080017232 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.752434092 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081959654 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106567456 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081371104 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096413187 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102227082 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08673452 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115125473 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07898052 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097984403 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.076940307 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095343407 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079654474 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109174936 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.213400419 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097822567 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.078417704 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09472895 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.075753097 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115929932 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122826805 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082658644 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09472604 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112704226 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09826674 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096557311 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.114272647 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098199987 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107503938 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082820376 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142328396 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096423959 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.123844644 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093378369 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123054836 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098932045 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113868265 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110885437 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098381093 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.166978794 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076520528 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094341884 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08140306 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095501887 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079026593 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098597937 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.090223965 seconds)
  done (took 22.43562464 seconds)
done (took 40.098415428 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.315011483 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102467955 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103776607 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103307964 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084511043 seconds)
  done (took 1.478668395 seconds)
done (took 2.222786572 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.159818849 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113524258 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097158899 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.128536533 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076725306 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.134274883 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.13104488 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092852592 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.132271085 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093960623 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108500639 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095482033 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075158732 seconds)
  done (took 2.210522469 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093350894 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114177653 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081275091 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111649314 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074879177 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111555916 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091348003 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117860996 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110974365 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084093327 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094141014 seconds)
  done (took 1.824981541 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092137984 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112327094 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081478075 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109733243 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076002397 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110498352 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090641851 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116826752 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108921733 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08541776 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093671075 seconds)
  done (took 1.81601044 seconds)
done (took 6.590936967 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089945702 seconds)
  done (took 0.82409052 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.925056747 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.850946296 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.090752793 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.162141119 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.298720451 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.162418507 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.479022229 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.118222506 seconds)
  done (took 11.005848486 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.140376539 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.081444352 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102872297 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084427763 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104451657 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081027177 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102682034 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099165045 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08589536 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100476743 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.084669091 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099908019 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.081542605 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101390384 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100509218 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082802002 seconds)
  done (took 2.327648516 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.114671427 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114314843 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106978511 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108643601 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084808819 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106493092 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106468125 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08706062 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102730788 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102885561 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089002759 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106101996 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102968697 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078669818 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105989764 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107408569 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085167214 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106041399 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105640918 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089097174 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106875741 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.078140237 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.10448843 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107014342 seconds)
  done (took 3.255002774 seconds)
done (took 18.150515339 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156604512 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108674577 seconds)
  done (took 1.006543674 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.092744058 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11313209 seconds)
  done (took 0.950158537 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.094350476 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095600732 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121234887 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109338911 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079341999 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097545048 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11882661 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.078912296 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09806267 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078636962 seconds)
  done (took 1.719464033 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081059981 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109585288 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101402624 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093640383 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106050859 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095229133 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088174865 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099832263 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109921801 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076669993 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102758923 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113956494 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085141582 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116186307 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105361754 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081478287 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101885008 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099166406 seconds)
  done (took 2.518957832 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078494741 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096140229 seconds)
  done (took 0.923312799 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.078983457 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09322521 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079648326 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097780385 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093448336 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077023915 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094413751 seconds)
  done (took 1.360937443 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.4340457 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118421182 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.281387651 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084842748 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119919659 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.296918943 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098769573 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083755763 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103657428 seconds)
  done (took 2.430059261 seconds)
done (took 11.655382751 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092142188 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115732732 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110898523 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46244405 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107091188 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.09966306 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145373958 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.247047464 seconds)
done (took 2.131990384 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.138795814 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.56205531 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.413686354 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.226006878 seconds)
  done (took 1.955833088 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.401741073 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09826358 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084146263 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081240409 seconds)
  done (took 1.420905848 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079441629 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099520456 seconds)
  done (took 0.937810537 seconds)
done (took 5.2127276 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079981593 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099394216 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.112079602 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.09788845 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078683396 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097371387 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07693422 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.10000645 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.078365157 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.098255505 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.079503159 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097853089 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076003841 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096016777 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077965264 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09584622 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.075493107 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096110955 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09371227 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080374151 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093410821 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080584432 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093829763 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.0777662 seconds)
  done (took 2.929524902 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.097041239 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098250392 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101662174 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085385573 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102232143 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084882435 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103639659 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097525185 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085275701 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10030158 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082698824 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.10183339 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098877732 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083575698 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100291752 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.083284639 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.104805842 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097725635 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082017716 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101454684 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.083367761 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101069673 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101126943 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084171142 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.10282771 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100370171 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084401636 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098617801 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084157757 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.102225049 seconds)
  done (took 3.597847301 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083461482 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092826043 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077977532 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101903777 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077726006 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097594724 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077125781 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096365775 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078485701 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095691893 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078232767 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095921834 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077198875 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097180182 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078219389 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100239279 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.1125296 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078604862 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095423742 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078607722 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098782189 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077395368 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095640724 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077148672 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094942382 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076782597 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096327118 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077550944 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096853637 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077067936 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099082482 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080730736 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096674958 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084429659 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100303936 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076247824 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100593008 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076669971 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096992102 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076066085 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.095825259 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.075892572 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.095640705 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100361284 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078759025 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096742739 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078608834 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096810331 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078376711 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099286006 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077587996 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095931787 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07928081 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097372899 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081276493 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096275015 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.077720313 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.096089033 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.077828148 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.096563948 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.076169165 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.096641038 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.079087198 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.098084422 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11171228 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084661206 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095690422 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079766497 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097640786 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080002503 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098282517 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.091479239 seconds)
  done (took 7.153398955 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.13536997 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12476041 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079783828 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098816121 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075827733 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09669543 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080346262 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098122818 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097025377 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084092758 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096202931 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080075199 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100298903 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092213026 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098177254 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07806272 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102151648 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09462364 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07865435 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099947769 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078888042 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100429576 seconds)
  done (took 2.848278803 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20602263 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104361095 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143071665 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106472552 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08252312 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10614542 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101106763 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08489021 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103799413 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081533653 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101546162 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101649271 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082755048 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101330895 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082236579 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101591725 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101972807 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082893136 seconds)
  done (took 2.651221515 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092798832 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099475649 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.204731879 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09998468 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099081477 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082921703 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105276605 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106869207 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083974503 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099080114 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088934576 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103000169 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10005422 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081536426 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101377393 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080954442 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101523021 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080097678 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108024582 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104085744 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084629218 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109296454 seconds)
  done (took 2.998174277 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095698983 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10114112 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.11726431 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083951628 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095310738 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079497486 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105923135 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080072078 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106448188 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100383418 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081675672 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097454586 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085428953 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099695601 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.084744405 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101705163 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101832253 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081476754 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10108518 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076985016 seconds)
  done (took 2.653398955 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102475939 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101362903 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081005805 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110995434 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101436481 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081058566 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109991909 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10132294 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082324654 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125424812 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101434842 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082220726 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109197348 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105916589 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081346115 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109364834 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110385953 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108243781 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082082523 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100585049 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124796209 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082680602 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109320701 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10063119 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082916652 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100659365 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081633199 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106570505 seconds)
  done (took 3.561408212 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081471774 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098360844 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079754756 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096300538 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079520021 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096198497 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07900976 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09600538 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081153507 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096542819 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081724881 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098902074 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080818151 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099411064 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081392182 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099496337 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081025215 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097070759 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078787567 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097044529 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08150676 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098759991 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081417951 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097493013 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078501355 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100072831 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077890346 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097440392 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080175463 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097446945 seconds)
  done (took 3.450130635 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090994241 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106972064 seconds)
  done (took 0.982603512 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079268463 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11522144 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078018694 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104408758 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084439778 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102745204 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107661693 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084684659 seconds)
  done (took 1.538810374 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097728591 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111298305 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082327345 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113816928 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.11074284 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099040762 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172310859 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103714422 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087472212 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.100574017 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11381038 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081391764 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107346763 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081793822 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106247703 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086753082 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098793863 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105205529 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084430849 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098890452 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083431133 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112911246 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083345992 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098114569 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101267332 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091490801 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112853806 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.081496105 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105301186 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106981982 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087234199 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094320147 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082358031 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101339658 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.07990998 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110562474 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116637935 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084711309 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110960587 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082301868 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112224813 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095504723 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086700805 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107013958 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09060151 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101762524 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099991285 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077222367 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100419038 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084554548 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095584379 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081255013 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095974896 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089118178 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104850521 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110480414 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081403511 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10175524 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085611952 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104942597 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088760658 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103481624 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083745867 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101138787 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107400892 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087438975 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111573559 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077172625 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096410002 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079705235 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111825395 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124368134 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088639355 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102951332 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082479204 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099913657 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102967658 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084234226 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107421049 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.087878801 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.10204036 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106586909 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089903672 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101474731 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084437245 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108630837 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.07870263 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104050182 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098260823 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099710342 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100877716 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080004148 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.09980507 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11123292 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086897726 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100491348 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080608978 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108539266 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07580487 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102055492 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081922371 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103055244 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111470947 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086451986 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107311133 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110016468 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089910528 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101390982 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087143434 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098180502 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082884962 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.1014841 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.087924191 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095928936 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102685927 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083819147 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101763437 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090644357 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100073605 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.08166758 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110080546 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105949964 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080845273 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09771694 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085697021 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101659769 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085234377 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.109949643 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098584721 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077816898 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096037485 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086691994 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101608723 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085652737 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106923676 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103366036 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077490925 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099204898 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087374749 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111119838 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081992417 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102680284 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10666147 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083987164 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.10083107 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088477141 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.103724227 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081635903 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107587461 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.081759775 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097910158 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104688041 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085933181 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.100013281 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085775942 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105462083 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.083646598 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103337539 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099207724 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087780565 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103041115 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080870887 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101609138 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080506252 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113685054 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102322372 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078877752 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097538481 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090708758 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099327937 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081783671 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101471513 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084462784 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103932468 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097970975 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083333077 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103453082 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093904934 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106630129 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101046079 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087926504 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113276468 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08178362 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104338801 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081215938 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103929812 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101074395 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092474718 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107641823 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087591851 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105268726 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077885235 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108707975 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109648283 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081437316 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099101219 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081669881 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105756339 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.086823702 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106103127 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102665629 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081039517 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102508871 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084892314 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106040884 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081035727 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.1013874 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105151316 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082197298 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108545121 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083734196 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113738809 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104387359 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078239811 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105078067 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080469156 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108405401 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076763357 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100830333 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.080819434 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103320132 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099096878 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086685362 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09607147 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090210331 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109955578 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083149353 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.101763666 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08266553 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110151516 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102598863 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08823126 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105260809 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088485071 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112850549 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081433539 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107081527 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112474439 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.083504028 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096321564 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087781244 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101905499 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081093536 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102447402 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080491518 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106892223 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111047944 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089386669 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097582851 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08495106 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102177221 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081272347 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099652038 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106555813 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086048149 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103824041 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088643675 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105852606 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.082674856 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107742214 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101800264 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084500475 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103620706 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085032685 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103592352 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084527197 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102938113 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.104066485 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083608984 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.100030302 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085515772 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102840193 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082701132 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108735629 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081690534 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103788796 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084483386 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104551435 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10226376 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084281006 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102090527 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087029614 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102944684 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082533133 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105567483 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.076909961 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110839321 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101033436 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092079662 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102756528 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079999221 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107856695 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084702062 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109044305 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103021764 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084246735 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.10362403 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082921955 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106120925 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088115787 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100783685 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112902534 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091147603 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103704652 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085457725 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103810695 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083462817 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103099848 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083205397 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104834022 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102626612 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08330107 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106944905 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085161682 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104378048 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084167223 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104289881 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082809409 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105783144 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097501997 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083876135 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102013547 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083964274 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113826035 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083406998 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103368946 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100951984 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085601642 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10224368 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079802741 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111360932 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111458818 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084784688 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110764221 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081794924 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105157926 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092923938 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09829718 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.0995066 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08209215 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099812388 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092439665 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10456734 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092578505 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103540088 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082349079 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100842779 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.082869753 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103973993 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096439437 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09005495 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105918015 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08267824 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10198092 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082916245 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108201105 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084128439 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114087677 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101481912 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084463176 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10315984 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080379652 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.10225493 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082377805 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106713137 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083240994 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102166682 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079380329 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104512869 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103056198 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085493322 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102314922 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085891596 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11282422 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082287224 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106338056 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106214467 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079476364 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105697685 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083695274 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102927444 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082264464 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108821693 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086074746 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106214543 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111391148 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084215404 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103680988 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083785718 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101348127 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082340369 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10405452 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.081690877 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103944144 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103338648 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092583626 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.1008042 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085894375 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103836813 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083498479 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111442037 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104006435 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086952805 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110974784 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.082757528 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10621908 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090229623 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10807713 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106616752 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085104139 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105514857 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089160573 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103752255 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108359861 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084709825 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104037125 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086017013 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101568225 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083230633 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10370254 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0819571 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.111264268 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083551294 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103404674 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102047692 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082488625 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103790852 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087232553 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111217288 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084871807 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107373218 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078131589 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.102188399 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104072668 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081990821 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105195299 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.087645453 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109557532 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085470342 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104889342 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.080943374 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11401153 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10950788 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.086789916 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102041763 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086455696 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105398984 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08551311 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106164283 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103243759 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086310363 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107792417 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085169788 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.104032877 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09029543 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107663461 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103817599 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086169404 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10466765 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084157638 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098890112 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085003986 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106932886 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08795773 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107360239 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102853899 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09537894 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101982039 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084253573 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108244976 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083178521 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109638604 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098475112 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08720561 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104994752 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0853789 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099484901 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083490101 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102308006 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08660285 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104333964 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078613316 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116481545 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113378144 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087189643 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103607314 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083109458 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099968893 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078162541 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104654604 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084075143 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107097884 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11482275 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083642682 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103805331 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079408891 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104288112 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086016785 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108346025 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080303072 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101322993 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.101922532 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088225 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109452972 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082768425 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104398747 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087566335 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108026746 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081713791 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108194594 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099825142 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087845707 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117777065 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083870609 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105902287 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109349823 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09277629 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105150832 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079612372 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105366063 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086618697 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105738939 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103492931 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086064103 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121160802 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087066742 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104527815 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082493001 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108023573 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.10233878 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093422079 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10521593 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084736924 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109693569 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084873902 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113704602 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106702771 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092615911 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10852865 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107122648 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08399822 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103402575 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083275957 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.103241266 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.086099955 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105424657 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088312447 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113313936 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.103632725 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095829435 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114650747 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085511396 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.102782207 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082541524 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.105081127 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099380635 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08668947 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10195218 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082678616 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102928714 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083310433 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105547323 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089860706 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106584774 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.083764545 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105563256 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097264593 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087616904 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.106263617 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085793196 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101212557 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.0843489 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105274448 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08736342 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108545132 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.080417329 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107221631 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.10591202 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086081051 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099678358 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091515445 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103677959 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086546186 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105212425 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084045809 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106215702 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106899747 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090783492 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106024919 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08606782 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114655749 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105706233 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.0825833 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101769349 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089953707 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103262519 seconds)
  done (took 58.225521122 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14691193 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081481592 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100136785 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080005454 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112829799 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100597836 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080469697 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100438888 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081897237 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103690348 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080048688 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101526623 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109004585 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104289738 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1133227 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105896587 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079397601 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103028825 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079140615 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102512307 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109820682 seconds)
  done (took 2.908887124 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104402989 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121771279 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116765067 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11925846 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089579412 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117768235 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114859928 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114836382 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099026209 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112214866 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11917332 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114900797 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092134443 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112405632 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11135022 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093629194 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118910778 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110528533 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.094707205 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1168628 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113787033 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116577697 seconds)
  done (took 3.257055641 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08630296 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104048468 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086291044 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.10034002 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084502542 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.100019928 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088074622 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103314206 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087267147 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.105095005 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083020969 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.104954611 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085431031 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.101817335 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104261824 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083326799 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152999064 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109679527 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084105485 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107576885 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078957415 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10962884 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099850863 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.0824893 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103558129 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089643912 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105673218 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082936095 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105850009 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083359342 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.106378104 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081386445 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107627609 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.085305455 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.105691131 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.083018993 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106831826 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103779728 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081492255 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102706463 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087011406 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100995913 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085600317 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106942544 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082821576 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103651767 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086165564 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106456781 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.079164114 seconds)
  done (took 5.538603438 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103413988 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161597066 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086976595 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.146214053 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12133353 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113575394 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089689317 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143154825 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10515104 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085979155 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124104668 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121475285 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104994896 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090631166 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109242377 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084680518 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.108069835 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103461842 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.08987054 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105284774 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10924166 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092432972 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120615699 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119629928 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088944922 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105930313 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105013853 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.089743316 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119711937 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109842069 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089891102 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112147956 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121843935 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109779206 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086288005 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109198775 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122528179 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087038898 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.109173817 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.082542237 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.109003976 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110138468 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093434905 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123589093 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106044809 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.09093517 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106531175 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.081096156 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119685825 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.108154417 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113401934 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100361318 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110949485 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105312252 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090531521 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12168065 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105591982 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08402749 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109651454 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117376822 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.083389548 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110369253 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11951874 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087897091 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113699973 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120333925 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.090086354 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110313927 seconds)
  done (took 8.223290608 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095414343 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113099709 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120605337 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122084288 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091752122 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113013892 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112166509 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091032943 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113789388 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118037665 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112291921 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134878776 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087979848 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116345283 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111606298 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092475667 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113067611 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11290845 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091534986 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113291276 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112395633 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121924807 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092409485 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121463706 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14346512 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107094743 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092025472 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114241026 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120761904 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.090457092 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125791471 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113138536 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111607629 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121371958 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.103265571 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.11474188 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105789949 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090916227 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.113759166 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112777048 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.087031378 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12174839 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113406305 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086345949 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114536793 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112750399 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121320445 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125629731 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095099901 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117901337 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112962691 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121302304 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091247559 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11395097 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121988524 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148107865 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121225814 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120383841 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092628147 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121731826 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121431645 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12851778 seconds)
  done (took 7.76088325 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107166952 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11659445 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118705061 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.0802468 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107099696 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11069893 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083676735 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.105059633 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093965582 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.116604353 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117830997 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109812641 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092887575 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118353231 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110711757 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112574548 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089663438 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111153984 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114931232 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088814477 seconds)
  done (took 2.952213158 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095150782 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125867631 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085649016 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11457205 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.1096349 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092218422 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.110576718 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088205972 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11000191 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109192975 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096049032 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118241789 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107945032 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09137839 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118317654 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114068877 seconds)
  done (took 2.536682549 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097187943 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119472585 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122543392 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085478217 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.107274221 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081837065 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10933564 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.103190134 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08331015 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122807042 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085675165 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111675991 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.1063042 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085872536 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103916147 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088877757 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103937595 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083408966 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.108368665 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120659577 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097088038 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106461629 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085790183 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109940546 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107498246 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092232074 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108390312 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.082998625 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.106726632 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107906768 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087254493 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115145543 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082566134 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107552496 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.105158883 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08479923 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10760319 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086735049 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.11028816 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085392488 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.107083536 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106956795 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087342045 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.109120259 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082621858 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108161755 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081675621 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.114595237 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104301973 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087790574 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107019172 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087990302 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.109559511 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11645501 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090525341 seconds)
  done (took 6.358846079 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100401841 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111297668 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081634183 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106238445 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089081765 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110275294 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089260501 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109868009 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109381026 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08525034 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109214526 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08880014 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110181608 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089022278 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110546258 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110724103 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082716605 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109370716 seconds)
  done (took 2.657351305 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094268278 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108290514 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09402725 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108778334 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085934042 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111645039 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082106547 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10783341 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084126354 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10578373 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104916518 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087253269 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106067276 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08903121 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107183422 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086194271 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.111254728 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084183953 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.108229775 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080859097 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111744293 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105547585 seconds)
  done (took 3.018689944 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.114403041 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123068147 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092169122 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.224071785 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.097633715 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.125777583 seconds)
  done (took 1.628510491 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11176216 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12248992 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107412747 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108648921 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116041738 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086787388 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110418618 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108446105 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117562833 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102183326 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109993428 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118918016 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118768247 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097669587 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112983393 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115876883 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088784203 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109844211 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108509547 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127670476 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087998178 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119468831 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110301653 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088544046 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110477078 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118220618 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097156384 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12426825 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111024603 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118801098 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094212983 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111532626 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11964396 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124601979 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09061705 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119323827 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110229276 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130030391 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095435823 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118570386 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110796557 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094571167 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115556485 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110915746 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115186426 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084574876 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110341405 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103618902 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084646357 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1308737 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111217971 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113250213 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109492793 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093668806 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115172836 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135304698 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12368371 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118519989 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093741844 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123888972 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119240032 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11678355 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119981993 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12422613 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095692928 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122599098 seconds)
  done (took 8.151136361 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103094284 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130132482 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110566944 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101974415 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119980021 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110904439 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110026848 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089561389 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111165813 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087249 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15302308 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111597307 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11598788 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117566794 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088597314 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106689053 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106702662 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112144889 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085577198 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129591014 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105221005 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113286575 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093081797 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114578391 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118360349 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111027496 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084318624 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106071697 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104309222 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083852376 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110472593 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105647777 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112669921 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084994162 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114518154 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110494337 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089555051 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115654829 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110329647 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094824553 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115588042 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127674762 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109278081 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086808278 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119300234 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108639295 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087117731 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106219109 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105565572 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084990077 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121852101 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124322051 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125337358 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11868057 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089554693 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111914169 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110759943 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089631065 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11181271 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115868992 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097609075 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111944757 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136148903 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111117177 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089142442 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12027149 seconds)
  done (took 7.981946682 seconds)
done (took 156.320139385 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210900592 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.178456739 seconds)
  done (took 1.24406719 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.090010382 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13955183 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097642406 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169194624 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.082158986 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.135412313 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.132470905 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.094419043 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.103266789 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.083475837 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.104213417 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08381884 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.166230659 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.082522554 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.104209926 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.083376383 seconds)
  done (took 2.610445328 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.115837663 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.245053322 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.120854289 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.080405113 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.108846731 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.105613944 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.082188514 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.107432475 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.08720596 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.102023728 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.085433798 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.104379375 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.080977013 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.104870209 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.086168257 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106916082 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.081097759 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.107349243 seconds)
  done (took 2.774300931 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114848841 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152489332 seconds)
  done (took 1.128091611 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.242576482 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.158270345 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.223465517 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.462462842 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.270577258 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.350428497 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.197553943 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.209152197 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158022875 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.191781433 seconds)
  done (took 3.322154778 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121921975 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183828754 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320847414 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.159191117 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107570603 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.123438111 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157069103 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131380774 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.117945208 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.096619472 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.119574766 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11707509 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136072665 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.090431636 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112255791 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.112659047 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.117035377 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.111657197 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.089811364 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.113002026 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.134612118 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.083096791 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11616469 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116364864 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098802925 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119290837 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104890012 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.083880713 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.112144165 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.091036193 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.110174743 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123848076 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098273771 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174456534 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102920428 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176575889 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098655055 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11589894 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116744649 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094419182 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119679992 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118409269 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105080085 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118250029 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086535787 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119274912 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104956284 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.083123036 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.110316203 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.093944653 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112197924 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109175941 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.146080559 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11315504 seconds)
  done (took 7.320253007 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.777707388 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.150322883 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08734087 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.85567337 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107602102 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1239584 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.750707565 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109173878 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.244840192 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.732676971 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126100306 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093849284 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.216617967 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.22581668 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.91367107 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.297463235 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.621380413 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.120013678 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.143629886 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.146817397 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093464159 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131771652 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.125640355 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.423749215 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.109705371 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088848939 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113280393 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.091978144 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173514606 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098905566 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11131959 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167130371 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.259710032 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.173871597 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111327267 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084357796 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108054142 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.160590853 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.254316257 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.204278674 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.173718837 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083238088 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112496208 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116555358 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106241329 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105236159 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15654198 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.164831248 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.185676109 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08941902 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116291885 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114994568 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.094641855 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178825439 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095493493 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307561113 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.304426539 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107736496 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095132481 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123296826 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.248873916 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095905502 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.215548433 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134478774 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.202122376 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.086034511 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.767582234 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160932067 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108253247 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.090801955 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.115535742 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11260922 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.094324815 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160176622 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.398938517 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118296421 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.110666092 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085353996 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221097656 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.118233192 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087355424 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.153736858 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111760385 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116231633 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098283605 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118053308 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.161594544 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.242705264 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.096315075 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115891982 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.110761364 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.099032604 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.112351822 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.206225026 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.208852423 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.154709199 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.222458952 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096630031 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.175756233 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162111148 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09306739 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18543832 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093181082 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119661381 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117536216 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.205475887 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.138037461 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.096202376 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112365023 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11348374 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.141909204 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100792802 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11580035 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.161579331 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.471108097 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.160085794 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.1044716 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101372646 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116097347 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.154381028 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113881949 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.247877943 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097153958 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.181411629 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094016707 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.105348833 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.094022933 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.177780967 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094406214 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117888374 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118036356 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092198878 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.248956221 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.182427216 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117897089 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234873495 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.17823579 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.090743549 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.185468347 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.095386335 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.179868178 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095174594 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119786062 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110365316 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.737393341 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119855589 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11573567 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089319567 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181245603 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108202455 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096881366 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.119956143 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105099711 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753688045 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122958255 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.117363478 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.118934823 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092240531 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116590853 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112507438 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091667531 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.152151203 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219797174 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11665166 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114602651 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.097532141 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.176226078 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.090459054 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.120854046 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.120197309 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.098589707 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117692899 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11072705 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.097004918 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.184507332 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.160078738 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.208890783 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.565873683 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.108523689 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.118284594 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.196078663 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108465818 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.275071689 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113745355 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.191992132 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.176947108 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.094667859 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.301555877 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.157055167 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.180529392 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.121872523 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.164333409 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106281389 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112717639 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.157293081 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085134889 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114016297 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.154456813 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121304951 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.118318921 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.922392739 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087217672 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.217442105 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.107099293 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.163005742 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112576676 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093214394 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.276845691 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108533646 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121504333 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158917902 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091412185 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.120297509 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.853614857 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.098311115 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118528384 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114365104 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20978236 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.157225435 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114922147 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093677675 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115474937 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.154118886 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.203410398 seconds)
  done (took 42.456185498 seconds)
done (took 61.71696786 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279846528 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210264885 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259710373 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.165629402 seconds)
  done (took 1.881153741 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172571333 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.143984192 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.11761518 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10505226 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.145955042 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.082124013 seconds)
  done (took 1.655038808 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.364301339 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266817345 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237267808 seconds)
  done (took 1.758270641 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.284675747 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236839374 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.463666669 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.314987539 seconds)
  done (took 2.315548609 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.200562781 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.128455234 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.107200569 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.100016344 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.190541043 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.235349901 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.136408072 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.192384721 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.09490954 seconds)
  done (took 2.31768501 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.18871272 seconds)
done (took 11.010130726 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.126198765 seconds)
    (2/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.150242415 seconds)
    (3/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.275408011 seconds)
    (4/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.118766741 seconds)
    (5/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.221574914 seconds)
    (6/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.116999506 seconds)
    (7/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.242205228 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.176163879 seconds)
    (9/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.242475089 seconds)
    (10/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.143831799 seconds)
    (11/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.126835243 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.097851113 seconds)
    (13/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.121989642 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.117503098 seconds)
    (15/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.106284595 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112719923 seconds)
    (17/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.09042654 seconds)
    (18/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.097281539 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.216145616 seconds)
    (20/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.091967287 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.152008571 seconds)
    (22/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.117080392 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.220597832 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098721679 seconds)
    (25/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.123704538 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.149026532 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.099978759 seconds)
    (28/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.1176422 seconds)
    (29/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.166319508 seconds)
    (30/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.096254987 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.133381842 seconds)
    (32/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.13119538 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.112611504 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145050462 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.176563656 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.173198709 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.108157527 seconds)
    (38/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.234445498 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.134841884 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.133958018 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.104397899 seconds)
    (42/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.098536316 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10951173 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.156308088 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.136210101 seconds)
    (46/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.179281463 seconds)
    (47/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151774035 seconds)
    (48/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.17377706 seconds)
    (49/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06354865 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.143215289 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.17391367 seconds)
    (52/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.196226205 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.088939354 seconds)
    (54/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.173269999 seconds)
    (55/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.114270891 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091059132 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.178641574 seconds)
    (58/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115782625 seconds)
    (59/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089560925 seconds)
    (60/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.11768532 seconds)
    (61/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.176341475 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.085968459 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.206342201 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.161702539 seconds)
    (65/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.088009163 seconds)
    (66/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.098330554 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.113583047 seconds)
    (68/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107506316 seconds)
    (69/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.118492888 seconds)
    (70/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.254255347 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.108866047 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.128581136 seconds)
    (73/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.094588271 seconds)
    (74/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.172352851 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.126848446 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.207415184 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.10331603 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.093929663 seconds)
    (79/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.21804034 seconds)
    (80/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.193759751 seconds)
    (81/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06658533 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.083198814 seconds)
    (83/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.135638725 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.180331337 seconds)
    (85/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.089637405 seconds)
    (86/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.17700988 seconds)
    (87/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.151421854 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094202228 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.104578155 seconds)
    (90/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.150176259 seconds)
    (91/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.191917704 seconds)
    (92/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.186535379 seconds)
    (93/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123194682 seconds)
    (94/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.15801366 seconds)
    (95/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.088428201 seconds)
    (96/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.200092069 seconds)
    (97/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.112374646 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.104801094 seconds)
    (99/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066545946 seconds)
    (100/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.118292117 seconds)
    (101/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.157274002 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.133564799 seconds)
    (103/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.090923203 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.131385827 seconds)
    (105/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.209350589 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.105414537 seconds)
    (107/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.095044635 seconds)
    (108/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.086566666 seconds)
    (109/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.088684774 seconds)
    (110/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.105485064 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.123923629 seconds)
    (112/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13302352 seconds)
    (113/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.064102026 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.131002744 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.115200874 seconds)
    (116/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.083911171 seconds)
    (117/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.18549245 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.162056337 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.188038122 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.2129847 seconds)
    (121/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.087579802 seconds)
    (122/309) benchmarking ("sort", Float32, false)...
    done (took 0.146656977 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.107874056 seconds)
    (124/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.08768528 seconds)
    (125/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.116888206 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.337700703 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.175910379 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.093240907 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.116875895 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.091762311 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.087152024 seconds)
    (132/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.149361387 seconds)
    (133/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.086990246 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.089038229 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.113240367 seconds)
    (136/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.076656451 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.128719486 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.209738521 seconds)
    (139/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.076027177 seconds)
    (140/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.143014342 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.083697536 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.105625978 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.091125467 seconds)
    (144/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.145345233 seconds)
    (145/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.09067027 seconds)
    (146/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.207096084 seconds)
    (147/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.108301527 seconds)
    (148/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.154095742 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.106438505 seconds)
    (150/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.12239627 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.114348812 seconds)
    (152/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.115770129 seconds)
    (153/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.093109516 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.064687391 seconds)
    (155/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.115825871 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.217794612 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.105206652 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.10767087 seconds)
    (159/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133156544 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.108607463 seconds)
    (161/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.11795745 seconds)
    (162/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.121914272 seconds)
    (163/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.090564555 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.134844871 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.114481693 seconds)
    (166/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066831843 seconds)
    (167/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.201154463 seconds)
    (168/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.18542314 seconds)
    (169/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.130225078 seconds)
    (170/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115208181 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.138442416 seconds)
    (172/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.085228445 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.13155329 seconds)
    (174/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.065404548 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.064451402 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.152913539 seconds)
    (177/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.090269933 seconds)
    (178/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.151995968 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107780662 seconds)
    (180/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.209874513 seconds)
    (181/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.074811293 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.113881711 seconds)
    (183/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.08256732 seconds)
    (184/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.063869072 seconds)
    (185/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117809478 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.215519384 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066684668 seconds)
    (188/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110198533 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.091821195 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.108153945 seconds)
    (191/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.064294441 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.106654845 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.105884615 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.128272814 seconds)
    (195/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.105227859 seconds)
    (196/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.07089613 seconds)
    (197/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.074602752 seconds)
    (198/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.10978138 seconds)
    (199/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.083402066 seconds)
    (200/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117608022 seconds)
    (201/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.12852155 seconds)
    (202/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065961259 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.082424957 seconds)
    (204/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107587792 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.081070664 seconds)
    (206/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.142050352 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.188894 seconds)
    (208/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.086497725 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.108250337 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065079269 seconds)
    (211/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.108024765 seconds)
    (212/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.065548401 seconds)
    (213/309) benchmarking ("sort", Int8, false)...
    done (took 0.182266658 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.129808924 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.092080743 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.115277869 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.130799106 seconds)
    (218/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.081369849 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.104858526 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067153581 seconds)
    (221/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.118623107 seconds)
    (222/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.089519325 seconds)
    (223/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.134649008 seconds)
    (224/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090267206 seconds)
    (225/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.082658504 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107161535 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065945201 seconds)
    (228/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.132175418 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.088162105 seconds)
    (230/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.089517131 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.082602784 seconds)
    (232/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.108401894 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088960881 seconds)
    (234/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.11345524 seconds)
    (235/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067565106 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.184218289 seconds)
    (237/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.065166722 seconds)
    (238/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.131659416 seconds)
    (239/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.064891999 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.090161959 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.091380233 seconds)
    (242/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.109101361 seconds)
    (243/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065145782 seconds)
    (244/309) benchmarking ("sort", Float64, false)...
    done (took 0.16783158 seconds)
    (245/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065267886 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.108110218 seconds)
    (247/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.065075272 seconds)
    (248/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.064653152 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.130697691 seconds)
    (250/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.081321303 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108013043 seconds)
    (252/309) benchmarking ("sort", BigInt, false)...
    done (took 0.213293077 seconds)
    (253/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.122186094 seconds)
    (254/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066910198 seconds)
    (255/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123216816 seconds)
    (256/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.085937667 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107734164 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065565954 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112403613 seconds)
    (260/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066092493 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.090580124 seconds)
    (262/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.167472976 seconds)
    (263/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.099074193 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.107976337 seconds)
    (265/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.088277807 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.16298726 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.121543145 seconds)
    (268/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.112980194 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.145254013 seconds)
    (270/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110250626 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.090101766 seconds)
    (272/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.17688913 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.128044336 seconds)
    (274/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066647427 seconds)
    (275/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.089690276 seconds)
    (276/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.089942748 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.172584917 seconds)
    (278/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.147276447 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108145335 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.09043922 seconds)
    (281/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.108963114 seconds)
    (282/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.090660528 seconds)
    (283/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.101366945 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.083291041 seconds)
    (285/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.114389234 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.081734968 seconds)
    (287/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.088348936 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085287031 seconds)
    (289/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.064399556 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10801487 seconds)
    (291/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.065692013 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.116559872 seconds)
    (293/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.083393168 seconds)
    (294/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.110896546 seconds)
    (295/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.0883651 seconds)
    (296/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.089733801 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.089524906 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.107137823 seconds)
    (299/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.065237575 seconds)
    (300/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.113214972 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.066967423 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.15270251 seconds)
    (303/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.06755286 seconds)
    (304/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.107075401 seconds)
    (305/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.086599818 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.113400763 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.206503227 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066418847 seconds)
    (309/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065833165 seconds)
  done (took 38.640579551 seconds)
done (took 39.5294025 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100198764 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.131200703 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.092718242 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.131597247 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.118593028 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.089892643 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.114786309 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.094844142 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.120625462 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.119258347 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.096062717 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.067586829 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.117179025 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.116567178 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.093823477 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.130810964 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11840725 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.0919944 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.115272011 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08340991 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.115472083 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.084177917 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.109555376 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068628428 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.117561334 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.091074267 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.113305811 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.092734509 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.107682764 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.083074629 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.111246556 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.090282544 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.107418968 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.118568747 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092264836 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.114494772 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.093760563 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.117743842 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.085257586 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.108053067 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.091315231 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.107690603 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.089924346 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.115977422 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.089120892 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.113841079 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.113732708 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.09719319 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.131475702 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084971695 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.116776194 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.094724675 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.120987769 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.115738882 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089215426 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.116698259 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.08968172 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.131989332 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.09101669 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.110643091 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.090170882 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.115842291 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.112665789 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09435705 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.115174059 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.093592462 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119475976 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.088827197 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.117758044 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.088831489 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.108620865 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.114924614 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.088631757 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.107125369 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09487478 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.117419505 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.083598507 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.112698613 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.091644162 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.113266185 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.083244197 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10957563 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.086551446 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.114275459 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085601618 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.09240813 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.08839303 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.113397123 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.083811982 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.115832002 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.089551754 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.114255586 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.085038904 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.1197083 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.082284656 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.11453423 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.083606012 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.109083174 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.084501534 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112012013 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.08282994 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11082386 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.11521323 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08700478 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.112221224 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.096541274 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.106850717 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.090426315 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.106704342 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.084403944 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.121526256 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.092938428 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.109101954 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085920205 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.107848464 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.090693799 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108326436 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.083180856 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.108868505 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.083412461 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114372143 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.106722358 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087937857 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.11347129 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.098618359 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.107121327 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.087846509 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109184009 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.084645096 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.11341259 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.08446512 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.108330103 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.086481913 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.098930849 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086659602 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.107547296 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09205655 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109485242 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.092026964 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110003318 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.092467492 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.113544257 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.08927512 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114202495 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.082950958 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.097291557 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086919264 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109804462 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.085480937 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.108038491 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.086391378 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.109032988 seconds)
done (took 16.426480041 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087182884 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.178816883 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.145596202 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.137629561 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.103979812 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.109422405 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116818122 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.115889975 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.110505229 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.137885782 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.106676598 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.128661954 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.142062104 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.084342385 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.108164304 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.089219295 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.110499142 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.099185601 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.141885741 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128924449 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.158253394 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.083535144 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.142115926 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.131317303 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092422644 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.135804063 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.108152288 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.089827732 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.111134316 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099750723 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.129587689 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.087071504 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.109967432 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128611936 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.102072223 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.116246797 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.085048461 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115569558 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.084238108 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.109111601 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.135932657 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105531341 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.114653364 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.111952621 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090097865 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.109467611 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.087340787 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.116685106 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095428886 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113173777 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.097714962 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.149325059 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.113050343 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.116730849 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.084552245 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118573211 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.092409121 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.112440899 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.088100984 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.112531641 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.083542545 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.113191455 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.121251117 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.13460812 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091297074 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.117185016 seconds)
  done (took 8.372280313 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105321043 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135687745 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.101241887 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.127130336 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108126927 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.085885383 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108448236 seconds)
  done (took 1.724209838 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091313844 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129528543 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107184334 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.132359513 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.126614747 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.121660237 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120071875 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085152552 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.127401172 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.086245579 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13107277 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148055041 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.087143727 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.117465438 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13233005 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08613914 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.133226857 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.085064589 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113755404 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108171446 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113200135 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.129605071 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.087716782 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.110814935 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09928568 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.110786478 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.157165956 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091387036 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111987142 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.088804325 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.108251741 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.15918263 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.098742743 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.121060056 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084907729 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125099651 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.122953604 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084617492 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125751128 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.091070909 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.123843454 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.085869424 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.112093257 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.084261178 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.115525897 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.095194538 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.112593846 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.109254517 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090775504 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.128248182 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088263895 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.123388512 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.086443825 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.114771508 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.086954634 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116366375 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.094258186 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.111799847 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.127705231 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088702168 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.127033689 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.101982169 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.125082527 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.125570427 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090707896 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.124666514 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.099233673 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.113104846 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088012322 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.114825299 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.102283208 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.109124206 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.086744903 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.121509346 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110571398 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.108968388 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.132519117 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086567127 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.121074223 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.084739866 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.111237442 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085606144 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.133506792 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113614529 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.086624455 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115451539 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090247874 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.108253331 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.085098529 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.113556343 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.08376329 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.111904165 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.088490199 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11163624 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088116987 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.127406482 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.086170819 seconds)
  done (took 11.460632884 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09073398 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.110270271 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.089378173 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.110998665 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.087094813 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.111317903 seconds)
  done (took 1.56804358 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115098485 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114153929 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.100564124 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117209939 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.150900168 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.100295452 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.126541789 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119262807 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.103445398 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.124953535 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.123464303 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.100712294 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.1313405 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.116325144 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.101027733 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117034559 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.100423479 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.121103826 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.122148434 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093955892 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.131443693 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.11552898 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.094412664 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.127454186 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.089245072 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.118563129 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12075651 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.098995219 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.123807148 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.116995657 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.094471161 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.113710788 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.093692901 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.119220881 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.124286122 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.093344643 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117499791 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.089732289 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122864807 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.112903985 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10153345 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11824637 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.121045159 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093448552 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.118696271 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.091496608 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.115852358 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.120622591 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.101045855 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.11612869 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.089937832 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.117956355 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.113029837 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092162667 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.117091204 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093577024 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.116652449 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.125041983 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.093846508 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.117080164 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.089266449 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.115142973 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.118751701 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.090090657 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.12502316 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.11401858 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095006387 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117997756 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093428752 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117763795 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.089432026 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.114823221 seconds)
  done (took 8.93851928 seconds)
done (took 33.010683906 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687216079 seconds)
  done (took 1.647599755 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.699593869 seconds)
  done (took 1.661249296 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.59774414 seconds)
  done (took 18.558944069 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.489538637 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.574226106 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.790885243 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.176487254 seconds)
  done (took 2.997386956 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.947240191 seconds)
  done (took 1.926470557 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.241324808 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225561089 seconds)
  done (took 1.434960396 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.770401338 seconds)
  done (took 1.743242937 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.34105061 seconds)
  done (took 2.308739776 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.321564856 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180668758 seconds)
  done (took 1.483609476 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.54110766 seconds)
  done (took 1.520042427 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.630425525 seconds)
  done (took 7.610036941 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.255022891 seconds)
  done (took 1.248324581 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299227951 seconds)
  done (took 1.281633406 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.538892022 seconds)
  done (took 4.523022011 seconds)
done (took 50.91770195 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102314757 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.123496786 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.099492038 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.120791156 seconds)
  done (took 1.423984349 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.103706116 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116835008 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.097260139 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118046152 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.09636071 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118672989 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119597746 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.097048134 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116919467 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.092756246 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118061249 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.090648559 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.120967528 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117733667 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.090391437 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.120040838 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.095733397 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117761156 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.118680762 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.094079049 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.114385467 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.094861225 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12090321 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.090706098 seconds)
  done (took 3.567884233 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099768137 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.114315047 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.093440586 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.113549705 seconds)
  done (took 1.408522506 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.098230906 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.136378158 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.132811022 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.09821369 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.138633595 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.130404534 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.090496385 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113441546 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.092213808 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.120603294 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.088007333 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.142963371 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132736351 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.09675934 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.123437544 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.085007637 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115085141 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131808104 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098214326 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.122083475 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.090488571 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.121415232 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.087693149 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.135046222 seconds)
  done (took 3.704789814 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.155160642 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.147460384 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.134515722 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.0924671 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.151517592 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.135820098 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08817035 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.137028976 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.084698055 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.127337445 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.11459391 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.129610894 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.124652652 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.084102411 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.111763172 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.084083395 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.125141761 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124434681 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.088515134 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.140424799 seconds)
  done (took 3.368460949 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097862426 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.113377616 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086380741 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.112268517 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.097294555 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.116336515 seconds)
  done (took 1.612423932 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.08932387 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.110294542 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.08904148 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.109963144 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.092438184 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.111497198 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087386271 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.110032737 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.087323193 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.111332199 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.0878268 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.109951915 seconds)
  done (took 2.183950126 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.473679552 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115461123 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.092277497 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111312254 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.116982708 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08729824 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.125171483 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.089040263 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.13670589 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.085495338 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11257777 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.087425316 seconds)
  done (took 2.6217546 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227825354 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12195136 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278545195 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183128192 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152841971 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16512206 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146027657 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158573246 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.18947105 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149784103 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224866243 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187368986 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14558966 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182871826 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134403157 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.139261872 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188276789 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234917931 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149394981 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196861044 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217047629 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158045955 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172914084 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14529126 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10846723 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162310884 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117014649 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12507452 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199158067 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194441483 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180474045 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156720994 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140515003 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228269994 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239737667 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188913161 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180922765 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131259361 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.136532141 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.160977657 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257694683 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134303163 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199269912 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153260747 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126825484 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184194334 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186918195 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.168630224 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.143413304 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108484946 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21625149 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201584679 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.211511436 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132448255 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128206504 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179391042 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.159915696 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12007023 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2411428 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216515246 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173208927 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.091055738 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141862048 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182604378 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20235627 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.160095574 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.173651982 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140256242 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182901406 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179783956 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184564363 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184638092 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.177084009 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135322424 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164417656 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167421114 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187410074 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220282558 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195307285 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.093913986 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160313761 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143755896 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1258205 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.164169145 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120769485 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230682392 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119369239 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.131654737 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158269415 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154872259 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155122375 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188510428 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208895216 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115842842 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.10759885 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149992571 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148877994 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181791207 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133866564 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153120143 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153945883 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.099359819 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194595185 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096337146 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169187606 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.114111351 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170624786 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174483493 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.122750894 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151951886 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120720567 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.146901089 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168206955 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219330651 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134801897 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104584225 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224751132 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169735659 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143345446 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173022477 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19211115 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.138778716 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142656506 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187927345 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235494105 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133830143 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19537507 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14839818 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12974553 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102370535 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19609571 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123830014 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.156642889 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128604621 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.172706459 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22690435 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.0951902 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134234891 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179176609 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128607585 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127546428 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153571951 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141189891 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.107385125 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.141700836 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144902893 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172459007 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196386339 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122048181 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18389693 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120530265 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240896664 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135774707 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.145212349 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142302074 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.091515755 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.210272324 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188983404 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125117952 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194756138 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.164070053 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151552286 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163946423 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130051715 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170290734 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099210256 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.116994231 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184024032 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159230144 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155268959 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.21444213 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147918423 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.174698206 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.174042317 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164513705 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165895798 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.158927832 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153872083 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.134282625 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153137004 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159317382 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.0925769 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.137197812 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.129588605 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150890717 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137680892 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102298263 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216939227 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160660215 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142964052 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151453353 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142047882 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173301413 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.098084758 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168466348 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.195902541 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114402567 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217225098 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186286633 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176898867 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137990542 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224379547 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.090204864 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122351143 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.136406097 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164191631 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102190921 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131307209 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158827093 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172773746 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201053956 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169793387 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155641344 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167875078 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183703485 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.090740536 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.163282256 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176421743 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193194951 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153644477 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136769886 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.146590613 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171223053 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150176764 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244614737 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160161062 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170378388 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226038865 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.118503848 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128688299 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146750048 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176266951 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148799727 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170864857 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143249581 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138263954 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154242672 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.126110445 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15312391 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176567972 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156056552 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181500652 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.1459535 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203119835 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097745806 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158422707 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153743919 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157462573 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104433386 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167242834 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194492532 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142474913 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162295638 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210250027 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102224031 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.171311322 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227736281 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185245879 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133085077 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151957907 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152553045 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158209132 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16583799 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171472294 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152255506 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182815835 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151588427 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.130842027 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108939097 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144924846 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14544548 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.127097173 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.141612147 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.168679849 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.107571709 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206766038 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1538475 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15128661 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164649528 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.117850101 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.139637388 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144744779 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205789093 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194543158 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202775998 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.14518393 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.171622182 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221599419 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09534054 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127719942 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.126278229 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171036317 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10476551 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207465777 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.115850116 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15197312 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171961296 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210573125 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106676366 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.117216079 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150850054 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16595984 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159032504 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145862723 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.151790832 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19635789 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138731116 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099998927 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163725626 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151616273 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143537439 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186215748 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105582225 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141921873 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098323395 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128046003 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15825828 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196709014 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.131865391 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176790921 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168686103 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160784499 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160051045 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144144376 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141922029 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133061123 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220020617 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175838707 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.128403475 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151589498 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168131459 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186574269 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154096001 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.136601515 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193275194 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211088907 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.189064812 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.136582683 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161003525 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16106225 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151043791 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178396403 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131535488 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194874637 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130498461 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212753404 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146597317 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110507002 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191686035 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.11741106 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136642238 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179462466 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16526325 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131157883 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128010083 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161849133 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168214002 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151027018 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.123047732 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173065966 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.119082654 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184103337 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245323723 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10202208 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148537495 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142756913 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130702541 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150152777 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152492235 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107803926 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.161700369 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197807447 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130421723 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207816561 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194613197 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161156544 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166314392 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139949579 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.686095737 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12751726 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186816163 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148825199 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221223628 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118137306 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165267909 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154793159 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160239331 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216521154 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152590454 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226366762 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184915799 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.169852872 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128689074 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151186989 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154518568 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.138403408 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146455954 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160343063 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153372633 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144774893 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.169002953 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162025801 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.128732622 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107771576 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216109806 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120885957 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205598714 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173871713 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106203361 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19200236 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17913405 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12878544 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.173628047 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222920889 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110126276 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14542747 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.129774821 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.148907588 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246867924 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.094925796 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216071434 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169655079 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152569326 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160317501 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.140732318 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182655045 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151472747 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169890053 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139881352 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.154166438 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150337591 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131759897 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.098904236 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150830413 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158604241 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.143439995 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151928487 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.158098139 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186780494 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.092670085 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140414 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151733343 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179550697 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234445649 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.104697399 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132623496 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156231388 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146018081 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.16768063 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169517799 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.130935146 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129282736 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.104474529 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.154273654 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109909861 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150051265 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151687863 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159217114 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22311751 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.105638851 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.272387638 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135823891 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148894701 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.08738319 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127937996 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145563653 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139721048 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151419809 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119573664 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250038264 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.14281844 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.102691959 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14369979 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.122790421 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103694026 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160023825 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157394552 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195637283 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113173947 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.107301994 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152384399 seconds)
  done (took 77.48956607 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165461661 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130607726 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.144561288 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.196265276 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173331651 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263801536 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.204357193 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248820304 seconds)
  done (took 2.59242987 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.091683927 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.142281807 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.147712945 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.129571889 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089392035 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.114315978 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.322668721 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.127655613 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.088980506 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.138569524 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.141491185 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.117058512 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.494344388 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.115711545 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.114248328 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081432051 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115250289 seconds)
  done (took 3.63453818 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.452600441 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.714992089 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.467269248 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.123688021 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.034803356 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.133113973 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.740161864 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.209156257 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091885617 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.475492682 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.763088604 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.182934225 seconds)
  done (took 18.456311856 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.096060239 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.116122995 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.104797108 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.130863154 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.092550719 seconds)
  done (took 1.608330896 seconds)
done (took 124.651041218 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.101814872 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.377768887 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070853785 seconds)
  done (took 1.55139134 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.104706582 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.132306208 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.104325802 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.131161658 seconds)
  done (took 1.549085704 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.0951183 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.122087488 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.105643627 seconds)
  done (took 1.39536509 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.31195249 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.185513622 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.139554436 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.103673533 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124801616 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.100067784 seconds)
  done (took 1.401172523 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.095533427 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12343365 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.094418677 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.12534407 seconds)
  done (took 1.514899231 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093259994 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069028492 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098359683 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073293823 seconds)
  done (took 1.406298597 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11194193 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.127768216 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.099276629 seconds)
  done (took 1.416031423 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.125745738 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.134845854 seconds)
  done (took 1.33759888 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.103087314 seconds)
  done (took 1.175824148 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.114603837 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.16379087 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.182001862 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.159136634 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.220590924 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.158502088 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.134121702 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.109215841 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.12726115 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.137902879 seconds)
  done (took 2.58418152 seconds)
done (took 17.143751533 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101458977 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.225468184 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.372700409 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141374856 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.699102195 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.369538499 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.919172195 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.141902473 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.159896961 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.090931548 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13466076 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650086583 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.911638224 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.182037602 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.868212887 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.181189591 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654528779 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118306952 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11451759 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.091953461 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.900349538 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089330415 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117617919 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089477296 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.682577563 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.412165771 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09297408 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.179066266 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.090342695 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12138999 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.372126073 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119366729 seconds)
  done (took 15.464150275 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094440974 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.167815543 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.094377761 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133853548 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11965727 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.091625694 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120553423 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090979006 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173900623 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.119211943 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106939326 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.118685383 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120353399 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09303977 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137354883 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.08893596 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.121499182 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089244407 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118559694 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089880673 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136405086 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116168262 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.091941427 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117413073 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.091300937 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131283583 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090691155 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118012902 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115459292 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09681717 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.123004037 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.092207091 seconds)
  done (took 4.690600543 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.137633068 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17542648 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.123652981 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122866002 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.163165993 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119619481 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.191807366 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.113577371 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175034077 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11969719 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134373672 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.090093749 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152004283 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.090470078 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139092199 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116840779 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.093529989 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117945885 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088993986 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119369186 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134302635 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09093004 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117920174 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090646538 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.118335104 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10396548 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120636513 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.088637513 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117755954 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122603655 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097358804 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119836133 seconds)
  done (took 4.995540931 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.095798304 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123051417 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.106361882 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.134190722 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.091360846 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122368564 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.093570215 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120814732 seconds)
  done (took 1.971546784 seconds)
done (took 28.196196219 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.101664346 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.118638441 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.095594143 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130638406 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.094498339 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.127949194 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.088027599 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.124590527 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.09554435 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.123953797 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.123268286 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.090684295 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.119167137 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.090357479 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.123265627 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.090343689 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.127857033 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.093790493 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.128298519 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.099210255 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.120624941 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.095528627 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124181648 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.126513945 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.101781829 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.127445653 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.100941204 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123794273 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.089140383 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.120193848 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.091725683 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.128922014 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.089417348 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.128080514 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.116094832 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.090972182 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.116178686 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.090862851 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.126942626 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.095946874 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.120415244 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.095223749 seconds)
  done (took 5.687294388 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10571353 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.133654199 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.102210346 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079261698 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.113165605 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078621566 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.133783749 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077028484 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.106583208 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.104812463 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074587066 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10388251 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077056855 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070651921 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.104267 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073717095 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.104723122 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075210525 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075042627 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.102429072 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079159977 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070571977 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.105768599 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077348731 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073150825 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.107574548 seconds)
  done (took 3.504003732 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.098619229 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131035616 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.109642374 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.179336707 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.155826894 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.096722588 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.129559959 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.106572337 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.135719362 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115315648 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.094212944 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.144820024 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107576902 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124871197 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089215505 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133306908 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130600986 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.092504912 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122303249 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109793929 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.133921156 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.09908645 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13890604 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.099993234 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.117868899 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089539991 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.12169863 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128638982 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.09461544 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126290174 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.092152993 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.121417678 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.090575052 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129729863 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.119659048 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.092252377 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.136769256 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099188089 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126860549 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.08880319 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.121746182 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.089886399 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138615362 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16173008 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.088846249 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125286065 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095633047 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.127199339 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.08979033 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136364739 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125605149 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089953523 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.119225107 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090002073 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.117464259 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104008746 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.119400444 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.091981939 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127389733 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.092051474 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.131430103 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.092609685 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13418023 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115963557 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.097686186 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.116347589 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.090405071 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.11582389 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.111765353 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120803512 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.156891649 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.091545757 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.118578266 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.098637349 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125495177 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094841559 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.118835459 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103238473 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1281753 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119747607 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.099919336 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.120187767 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.092856109 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.135964788 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.093056357 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.119429113 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.090866859 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125192399 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.091045018 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.11956255 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.101695665 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118513612 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118792381 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.10773531 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.1165209 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091866815 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.123803393 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093776647 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.118091982 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.100163804 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.123917184 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.11687511 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.100144661 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116913528 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.092958575 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.127397095 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.094211274 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117540375 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.094197367 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125372247 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.089884314 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.119395882 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.118912943 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093385068 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.126983729 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.096763931 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122559048 seconds)
  done (took 14.345359533 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.219502618 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.210347163 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.119572883 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.211892785 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.101786073 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.13041519 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.205002955 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.149325171 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090760222 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.118969505 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.092413997 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.157059491 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.150309715 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.16201755 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.102109217 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.117934773 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.109014474 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.158851251 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.205355435 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.198767035 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.138435834 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.097347549 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.122072963 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.090106996 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.121668827 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.098589208 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.13266307 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130777408 seconds)
  done (took 5.050543368 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.104541241 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150769967 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09565488 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.139758045 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142103182 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.089329393 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.123689541 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.091661745 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.131380115 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.130396321 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.089434391 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125232277 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.095957369 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.129031143 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.089178641 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.129037163 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.126582413 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.092550599 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.120848081 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.094665908 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.12505191 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.098224458 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123720317 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.088176062 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.126881684 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.115538368 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08452654 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.136489298 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.090128536 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.140958458 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.115812522 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098514518 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.127792084 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.091529551 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118083757 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.092638413 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.120855424 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.092538234 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120092217 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.08963821 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.117429313 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076588691 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.116743738 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.102367113 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.125174462 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.077449839 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125428661 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.094775238 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.124467311 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.087343653 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.12222249 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.092355985 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.122606915 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.124029883 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096959477 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122445302 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095119176 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.08178087 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.12614404 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.119263148 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084354085 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.089984442 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125232595 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.083508353 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127425773 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.122072362 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.090275178 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.119531996 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096835601 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.123568813 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.092722113 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.120753467 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.08862576 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.120737523 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095454239 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.123302695 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.092585695 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.117251223 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.089571209 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.119097662 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074792305 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.118597597 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.072528518 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.120226827 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.090503927 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.116924695 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.093620954 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12453054 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.103970671 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.12136165 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.123354497 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09338772 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.116356526 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095390206 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.080413667 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.122377299 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.132694733 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.106521456 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.120186967 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.087372385 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.133307604 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12236556 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.091623723 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07416861 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.126438786 seconds)
  done (took 12.53933294 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.11568571 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.14399875 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09238407 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133490803 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.142305412 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.114347876 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125739507 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.096416297 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.120698825 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.106664565 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.120510899 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098230752 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.123403801 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.098180275 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.141818439 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125806877 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.092562616 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.127853635 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.098577952 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.154671159 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.103203857 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.133698861 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.128841466 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.091617466 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123765559 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.104215332 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.145271945 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10044393 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.129214533 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.104198374 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.130298468 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.143685628 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.106772587 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.124181568 seconds)
  done (took 5.159795764 seconds)
done (took 47.370981955 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.205159397 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.438550619 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.182783345 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.135410817 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.211018028 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.304279198 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.302812543 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.293342742 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.430879535 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.294622918 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.551993566 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.097413529 seconds)
done (took 59.558955636 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.410275495 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.428316668 seconds)
    (2/2) benchmarking "String"...
    done (took 1.557467826 seconds)
  done (took 4.202024672 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.653338233 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.377511794 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.585241092 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.289124496 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.289547777 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.740773121 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.098302027 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.686331491 seconds)
  done (took 29.280476193 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.301685515 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.693518513 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.136172571 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.122484954 seconds)
  done (took 19.466493082 seconds)
done (took 63.228251273 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.30155544 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.317236067 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.304075653 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.265205906 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.402804305 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.333448504 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.670211983 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.511147419 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.28218706 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.268455818 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.311269291 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.293700027 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.285878966 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.64736576 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.288217676 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.301619777 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.331920477 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.775794546 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.702016888 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.291895198 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.318497886 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.296042404 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.30368274 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.284414416 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.304344786 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.283242919 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.300217355 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.290691433 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.860499228 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.283730674 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.290208298 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.845558816 seconds)
  done (took 194.756941402 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.286647828 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.180593929 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.286597578 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.307306295 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.51574402 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.481099554 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.418757928 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.808881905 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.300953669 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.284978707 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.446151619 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.283420357 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.541623947 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.266730503 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.291428169 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.368004666 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.499692859 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.560015261 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.29865999 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.538131811 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.2928435 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.328306134 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.259326955 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.391518471 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.327399704 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.354799138 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.291752148 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.282420259 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.469705462 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.399484357 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.299259393 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.300930408 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.908856945 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.144915993 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.284952722 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.299345908 seconds)
  done (took 151.811482236 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.573198476 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.281239094 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.285117161 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.282513626 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.31571396 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.282733716 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.852800845 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.853936125 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.781218305 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.707269402 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.345219354 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.525424627 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.281517803 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381340536 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.293937561 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.282024802 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.303912206 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.328826963 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.287656905 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.285952268 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.851341812 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.297753975 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.509467687 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.288008169 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.284420459 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316129966 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.67555916 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.280780209 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316479443 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.602286636 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.332002008 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.280663574 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.284342458 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.59674766 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.554346572 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.389248888 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.282721047 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317159619 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.285899166 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.553539915 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.281769532 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.284527062 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.288198212 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.285428101 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.878204941 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.281526554 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.839429875 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.286406303 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.190589999 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.281816514 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.285229187 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.284796733 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.647660929 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.773721107 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.302090107 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.283728554 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.286361665 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.284112991 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.284902561 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.315526169 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.623166732 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.381639179 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.297802915 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.284726047 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313557065 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.284437654 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.446319743 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.278331947 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.848549459 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.349691623 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.490757046 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.813084621 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.280279922 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.373184266 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.393710601 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.27612747 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.277031831 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.27511584 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.277898312 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.38326981 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.278184557 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.675825255 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.280168664 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.276550575 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.334645777 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.372079351 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.277810923 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.276375814 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.565639196 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.278286215 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.277069295 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.967537339 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.367806749 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.27429654 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.27576854 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.277166303 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.669016598 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.804957556 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.467018531 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.278523895 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.75745566 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.273151155 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.682360721 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.783718877 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.853140721 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.277089524 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.379654824 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.276751099 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.273427037 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.272400724 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.303551329 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.288165534 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.333583261 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.272640659 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.669203762 seconds)
  done (took 355.035395138 seconds)
done (took 704.385971449 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.958173344 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.910555955 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.048318901 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.928099467 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.908674143 seconds)
  done (took 10.945843462 seconds)
done (took 12.141737293 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.460062625 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.465433164 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.336735672 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.469577291 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.304277291 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.485111325 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.442883823 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.301598437 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.379601051 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.355928563 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.381837121 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.326704793 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.308728927 seconds)
  done (took 19.21013785 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.58387262 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.579700331 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.342597379 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.602886182 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.319025221 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.587530506 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.476035444 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.484924585 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.485610667 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.311664916 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.291895613 seconds)
  done (took 17.265709476 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.597691752 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.585010093 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.346143215 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.587997202 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.323648809 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.596962075 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.485992042 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.493460523 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.492730241 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.311672129 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.289216854 seconds)
  done (took 17.312472158 seconds)
done (took 54.980501446 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.283915405 seconds)
  done (took 2.485215244 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.315864439 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.476689425 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.301248148 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.284727977 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.283423177 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.283628368 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.285811709 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.285443022 seconds)
  done (took 11.715224077 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.285848925 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.276881495 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.282891729 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.281955485 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.281894328 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.279791956 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.285294301 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.277902205 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.285426175 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.27920595 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.284760476 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.278148816 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.282041422 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.279523924 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.282382417 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.280750689 seconds)
  done (took 21.702737032 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.28613599 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.279384387 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.279374493 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.279151366 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.278982355 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.281127759 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.281630145 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.28143724 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.2801469 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.279235764 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.283401447 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.279517187 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.283531139 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.280175178 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.27965886 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.280556724 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.281723136 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.2806122 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.285592957 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.279817527 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.284450918 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.280499309 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.284004087 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.280694171 seconds)
  done (took 31.952400728 seconds)
done (took 69.053761788 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.251450575 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.829761162 seconds)
  done (took 9.279484365 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.286050153 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.282805233 seconds)
  done (took 3.76939492 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.284803862 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.283492164 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.284393606 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.286311532 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.28301312 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.282232301 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.284325693 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.284895947 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.282498546 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.285442898 seconds)
  done (took 14.041569969 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.285000251 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.284757172 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.280500151 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.286269393 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.285331666 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.281859625 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.285412363 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.286254701 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.28430749 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.285899677 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.285741401 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.281498628 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.284650845 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.281550752 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.286662043 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.284019066 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.282316782 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.282986176 seconds)
  done (took 24.316048615 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.285853436 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.285611525 seconds)
  done (took 3.772214664 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.285839345 seconds)
    (2/7) benchmarking "second"...
    done (took 1.282057903 seconds)
    (3/7) benchmarking "month"...
    done (took 1.285434693 seconds)
    (4/7) benchmarking "year"...
    done (took 1.283230468 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.284189282 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.282513544 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.282455198 seconds)
  done (took 10.187745151 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.2916681 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.45857389 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.535851706 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.876480508 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.288323325 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.291712036 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.130970104 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.293146064 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.29275454 seconds)
  done (took 14.666563105 seconds)
done (took 81.230528243 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.28933916 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.295622673 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.380163123 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.303430215 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.300568917 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.579740752 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.281177616 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.408801914 seconds)
done (took 38.045515575 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.286516135 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.006948635 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.009475657 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.280695336 seconds)
  done (took 11.503525697 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.263641224 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.171278212 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.27358347 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.277500523 seconds)
  done (took 18.194686911 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.25681909 seconds)
    (2/2) benchmarking "read"...
    done (took 1.621464775 seconds)
  done (took 5.083035365 seconds)
done (took 42.273189835 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289811633 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.287080397 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.29015024 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.287011107 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.29167754 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.288509228 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.285314735 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.289656939 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.288668425 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.289516069 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.28771142 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289788514 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287688209 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292238453 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289030103 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.286387039 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.287130274 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.285744027 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285695706 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.287747665 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286688392 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288365656 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.28631485 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.288791112 seconds)
  done (took 32.121667727 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.292743349 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.287047106 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.288783216 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.289503462 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.287051086 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.2925292 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.289542368 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.285886764 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.290240058 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.288578547 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28732258 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.287931503 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.292498236 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.29113874 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291077138 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.287184337 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.293688886 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290902057 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290610121 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.288369237 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.290696513 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288515773 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.288294999 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290252331 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.287696255 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.290556592 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.291097628 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.2882267 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.290763998 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.288232268 seconds)
  done (took 39.894246565 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.294952799 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.299055882 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.291083558 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.292512784 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.293564571 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.295292669 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.292844297 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.290716737 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.295327869 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.294871095 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.2896289 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.292915167 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.292865905 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.295454559 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.292983699 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.291720902 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.29134199 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.29020188 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.293700991 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.292321586 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.29144231 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.29519669 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.293631832 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.294646715 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.295249235 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.292287291 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.294101248 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.291872493 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.29106179 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.294851719 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.293140142 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.293802395 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.297820265 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.292931112 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.295625609 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.292041822 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.297851946 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.299775092 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.295800211 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.297891759 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.29411221 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.293983886 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.293055309 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.295665083 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.294254366 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.29288761 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.295942992 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.296505153 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.296409865 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.293586177 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.2936837 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.294037433 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.293700248 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.296420443 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.294157867 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.297281542 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.293895975 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.293811369 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.294982599 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.298629298 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.294044607 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.292790948 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.29466661 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.296339707 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.294530962 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.296424159 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.29443279 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.294502452 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.297935776 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.297388074 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.295533903 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.296745706 seconds)
  done (took 94.408301807 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.296334392 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292068917 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.294579236 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.293454268 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2944658 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.296903803 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.292244205 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299898846 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294847881 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.297234631 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294820026 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.299019756 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294464078 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296786651 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297219638 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.291850502 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.29417638 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293564863 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.297099561 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.298567567 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298269729 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.293945361 seconds)
  done (took 29.718418038 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298141575 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.299395368 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.294465082 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.295492748 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.295028224 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296377595 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.299855495 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297291125 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295840075 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295514192 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293330138 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29661282 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295038025 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293064607 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294308279 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295345787 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296555874 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.295780554 seconds)
  done (took 24.540358147 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.298642353 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.296058966 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.297291419 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.295072663 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.296605798 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.296233265 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296840863 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.298314097 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.298391994 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.296204865 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.298207488 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29700362 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.299152694 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294083362 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296715292 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.29489256 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.298369842 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297004941 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297260025 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294547667 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.296830671 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299537377 seconds)
  done (took 29.749205984 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.30103496 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297952126 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.298297599 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.296904526 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.296253996 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297910138 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.298975097 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.297030158 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.299554924 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.298095447 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296819475 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.300082561 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.296008511 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.299531742 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.297207386 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297145289 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302958598 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298001842 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297344345 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.296648564 seconds)
  done (took 27.176871991 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.300565782 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300469616 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.300627879 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300172366 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300726845 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.300751356 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300542405 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.301553361 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.299992198 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.301746312 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.300584478 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.301544691 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301774424 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300840302 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300473398 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.3006709 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300442386 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.300120323 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.301183549 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30150418 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.30097727 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.300478632 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302831388 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.300962469 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.301628381 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306023689 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302009702 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.301490797 seconds)
  done (took 37.648935656 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304841347 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.301837174 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.302798863 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.300728457 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.300112351 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.29871469 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.301276174 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.301469517 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.304107307 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.300641957 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.302998716 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.303566674 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.302801902 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.304059947 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.30334602 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.303026574 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304017857 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.301092639 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30188582 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301676665 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.303876506 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303333215 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.304198752 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.300813363 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30424754 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.304765579 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.300153413 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.304888839 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304674282 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.302730842 seconds)
  done (took 40.296499712 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.323255815 seconds)
    (2/2) benchmarking "in"...
    done (took 1.323231431 seconds)
  done (took 3.865212137 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.304914066 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.304544101 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.302742288 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.300249839 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.302760114 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.302845487 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.30439642 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300799527 seconds)
  done (took 11.641312761 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.305788782 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.303770177 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.303006274 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.303168621 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.305796856 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.305026753 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.312966515 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.324436737 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.306353166 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.305299462 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.309814877 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.313293046 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.309413953 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.307888521 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.306380065 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.307900025 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.305171873 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.303028009 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.306505629 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.307688991 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.306706369 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.309712855 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.309047634 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.304484126 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.306525978 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.316097579 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.326425117 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.305542342 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307584176 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.310118955 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.308963999 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.307891686 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.310684573 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.3083212 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.307885183 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.30660109 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.319080887 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.322103285 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.317811875 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.319015747 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.303042924 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.301231616 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.303979874 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.306602163 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.308353173 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.302771844 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.305849516 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.30045883 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.301350038 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.304616441 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.30925648 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.302024379 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.3002701 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.304791981 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.302402151 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.309766542 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.318078801 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.306449821 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.311073721 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.313640008 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.329436948 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.324626257 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.303528403 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.301607395 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.309290811 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.322466854 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.308232146 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.318997145 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.300720405 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.29824967 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.309743897 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.326358689 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.325924786 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.300775738 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.300766705 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.304326203 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.303207082 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.303158252 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.305223105 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.322608061 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.303803166 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.303255072 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.309692625 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.323703711 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.30306158 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.302767195 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.304738798 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.302519377 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.304344448 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.311939363 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.318499633 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.304624149 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.303172079 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.305625915 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.305758473 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.30311762 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.301907074 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.302622307 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.302480866 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.304984309 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.303228246 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.307900224 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.310873439 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.30451926 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.304175521 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.311664835 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.320897164 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.302596853 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.309922697 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.304761398 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.305144836 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.307005337 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.310442715 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.300368962 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.306369123 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.312637367 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.305289426 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.307596125 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.30375343 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.306013416 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.312747653 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.329452687 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.307803374 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.306245845 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.310029333 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.315238256 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.30599327 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.309001108 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.306813 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.303807797 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.304708665 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.307779167 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.307618574 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.306737082 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.303804195 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.30711151 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.303857107 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.307731285 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.305885342 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.303642649 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.305121805 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.307703169 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.302456474 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.30734383 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.304568141 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.310079215 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.313119745 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.325478805 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.30690472 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.306972176 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.30229314 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.305693289 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.305203429 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.304312252 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.306093858 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.307493673 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.308908444 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.303863738 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.30834427 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.308453242 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.308558561 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.307238521 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.311324273 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.309737367 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.308239482 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.309104343 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.304888091 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.307199063 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.307566849 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.303220394 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.309137341 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.305242166 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.31103915 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.312725275 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.31069803 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.309935008 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.311173981 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.305521109 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.308489373 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.308849792 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.31071705 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.314272217 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.308615968 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.314923197 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.323673666 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.309486152 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.310498998 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.310948091 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.308668904 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.308838737 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.308222262 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.316756942 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.321726165 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.332294138 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.311650832 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.314812588 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.309511703 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.309345831 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.312438883 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.310069541 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.31082084 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.312023644 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.311203464 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.310970693 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.313679581 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.308445208 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.308522025 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.312604257 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.309595321 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.311668456 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.312147233 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.312498032 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.312222963 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.308218612 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.313473932 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.311536034 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.311574816 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.309686121 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.311409712 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.31296154 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.309800546 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.309751812 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.317407341 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.307403224 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.312378699 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.314439691 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.314346829 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.311222959 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.313521433 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.317883166 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.313836859 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.31876141 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.331904355 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.313719906 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.320593617 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.330381497 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.310731232 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.316615565 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.312618489 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.31005227 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.316552425 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.321120022 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.308653324 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.31435838 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.313828073 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.312957875 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.314357168 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.318524368 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.32958623 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.313108515 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.313108396 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.314630787 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.314213447 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.31555004 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.315436713 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.314156662 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.317375897 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.312008656 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.314489083 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.315154605 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.312672369 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.313053622 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.313406382 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.319169159 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.320514048 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.320350246 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.314089967 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.316017359 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.316573723 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.318295293 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.316063835 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.314702171 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.312196583 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.320968913 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.333749977 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.321543408 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.334701467 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.314763701 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.322503225 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.334708412 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.32011767 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.316507386 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.317459477 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.315992394 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.316253723 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.313231719 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.317385036 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.31847069 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.315475266 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.318343 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.321264101 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.318155451 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.314883966 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.314303612 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.315419071 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.314728487 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.316615041 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.316415373 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.31569943 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.3186241 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.316392968 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.317717883 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.323240891 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.335457834 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.318364707 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.315070567 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.318410467 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.317857339 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.318770641 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.31785607 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.317351048 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.321591932 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.320765492 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.32238351 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.321307021 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.326980282 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.316899418 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.320931281 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.325357902 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.31476607 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.316991832 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.316896515 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.318044761 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.325714984 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.335055081 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.318062886 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.321309617 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.319970613 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.319335507 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.320318143 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.318613081 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.320602013 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.318356568 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.326627607 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.337190558 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.322986752 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.317903072 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.317673892 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.316586302 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.320083347 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.317879252 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.322208245 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.320585736 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.321165662 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.320466507 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.32078745 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.317542714 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.320770345 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.321478103 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.31748447 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.321176321 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.32659703 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.340400425 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.324447301 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.319850137 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.329112248 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.339058344 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.324675272 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.339638728 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.319414396 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.318220162 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.322442726 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.3206485 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.323673823 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.323090615 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.321375152 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.320591346 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.324955933 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.322029263 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.325023528 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.322062559 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.318586285 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.320288187 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.3309745 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.342963449 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.322728245 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.322334017 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.319684151 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.321338058 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.326455612 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.321225624 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.321711322 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.324571569 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.33391663 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.330252476 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.321952398 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.321531348 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.324822101 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.321183249 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.322940669 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.323965244 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.321117401 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.3235936 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.323726042 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.320584067 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.32821721 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.32513091 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.324601295 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.323501034 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.324288374 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.333426942 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.339806158 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.326828238 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.32314632 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.326226589 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.324983199 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.324324737 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.32310882 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.324866441 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.324579161 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.325999629 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.330062042 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.330747991 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.329474577 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.324509232 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.325522496 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.323363493 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.324974988 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.325447654 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.325660364 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.323506229 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.327558311 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.32520186 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.327610489 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.324772975 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.324377151 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.326114128 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.324761093 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.32754599 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.333493621 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.328268504 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.322100172 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.32565132 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.326483185 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.323069823 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.323697339 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.329962767 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.342481641 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.334390316 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.333454242 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.326667576 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.325974955 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.320964321 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.328793657 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.31920789 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.321943891 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.319654165 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.3244994 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.320797986 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.321923033 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.314889385 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.322134475 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.328723059 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.314373873 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.321339506 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.331880735 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.318442487 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.320663918 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.31876818 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.314041871 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.312157434 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.31425637 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.31631522 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.320318785 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.336063985 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.315399615 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.314084675 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.314460788 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.316901059 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.321983102 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.314795921 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.315495907 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.307500485 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.313189023 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.313623512 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.31754338 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.309903931 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.311451377 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.313632284 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.316802143 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.322563045 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.312724002 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.315764761 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.314407772 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.316173795 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.315648151 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.316516206 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.310149339 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.308906902 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.312885352 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.310375891 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.30799157 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.309613623 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.306144173 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.308881626 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.29996272 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.300487261 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.302583258 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.30785438 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.30709501 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.297119178 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.299732807 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.300026666 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.30372247 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.302281749 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.302244996 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300368227 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.301066897 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.298057166 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.308437441 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.29785757 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.305362012 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.31484797 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.314625811 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.298941312 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.299613018 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.303406822 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.29933232 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.297100186 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.299309444 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.305327707 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.306288767 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.312698257 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.304254012 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.308965468 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.320315327 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.30204933 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.304986495 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.305404152 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.307197712 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.298649737 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.302112972 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.301755921 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.304308291 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.31611277 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.302737797 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.310784126 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.327873844 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.31967839 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.303699102 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.302507028 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.296687892 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.298461267 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.300210651 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.300660787 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.300164633 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.301646819 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.297714852 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.301445574 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.304541319 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.298712902 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.299641518 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.298165683 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.29669168 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.301844369 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.295888917 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.299568318 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.297837704 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.297283268 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.296267137 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.298805355 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.297351115 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.305465929 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.319145996 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.296930599 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.295229726 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.293226331 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.298785673 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.297701665 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.305259903 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.304244862 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.297084573 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.294209929 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.296323854 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.294948839 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.295538502 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.297259796 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.29445233 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.295460794 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.292707281 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.304634981 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316851652 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.297215765 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.296555156 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294661342 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.295891285 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.296456161 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.294876632 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.294016168 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.295147181 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.294812526 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297802282 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.293833828 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.294294895 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.296186064 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.300866436 seconds)
  done (took 783.800405246 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290158317 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289636838 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290799965 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288186001 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289692894 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292003818 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291115614 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290079029 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.289801715 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290532543 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.289496458 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290873899 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290825685 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292146699 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287768216 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.288725155 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289222439 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290463185 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.289765745 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289739592 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.290726957 seconds)
  done (took 28.297317749 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.290069032 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.289642351 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.288084275 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292335165 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289138977 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.29146184 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.291168393 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291212784 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.290393809 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287289433 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.291664733 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2920885 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.288715653 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.289326109 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289937824 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288573813 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.289163659 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288421433 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.289898183 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287906877 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291838581 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.28852719 seconds)
  done (took 29.583121339 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.292205402 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.291601084 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.28815328 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.289638788 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.291959797 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.2868497 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.290295945 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.289203427 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.289667624 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.289451749 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.288160349 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.287816772 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.296687037 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.294737166 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.291228379 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.288241298 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.435487773 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.288242741 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.290413691 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.290104302 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.286883461 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.295056718 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.306843007 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.28533353 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.286124277 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.286799945 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.290680891 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.289176114 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.288860576 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.290007277 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.293727674 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.288220823 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.288758165 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.28741677 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.287052245 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.289159169 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.293417359 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.288914289 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.284799436 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.288226848 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.296592779 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.30439859 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.287100541 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.293762602 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.304972949 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.289046743 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.289327712 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.294783664 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.285044466 seconds)
  done (took 64.597889548 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.28893557 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.288021314 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.287226288 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.290513121 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.287689063 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.290319815 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.289678466 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.289615879 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.285533276 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.287791114 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.288391402 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.287333465 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286627387 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.289142732 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.290396249 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.28768733 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.285659545 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.286256645 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.287323169 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.286590766 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.286352893 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.289880344 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.287802823 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.287199507 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.290254125 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.286248094 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286688916 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.288424422 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.287681754 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.286289813 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.289576938 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.28925614 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.289032997 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.28669974 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.28771925 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.289956578 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.290593033 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.287091836 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.287584807 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.288317826 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.290746928 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.290907604 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.291838674 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.289624638 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.287016593 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.290571478 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288107345 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.288791018 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.28766101 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.292631923 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.289449296 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.289125245 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.290069964 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.287859337 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.292014213 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.291783494 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.289272041 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.289610902 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.290205693 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.287541398 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.289146916 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.292623834 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.290509835 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.291997393 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.289340969 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.288485436 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.290680476 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293493792 seconds)
  done (took 88.849767994 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291629707 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.291359028 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29058355 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292512107 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294640974 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.293019957 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292048826 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.290991498 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.294180131 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.292858418 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292956175 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.2933913 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.292251118 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.290001968 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.293010177 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292050801 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291656187 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291381924 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.293417184 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293325836 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.293473076 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29367594 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.292247251 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.294391893 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293066179 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.293111512 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292760865 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.294584371 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294982426 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292937759 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293465356 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.293922642 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.292971695 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.295990356 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.294912184 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.294186594 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295092213 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294430378 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.293143757 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.294146324 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.294225303 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291645555 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.294773865 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.293424725 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295473429 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29487539 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.294962294 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.293137065 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.293772478 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.295749159 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.295189473 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294133524 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295897894 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.296005025 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.294596334 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.296176309 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29361763 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295903784 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29697982 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293512608 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29445656 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.296852995 seconds)
  done (took 81.417496326 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296715659 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.29770456 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.291309711 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.291261596 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.29598258 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.294280242 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.295065062 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.29764227 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.295809154 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.297800244 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29680238 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292912693 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293047299 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29535378 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295711895 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295692545 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294742028 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.29439305 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295393754 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293503316 seconds)
  done (took 27.111979452 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.293544274 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29757552 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.293862069 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29489105 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.296869997 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295233547 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.297088073 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296069229 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297889055 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297889876 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296928356 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296257848 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293982755 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297000032 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298185218 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.29531742 seconds)
  done (took 21.949729918 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.296530876 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.299237069 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.29729128 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.298417192 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.294856768 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.295227658 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.298604544 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.295389739 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.296965361 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.299301944 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.299570818 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.297670617 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.297741159 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.300011598 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.297376596 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.298618307 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.296715737 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.297836593 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.299791155 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.298272082 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.296525801 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.296395229 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.298686703 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.301442437 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.299142107 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.298393758 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.297221662 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.296263018 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.297665804 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.300417213 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.297332881 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.298798724 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.298468345 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.296049359 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.301331842 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.298577133 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.298651209 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.302095006 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.303625208 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.301324642 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.300954892 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.298295882 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.301184181 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.301656379 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.299092677 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.298419061 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.297344518 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.299333276 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.298557757 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.298198122 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.301964646 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.301601336 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.301937417 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.298431839 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.3025283 seconds)
  done (took 72.64501034 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302235888 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.300708765 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.299344558 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.302890044 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.301899781 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.296369889 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.300040205 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.297907225 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298628215 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.301897687 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.298254146 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.302275015 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299201149 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302441907 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.300451364 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.303034496 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.299110833 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.299049573 seconds)
  done (took 24.619657794 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.300769888 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.300633693 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.302418404 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.29930692 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.298418034 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.301584916 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300205834 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.301752462 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302792641 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.30094505 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300362406 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.303283855 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301429278 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.303966144 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.300124637 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299831433 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.304328121 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.301844737 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.300779493 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.3009961 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.304778562 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.304228542 seconds)
  done (took 29.850534421 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.30459975 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.301875554 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.302123543 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.316797469 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.31939346 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.324400795 seconds)
  done (took 9.086387749 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307970172 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301917714 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300273781 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303110466 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304792727 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30256766 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302947422 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30128204 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305498952 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303037223 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302335999 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306048585 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305467265 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302526092 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303993077 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304373779 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302836707 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302302262 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302636695 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306431573 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303572125 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305337965 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302483904 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30305186 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301865917 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303712837 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304580609 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304071002 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305251481 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306137497 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305730007 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302674497 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308165693 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303349291 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305887194 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30506852 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303232363 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306584726 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306691962 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302326823 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306581997 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3063206 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307732272 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303446557 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306581515 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302383183 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303562377 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303687635 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304689419 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308965257 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307151008 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304846878 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305619893 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306358532 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307377938 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307533556 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305249901 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305699941 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305349313 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30494236 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307107573 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307760695 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306874666 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306338701 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306911025 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30609721 seconds)
  done (took 87.357173672 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305680784 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305074357 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305298624 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304598111 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306882753 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306072263 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306411373 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305949668 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305274805 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304807434 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30828895 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303473318 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30452229 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305373882 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306474127 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306822778 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305962132 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309048294 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306488669 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309480415 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306425666 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305963113 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309327675 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30764667 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307400046 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30921141 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306095048 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308127149 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307912927 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306687327 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309860116 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307451565 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306229992 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308742332 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307346556 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307202609 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308018216 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306163732 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306740567 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311490334 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306913718 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310254249 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308248401 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306280971 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308876331 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307340063 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308845912 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309717242 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309036916 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309183588 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308228117 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308417919 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310675673 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308848292 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308291448 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306906026 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308115273 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307962934 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308669724 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311124389 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305773751 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30882504 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311435492 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31072532 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310610851 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30823658 seconds)
  done (took 87.524019843 seconds)
done (took 1808.952640198 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.361373945 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.306266026 seconds)
  done (took 13.887899547 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.475466398 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.424466006 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.305571346 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.340045452 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.304705647 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.309378405 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.303683217 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.306886317 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.313541028 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.310011698 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.310260074 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.497179127 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.365485297 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.305611871 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.309509528 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.405216618 seconds)
  done (took 42.812412255 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.336752886 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.315820568 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.423875115 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.332641632 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.335840653 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.497302347 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.367354516 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.315842927 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.482153734 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.354129275 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.849794843 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.339359979 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.314168072 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.409100191 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.33315917 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.496956663 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.553525578 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.8561689 seconds)
  done (took 30.13658618 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.74797235 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.32731791 seconds)
  done (took 9.301309535 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.353862615 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.345634909 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.334654311 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.32214462 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.321956993 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.325762755 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.309087685 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.330038295 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.348895027 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.334679815 seconds)
  done (took 64.554086123 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.336746285 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.317827419 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.316970062 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.315558692 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.305964989 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.310653783 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.314381633 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.318176751 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.789874721 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.439475657 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.336308665 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.321586334 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.331232009 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.31687588 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.316125468 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.353153838 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.449925462 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.33489594 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.315511149 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.321390496 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.316172174 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.404616205 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.356738797 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.316475896 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.438839177 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.810359344 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.320339012 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.322782599 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.434107808 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.332518381 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.31594696 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.315387096 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.318561829 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.885937536 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.77379851 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.327642111 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.339858044 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.325571898 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.316647456 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.430361762 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.338323712 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.322456943 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.309794595 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.72985068 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.466954731 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.42599986 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.557003225 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.313993907 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.316884784 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.375694846 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.312283186 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.312473182 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.340234799 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.071811483 seconds)
  done (took 109.988397362 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.342598053 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.792211444 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.472838814 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.320127348 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.07783866 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.00626814 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.31702918 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.577714552 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.32500747 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.302274019 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.593403338 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.800105509 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.325930714 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.361816158 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.014865888 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.358376051 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.303855818 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.071445385 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.319096657 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.303560921 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.713149188 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322332626 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.317649184 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.484834764 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.341712969 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.761309248 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.788518871 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.748407386 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.317889544 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.300870608 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.755832978 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.317591142 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.356995436 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.298265916 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.573820263 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.658303418 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.651428025 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.324946111 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.318466037 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.304219507 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.321734789 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.762633957 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.659777542 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.320053717 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.319752853 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.765563442 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.316891794 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.314724662 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.310917734 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.502491021 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.242359563 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.302902078 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.792401009 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.305022209 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.654176584 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.389742571 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.347483339 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.791973194 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320723561 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.39096328 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.368963381 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.307685784 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.307979418 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.309748411 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.312666378 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.64107589 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.427509124 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.305688194 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.650272397 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.768336144 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.322866218 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.83131479 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.255526715 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.324686902 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.38801938 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.307924578 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.893730789 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.807024764 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.331270373 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.301283175 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.636780405 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.32445127 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.580672022 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.324804953 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.309796846 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.726760674 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.328435602 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.33904185 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.309296371 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.308166383 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.928710591 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.309383982 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.586710068 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.370833979 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.307840011 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.306120502 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.317928889 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307243823 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.308254885 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.310729476 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.816855885 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.322704471 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.436443708 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.327548369 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308994163 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.322880622 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.310522821 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.310621965 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524681224 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.727311208 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.315490866 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.310076415 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.304216006 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.316565902 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.44947906 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.311626647 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.611235956 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.32798126 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305353673 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.310933114 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.013315031 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.335807023 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304181222 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.326456085 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.146497797 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.530963947 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.32999411 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.310715947 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.310208364 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.326727612 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.653815947 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313694309 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.358897903 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.309230645 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.997033336 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.330453643 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.35174777 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.923874455 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.313328381 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.277875738 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.335554547 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.309208665 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.632051676 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.578119592 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.333880773 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.307586489 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.313809211 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.981962956 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.34072078 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.454760548 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329373176 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.298170812 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.510768133 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.682457651 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.310936334 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.8808488 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.31007136 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.519289772 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.311269849 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.631699569 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.78884325 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.326667962 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.322822943 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.015100473 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.972003363 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.952500067 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.313330314 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.583664405 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.281998793 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.761441504 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.309808605 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.311084521 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.734844208 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.312817533 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.313560653 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.311425989 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.314059957 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.444426331 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.488210442 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.114857723 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.315259471 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.768346416 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.330281351 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306525303 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.319885798 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.312374853 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.667250406 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.378304483 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.316159484 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.34926403 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.311817756 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.318035261 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.782262142 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.293710814 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.314366839 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.469771849 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.927204852 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.329034607 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.313827884 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.904010586 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.543353122 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.812017 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.357879143 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.618329264 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.334833114 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.352673924 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.030639514 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.379978052 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.774549462 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.331989179 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.332100548 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89828583 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.329655584 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.666835446 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.315858612 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.315854609 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.856263737 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.332131312 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.318552532 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.64136495 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.314321418 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559664898 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.315035243 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.323127696 seconds)
  done (took 1106.579152081 seconds)
done (took 1378.482811438 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.31654188 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.310656804 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.297710357 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.316994624 seconds)
  done (took 26.474431264 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.327782012 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.322701997 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.325071279 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.323601193 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.32529058 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.323299929 seconds)
  done (took 9.180724598 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.374194885 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.310656855 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.319344361 seconds)
  done (took 19.237499354 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.535938488 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.596370203 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.682950095 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.495108547 seconds)
  done (took 10.544651014 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.32431597 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.323184405 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.327034461 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.324420016 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.3278327 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.330445728 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.326831634 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.325065938 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.329305021 seconds)
  done (took 13.173356077 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.1369889 seconds)
done (took 84.976519458 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.346272316 seconds)
    (2/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.508673984 seconds)
    (3/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.542994226 seconds)
    (4/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.35224224 seconds)
    (5/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.912889239 seconds)
    (6/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.401920422 seconds)
    (7/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.653245579 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.160158931 seconds)
    (9/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.327687104 seconds)
    (10/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.332172178 seconds)
    (11/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.657247672 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.587243246 seconds)
    (13/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.41983875 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.359567975 seconds)
    (15/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.454857568 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.346552472 seconds)
    (17/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.401552385 seconds)
    (18/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.958356148 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.415974105 seconds)
    (20/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.444500418 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.391612835 seconds)
    (22/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.329205877 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.319035781 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.032635903 seconds)
    (25/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.68170036 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.384132628 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.076785541 seconds)
    (28/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.340095921 seconds)
    (29/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.527016755 seconds)
    (30/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.563139177 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.618892105 seconds)
    (32/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.718088385 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.435110887 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.338381296 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.224221361 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.334218278 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.668162078 seconds)
    (38/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.852157384 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.8802714 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.162890528 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.952385672 seconds)
    (42/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.484080253 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.058375283 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.409239873 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.365226988 seconds)
    (46/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.87155695 seconds)
    (47/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.563079719 seconds)
    (48/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.912617754 seconds)
    (49/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.137522989 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.664699143 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.338387581 seconds)
    (52/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.139066663 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.424114175 seconds)
    (54/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.588208786 seconds)
    (55/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.365216828 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.584292402 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.328777341 seconds)
    (58/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.425866346 seconds)
    (59/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.529164906 seconds)
    (60/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.340283266 seconds)
    (61/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.304177071 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.430183303 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.840935641 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.31743519 seconds)
    (65/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.338004726 seconds)
    (66/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.610584572 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.350430516 seconds)
    (68/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.695278084 seconds)
    (69/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.671187732 seconds)
    (70/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.359395383 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.320468399 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.899034171 seconds)
    (73/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.329833303 seconds)
    (74/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.302289473 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.755606682 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.413233582 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.802286911 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.798522907 seconds)
    (79/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.517431551 seconds)
    (80/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.632633656 seconds)
    (81/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.36746495 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.539844564 seconds)
    (83/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.943441394 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.340451207 seconds)
    (85/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.404824487 seconds)
    (86/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.16975808 seconds)
    (87/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.099685984 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.350139323 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.766564096 seconds)
    (90/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.498308426 seconds)
    (91/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.113493694 seconds)
    (92/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.858875413 seconds)
    (93/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.684603937 seconds)
    (94/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.180051622 seconds)
    (95/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.109407907 seconds)
    (96/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.732859859 seconds)
    (97/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.922005403 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.138796714 seconds)
    (99/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.627332087 seconds)
    (100/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.537119502 seconds)
    (101/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.082397951 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.788642083 seconds)
    (103/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.35118983 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.342847156 seconds)
    (105/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.325376248 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.077462041 seconds)
    (107/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.323845496 seconds)
    (108/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.8981336 seconds)
    (109/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.388309925 seconds)
    (110/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.324894038 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.306710095 seconds)
    (112/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.413668622 seconds)
    (113/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.882191158 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.540443875 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.410245925 seconds)
    (116/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.894961794 seconds)
    (117/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.645818142 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.304458419 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.339255933 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.743525193 seconds)
    (121/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.880008105 seconds)
    (122/309) benchmarking ("sort", Float32, false)...
    done (took 5.333307742 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.348528866 seconds)
    (124/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.432422745 seconds)
    (125/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.410793839 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.162946029 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.84983734 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.364737174 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.903318746 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.604247131 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.797307778 seconds)
    (132/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.688064668 seconds)
    (133/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.678809045 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.070749846 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.60563569 seconds)
    (136/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.318597734 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.749921171 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.326957053 seconds)
    (139/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.683122044 seconds)
    (140/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.757936386 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.591116207 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.97573422 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.429680944 seconds)
    (144/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.074178112 seconds)
    (145/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.332777773 seconds)
    (146/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.680767363 seconds)
    (147/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.434505462 seconds)
    (148/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.755243758 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.11336511 seconds)
    (150/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.11549744 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.353051413 seconds)
    (152/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.342943685 seconds)
    (153/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.351747437 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.321561679 seconds)
    (155/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.380791719 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.327570969 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.748734159 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.711770786 seconds)
    (159/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.372201913 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.315206997 seconds)
    (161/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.328859463 seconds)
    (162/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.138729194 seconds)
    (163/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.470402947 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.352534128 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.353700524 seconds)
    (166/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.442165506 seconds)
    (167/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.132801756 seconds)
    (168/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.331634938 seconds)
    (169/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.180063568 seconds)
    (170/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.356640427 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.398761051 seconds)
    (172/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.329097118 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.391017345 seconds)
    (174/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.074224018 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.332181072 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.328240271 seconds)
    (177/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.310614835 seconds)
    (178/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.204276867 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.242758129 seconds)
    (180/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.329215639 seconds)
    (181/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.630710453 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.356389476 seconds)
    (183/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.899236403 seconds)
    (184/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.614705257 seconds)
    (185/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.354031688 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.329352181 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.743783 seconds)
    (188/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.409963129 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.372555555 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.330723055 seconds)
    (191/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.672119833 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.206596015 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.414502738 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.744193312 seconds)
    (195/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.446222742 seconds)
    (196/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.343488044 seconds)
    (197/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.584943151 seconds)
    (198/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.375989603 seconds)
    (199/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.32957586 seconds)
    (200/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.356655369 seconds)
    (201/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.34625843 seconds)
    (202/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.616363839 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.2388247 seconds)
    (204/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.732348327 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.38725909 seconds)
    (206/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.679289197 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.330596562 seconds)
    (208/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.395681493 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.332797036 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.570340406 seconds)
    (211/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.337464885 seconds)
    (212/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.524785114 seconds)
    (213/309) benchmarking ("sort", Int8, false)...
    done (took 4.409450557 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.269380925 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.970734882 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.549504453 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.656067744 seconds)
    (218/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.312972394 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.735233011 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.335998689 seconds)
    (221/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.686395511 seconds)
    (222/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.91134512 seconds)
    (223/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.330205481 seconds)
    (224/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.878424856 seconds)
    (225/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.431620362 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.986713492 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.314311494 seconds)
    (228/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.350210284 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.355305421 seconds)
    (230/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.16255971 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.37380193 seconds)
    (232/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.437258835 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.806327776 seconds)
    (234/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.419246964 seconds)
    (235/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.313615599 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.34389676 seconds)
    (237/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.515309218 seconds)
    (238/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.397686024 seconds)
    (239/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.518908429 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.749550156 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.34376112 seconds)
    (242/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.44355591 seconds)
    (243/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.465824435 seconds)
    (244/309) benchmarking ("sort", Float64, false)...
    done (took 5.663492197 seconds)
    (245/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.786116469 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.763943435 seconds)
    (247/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.671428105 seconds)
    (248/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.443637467 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.389621219 seconds)
    (250/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.415370657 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.777692692 seconds)
    (252/309) benchmarking ("sort", BigInt, false)...
    done (took 6.333012415 seconds)
    (253/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.274649263 seconds)
    (254/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.952719424 seconds)
    (255/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.700353745 seconds)
    (256/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.395010971 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.543678207 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.71153677 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.36182802 seconds)
    (260/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.697281581 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.728190229 seconds)
    (262/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.319039254 seconds)
    (263/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.644634978 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.786469779 seconds)
    (265/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.520158099 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.351853046 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.043587648 seconds)
    (268/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.381745643 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.425665903 seconds)
    (270/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.399000825 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.359964693 seconds)
    (272/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.900856182 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.29844999 seconds)
    (274/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.701282077 seconds)
    (275/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.377490548 seconds)
    (276/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.69799439 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.363775947 seconds)
    (278/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.323944661 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.168278788 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.419051949 seconds)
    (281/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.335790987 seconds)
    (282/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.398020835 seconds)
    (283/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.328655936 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.763517582 seconds)
    (285/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.379584173 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.419246791 seconds)
    (287/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.176039972 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.447839637 seconds)
    (289/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.621620198 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.25994744 seconds)
    (291/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.373528283 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.178327697 seconds)
    (293/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.332151878 seconds)
    (294/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.471756692 seconds)
    (295/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.360815507 seconds)
    (296/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.549351234 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.377498236 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.982512228 seconds)
    (299/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.319909133 seconds)
    (300/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.422433001 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.14875661 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.453113017 seconds)
    (303/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.899949356 seconds)
    (304/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.339359507 seconds)
    (305/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.463011572 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.357841548 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.337930011 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.999941898 seconds)
    (309/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.145311896 seconds)
  done (took 918.905126489 seconds)
done (took 920.141091165 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.369169225 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366409388 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.348779853 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.367670183 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.45941414 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.371409286 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.358531543 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.349680498 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.398649743 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.395513153 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.345777872 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.370393257 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.347903435 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.347005046 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.347957093 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.361501595 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.378914847 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.348638688 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.366260645 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.359206836 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.366026392 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.347951888 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.398190607 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.373316556 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.352200848 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.352128757 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.352287823 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.369182677 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.46329342 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.352561566 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.351375421 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.361321934 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.378215268 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.34640654 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.345892468 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.368314719 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.362835483 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.360588119 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.353947117 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.383435664 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.775333857 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.364137856 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.349173224 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.349981194 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.352632765 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.354833851 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.348859119 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.355779387 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364136744 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363342254 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.782245459 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.380786919 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.353632816 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.349954078 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.361566248 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.351146352 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.354428852 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366937759 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.369269978 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364617606 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.36814348 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.354974214 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.352294805 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.366916816 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.358995646 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.826439823 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.36148603 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.354754622 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.78477231 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.369432098 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.827114479 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.374452055 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.351965901 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.365225565 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.382896633 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.383430615 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.348611307 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.351907288 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.358196917 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.34919541 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.361469903 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363638414 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.357046982 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.351903178 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367387125 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.376606846 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.361281693 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.349982129 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.360769619 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.373597636 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.357546882 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.364666777 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.354908068 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.34765586 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.360794729 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.356627331 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.356164438 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.355111795 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.357988982 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.364724658 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.781616319 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382193644 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.349961847 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.349917872 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.352760461 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.367486815 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.781905699 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.37008628 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.374015153 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.402294741 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.354592473 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.371960735 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.356947759 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372126234 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.363539202 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.355916214 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.350712316 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.378557241 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.794165705 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.384963724 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.356671711 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.352681602 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367702122 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.354349816 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.350085145 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.393325173 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.358199642 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365810618 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.476600877 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.364638732 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.385631385 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.353218915 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.357599671 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.381363021 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369645235 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.386417609 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.355749583 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37008914 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.370528686 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.353362861 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.365496345 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.364570981 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.35610537 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.360311554 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.350603431 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.378916273 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369152128 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366528151 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.376046402 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.475860438 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.354299736 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.380351491 seconds)
done (took 228.274690307 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.415336551 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.342068918 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.442126398 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.35358551 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.452890693 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.453240053 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.349569853 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.349414432 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.34997457 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.726768869 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.350799756 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.350756573 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.351047817 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.348421075 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.433746159 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.353716047 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.351932919 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.694910978 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.352581271 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.426795964 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.352648494 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.349998489 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.350739321 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.736657678 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.353478853 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.355140599 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.424244833 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.354629932 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.701406037 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.355566309 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.351872259 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.697694739 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.44285048 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.371593216 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.364037876 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.363052598 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.454806726 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.376202302 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.433654814 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.433179426 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.448431405 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.394175788 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.350555874 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.350223852 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.358151506 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.356196242 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.35336965 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.383418593 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.355800851 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.353273335 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.695101116 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.366380111 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.363200191 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.353202211 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.35617254 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.375345323 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.353363233 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.357727729 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.445925165 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.35695994 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.418849429 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.735432229 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.734800619 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.358106802 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.356646807 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.355162066 seconds)
  done (took 149.819313199 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.424657777 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.43018912 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.467503188 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.373323216 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.407619504 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.474251932 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.372516586 seconds)
  done (took 11.216167764 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.364917425 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.358000737 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.40645944 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.406716058 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.355272932 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.50182519 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.356272126 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.367553132 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.35629275 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.409804427 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.358067038 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.35656035 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.365157636 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.357256152 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.406396089 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.368023313 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.471053368 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.359166095 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.356695777 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.509581969 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355874577 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.365922485 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.409106194 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.367933113 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.359725274 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.363578379 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.922214363 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357995952 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357111019 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.359093537 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35610641 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.39733647 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.359377809 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.356338023 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356258014 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.474101344 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.359069481 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356119219 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.360401242 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.353885882 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.357912907 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.359091817 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.357565001 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.357679611 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.357649735 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.383402431 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.360154712 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.3607633 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.361088857 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.360505846 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.414378758 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.360180499 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.356265131 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.360350338 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.414281052 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367681401 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.360887085 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.358613663 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.36068136 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.3580874 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.512690509 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.406157461 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.360753811 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.409667553 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360867169 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.360836312 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.36269533 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.360366993 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.41478851 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.360858745 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.409635692 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.358078644 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.514911113 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.38250527 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.362151517 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.361954352 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.364354749 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36019112 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.355287993 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.368073563 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.357610226 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.361619045 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.366673082 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.359221455 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359029775 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.464022314 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.470776813 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.35852251 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.374219232 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.368391537 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.359115597 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.415797066 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.360968393 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.357640009 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.414712866 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.476971795 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.41682764 seconds)
  done (took 155.723843778 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.367631941 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.370674689 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.361353502 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.378573095 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.356913948 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.362054947 seconds)
  done (took 9.465591993 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.366568661 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.364122742 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.363329914 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.363098398 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.363854823 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.362272229 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.364833569 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36605899 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.370445999 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.363011879 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.364088525 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.362027504 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.364286547 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.36479138 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.365432798 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.364893587 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.365010453 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.362322667 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.366453476 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365257021 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.462602166 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.364780149 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364098046 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.365433336 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.369992508 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.366276956 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.37360189 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.366200212 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.367069328 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.37059758 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.384984591 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.366249624 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.363592441 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.371656327 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.372826041 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.367170908 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367008211 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.367961481 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.361842692 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.368504021 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.367370052 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367857181 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.366694393 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.36864191 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.369019022 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.372609472 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.370092536 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.373244542 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.367493627 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.365726062 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.369311311 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.367988733 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.365883021 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.367875406 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.368950513 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385500414 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.372236445 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.368384062 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.365474527 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.367503537 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.368371173 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.367130042 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.366224875 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.371528099 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.373990859 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.366229383 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.367854168 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371962005 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367908565 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.367982218 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.370817983 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.36455739 seconds)
  done (took 100.840431684 seconds)
done (took 428.32228456 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.696066415 seconds)
  done (took 7.96703915 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.468718128 seconds)
  done (took 7.742677988 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.951014214 seconds)
  done (took 22.227361625 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.419500731 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.403898154 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.362929945 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.381108686 seconds)
  done (took 26.841463557 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.656483449 seconds)
  done (took 7.929211949 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.358484326 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.3687383 seconds)
  done (took 14.001702033 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.892216404 seconds)
  done (took 8.164769961 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.561662657 seconds)
  done (took 7.836670608 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.362630952 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.392441031 seconds)
  done (took 14.285030773 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.346345128 seconds)
  done (took 7.62105075 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.444432752 seconds)
  done (took 8.719066051 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.362550768 seconds)
  done (took 7.638526306 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.846281006 seconds)
  done (took 8.120965951 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.394085107 seconds)
  done (took 9.667863255 seconds)
done (took 160.033025038 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.360063777 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.358340939 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.354595498 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.361278405 seconds)
  done (took 26.707976439 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.404477632 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.403753683 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.403251223 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.411225832 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.405862724 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.401149953 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.392254408 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.395144787 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.415945349 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.40727635 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.404014588 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.403517486 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.403352849 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.397107865 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.405773782 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.406138464 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.413717394 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.408066636 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.401513648 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.407431522 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.372759816 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.414533302 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.408928236 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.371224769 seconds)
  done (took 34.934943663 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.891305923 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.440843465 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.521861269 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.422445655 seconds)
  done (took 7.553751541 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.423299647 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.424648368 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.436229377 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.474435712 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.511196189 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.431429512 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.396517783 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.390325528 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.379697683 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.424306335 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.497487941 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.441575655 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.533924132 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.372972051 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.554365362 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.371982158 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.370515486 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.424117433 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.476355448 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.489654149 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.373823155 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.42506012 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.429212506 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.441455447 seconds)
  done (took 35.773494851 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.385252874 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.382132607 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.374452125 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.37323756 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.390943382 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.372111603 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.372878958 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.372100156 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.373521646 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.379829139 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.369970201 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.385507843 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.370474831 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.373448845 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.381419801 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.372749239 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.378881529 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.372805496 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.374008958 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.375495597 seconds)
  done (took 28.811004701 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.368620756 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.218990712 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.718602517 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.622857434 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.3658847 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.360172996 seconds)
  done (took 27.9314701 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.442824247 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.593333478 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.373456407 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.727483101 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.823882908 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.393101494 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.373238444 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.616738935 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.929593058 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.922737081 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.436180752 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.444244621 seconds)
  done (took 20.356607152 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.373977924 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.370789736 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.381567829 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.382921077 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.429322271 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.394409611 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.379744882 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.367304708 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.426568584 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.448262275 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.393857667 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.43222359 seconds)
  done (took 38.061039576 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457758418 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416043228 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.23455656 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.1992569 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.089100418 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572820993 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.140650344 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.836636054 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.374024103 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642664988 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374951795 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457905169 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.628161904 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368327029 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373554339 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.349735404 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612643691 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869296449 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365235837 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.379000929 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398592292 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379343184 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.479378983 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.403267397 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582214796 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.346604396 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.632096927 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.145913023 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658526589 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384065547 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380724182 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371317685 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645188775 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027265196 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487026283 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379808275 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.142163205 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.916237787 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.359790632 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.475901109 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381938052 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374997207 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383311431 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368906534 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.307906661 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371367391 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864184831 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.376988651 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.085064586 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373239132 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381629036 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465868289 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.375113256 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.363098027 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.461954769 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.372252096 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.36946391 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378991922 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945717417 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.895024011 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373356153 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.323651684 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.829713954 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.384772148 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022569559 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.48268016 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.376590763 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375205454 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307631119 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.43458244 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39009099 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521644191 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.390926123 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.023254318 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082905231 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.383740085 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.320054085 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922528073 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367096711 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.321787725 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601642929 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.150572309 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310919897 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.319160792 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.30908874 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088484195 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380443886 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.708030221 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380405427 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.836629206 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.383799767 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394533397 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399041249 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.597352571 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.253376227 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375175273 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.386511056 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503162778 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389593319 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.843718846 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309536419 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.368386293 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629096104 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.587022522 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373563808 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.347541751 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609837387 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375569596 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.397031538 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.386214746 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.38701745 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.970949386 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406355251 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.88412483 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397667429 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.153016031 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109932082 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377361798 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.476654111 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.38037459 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623887415 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.131043924 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.257877817 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444164956 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380153968 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.377444674 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.482171926 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.226641756 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.259058995 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.375736916 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37814982 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.409054129 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.377467244 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322167646 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.381654574 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393016393 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.15609079 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.600088376 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378904297 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654049449 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31203162 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526152448 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.382181701 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.590742443 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.581444418 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.391367754 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63827471 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3833645 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385551015 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391219046 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396481323 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476177149 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399932512 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.379821144 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.635421412 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.381800704 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.383085833 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.509274064 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.160902833 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385794181 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.384908343 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.29213707 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969275487 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375321277 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381014847 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26996737 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.392155871 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447143151 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385725105 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.389159474 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.182063598 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.271129254 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.383907089 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.382806433 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604056947 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390175269 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.427636875 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45798167 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.593161455 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.980782044 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401750945 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.316036601 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.093547546 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.074249995 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380506798 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.579121412 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379429023 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389629377 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390835259 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.959281005 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.979533481 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393025235 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.422393658 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.38730561 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394019264 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.385666764 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380670371 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.163922263 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.918154956 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386587576 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.393980427 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524839427 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.392535843 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315387262 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.897488704 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386920997 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381596074 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.159190573 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415569915 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.415034799 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874210388 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633910554 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.142349006 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393442012 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.609987578 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.416113419 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.381202865 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383804139 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390975383 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.402435497 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392602537 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.393540303 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.521498537 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.823005621 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948115334 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114634799 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952253963 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328778511 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.388185635 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.282669396 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.854340926 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31861199 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.037488804 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571275364 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.868189458 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328337847 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5945809 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.587360428 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159065559 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391723786 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610509567 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319432385 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.394312481 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397109816 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597586498 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418152128 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.389254056 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.313754182 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.658701066 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.658845747 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38651845 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460253388 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856763251 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39076378 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.160295598 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.386716421 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.698911299 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574855681 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.930201514 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.78430509 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388749545 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.392213221 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877948452 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.383757994 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.912313374 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024283317 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404610959 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.599911818 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321947471 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.397180309 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.397570579 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.380572978 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.673219974 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.391822039 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.638669294 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395967513 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31814082 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386537969 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947757613 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.249054872 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.390864558 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386549766 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13947696 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391424152 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671397294 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.387338786 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.144817728 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389142729 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.31755494 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319547733 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.08030786 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387706115 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363488036 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885735835 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.805010594 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.451738363 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400350241 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231423317 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.644865858 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.39696803 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.984482027 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629844743 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.247530094 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408744482 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.488241924 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397487766 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.373476039 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.308754584 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623182752 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301631887 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.603596843 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.272357383 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.289068005 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.386175756 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599263724 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.269900016 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396998323 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631983709 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.114893171 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.392304236 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120944859 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426136344 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401066261 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.403133097 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.833278008 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390896042 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455498856 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396507359 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.398317594 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.398504819 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.559800268 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389388516 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39287888 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.401245266 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480252617 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.9133756 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.146159251 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.16215573 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992218227 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147468615 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.00052261 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414354157 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389009846 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398567346 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325081794 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531085576 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.915722308 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661060936 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51817921 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.890379564 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410295575 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390117635 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407338675 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603174465 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663391941 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.258998459 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389147866 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.066684548 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.27097834 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400421615 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.600669072 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903157641 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954932689 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50317724 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39001698 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.857940497 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663725493 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.480515134 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390817324 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.980400979 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.406028518 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.722361677 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.412027567 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395898303 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539140388 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398832294 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035084863 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.416399881 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.545383492 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.163262811 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.437630021 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.649641923 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.853812189 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.400405946 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998703574 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.123749389 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654675885 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459855392 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402568063 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.498907963 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536909132 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.392324022 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.273338289 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391362143 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236625996 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.101003329 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.401822163 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993042934 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672314218 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.391365328 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.39223973 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415308261 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.40440494 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618439405 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095119524 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616561283 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404282782 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396522277 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.964431219 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998021999 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421840681 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328071423 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.389090914 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634905172 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.646163917 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419648687 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.845804624 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.103421934 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953927343 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.357374074 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414045151 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392592669 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.134522642 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994760162 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.176417403 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888406466 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.043888374 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403405514 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669636561 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.399684321 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406350188 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672154051 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.400013041 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405171991 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406365171 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.998155186 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175148344 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.404562811 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.472057396 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.33182662 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.618763315 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.103306537 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329503127 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398562031 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.578424832 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395364223 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526018375 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399401975 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.395038326 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409189589 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.152122635 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681136762 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.392810542 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.389379806 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.387374643 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.408564856 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404334304 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673479289 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394153455 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.071432609 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.744779763 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.652423376 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.390901631 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.373770862 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.395638142 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393220241 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.11065003 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.356102865 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.980668364 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971644213 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.397256573 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.401243302 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395394706 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.606786785 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603094779 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.40574188 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404802577 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394755665 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408425119 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.295743374 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.163277062 seconds)
  done (took 1611.181323289 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.403418659 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.407362329 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.394597265 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.421770695 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.392383237 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.455148819 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.456853034 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.438245058 seconds)
  done (took 52.673681285 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.395637174 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.542255983 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.424561305 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.400160032 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.405105645 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.397091775 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.851417765 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.3959775 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.404808639 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.404997365 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.394615405 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.398751052 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.052336981 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.404551586 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.404655967 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.380715043 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.399647645 seconds)
  done (took 66.363453126 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.396193441 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.023386503 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.494141876 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.389530059 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.345443981 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.414815949 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.252837658 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.422615932 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.39253022 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.683208077 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.053386907 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.421605449 seconds)
  done (took 85.599288185 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.404512201 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.404826241 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.402698632 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.40391561 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.407019527 seconds)
  done (took 8.328474852 seconds)
done (took 2045.54944683 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.642431395 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.094055211 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.007601251 seconds)
  done (took 5.407841409 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.544849838 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.595136347 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.715427923 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.737494373 seconds)
  done (took 7.899177287 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.67323058 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.777353884 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.585991981 seconds)
  done (took 6.344427782 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.783723555 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.410253824 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.534912512 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.398958734 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.396419329 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.396487398 seconds)
  done (took 20.497628472 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.401435474 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.404314543 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.403424269 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.404099878 seconds)
  done (took 6.922992686 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.377801756 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.069857065 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.380428224 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.388161443 seconds)
  done (took 18.525210704 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.147951598 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.161130779 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.145743174 seconds)
  done (took 7.764054885 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.413852746 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.240377339 seconds)
  done (took 9.96363441 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.690947696 seconds)
  done (took 2.995640315 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.534558564 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.727504001 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.477840647 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.385254403 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.492715828 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.153225137 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.997856371 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.593132818 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.368338466 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.519653374 seconds)
  done (took 28.558653872 seconds)
done (took 128.554807952 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.214924882 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.396749559 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.60550126 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.179552039 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.62310166 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.607424228 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.603017965 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.147628875 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.724627753 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.680233364 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.177384017 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.625703203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.54956904 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.403858014 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.549858891 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.403057323 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.632539306 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.350211298 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.864598208 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.06012684 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.601568057 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.819506856 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.005816892 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.871058075 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.62843941 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.550162609 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.392309078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.396830555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.038835813 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.453267921 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.557381589 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.237452626 seconds)
  done (took 191.263017505 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.400989258 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.417474437 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.404099221 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.39571596 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.396110438 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.402842498 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.392647405 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.411354706 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.394575852 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.418701898 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.395136819 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.395649702 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.409338378 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.397553534 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.409726408 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.405321278 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.406277031 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.403518902 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.395247425 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.410076061 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.396409766 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.411654157 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.410748924 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.402104352 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.403751647 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.420068521 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.395176214 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.412344372 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.408505569 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.394898619 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.42233722 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.40417386 seconds)
  done (took 206.257533398 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.403725726 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.404014682 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.411405646 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.411906866 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.399160871 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.404787211 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.398800688 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.40250396 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.394897766 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.40804379 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.400757802 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.395199167 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.406907041 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.396961652 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.395933538 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.410409391 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.418021106 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.431073736 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.403877321 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.422115697 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.395888056 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.403333914 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.409720288 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.404783179 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.401984382 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.404108496 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.39465774 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.395937272 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.404316932 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.422590386 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.405780123 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.403633503 seconds)
  done (took 206.282497797 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.600663888 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.411083697 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.413519545 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.346571906 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.407567259 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.409049964 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.405428768 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.606673856 seconds)
  done (took 14.911179127 seconds)
done (took 620.020391866 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.697040353 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.411690431 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.606055353 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.427380436 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.166220778 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.447005251 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.426438054 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.592174982 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.32616146 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.599318847 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.676888651 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.442589978 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.812290773 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.428118293 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.674566068 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.521583285 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.313945284 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.428113318 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.750291245 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.93532246 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.684448868 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.870450211 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.606910977 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.328189126 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.837646051 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.867390277 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.107242907 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.301385258 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.44080629 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.743189375 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.990571209 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.365330437 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.488712346 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.482348635 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.534605108 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.51754737 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.337093903 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.478841751 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.625199184 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.643553197 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.943410645 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.157910967 seconds)
  done (took 94.350095219 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.396394104 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.395803752 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.396661886 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.393812121 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.398104614 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.397988087 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.395809242 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.395652727 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.398561985 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.395042385 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.397438732 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.397010543 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.395619299 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.397772031 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.395512956 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.393169539 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.394548232 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.395607854 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.399866992 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.396315724 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.395862315 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.397527077 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.398220511 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.395545649 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.39950882 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.39480144 seconds)
  done (took 37.625202946 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.416110154 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.662463911 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.818853354 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.421270884 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.411326428 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.415582855 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.48580805 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.411859385 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.417249861 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.414970627 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.58082191 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.411643924 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.444785091 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.842940199 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.41956926 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.411424247 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.415271167 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.414254745 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.667307693 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.422856885 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.507060067 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.411735589 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.49180585 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.419658275 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.435508934 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.410683391 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.414185458 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.929058721 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.427068519 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.578821961 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.203349044 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.489494441 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.883709525 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.847296907 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.209986725 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.41887146 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.416411358 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.591125967 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.415852588 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.412305338 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.488089623 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.415992846 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.825879145 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.032636775 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.432591388 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.4141294 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.955339035 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.600752944 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.656769136 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.420923795 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.850943079 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.419146245 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.41578929 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.417734143 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.653749628 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.423477289 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.41272319 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.94908751 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.441000932 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.488334946 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.421285358 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.417124014 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.671975825 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.417654457 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.664614346 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.421096469 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.424634931 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.431474616 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.830638374 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.422841636 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.057849957 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.434093179 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.415526926 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.583897001 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.664060631 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.990494918 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.438118409 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.677576592 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.89976412 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.50726522 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.423635614 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.920159934 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.51195964 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.422772737 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.416805958 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.416790598 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.417292782 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.474292665 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.494907973 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.986384774 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.057193591 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.960828725 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.513948505 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.426862453 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.41611406 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.946607982 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.438245821 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.422624993 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.828223261 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.054757097 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.435768199 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.425639209 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.059030001 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.437259059 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.493336661 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.425672648 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.838877723 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.418052455 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.467529471 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.419459432 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.428714328 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.437193919 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.495896979 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.424049738 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.418983952 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.031274862 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.606641044 seconds)
  done (took 185.462001393 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.416252089 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.407662805 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.415800095 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.413087048 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.412225234 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.417944182 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.409802973 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.413950554 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.417142488 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.410071918 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.409579157 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.412887694 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.414652317 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.412671002 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.420544807 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.417157748 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.027390342 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.413434644 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.417892963 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.410641209 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.211572159 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.412228291 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.414430467 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.409396044 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.413069859 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.417236422 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.417753277 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.410766853 seconds)
  done (took 154.321278261 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.424677247 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.98247157 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.436942412 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.548087832 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.43862691 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.421175257 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.549175325 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.478586971 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.436319332 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.417681988 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.418748081 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.726019407 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.419630384 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.939736212 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.612644344 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.567934015 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.937066085 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.440056178 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.422356086 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.421554205 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.556399345 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.426321784 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.724931967 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.98548531 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.439881297 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.987507348 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.409039409 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.42431642 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.423025603 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.988526072 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.439072245 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.727275352 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.500152828 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.482899715 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.998930857 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.952706097 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.953975991 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.569251766 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.422795285 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.422398529 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.42336539 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.408682742 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.988705063 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.437687255 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.424823923 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.975591416 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.438733117 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.426731957 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.43400366 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.422146602 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.483961856 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.496429629 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.740485974 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.991744806 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.517280927 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.442848437 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.55574653 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.817404714 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.424949525 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.943597415 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.410930581 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.995772565 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.440054991 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.407894665 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.425226087 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.428615924 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.572161077 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.554341695 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.93828916 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.438268692 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.939035401 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.585685125 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.426432583 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.426003547 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.428211649 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.991370155 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.956039509 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.586694678 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.557956361 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.613936286 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.409172881 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.426058994 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.41209571 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.504537924 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.4240029 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.993017779 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.954291744 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.440730249 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.427761418 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.429794334 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.429971051 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.599335109 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.003514247 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.513174755 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.930999805 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.748793177 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.723929051 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.422300603 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.482931293 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.439967859 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.732384871 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.422549337 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.484770674 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.88111302 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.729007651 seconds)
  done (took 169.086188691 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.6664341 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.611585801 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.515477231 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.55058812 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.008376519 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.986406662 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.667239568 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.568820243 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.531123539 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.679923251 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.566561886 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.514641279 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.590093767 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.499020861 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.146351123 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.507829333 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.532101639 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.566859319 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.533308009 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.431277949 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.07676844 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.700260078 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.593419828 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.294370093 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.522911696 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.219798029 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.973810085 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.947687322 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.592947438 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.696578933 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.94984905 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.532179379 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.369555324 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.110120426 seconds)
  done (took 67.585923209 seconds)
done (took 709.743464966 seconds)
SAVING RESULT...
DONE!
