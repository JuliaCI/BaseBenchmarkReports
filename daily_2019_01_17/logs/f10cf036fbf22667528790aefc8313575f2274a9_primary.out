cset: moving following pidspec: 15951
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.320000627 seconds)
loading group "string"... done (took 0.539343011 seconds)
loading group "linalg"... done (took 7.487804874 seconds)
loading group "parallel"... done (took 0.171015594 seconds)
loading group "find"... done (took 1.149323066 seconds)
loading group "tuple"... done (took 1.824434989 seconds)
loading group "dates"... done (took 1.247162885 seconds)
loading group "micro"... done (took 0.229018888 seconds)
loading group "io"... done (took 1.09334834 seconds)
loading group "scalar"... done (took 40.423005793 seconds)
loading group "sparse"... done (took 13.126324904 seconds)
loading group "broadcast"... done (took 1.043660186 seconds)
loading group "union"... done (took 14.177644601 seconds)
loading group "simd"... done (took 4.701977439 seconds)
loading group "random"... done (took 9.55136182 seconds)
loading group "problem"... done (took 2.002934105 seconds)
loading group "array"... done (took 22.332994422 seconds)
loading group "misc"... done (took 2.02419867 seconds)
loading group "sort"... done (took 3.407613925 seconds)
loading group "collection"... done (took 19.618674183 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.574617044 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.157817295 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150164807 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.149575813 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.201653106 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144903142 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159565878 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098106336 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.981903729 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.173707761 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153766437 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.526960858 seconds)
done (took 5.233028104 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.220272972 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09464892 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104919958 seconds)
  done (took 0.903309218 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076963609 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145955004 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094680443 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078218893 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096155996 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077768431 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095291898 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07787225 seconds)
  done (took 1.375946504 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086266859 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098443385 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081994033 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097690032 seconds)
  done (took 1.071396838 seconds)
done (took 4.363857695 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.732094039 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.276958988 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204962948 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.463898269 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194576666 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216881144 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67624375 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.337187779 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254201578 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099860062 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.13481267 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396319608 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13762497 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683610767 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092056435 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125267049 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179211206 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.441685777 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082239861 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110007978 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11721778 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141081193 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131477771 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090688807 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184389983 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081033585 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.195018559 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10765412 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081128559 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.276569543 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200676312 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680280579 seconds)
  done (took 10.872225035 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111189176 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133925669 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097849364 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13823957 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134952001 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099424044 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084244942 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097137213 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122175864 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177055458 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130162408 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.123417008 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095482158 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081473124 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115270051 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246899001 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122229127 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.09864233 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101067663 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104720038 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12293396 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112595518 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108501339 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092662159 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167043927 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222790211 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110927736 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126960952 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097705062 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113161 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143589369 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141636604 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095635738 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08071287 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172073724 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123947194 seconds)
  done (took 5.172118003 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.097188445 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19019466 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121718342 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170200986 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080360532 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143638985 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095581608 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113600221 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257290213 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.120033674 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.493713824 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142979497 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099718104 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099520319 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082283243 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097851295 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.655415589 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156761705 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116234111 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114918294 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102426663 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08418674 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363934081 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095819103 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079549249 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097404852 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.070426839 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160437232 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098483368 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.187187527 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124612937 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101966061 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132242724 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.189889578 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126616263 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116792404 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097533601 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07821508 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.192013089 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088718728 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096497957 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102100906 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134912003 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134215183 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098294855 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080143534 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.210022249 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08001469 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113817843 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.92057316 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181015119 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.12054222 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098604548 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.307212343 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097157581 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098621889 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.0934671 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.25840455 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.205489539 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101204046 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080437794 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095795315 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081649584 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.394582472 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098058375 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.659032008 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084136348 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106426964 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082420761 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097467978 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10310585 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087012012 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116133299 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079583048 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.122565081 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098660565 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080473629 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095730349 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081989192 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09496989 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.090264113 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09485431 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215621864 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09765728 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079797352 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094903399 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.076785401 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117081049 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125936625 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085177485 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095705629 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129742524 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083596369 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097662569 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116324174 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09920408 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106838314 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098838489 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126478326 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096705905 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.136963031 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096929424 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12410499 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099877205 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113203495 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111207742 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099179595 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.169561986 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077998027 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095497713 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079367801 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097062832 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081054607 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100032451 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109081624 seconds)
  done (took 22.801252264 seconds)
done (took 40.647846999 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.327467758 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105133436 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104842439 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104620708 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102126658 seconds)
  done (took 1.528777412 seconds)
done (took 2.284493018 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.288282197 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175393879 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097218906 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167897644 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094160775 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.165510656 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162322905 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093888563 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219707765 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095991043 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162153175 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076085364 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096026799 seconds)
  done (took 2.679877639 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095013328 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116195827 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083286975 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111514595 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076769639 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11176498 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092846201 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117475146 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110934172 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08547158 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095544986 seconds)
  done (took 1.851559475 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095649554 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114977675 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082257439 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111048393 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076674243 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112320449 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093424047 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117689356 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110846937 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085555289 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095359844 seconds)
  done (took 1.850609574 seconds)
done (took 7.129916483 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092260349 seconds)
  done (took 0.84209698 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.943944769 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.82513636 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113974774 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148559754 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.313037 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.171883249 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.472867553 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124246761 seconds)
  done (took 11.072683224 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.114488772 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.115009256 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104249352 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083871674 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102554415 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100523773 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085907005 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102974669 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084445651 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099665207 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08217327 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101209209 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098807036 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085379417 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102301849 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086648516 seconds)
  done (took 2.365318343 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118607306 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116996956 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107826151 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10834483 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.0861807 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105933999 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10665929 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088216061 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103189258 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104184675 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089470366 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106214492 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104791476 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079211512 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106747152 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109053464 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086128477 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10729882 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108025576 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090036894 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.1073835 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097056156 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086517375 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107103846 seconds)
  done (took 3.296419932 seconds)
done (took 18.330127332 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159865385 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108227495 seconds)
  done (took 1.024914227 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095657316 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113767128 seconds)
  done (took 0.970674038 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098343433 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097136097 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120541215 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109865424 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08055591 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097682185 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120591451 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07965697 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098354828 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096973788 seconds)
  done (took 1.764107821 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083318601 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110372036 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100499954 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095387988 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106319556 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095140447 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088243884 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100295976 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109683049 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077311406 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102359355 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114680046 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085644409 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116448629 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105785885 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098861278 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086001429 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099002561 seconds)
  done (took 2.538877534 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080772341 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097126948 seconds)
  done (took 0.943657309 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081667872 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094654508 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082020731 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097977045 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093910931 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.07807386 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094808726 seconds)
  done (took 1.38753605 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.440683925 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13546419 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260029037 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101265314 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103247496 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.298115791 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098706599 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083676358 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104011287 seconds)
  done (took 2.448734814 seconds)
done (took 11.840194761 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095423112 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116082269 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112800744 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.463710946 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108654182 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098988844 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146906304 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253369817 seconds)
done (took 2.165189556 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.14469081 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.572530234 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.428097521 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.231732849 seconds)
  done (took 2.004972146 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.405268458 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099586694 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085084189 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082005866 seconds)
  done (took 1.447827593 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080716708 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100271989 seconds)
  done (took 0.956898288 seconds)
done (took 5.330255462 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081214844 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098996 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.113314638 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097513002 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079922123 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097153491 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077514273 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.099598806 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096192158 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080961269 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097969574 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080270862 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096658088 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077972199 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094911645 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081133434 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09494264 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077745404 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094792545 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077572297 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097717381 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077834505 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095155413 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078070021 seconds)
  done (took 2.955299076 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100700333 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099443572 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102992019 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086257811 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103270269 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086031677 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104906662 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097646219 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086129602 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100907385 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102199147 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085123785 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099718134 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084039395 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100466691 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101762147 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085953921 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098284429 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083409017 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102351272 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103035934 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081162435 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102613861 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102931178 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085329348 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101831527 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082865693 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098941325 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102772782 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084992079 seconds)
  done (took 3.636277527 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086490592 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094730242 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079828952 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102446636 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078431855 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097358051 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078173405 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096804642 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078627276 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09694176 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07847097 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096195369 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077389482 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097887046 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078157675 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100612121 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113151473 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078481006 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094784793 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078926172 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098879278 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077751388 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095638803 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077481259 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095429256 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077535286 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096599686 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077105916 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096971572 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076810817 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099113228 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081172544 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096377052 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084188923 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099941375 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093954273 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082735091 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094177377 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079611754 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095102589 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077799676 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095491709 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077972091 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102443972 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07818317 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098229358 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077946088 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097853063 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078516937 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099775726 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076955934 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095100588 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095649321 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080317144 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098722326 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078188988 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096269361 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079049706 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096386229 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077681556 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095106896 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077518564 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09801802 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079379094 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111050959 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084742129 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095996009 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078914224 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097715492 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097463123 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.08063766 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109596662 seconds)
  done (took 7.208215328 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.132642264 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126494187 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080967932 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098662884 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077168721 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09669608 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081511661 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097707226 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097597794 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084906117 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097038872 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079117469 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098575985 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093591498 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098246653 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097929574 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085820896 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094521245 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07870032 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100539189 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078113171 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100757749 seconds)
  done (took 2.861214013 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210120159 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106251593 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142623748 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108233111 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083435086 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107633762 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102188609 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087000428 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103912728 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083432064 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101660402 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103440833 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083015342 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1025846 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.209888788 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085196239 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103812859 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083927737 seconds)
  done (took 2.796329028 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093517131 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099797795 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.097648927 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099995673 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099639459 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084598438 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104329606 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109119746 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085128932 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099521687 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090710551 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103167995 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101325407 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082347363 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101335782 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081440793 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102342945 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081328562 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109499274 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104905134 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087058508 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109778916 seconds)
  done (took 2.920536546 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09713112 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101913758 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118659886 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085631001 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096744875 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.0795121 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106969501 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080592388 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108941642 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101582338 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081681044 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09871906 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087872001 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10069833 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104386032 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081785008 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102610217 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081644636 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102309666 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077244876 seconds)
  done (took 2.689881522 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102427624 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10217649 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099956237 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091120133 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101471416 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081990612 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111229927 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101901085 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081677252 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126585386 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101382657 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081538537 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111244863 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107580458 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100517502 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092122271 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110449492 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110497528 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082433796 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102141353 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126455965 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081949977 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110560228 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101647043 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082818222 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101655771 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100590645 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08773393 seconds)
  done (took 3.589746681 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083079798 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098811613 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079603247 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097247261 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079646703 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097022958 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079032327 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097206864 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081068428 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096768938 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081599449 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099971032 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081246339 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100290654 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080375581 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099854058 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08164148 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098102995 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07849944 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09812186 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080938034 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100545897 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080140329 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097654706 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078122414 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100683131 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078207329 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097083638 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080497464 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097586263 seconds)
  done (took 3.478797871 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091980117 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107963335 seconds)
  done (took 0.998722889 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079450729 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11534236 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079189713 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104590178 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104191641 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083413369 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108971176 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086107339 seconds)
  done (took 1.559964067 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097681958 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111548727 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082495091 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114628727 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111069319 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09888493 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171087872 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102490897 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105965659 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.079560274 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114238407 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08129055 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106693141 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082092012 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107056131 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087158433 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099154655 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105657648 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085131363 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09971032 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08215167 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113035294 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1020659 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.079725039 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102290253 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091410629 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11311414 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101456229 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086059015 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107948461 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087362881 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095272973 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082055486 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102085201 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079426481 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110353462 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117220666 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08414538 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110598815 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101899581 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094304797 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096258237 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085853812 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108409834 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111227093 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082798466 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101527874 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077511052 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101420102 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084549328 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096667511 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080983568 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096156614 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107158862 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085868762 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112302204 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080176446 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102527607 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084610933 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10492902 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108025236 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084293372 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104100635 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082007977 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111776263 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086585157 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11222878 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096479228 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.076785002 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099520927 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092281176 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12550359 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.1075588 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082677186 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103437304 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080006844 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104590509 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101294105 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088698364 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107894405 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082493044 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108909763 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10842967 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082857559 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104217316 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090477463 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09991796 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102729374 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079997964 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118723304 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080807183 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098989137 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.07913945 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112493421 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104092112 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081840961 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098919948 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089989377 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095684273 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082259242 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103316634 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081857414 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113199801 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107049904 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106389762 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091613801 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.108559571 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081535241 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104849497 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079228738 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103353925 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083530241 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109446101 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094443813 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086076403 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.102379696 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082991685 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111150617 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079513674 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102594344 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108936319 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088335452 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100724556 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079468546 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105140561 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083018248 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106731107 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110114019 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.081054019 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.097210687 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078820058 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106275252 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08182045 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105410295 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106555686 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085940523 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095756256 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081516309 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107179492 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109683294 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083080607 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102581969 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.08823636 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102650592 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081633743 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109074077 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.103211916 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082227731 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108270544 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083032479 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097702108 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08524543 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104768743 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099477744 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086292836 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105863077 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084810611 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102916541 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080417038 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107687226 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101937593 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081495759 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101497378 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08116148 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111936282 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.0839391 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09720277 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097636843 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091748172 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099487146 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082501042 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101233037 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084378312 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102900297 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079893909 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102044296 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.10213357 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094219918 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106591151 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101224986 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089004532 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113872624 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082046226 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104339032 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081476193 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103536824 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102319365 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092224119 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107861454 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087243156 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10501018 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077411682 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108058386 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109276222 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081988177 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.10018906 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08077264 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106488747 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106637946 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087707749 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102749099 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080435396 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103014174 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086842139 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105586029 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100345755 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081789945 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107144598 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081784347 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109253826 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102692439 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093568041 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105567011 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077925629 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106632144 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079615743 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108983231 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096945983 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080536378 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100191621 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084280476 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101251338 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085610741 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096548219 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089817279 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110246771 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10203412 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083112546 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10220287 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090060459 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103834693 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086841586 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106828209 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108382472 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094889479 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101146968 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085192242 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113259036 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101268635 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077857469 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107815884 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082036059 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102123556 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082367221 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100395849 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086369004 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111717004 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.109881647 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077127629 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105095075 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081086857 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101871481 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078720419 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107627658 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105054792 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084341169 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109855513 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083814948 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103606579 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086441671 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102201279 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103084295 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084852151 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105725947 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084185726 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105677149 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081136164 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106188353 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080564743 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101058113 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103022603 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083517893 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102538907 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088976103 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102272944 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082092167 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10508462 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101927987 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084577277 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101982991 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081677448 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105564025 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08292926 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102605912 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08488804 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097998568 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108596232 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083876919 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110762324 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083286174 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100999605 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087821423 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.10558207 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108029169 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085377467 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104146845 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084784455 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103058458 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085718937 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110542384 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099927469 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095277521 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112252726 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083014703 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105752986 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101719437 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085843072 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.10170062 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084992997 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103456759 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083264577 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103360149 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087602373 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106625949 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101828409 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085034242 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103661397 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082768325 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104223253 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077342522 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102316511 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081899318 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10398153 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112285981 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084519198 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104904866 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081885675 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104732461 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081364846 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.10023233 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111074205 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09258459 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104643116 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110520756 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082961765 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104009231 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094035517 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097006857 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081202704 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100940497 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080077749 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110862594 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.1027523 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09272236 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103294559 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082201232 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100605846 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083722261 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.111264976 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07723357 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101112547 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106597222 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085721962 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101799425 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083936742 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106583954 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084996514 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113852541 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102151352 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084664859 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10309853 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079981003 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.10223133 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081914593 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105992388 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083530117 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.10084448 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079679762 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10369587 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102353401 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084612106 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10218054 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084487695 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112447344 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082962305 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106762239 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106127157 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079482475 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105193497 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082985129 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102268504 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082547059 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107065977 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085604673 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104703173 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112704774 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083066607 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103711768 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082800873 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102250513 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081922388 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103177809 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10289892 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082857122 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10411494 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091421946 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101187148 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.084946856 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102952718 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.082663203 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109779264 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104316976 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086851154 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111318002 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.084940463 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105711783 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110787768 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087809154 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107642701 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083938348 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106117069 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108556663 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083368639 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109808737 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082975834 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105116822 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08508012 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101844298 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082975917 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103946513 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10108991 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090276664 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104673015 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08319724 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102748912 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080573858 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104461203 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106581 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091445982 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105299957 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086155203 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099295068 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079181651 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105331789 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079452167 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105548887 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105511054 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090125791 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105864369 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083139925 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102937042 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092284158 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110818309 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106507833 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08155013 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106938376 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.0844194 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105846432 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083606377 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104191277 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103462305 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088803272 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104822822 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083091422 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111449276 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086167917 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105172463 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103459566 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085730376 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10279987 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079413506 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104943479 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085943226 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109629241 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085690429 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104744408 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113816345 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082856843 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.103607463 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086429575 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103070236 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106282154 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079839248 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10367256 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085407526 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104452048 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079388734 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103030052 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080674092 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106304659 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082870118 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099248811 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113956835 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09272867 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106742022 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082044611 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103104578 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078113037 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099981172 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101476193 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085817929 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105469989 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094760331 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103156135 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082094104 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099747897 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083047188 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106886138 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10585263 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081060999 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098380666 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081941206 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107482366 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088196548 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10239325 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.081892299 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107317618 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105312709 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081899839 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107229757 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079671488 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108061032 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116434927 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085981712 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104125468 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089803703 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112528094 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103044078 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079891038 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104605284 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086724392 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.1036312 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084773309 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105176502 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119842731 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087173173 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103073053 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081818878 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106853638 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082795964 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11256889 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105047141 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085548067 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108494196 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08541829 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114613595 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105873177 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093039498 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10745082 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087383362 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10387467 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08281155 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103319378 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.10157274 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.086146462 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105271967 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089199903 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112531755 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102224851 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096206515 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113635265 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088578681 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101480078 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083206719 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103929978 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098004812 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086203381 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102696194 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.083340046 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102758478 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083292941 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105601114 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089167162 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106100188 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084565511 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105447264 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097568787 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087066638 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.106232752 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085351622 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101133942 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08486409 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106139083 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087524118 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110205979 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104031581 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086494638 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106183734 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084932546 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099723219 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090523282 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104044486 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085561452 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104401861 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103524437 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.086413718 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107800462 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089456962 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10662811 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085753024 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117350093 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106835596 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081743491 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102072602 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089760887 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103208886 seconds)
  done (took 58.279336504 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148685976 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0814373 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100700802 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079466297 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114184475 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099841543 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08053428 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100703428 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080214912 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103519458 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078472963 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101268632 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110166998 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124938257 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092523551 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105797243 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099800176 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082183676 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099470614 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081533729 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110426115 seconds)
  done (took 2.920703735 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106089014 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122182364 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117293671 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120339976 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090623486 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117963744 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11659211 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116030835 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099116944 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113200464 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118948951 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115821123 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09186651 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.113432891 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111755299 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092608043 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120745611 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110765433 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116639289 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095277638 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114576127 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11572393 seconds)
  done (took 3.282167285 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085004091 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103022516 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085752079 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098775621 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08295316 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099923573 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.08777463 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102764734 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085878824 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.105745396 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08148599 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.104036809 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.105891335 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079349141 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103563106 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08245027 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153588636 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109214168 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083611496 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.1064199 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.099367137 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087021533 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099501663 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.07963521 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103141582 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088042841 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106716771 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081427512 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105052823 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081912551 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104749384 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.101168472 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.086207293 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10442647 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08315752 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103202255 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083660893 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104495687 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079177775 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102977709 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084145128 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.101750858 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083731784 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106826292 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081937085 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103807836 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.106146416 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084673041 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.100016411 seconds)
  done (took 5.53323162 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105375809 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163340573 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08709063 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144168471 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122762557 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113988078 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087546937 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143974221 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104697098 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081890039 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.127051663 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121842072 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105812331 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089100215 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112659185 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10536272 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08597916 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104522924 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108691743 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084676757 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110470897 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.110880953 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100956354 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119507188 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109113872 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083849096 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10536108 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109524107 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098005487 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111583615 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.11066998 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089673609 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122593439 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111241943 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10381169 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087781894 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123698733 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105151868 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087307671 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10350169 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085896275 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111208868 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112391641 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12359079 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086025544 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111624441 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084318599 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.104484228 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119603986 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086446993 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114410625 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122045337 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108430452 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084615832 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110411373 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121017528 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083846503 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104584155 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107971539 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.09814017 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10345027 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108859557 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.099044843 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108131199 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112375159 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120778153 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.091123977 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110193025 seconds)
  done (took 8.233007048 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094498376 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113273157 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122126417 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120874423 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091389462 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113215105 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111343684 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091650831 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112708157 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117900055 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111691799 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13542818 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086236694 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116373992 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112229849 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0908943 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112206224 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112170258 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090663757 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11318212 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11196422 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121254383 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090841647 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121523089 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143010644 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107166087 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089680731 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112998513 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122074395 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112071045 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124132256 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091548916 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113680364 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121951662 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12420793 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090235876 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105488189 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11185261 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09100245 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113498288 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106486577 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120907993 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091894921 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107327365 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11207604 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091625382 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122007272 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124876319 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115873632 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117096788 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.092340446 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122027913 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112603614 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089729412 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121951789 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147545456 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12175404 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122844136 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112830598 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120937632 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100115795 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130099935 seconds)
  done (took 7.753299512 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107983196 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11639428 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118399735 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101219273 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083790324 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110361268 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082470121 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104694024 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114830765 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095079006 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118982712 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110876071 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092544922 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118731943 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111236858 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112733211 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089360679 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.1107392 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115924234 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109226129 seconds)
  done (took 2.985997613 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095340215 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125442256 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085394795 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114337901 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109106096 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091110358 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109553212 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108698393 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086692528 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109361581 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095647136 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118596716 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107703743 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090481803 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117920552 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113577569 seconds)
  done (took 2.539726892 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098888414 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118598075 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122817127 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084588402 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106659289 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080061973 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107756921 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101484827 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081374756 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121274019 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083633731 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110995155 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107236969 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08317263 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103334286 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087252739 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103237569 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082058151 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107333207 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121378592 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096135742 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106029173 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106561888 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08802357 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106947916 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090454939 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107915058 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104223344 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083195728 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107801299 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08507096 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115212928 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10302925 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084034069 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104772266 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082192466 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106476812 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08395393 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110459929 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10604656 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08399921 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107135538 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085118735 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108225053 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.07981451 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10749263 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101640546 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091899592 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105243257 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084475596 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107556182 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107778499 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08673486 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11695078 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088454155 seconds)
  done (took 6.318680402 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100591157 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110401188 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080350382 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104788065 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087741791 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109439182 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109828968 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088917733 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108317869 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08208633 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109003838 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088526517 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109261743 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109850374 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087866095 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110234703 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080373746 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108874221 seconds)
  done (took 2.657240682 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092411879 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106177723 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093378972 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107255704 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084236726 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110191122 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079955003 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105659532 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103704266 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086561902 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106114327 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087906677 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105710951 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087323075 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107415475 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084356893 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.111195669 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105216811 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086226096 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101903537 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088119363 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105715481 seconds)
  done (took 3.015679619 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118940652 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127179323 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09187969 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.233981558 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103895827 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133574087 seconds)
  done (took 1.680435008 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110997536 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122380267 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10748774 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107254558 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116746975 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106649294 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089038717 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110088446 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118594061 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10186553 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109884483 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119798796 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119034385 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096260346 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116330868 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115171652 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107751954 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088161004 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107541009 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128693758 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087747523 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119392803 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108491611 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086634784 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109295115 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11893963 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119083502 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123510702 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087856731 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1188656 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11494755 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087513619 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11981253 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123264658 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110024289 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098539305 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10996837 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129723113 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115169034 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096680905 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110986398 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116213613 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119112327 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094449895 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11959334 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109512346 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093993275 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110013992 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10902908 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137267428 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113710556 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096814488 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116649691 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120415202 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118636887 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136161751 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101328962 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11883338 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11689371 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123750892 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118482887 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093661162 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117980465 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124054425 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116594097 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11775283 seconds)
  done (took 8.235521919 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104850494 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128535155 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109429098 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123393482 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097013247 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10929021 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107811355 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08772836 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110091878 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107736778 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153835392 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088759879 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119478569 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118936839 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108256278 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089379181 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109378988 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119060481 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087274297 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13553421 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108911976 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118864426 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118232069 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097539396 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123573773 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115669057 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108984468 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088421192 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109673033 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108330634 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094005336 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111017564 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118250057 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086331443 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119038318 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110356983 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108106211 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09405663 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109956554 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115513967 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096785016 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129071036 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109537639 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10946555 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124075258 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087664832 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109829228 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086859982 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110830027 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108705245 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122800484 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102053491 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123502728 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119063339 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108996021 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086869591 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109378437 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108991903 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087829386 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117764546 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119548952 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109003588 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136934952 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088809667 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1098558 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118280443 seconds)
  done (took 8.105285481 seconds)
done (took 157.007997767 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.221544886 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.201692327 seconds)
  done (took 1.301982612 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088671995 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137736157 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095465996 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171563059 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085062684 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142534634 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139780916 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098077527 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108148914 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086292325 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109310307 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086360497 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172844503 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085250923 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108796345 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10862442 seconds)
  done (took 2.710564729 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.115038265 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256019904 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.123612458 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105894093 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090438449 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111700594 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084465693 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113467751 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089776936 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106180666 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088369493 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.108735781 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083237608 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.10866804 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110084714 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089575776 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106564147 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089108654 seconds)
  done (took 2.863366639 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115305859 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150927939 seconds)
  done (took 1.154853928 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.244566435 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163846713 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.233007247 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.475915191 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.275468306 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.359909878 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.205129422 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.216448752 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.163547821 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.211508105 seconds)
  done (took 3.430420375 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119298333 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182562636 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31872189 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15702602 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10715434 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128917037 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157355435 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13211116 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.124636359 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101587554 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123810562 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11974011 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138972903 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093997316 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116663273 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118446961 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120951019 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115217459 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115903867 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.0953826 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140634222 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107007121 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095417782 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115293928 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.119501924 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098846667 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107795039 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084762572 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.119030487 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115190389 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.093285968 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125825007 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119991784 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.155699682 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123830865 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157081989 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119556847 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090745362 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.117239747 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111546424 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097863733 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119822204 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125786824 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096642474 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107703614 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.095734622 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107440545 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.105149421 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.09436209 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.120048967 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11536168 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.093026453 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155480057 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119721045 seconds)
  done (took 7.448951942 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.798546621 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156686735 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088894765 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.885104556 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135512153 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103831527 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.775161279 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111254118 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.264301419 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.752392375 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134287001 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120163703 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204332755 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.261210077 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.965176131 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290906017 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.637780674 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124337862 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1517478 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153225866 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118506057 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114329316 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131215628 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430472868 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117551164 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112197472 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096379335 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119937066 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159660481 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126096206 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090618195 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199792218 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251477004 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204914471 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093861622 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112271994 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110687524 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171720924 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270290169 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192582771 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179087724 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109405688 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088593558 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122248837 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132744261 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10714092 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163330238 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174666107 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169126387 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11541227 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118418739 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097749973 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121058851 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163603683 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122215693 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318211708 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319436861 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08913491 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123017635 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126347219 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267423629 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100881841 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223988424 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139404342 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212021302 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089750416 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.856113642 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168293027 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11132706 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094144964 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120505497 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115877358 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.118400306 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144810725 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.405993688 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124185035 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115020107 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088541251 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229905445 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.12383884 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089945105 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162307412 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11735043 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120689299 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122318738 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10094117 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.19017721 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.233748816 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122034094 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099032538 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11602431 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124045351 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.0945909 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.218663119 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218597732 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.18343905 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.216348298 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121408564 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164098537 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169644914 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120200322 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173547172 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120230668 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123534013 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100299007 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216264503 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145430473 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.1241689 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092363828 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118698474 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147863577 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126981794 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118285766 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170361176 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456442129 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.1907933 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087596734 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128092569 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119625529 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162415197 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11598102 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.24428887 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123287566 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168667888 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121178012 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086378919 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121715937 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162687041 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123006893 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122218513 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122198192 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097376528 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.25902425 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.195120625 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122095994 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242629308 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184698144 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096130848 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193011103 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099914091 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190531118 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099164712 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122299387 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118475748 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.827563445 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125073912 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120445396 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093432104 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187032225 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112781776 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123804631 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103530254 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109780949 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.845708843 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105354157 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.123006654 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124756878 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095404945 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122101219 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117615939 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092720325 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183676123 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228098941 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098411613 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119698424 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12348915 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162440874 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093439876 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126377382 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126020713 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124998589 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099614373 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116056833 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124796073 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171472037 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162051504 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218330539 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.596424175 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089677951 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124996037 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228148609 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110424339 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.268603134 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120221515 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224725168 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164561678 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121549036 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321765411 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167183186 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187476335 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127597827 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174582937 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108631936 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09769126 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.185758826 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09094499 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118216561 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162404179 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125160988 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09871404 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.985734547 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112875937 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234284254 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108962871 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172659345 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116288532 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098366589 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292204573 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111911388 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104865346 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186743708 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092344817 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126229207 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.865570617 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103032092 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12250215 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118114647 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221978531 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164474487 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119621916 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097619309 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120293647 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162212168 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.21488238 seconds)
  done (took 44.396399129 seconds)
done (took 64.191134416 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.281417129 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218995257 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.270611527 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170898041 seconds)
  done (took 1.935327414 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172961412 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150892486 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12161129 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109056499 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151864342 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08504841 seconds)
  done (took 1.707992195 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.367117698 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27845763 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244752673 seconds)
  done (took 1.810289694 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.29109533 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.247518505 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476189477 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32617244 seconds)
  done (took 2.383633266 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208205358 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133008736 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112927566 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103491951 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.1995889 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.24580735 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143026337 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201762938 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.09772308 seconds)
  done (took 2.409970009 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.19981155 seconds)
done (took 11.366449775 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.324474344 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.182903665 seconds)
    (3/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.155617633 seconds)
    (4/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.270590236 seconds)
    (5/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.122795448 seconds)
    (6/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.225558483 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.205148742 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.221324519 seconds)
    (9/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.197595492 seconds)
    (10/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.199763052 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.116432475 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117576551 seconds)
    (13/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.155359889 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123580618 seconds)
    (15/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.076960562 seconds)
    (16/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117834923 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.112277191 seconds)
    (18/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.119186207 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117834498 seconds)
    (20/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095272343 seconds)
    (21/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117480587 seconds)
    (22/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092072036 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.14738618 seconds)
    (24/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.204201286 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.149301976 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.229276272 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098243849 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.190421834 seconds)
    (29/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.178352323 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.156489644 seconds)
    (31/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.223085894 seconds)
    (32/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.170129591 seconds)
    (33/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.179245466 seconds)
    (34/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.125103253 seconds)
    (35/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.136002876 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.200308406 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.115265208 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.145451197 seconds)
    (39/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.202906964 seconds)
    (40/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.148071604 seconds)
    (41/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098021638 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116993998 seconds)
    (43/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099401257 seconds)
    (44/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.165907484 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.138257667 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.168111416 seconds)
    (47/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.083795894 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.138952532 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.161496796 seconds)
    (50/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120731593 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118137844 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094489775 seconds)
    (53/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.121522352 seconds)
    (54/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091221627 seconds)
    (55/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.089812693 seconds)
    (56/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.174120016 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.191644831 seconds)
    (58/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.120096093 seconds)
    (59/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.091793545 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.13832149 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111393083 seconds)
    (62/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.183648364 seconds)
    (63/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.115895271 seconds)
    (64/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.256227036 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.070732599 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.21635163 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.176719468 seconds)
    (68/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.120570991 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.223807876 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.114799644 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.12323805 seconds)
    (72/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067055364 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.196513327 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115314111 seconds)
    (75/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.233673657 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.124340158 seconds)
    (77/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.14654219 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.112865906 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.208478971 seconds)
    (80/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.19320268 seconds)
    (81/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.09116467 seconds)
    (82/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.152425669 seconds)
    (83/309) benchmarking ("sort", Int8, false)...
    done (took 0.188566692 seconds)
    (84/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.095719642 seconds)
    (85/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.092725314 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.09666759 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.121640197 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.085797346 seconds)
    (89/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113434555 seconds)
    (90/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.065393288 seconds)
    (91/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.219469508 seconds)
    (92/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.12072899 seconds)
    (93/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.218446859 seconds)
    (94/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157266814 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.143680774 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.22600579 seconds)
    (97/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.184444592 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109958767 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093764055 seconds)
    (100/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067834092 seconds)
    (101/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.176030554 seconds)
    (102/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.183766261 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.095900452 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.119179635 seconds)
    (105/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066188208 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.134480516 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.129147385 seconds)
    (108/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.176791184 seconds)
    (109/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113496577 seconds)
    (110/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086882216 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111122711 seconds)
    (112/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.122363979 seconds)
    (113/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.089993266 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.17205967 seconds)
    (115/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.10947349 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.093647586 seconds)
    (117/309) benchmarking ("sort", BigInt, false)...
    done (took 0.244495302 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088187067 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.413833766 seconds)
    (120/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.078252995 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.195170896 seconds)
    (122/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067172365 seconds)
    (123/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138484719 seconds)
    (124/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.118665213 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.08688155 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.118390224 seconds)
    (127/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067871097 seconds)
    (128/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.142682189 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092824554 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132746551 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085709575 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.181035754 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.1196818 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.092328266 seconds)
    (135/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118341743 seconds)
    (136/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.20212026 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.090997118 seconds)
    (138/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109679642 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.133805939 seconds)
    (140/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088404207 seconds)
    (141/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115228923 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.142231446 seconds)
    (143/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.179867754 seconds)
    (144/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112671939 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085498305 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.140978033 seconds)
    (147/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.100055153 seconds)
    (148/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.14056302 seconds)
    (149/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.216735063 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.0928456 seconds)
    (151/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.112637065 seconds)
    (152/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066924851 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.093455655 seconds)
    (154/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.124594792 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.11086351 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085294396 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118668009 seconds)
    (158/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099980549 seconds)
    (159/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.13982634 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.084988585 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.172150424 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120679169 seconds)
    (163/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.129560028 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.180569821 seconds)
    (165/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.100155978 seconds)
    (166/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.073036499 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121317891 seconds)
    (168/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067983388 seconds)
    (169/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.214800714 seconds)
    (170/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089448391 seconds)
    (171/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.091309358 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.180079506 seconds)
    (173/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.092371522 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.0780317 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.214137952 seconds)
    (176/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.075979906 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.132610419 seconds)
    (178/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066619734 seconds)
    (179/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092890114 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.204307422 seconds)
    (181/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06747594 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.190798304 seconds)
    (183/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067309991 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111456618 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.09223485 seconds)
    (186/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.165053798 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105038603 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117886116 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.136523423 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.099149745 seconds)
    (191/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.090985456 seconds)
    (192/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.154152921 seconds)
    (193/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.092645049 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067434666 seconds)
    (195/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138147822 seconds)
    (196/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067124277 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.123464614 seconds)
    (198/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067002193 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066108218 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.136337616 seconds)
    (201/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.065967446 seconds)
    (202/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.092754397 seconds)
    (203/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093442572 seconds)
    (204/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.181078431 seconds)
    (205/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.171551836 seconds)
    (206/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067551801 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111979077 seconds)
    (208/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066985871 seconds)
    (209/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126068153 seconds)
    (210/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.077465418 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.1320996 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.143075784 seconds)
    (213/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.091239304 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085840128 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.119426979 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096187901 seconds)
    (217/309) benchmarking ("sort", Float64, false)...
    done (took 0.173442354 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067314497 seconds)
    (219/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.094386127 seconds)
    (220/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.130843063 seconds)
    (221/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.114303964 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120601019 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095395942 seconds)
    (224/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118792017 seconds)
    (225/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110513437 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.138319614 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.136659486 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.110314778 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.091614742 seconds)
    (230/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067820176 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.085984878 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125087664 seconds)
    (233/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137716871 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100829979 seconds)
    (235/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.093014606 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092099046 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.09169945 seconds)
    (238/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094593474 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110094442 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085400205 seconds)
    (241/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.101121111 seconds)
    (242/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089706202 seconds)
    (243/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065949556 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.189386746 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146435254 seconds)
    (246/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.077094569 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.141204292 seconds)
    (248/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125088313 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.088477586 seconds)
    (250/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.111902999 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086214106 seconds)
    (252/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.120444476 seconds)
    (253/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09317221 seconds)
    (254/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.090666185 seconds)
    (255/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068531755 seconds)
    (256/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.068351316 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.138726824 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068250476 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.092171467 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.08857494 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111679906 seconds)
    (262/309) benchmarking ("sort", Float32, false)...
    done (took 0.174728809 seconds)
    (263/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.087336923 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109838894 seconds)
    (265/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087002562 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.111437819 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.0932216 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.190807703 seconds)
    (269/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065934577 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12091399 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069511025 seconds)
    (272/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114606665 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.145919374 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.111518846 seconds)
    (275/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.146867364 seconds)
    (276/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.093683769 seconds)
    (277/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112394377 seconds)
    (278/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067865276 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.09583978 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.112964752 seconds)
    (281/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116587284 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130161469 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.11909313 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086409136 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109899747 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086614581 seconds)
    (287/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.112289689 seconds)
    (288/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067810485 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109403583 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112599072 seconds)
    (291/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.092779137 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095941155 seconds)
    (293/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066932345 seconds)
    (294/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.114488106 seconds)
    (295/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.08474795 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118529972 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086030307 seconds)
    (298/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.092409654 seconds)
    (299/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066946566 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.215953116 seconds)
    (301/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.090608471 seconds)
    (302/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.070283439 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.114213869 seconds)
    (304/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.123718385 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115752869 seconds)
    (306/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.106399468 seconds)
    (307/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.092913997 seconds)
    (308/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091477399 seconds)
    (309/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.140327443 seconds)
  done (took 40.084241128 seconds)
done (took 41.007546384 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101286231 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147230029 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095806645 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138040964 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124962189 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091928397 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119863466 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09756818 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.126460037 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126764057 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098428173 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094518473 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097515773 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121789953 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096544001 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140915038 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125429891 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093690463 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120743901 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085773748 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121361068 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085637158 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114541107 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069385328 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123738513 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093415401 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118372281 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120928945 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087178254 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111902259 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090860769 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119145452 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086954757 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12547876 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09344344 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120606167 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.121326559 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098268647 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113154318 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088427021 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.121457957 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087354649 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.121815836 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095103376 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119535488 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091919279 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121043151 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123436268 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117053196 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116834694 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094947917 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123001024 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096011829 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119744185 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.08973393 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121570041 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.11692511 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11674749 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121811993 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091734614 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.12165945 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094669069 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.118676518 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.119021057 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.097160384 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.123208887 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098026426 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118280638 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09623291 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.118462831 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085924335 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121102007 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.11555479 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087912533 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.120555524 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.099492601 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110549098 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.09384024 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.119056548 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091391359 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111445675 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089918083 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.115592375 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093344059 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114891741 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069685512 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.116003092 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093422149 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111420602 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095790282 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118957758 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.092649844 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114582585 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121898734 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.088262738 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.116164509 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087862804 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.111031112 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090376302 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.115106903 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.087605663 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113855237 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.097053492 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.113537312 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094426015 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124610536 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086293815 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.119020437 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08596625 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.112235898 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.125095598 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.09804789 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.11193696 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093771178 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.111649141 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.09529375 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110768177 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.087212427 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112514195 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087590433 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11862003 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087000307 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115364622 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.09409705 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127662117 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.085898918 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116874063 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089193451 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.113001883 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091548698 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113318192 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.085865946 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.115372228 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077855402 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115776071 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086484836 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120242859 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088582141 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120959665 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112597667 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096531021 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116709874 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093659793 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.118424639 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.087130306 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099402497 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092903353 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113528044 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089733882 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.112208038 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.089554997 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111374875 seconds)
done (took 17.120508639 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.089211698 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186617556 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152613235 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143142139 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107565933 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113566484 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122547988 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119769297 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115440604 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143924433 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110341055 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133830203 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149235754 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086296193 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113305598 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091308068 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114712175 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102536598 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147548946 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134451054 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166129971 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086560414 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148685635 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137662547 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120913122 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105617802 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114132652 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091744635 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116682196 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112006567 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134368294 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116214157 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088805116 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135377225 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10500636 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122258737 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.085845062 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120504208 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.111938619 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088904522 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143053037 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134106721 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093229007 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119210183 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091050486 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.11609359 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088686377 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123246586 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122364153 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.093001688 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128426803 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157708323 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090296836 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123251597 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085469137 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125298206 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122575369 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090337971 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113821379 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090102393 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.115751091 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.08998585 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128941613 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143549404 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091295535 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124217937 seconds)
  done (took 8.70970288 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105772129 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140673326 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129769819 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107694146 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113292006 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088120888 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114281602 seconds)
  done (took 1.787620942 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090009801 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135088009 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128218982 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137411333 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132504818 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109219073 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125107817 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087843882 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132674038 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088853879 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136033722 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153371021 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089010256 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122035577 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138106992 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088249497 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138776896 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088482571 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118485456 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137003634 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092725276 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135278377 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090779966 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114697091 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101999856 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116244506 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164052863 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093971081 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11612448 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091677055 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113393804 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167380836 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101711772 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126071027 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113272181 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104912867 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129639033 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086609661 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131988676 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093343224 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130566358 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114630756 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091405346 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.113338678 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.094285554 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124690521 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090665715 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115564312 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092194126 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134741754 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089250195 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129429337 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088752437 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119627801 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115647161 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095270273 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124760161 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090282808 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135530265 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091211083 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133947721 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.130920233 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103729345 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131454849 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090979202 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129591442 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.127618667 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092245316 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114902446 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092998566 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131769785 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086552187 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116507397 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.098879916 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116832088 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.136818987 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113984831 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116516873 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099546366 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11516319 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089139237 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.116215337 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112218264 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119254671 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114521366 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094572082 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117081633 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.08758169 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113447965 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093096414 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112729992 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.09128328 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118318395 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090193916 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117693524 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106100983 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116723514 seconds)
  done (took 11.925989223 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091602092 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114948559 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09354776 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115654998 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089932679 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116041025 seconds)
  done (took 1.619986357 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115177796 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119402902 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103609489 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121872034 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157748343 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.128758572 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.106106082 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124722286 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107350887 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129186104 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130253246 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105089185 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137734482 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123625983 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103585595 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122310006 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129432782 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101139579 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127677233 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095910694 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138586243 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122269931 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096383215 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.13381422 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119580393 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096646315 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127161134 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101730617 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128806639 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123510995 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095747724 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119428576 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.120407039 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.099203183 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130729582 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095351323 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122459153 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119469949 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101551634 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119705525 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.129208732 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09795042 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128755688 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093780479 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125966145 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121917082 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094996704 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127737478 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.129711228 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095582823 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.11970415 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096026186 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120091112 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119014773 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.097648727 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124558691 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094071 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131624105 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121348661 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095885669 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119484427 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092971982 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125287392 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118334833 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105145031 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120908391 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121584915 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097997062 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122806947 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095752577 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120958622 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117602423 seconds)
  done (took 9.327564342 seconds)
done (took 34.35084862 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.699974748 seconds)
  done (took 1.696326609 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.713348541 seconds)
  done (took 1.710643438 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.99698975 seconds)
  done (took 17.995822903 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.513405796 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.596323296 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.820960796 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.182269988 seconds)
  done (took 3.111880865 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.953443912 seconds)
  done (took 1.971376457 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296624243 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259564887 seconds)
  done (took 1.558932496 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.780642861 seconds)
  done (took 1.790612096 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.363118485 seconds)
  done (took 2.367225943 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333658296 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185326449 seconds)
  done (took 1.531804549 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.550810951 seconds)
  done (took 1.563313464 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.928949613 seconds)
  done (took 7.946756779 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259784657 seconds)
  done (took 1.290126152 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302188484 seconds)
  done (took 1.32311092 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.540534993 seconds)
  done (took 4.562898637 seconds)
done (took 51.423218726 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100376186 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126799854 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101411008 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125454971 seconds)
  done (took 1.467793708 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10193781 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121693468 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099780303 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122130852 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12574012 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096410256 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123595282 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100548076 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121914351 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096501291 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122347579 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120058457 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098459823 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124351552 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092841987 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125105596 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12499156 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096690593 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125581421 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095719794 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119849099 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097058209 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126020647 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118996812 seconds)
  done (took 3.717588502 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101085173 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119090066 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096567578 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118981388 seconds)
  done (took 1.453780187 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100636442 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14271532 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138816892 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100493188 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143944692 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135866398 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092379357 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117502278 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094614717 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.1264817 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089956216 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150272473 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137779414 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.09907108 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128780081 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113856646 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092436273 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137267768 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099762938 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127690757 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092747795 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127068055 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089468948 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140603743 seconds)
  done (took 3.84174483 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.159045495 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.152641352 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140273924 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09543034 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.156463915 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141988435 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087975715 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143319512 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089867215 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132446046 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118659464 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133329398 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129055492 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088101566 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115384552 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086944522 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129989214 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128566159 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091071179 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.146346587 seconds)
  done (took 3.497348101 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09913996 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117916108 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088819855 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117317929 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100308436 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122188856 seconds)
  done (took 1.675379139 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091925989 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115459275 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091347567 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115890632 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094766445 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11574567 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089328419 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115871936 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090052697 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11621212 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090430287 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114860106 seconds)
  done (took 2.270998035 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.463008577 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093613535 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122053655 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.115134623 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096987645 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115831043 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103003711 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119620147 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141031746 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089953871 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115678456 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092162328 seconds)
  done (took 2.698254073 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239749603 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12726277 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294419749 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193370185 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160387356 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172947125 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153165005 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167701593 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225389729 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158591971 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210300358 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223511507 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126559752 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220962849 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111926839 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146438705 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227851551 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220878542 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155698561 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233035944 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202450306 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167193895 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180280779 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153765118 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140396788 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170232527 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122644103 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104778678 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237562885 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179441086 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21855664 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164464212 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147358278 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243257155 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250276987 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200121508 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18936858 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13595669 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.145004628 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167738318 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270925754 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139572615 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238232357 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16102074 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10576937 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223661043 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170116626 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176918488 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151107547 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140004288 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200338548 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243842705 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.195695718 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139019987 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16384513 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161854315 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169162886 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153298253 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256006576 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199954659 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205467539 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095384224 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147964821 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191965053 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184253876 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167499619 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.20992257 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146203402 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194403407 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186886527 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167789829 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221628818 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185294678 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141065048 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170489893 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175327107 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172011652 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258706456 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178855524 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123048126 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170350573 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151126834 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132132126 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166994667 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125882221 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241634942 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124157147 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135982309 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164541572 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163708651 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164286873 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201118727 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222037359 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148328788 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08428669 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157688199 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156691856 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19235573 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141377243 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161710855 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162185945 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131459487 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178768883 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096429307 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203623498 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.0919333 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177936042 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212376103 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100620738 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160849544 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153947429 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150043012 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182681932 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199087172 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141952218 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13494295 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207249598 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176209365 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150734006 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207167202 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203212114 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.144091408 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148929976 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20269565 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248208533 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113020457 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23267749 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156012954 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134811993 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.107890223 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178517424 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158045894 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16310143 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134052451 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.180544281 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240809361 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124017719 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112728664 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215421552 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108505199 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133196508 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161851595 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149053366 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138466304 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.119721615 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152351676 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210271783 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179161348 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15375231 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168695465 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151940351 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254093146 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140153569 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123759647 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150159873 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120440312 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195715929 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197493291 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132664914 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230780598 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.175195824 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154716806 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172043378 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108068276 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177512222 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131511392 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093196934 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223413378 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167784913 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1643398 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194889884 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156024167 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.1827565 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.210713355 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173561841 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176475165 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166135934 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161188747 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139395276 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159558734 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167252004 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096580849 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145449014 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134747402 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157999096 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143527543 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107426764 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229744009 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172206647 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149650508 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159957959 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151205571 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180815412 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10168601 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206310468 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178285009 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147172237 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199119345 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192182153 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214544524 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116056276 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235963208 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120230367 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099297001 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143863442 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172401979 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134239557 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108184917 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194295429 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182508544 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186506442 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178239754 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163787603 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176437594 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18879735 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.124572285 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169145705 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186611036 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175283125 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.186474364 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145304857 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15154797 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176621186 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156960941 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229486488 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166587087 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204719876 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210078555 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151576063 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132641307 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150238557 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187703992 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155965236 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178434199 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147705793 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140616644 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162428101 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.107681543 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187508083 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186919311 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164082277 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190939867 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152524595 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213939998 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102137491 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165382922 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159163651 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164485252 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108591811 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178875073 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202717114 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149202938 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170003385 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221686207 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103817578 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.17784911 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242997069 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195425847 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13824022 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158910455 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160712418 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16513295 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17314107 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178338364 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160112508 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187760353 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158456294 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138447014 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140863765 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150317944 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124547133 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.134619967 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149957787 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174299142 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140554643 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187960389 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161373645 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160054262 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170745386 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151694305 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146467431 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151453585 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216002633 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174745546 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24328042 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150219866 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180619607 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232164976 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099259241 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132834106 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132430419 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179196184 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109777814 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217424092 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.120930228 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158246254 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179821094 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222327637 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138876022 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.094356199 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157482474 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175220616 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165893202 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152761335 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161303353 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20640411 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.143869934 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132491939 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172565687 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157280633 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119357051 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22682219 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080611687 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149305746 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099960389 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134335489 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165699298 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238096838 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.107800539 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.188314997 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172612152 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168222476 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165890608 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151225599 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150539478 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166382677 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199289848 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214822468 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104053406 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158871839 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204046788 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197610645 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161207141 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140432726 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204506781 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1929661 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.228429772 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141578334 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16794603 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167273321 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156375818 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187667453 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135364994 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207077534 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136141421 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196013401 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154051464 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143304564 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176239921 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.149711656 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143352902 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187536636 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200112211 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109761117 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134151906 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168606672 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176080919 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156042657 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128645571 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183174619 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12589004 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19106309 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261396296 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13416592 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126296789 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149206434 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136521457 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159108939 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158855985 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141276796 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.138792765 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235837628 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135158553 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19422193 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228884751 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173312485 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176777092 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144244412 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.695017862 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102291464 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222609155 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156211683 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207370971 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153252872 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172124822 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158576123 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170950407 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222575162 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159763449 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203334002 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22251442 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17766966 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132799902 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160108436 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162751414 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145183289 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153018449 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166840005 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159478557 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153204524 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179139851 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170024265 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133414822 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113106633 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226048517 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127845975 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216685901 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180843839 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137718538 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172955132 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187498399 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134885368 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182425944 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23939947 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141561422 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123514475 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13506305 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157165943 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261562389 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096143765 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230998766 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176792523 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158772001 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169045936 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148304397 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189811348 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157940305 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206490796 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118073752 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158916246 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155797542 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140388884 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130693024 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154089865 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168165336 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.120337428 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187765831 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139909641 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193605228 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125190726 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144577596 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156770851 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194112873 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21375323 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.140036634 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136254276 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163822531 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151275552 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175909325 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177890732 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136707793 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108227345 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138082553 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158844743 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11335252 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157414552 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157482152 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167848369 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235064359 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110635019 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281818879 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141213896 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153861449 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089805884 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13294119 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150165126 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146256843 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158201174 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123558595 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26175542 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147453836 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105124868 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149387513 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127302594 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136214674 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165966265 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166833494 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176699213 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145200141 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081812133 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160619989 seconds)
  done (took 81.424502909 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16395654 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134504866 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148680434 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20485138 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.180010952 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271095288 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211298155 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256157532 seconds)
  done (took 2.680163192 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094283148 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147725465 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.154377487 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134464864 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092741092 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119229986 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.33676107 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13383981 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.091467005 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.142417288 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174319562 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094622885 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.515835172 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.120881649 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118835288 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084875949 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.11899193 seconds)
  done (took 3.780685221 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.466970014 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.723282729 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.482719119 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.127341095 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.178413489 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.136980534 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.81721623 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.215625942 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095834307 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.494241993 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.772245642 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.183860491 seconds)
  done (took 18.809185985 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099218847 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.120862872 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108662823 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136591167 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096558204 seconds)
  done (took 1.673926095 seconds)
done (took 130.005432106 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.106124424 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40669817 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071921416 seconds)
  done (took 1.630949277 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108594353 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137328265 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108700435 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136639532 seconds)
  done (took 1.617191804 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098405392 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126612835 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.10994862 seconds)
  done (took 1.455650813 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.323097743 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.192205209 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.145195021 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107029577 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129760708 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104106178 seconds)
  done (took 1.462520613 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098206245 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128208803 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.0983507 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130429822 seconds)
  done (took 1.580404452 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095830152 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070843562 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101093479 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074703216 seconds)
  done (took 1.462902774 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113743392 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131966181 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103084437 seconds)
  done (took 1.475330092 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.131560546 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139774607 seconds)
  done (took 1.398374604 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106995667 seconds)
  done (took 1.22774751 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.11916447 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170282176 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189084297 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165041294 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.229709524 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166781946 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141721755 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114095066 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132601039 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145288897 seconds)
  done (took 2.700402371 seconds)
done (took 17.896499768 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104013385 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.51315497 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412647503 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117129396 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72215069 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379797317 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.037004759 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146983586 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166308472 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093845584 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14100068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671718256 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.028146516 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.46849215 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.985412396 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.467666041 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704599806 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092975421 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119305441 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094854788 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.020309571 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091778461 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122722033 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092112066 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702680774 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425861582 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094892092 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.467946478 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091908112 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128037279 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382024289 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124092686 seconds)
  done (took 17.327194649 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095455012 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173849519 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098221272 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138759423 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123944335 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093843837 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12473648 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093111119 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180290546 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12370985 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110732931 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12202951 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126326565 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095976379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143000188 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091896604 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125456636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092677809 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122495973 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12191625 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112017136 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121960422 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094297046 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12289323 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092933528 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136481438 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122971843 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093455652 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121057599 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098705816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128651425 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094806592 seconds)
  done (took 4.870654964 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14104679 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185005785 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129744261 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127186463 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1699464 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124573662 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200236406 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146707306 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154505723 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124654981 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140194188 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092454595 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157834617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121973878 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115868202 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12219299 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097622595 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124029873 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092615961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12359774 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141154634 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093105095 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12385945 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093153628 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12392827 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13559539 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096138838 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121371635 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093625908 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128060975 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099676333 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124409732 seconds)
  done (took 5.202262583 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098125412 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127059714 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110635818 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139847473 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095243294 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126444915 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097516195 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125695611 seconds)
  done (took 2.053020711 seconds)
done (took 30.576006358 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113136861 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127990408 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106557411 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135380952 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101999689 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133087357 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090586557 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135410637 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134436835 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103161185 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138490392 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092868613 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125284598 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092818491 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136584388 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097335363 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133605831 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101464659 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134917873 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133102618 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094937304 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134819044 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103246374 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135319728 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104061133 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135102223 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138028781 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10035815 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124676226 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094104503 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125782509 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103403688 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12570189 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105777158 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128704621 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09639308 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125206967 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094575823 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134227449 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133895824 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100240443 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135050848 seconds)
  done (took 6.066517185 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109323587 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140538611 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106354511 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080935876 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118444438 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080593097 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139840831 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079169976 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111218845 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108501519 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074348647 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108323583 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078777864 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.105164751 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07840324 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075865219 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109706347 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076533981 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076510284 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10729527 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080251722 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072974344 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109544287 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078958968 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.103596288 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082887426 seconds)
  done (took 3.628450428 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100932204 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136492916 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113211004 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185462879 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.163035336 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100142348 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134696516 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140134528 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110401399 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121317899 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.0967851 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.15129888 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110669334 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130290703 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092074372 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138207696 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136738725 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094130345 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128800239 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113539713 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139723157 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102142555 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144583283 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132771567 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092088795 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123669876 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097292469 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13691299 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.09757724 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131955414 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.12596248 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096972803 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123821107 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104622031 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12714617 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094265074 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143285682 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131336126 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.102538412 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122036584 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097428167 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122775777 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113319994 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167503184 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091778393 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12993787 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129549801 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103212584 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122139301 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111301286 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132972142 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092500154 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.127038541 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091164872 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124009832 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106256149 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125431746 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.123916556 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102684171 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.135220932 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106034409 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127687031 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107436257 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123412429 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129849041 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.092901851 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122590148 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.0929857 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14520336 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093724767 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164076603 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.123228726 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095205472 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131492403 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.099805734 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129420031 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093102824 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139056496 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102481699 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126882969 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129873246 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.097831636 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.125488338 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111186853 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125147442 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094302284 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123926218 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.098665564 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.126231724 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093060233 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138337379 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.121212167 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097236756 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140257151 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.092451611 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124358237 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099999077 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128149066 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091622962 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137146587 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.127892148 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.094718067 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132812088 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092273195 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.126807755 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103367536 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128102858 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090794974 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12933148 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128657192 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.094592238 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123970508 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096421537 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.123809345 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103900659 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129641206 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097627164 seconds)
  done (took 14.932023503 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229980868 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217937897 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.249018064 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.270179129 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13767803 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.146437727 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.216216893 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124820431 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124881542 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16116007 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163160343 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.186749676 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.171354283 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180572446 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.111043592 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.123197927 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.14117712 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134984854 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215661748 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292252575 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144462115 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100853158 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162963819 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160693048 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138452713 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.101265851 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.14158616 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.136203907 seconds)
  done (took 5.842661129 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109446169 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157153682 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097765354 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146085446 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149887867 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093130975 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128710554 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094068922 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136707034 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137704933 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092277856 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131770337 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100881206 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133780765 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124792068 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104525387 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133303728 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095101199 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127624201 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097242978 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130088415 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.130855945 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.09910049 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12162439 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104354651 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12203173 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085960195 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144314302 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12248227 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116059267 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12219671 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100242831 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134452914 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093282762 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124070881 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094721642 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126843306 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09489363 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125034183 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091075928 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122277016 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077095427 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123182486 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136330692 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099592214 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109175243 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.10007425 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129008285 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094687707 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120314541 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095494609 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126097319 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097207138 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131121254 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098350312 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124803297 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095822263 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116689691 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.09932133 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126431766 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084550756 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122016909 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098110391 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11891413 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100889686 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129299548 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09157488 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127232761 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097153686 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130871859 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.0944375 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127038991 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.120328825 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.097236895 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.126664739 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.0981737 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126749504 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092577881 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12334453 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094236666 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.105760474 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.094512038 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073719164 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127686377 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.090478345 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123642258 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.0946683 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130253398 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139043543 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09453668 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133126288 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093012183 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123412892 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096297783 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114528749 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096068562 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139778192 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141944709 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093382186 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122671474 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106360837 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127086636 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.091913046 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107269379 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100444745 seconds)
  done (took 13.022317209 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127268993 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154437503 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094468097 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143520063 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156491778 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157528509 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102125893 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130703379 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09591021 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143032156 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093593962 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132588568 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097362879 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137104656 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157020082 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103348534 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126304577 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.1066285 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132406873 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170659858 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111690512 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142910487 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.138099595 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096113908 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128749359 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.11050464 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162162941 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.138605772 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108088198 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142824263 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107897265 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162061465 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143794967 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.0988316 seconds)
  done (took 5.526664329 seconds)
done (took 50.150827878 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.252321456 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.464485112 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.236620933 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.206320436 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.233699449 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.259427853 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.243301945 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.232970409 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.245706435 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.233024948 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.469142959 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.884221628 seconds)
done (took 59.123084706 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.332345188 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.368081241 seconds)
    (2/2) benchmarking "String"...
    done (took 1.500106483 seconds)
  done (took 4.028256542 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.610383636 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.193655082 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.496918079 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.231723337 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.232787957 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.528090756 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.961472226 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.588097324 seconds)
  done (took 28.393741356 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.24490024 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.635910545 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.028122202 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.009042989 seconds)
  done (took 19.079491382 seconds)
done (took 61.606523681 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.233717138 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.277063329 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.250408254 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.229977265 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.349080249 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.261657627 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.534238791 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.473192904 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.235398956 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.221817446 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.256084697 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.257514138 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.240265747 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.517842284 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.244930616 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.238273297 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.257974051 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.71454039 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.645812169 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.251789007 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.27127237 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.26562584 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.273252853 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.24432382 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.30462287 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.239952243 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.23453408 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.257578621 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.898199055 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.238254659 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.247576095 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.714836102 seconds)
  done (took 193.0444175 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.234396887 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.462251391 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.55707069 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.266671463 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.999851847 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.433627918 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.372559229 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.063647877 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.255751825 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.241882102 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.590730028 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.237430944 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.665889346 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.222239631 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.245916011 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.244914898 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.580268629 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.661520845 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.255832401 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.507869304 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.258570978 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.532575259 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.461124165 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.534147746 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.237136254 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.327750482 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.242770246 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.249355884 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.449599635 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.504016047 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.266923029 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.2784311 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.876436879 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.095193187 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.247749489 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.257872399 seconds)
  done (took 153.084667827 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.548256946 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.237077767 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.237967434 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.238522162 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.27051781 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.237325211 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.827082846 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.840330896 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.746391838 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.526262681 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.301860844 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.505233617 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.236819612 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.33339385 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.249626707 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.238917274 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.251972006 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.284777721 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.237744541 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.237627943 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.834720922 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.253504078 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.327343626 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.247930652 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.238664921 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.271634947 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.629528591 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.239552571 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.271698102 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.563641215 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.291612224 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.239353431 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.599188888 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.52428058 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.352416034 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.240039499 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.273053987 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.238432798 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.512025629 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.240008666 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.239499908 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.242536556 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.883256119 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.242549659 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.834645126 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.243751434 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.192323936 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.244803411 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.23899963 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.516109898 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.836149999 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.263017319 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.240716355 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.242935101 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.24176963 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.239350749 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.273567369 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.469410172 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.343673102 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.258957492 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.243828043 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.274572071 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.241316859 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.40645138 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.259502663 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.530068163 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.318745235 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.355343957 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.83978895 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.24563633 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336119632 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.363083685 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.241822128 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.240930075 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.24095235 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.241375712 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.241408731 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.350841317 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.241679014 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.240911636 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.673158766 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.241282798 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.247139857 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.242710228 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.302447581 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.336638409 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.241285714 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.241263337 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.604783322 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.246533305 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.241598282 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.98291248 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339787465 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.243047511 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.241667656 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.241846201 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.672121494 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.844979091 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.489273237 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.246868367 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.470590357 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.247254135 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.688764046 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.816397124 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.907929166 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.249884966 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.351769971 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.246817513 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.244255388 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.243286091 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.272873648 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.263983906 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.302289757 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.244481506 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.642684762 seconds)
  done (took 350.458101231 seconds)
done (took 699.297946597 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.926687153 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.876613385 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.016670665 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.888552542 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.876737983 seconds)
  done (took 10.756753773 seconds)
done (took 11.927584947 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.448108263 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.451761418 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.313775276 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.45140511 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.279075835 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.464763341 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.429413843 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.26820462 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.35231957 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.333180208 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.352565941 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.300442381 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.272654581 seconds)
  done (took 18.888437158 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.570108448 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.559198945 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.311178712 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.609600896 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.287198756 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.56706546 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.451258007 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.462549692 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.462182849 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.282065865 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.258524044 seconds)
  done (took 16.993948201 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.567557575 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.580984304 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.315478286 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.569948646 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.290607092 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.571880044 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.455835248 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.465260742 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.467687406 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.280510692 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.258520985 seconds)
  done (took 16.99788212 seconds)
done (took 54.051345781 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.25387928 seconds)
  done (took 2.427927331 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.290807981 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.456335966 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.277191581 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.258886655 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.256156901 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.256581401 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.260024564 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.25523138 seconds)
  done (took 11.486372661 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.251540356 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.25427602 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.254837589 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.251435033 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.252170113 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.255483482 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.254636482 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.254359941 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.251461777 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.252596519 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.252042542 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.252173831 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.252509576 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.255132941 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.254981911 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.254872879 seconds)
  done (took 21.228822003 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.25520539 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.253562631 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.25286842 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.254009217 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.252836088 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.252777605 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.255685485 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.251578718 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.253044072 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.252432105 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.254584863 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.253981444 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.253909123 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.253929599 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.252755944 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.254535654 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.253408171 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.252855393 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.257901471 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.253764537 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.254170312 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.254544765 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.255381247 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.253924785 seconds)
  done (took 31.272315448 seconds)
done (took 67.58738996 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.419772541 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.026028763 seconds)
  done (took 9.620913029 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.2559288 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.257026366 seconds)
  done (took 3.690354954 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.255682424 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.257069433 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.25732286 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.256442019 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.257322079 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.257177572 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.257093341 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.256100859 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.256675966 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.256647904 seconds)
  done (took 13.745344156 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.257755415 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.257007408 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.254567621 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.25722724 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.256891578 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.255538149 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.258249077 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.256390687 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.257851453 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.254385991 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.258688439 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.257126416 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.258447959 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.255672769 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.257341753 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.255087542 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.255215266 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.254839076 seconds)
  done (took 23.796389162 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.257314114 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.257976444 seconds)
  done (took 3.694062388 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.256789612 seconds)
    (2/7) benchmarking "second"...
    done (took 1.255966471 seconds)
    (3/7) benchmarking "month"...
    done (took 1.256063087 seconds)
    (4/7) benchmarking "year"...
    done (took 1.254977443 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.256253731 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.255963421 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.255954787 seconds)
  done (took 9.970185653 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.260077706 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.434244344 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.51524215 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.868915341 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.260012559 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.26282316 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.134865412 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.262490328 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.264448038 seconds)
  done (took 14.44206648 seconds)
done (took 80.134293006 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.286219698 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.272693577 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.445168424 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.268468634 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.274831488 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.553301212 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.268110606 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.385293236 seconds)
done (took 37.932186762 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.262694409 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.018507213 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.018760273 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.265203779 seconds)
  done (took 11.483721968 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.233089385 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.236070166 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.240236473 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.321767804 seconds)
  done (took 18.210858303 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.309799404 seconds)
    (2/2) benchmarking "read"...
    done (took 1.592240364 seconds)
  done (took 5.082891045 seconds)
done (took 42.219201508 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261444989 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.26108499 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.260346017 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.258570254 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.261016714 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.257935405 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.257711565 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.261065018 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.261254476 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.261115454 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.262115762 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.261471497 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261617815 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25919588 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257635357 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261477908 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.259559062 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259359279 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258412371 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.258644022 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261831912 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.260122677 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.258709471 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.259820312 seconds)
  done (took 31.423000113 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.263368487 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.260364873 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.2622104 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.262119688 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.259383982 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.262787875 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.261902729 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.258516802 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.263147856 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.262546679 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260544146 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.260103162 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.263729246 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.260061529 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264027672 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.259793181 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.263066602 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259859766 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262289275 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.259762952 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.265581179 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260405449 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.260581155 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262132687 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.260141098 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259673555 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.262994806 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.260655879 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264674222 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.259402445 seconds)
  done (took 39.029258212 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.267129496 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.268855409 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.262899061 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.261998487 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.2636206 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.264187839 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.263335622 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.262554762 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.263324922 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.263145494 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.264099571 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.263962339 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.26372284 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.264266203 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.263122812 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.263080862 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.263658883 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.262778957 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.262014205 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.263741807 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.263036856 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.263786624 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.263941065 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.262521456 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.263183244 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.264225874 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.263279579 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.264038078 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.264382231 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.263111321 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.260772278 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.261666174 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.261050706 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.261796407 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.260736588 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.261102733 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.266129131 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.269155669 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.261794311 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.26184371 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.261823834 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.261124656 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.262233354 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.261758077 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.262175392 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.262302166 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.262577718 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.262173004 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.262122089 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.262048825 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.263280667 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.262738359 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.263205192 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.264329503 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.259768344 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.260007168 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.260154349 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.260722035 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.261611277 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.26083533 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.260595537 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.262263822 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.259698562 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.260969717 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.261167055 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.26005239 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.260022369 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.26042343 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.261216715 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.260642748 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.259333581 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.260003993 seconds)
  done (took 92.085809262 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.26063471 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.258365197 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.258850211 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.258086275 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258160911 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.261479323 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.257667792 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265572445 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258205824 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.260736009 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260903747 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.259891282 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257105905 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26037254 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259465016 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.258541075 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.260213573 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.257121698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.259232783 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.260733771 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259807463 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.257983593 seconds)
  done (took 28.890300587 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260457886 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.261467907 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.256707052 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.259682361 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.257972395 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.258870809 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.260894119 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.261866166 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259807894 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.257353129 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257631181 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260540156 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.258423917 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257560328 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257386646 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.260300474 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260397311 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.258911493 seconds)
  done (took 23.845360525 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.258457207 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.259497535 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.260460924 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.258936232 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.258219355 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.261399698 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260057684 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.261173061 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.260535536 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.259155466 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.260981933 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262183267 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.262153373 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259421319 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261577105 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.259375185 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.262109879 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259201034 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260765409 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259024311 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.258936565 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262503527 seconds)
  done (took 28.90660942 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262358728 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.261914579 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.259134286 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.260267789 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.259314131 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.262235965 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.262246355 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.259522224 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.264536928 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.262060307 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260665479 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.262763558 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.262420792 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.260468132 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.26035857 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261062527 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.263678682 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.261343998 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263834966 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.260820219 seconds)
  done (took 26.411850024 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265497999 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2637888 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264802335 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265014272 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26480664 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.265842711 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265016796 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.265621425 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265047618 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.265657932 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.263879594 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265925512 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264651683 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.266173177 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266397371 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265362426 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265331828 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265089669 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266250674 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265251796 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265890333 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265827523 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265737016 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265534173 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.265483628 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265564929 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26571763 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.265609521 seconds)
  done (took 36.614218908 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265456286 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.266064596 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.262354959 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.263796459 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.263468061 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.263238665 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.264552142 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.263011075 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.265601958 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.263255787 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.266231231 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.266498879 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.266670162 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.267231503 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.266364491 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.266490065 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266453525 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.264498802 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264317285 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264161178 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.265975749 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265023491 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.266207216 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.264556103 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264486123 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.266729974 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264304796 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.263919276 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.26651594 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.265482617 seconds)
  done (took 39.138666282 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.286863706 seconds)
    (2/2) benchmarking "in"...
    done (took 1.285805208 seconds)
  done (took 3.75817795 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.264012571 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266681305 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.267652772 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.264243917 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.265602088 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.267762072 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.267459806 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265104718 seconds)
  done (took 11.314206873 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.267933195 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.267867573 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.266798201 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.268045108 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.268816503 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.268182005 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275612556 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.288726176 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.269799779 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.269607324 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.275294056 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.277090661 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.270703521 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268604266 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.268572457 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26963671 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.268190216 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.268838415 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.269001115 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.269767102 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269540587 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272057343 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271236853 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.266591706 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.271131803 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.279453925 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.294577609 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.270216037 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269472717 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.27258988 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.269925427 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.266946687 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.26948097 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.269979479 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.270456761 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.271268285 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278387918 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289225264 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.276531814 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290583555 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270737174 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.268263329 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.271839667 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.271364651 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27191943 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.270015261 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.271847648 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.267318244 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.271242379 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.274395026 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.275497058 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270704437 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.268727065 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.274543825 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.272103365 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.278552837 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.292271775 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.275447728 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.280663322 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.282083049 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.304088169 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.298373289 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273733405 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.271768146 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282351918 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.296257697 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279000739 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.290187078 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.270323394 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.273123892 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.279663307 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.3059227 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.298691138 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.272024004 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272157886 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.273597351 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272786186 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273981333 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.280600266 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.296699009 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.273670436 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273815985 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283791322 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.295158493 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.272660193 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.274022818 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.273565533 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.273252809 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.274958287 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286267204 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.293963664 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.273842463 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.274491464 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.273892882 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.275633407 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.273385299 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.272837273 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275163772 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.271247003 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.273451974 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.274403623 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.277805556 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.282813774 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274095818 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273949363 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.28116266 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.295295899 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273543855 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.280559022 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.275464353 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275093264 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.277336992 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.281489861 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.272770013 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278617469 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.283033264 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.274432172 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.277534395 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.275201737 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.276211461 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284854425 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.300987177 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.275775124 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.275474955 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.280239421 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.286236923 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276890127 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.279197085 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.276075587 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.273576244 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.273152064 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.27699219 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.274525139 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.277307089 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274675677 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.278455236 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.272732623 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.276574229 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.275671837 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.278385644 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.277599187 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.277123219 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.278605118 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.27934546 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.276282048 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.27974491 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.282603536 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.297001509 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.279071916 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.278890959 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.275122639 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278024266 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.278348605 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.277256583 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.27935914 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.277233833 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.277129757 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.277602929 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279194079 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.278148157 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278311783 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.279162171 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.282960834 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.278933585 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.283579086 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.278462788 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.276103902 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.278818193 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.277591445 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.278496197 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.278641947 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.277468255 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.281705997 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.287137928 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.279448491 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.277980685 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.28248493 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27889132 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279586712 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.278561571 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.28243146 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.286583031 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.278447787 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.286154449 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.29994807 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279443232 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.280640405 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.279762639 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.279313577 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.280047281 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.282797664 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.287215199 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.294347214 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.306962032 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.281221136 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.283206728 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.281878365 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.283555137 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.284675174 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.280062346 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.280189646 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280421635 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280877407 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281904973 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.282417115 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.281100561 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.279972292 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.28068082 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.281853221 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.281475294 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.281903242 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.282659571 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.282935719 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.277889105 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280721658 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281249454 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.28125893 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.279274963 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.280508535 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.281336735 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.283013188 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.281906249 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.288563135 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.278567337 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283406925 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.28323534 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.282803446 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.28070379 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.281676874 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.283686462 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.282159665 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.290409395 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.303558523 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.283988982 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.289016618 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.303553695 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.282973442 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.285267006 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.283745356 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.280486288 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.286407461 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.291425887 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.282862717 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.283272138 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.283073992 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283971313 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.283296418 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.289820518 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.300693244 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.284065278 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.284033816 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.285402374 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.280506305 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.285161253 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.284556954 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.284710192 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.286015764 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.283831177 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.283927723 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.285084905 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.283338213 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.284905518 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.2855343 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287546243 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.292631806 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.2901987 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.28501316 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.286930656 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.286525253 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.288741851 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.284733044 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.284891216 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.285216736 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.29839035 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.3107397 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292200793 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.307280906 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.285955272 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.291358089 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.307592373 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.290047489 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.285711053 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28683507 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.287060985 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.285190929 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.284648183 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286328101 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.285752758 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286735232 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.287548578 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.290716262 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.286386543 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.28650897 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.287127253 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.286362579 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.287689445 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.285043126 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.285911247 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.288612786 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288242581 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.286016066 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.287439669 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.293010669 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.307176737 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.288523228 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.28745359 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.288144638 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.286157896 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.288363659 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.28769158 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.290754973 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.2944593 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.290421725 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.29643522 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.289169306 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.29747832 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.287180525 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.291876263 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.295975623 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.285827627 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.287658506 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.288159887 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.288690764 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.295318379 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.309885211 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.291833004 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.292533499 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.289193555 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.289544457 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.289875994 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.288658823 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.290776046 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.288864186 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.297051393 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.310289102 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.292688698 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.289411703 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.286800654 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.288759108 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.28866064 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.288466154 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.292385344 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.288254727 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.291493358 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.288927665 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.288764473 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.290058528 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.289472711 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.28995929 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.287184942 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.290760317 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.297401681 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.313581738 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294971541 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.290664036 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.299946588 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.310535089 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.298123179 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.310989561 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.292193834 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.290334449 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.291133405 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.292055914 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.290630264 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.29229003 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.28969395 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.293418683 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.295416333 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.292250202 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.294447952 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.292137466 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.291855655 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.2918095 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.302067619 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.314579479 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.29260076 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.297060518 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.290194018 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.293886165 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.296260374 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.291821373 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.291520599 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.294416892 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.302934104 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.299021812 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.292188034 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.29135102 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.293022695 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.292684125 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.293962234 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.292037281 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.292265063 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.29259862 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.293958821 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.292520995 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.296085011 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.291934357 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.293724538 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292983058 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.295394944 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.30366741 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.314879158 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.295632931 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.294074871 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.295679294 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.293499977 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.294798677 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.294445002 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.295297273 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.294686344 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.295563914 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.301840321 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.300963245 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.297997579 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.292756444 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.29287335 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.294888193 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.294868959 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.293028554 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.29408513 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295424776 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.294906716 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.294516342 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.294758529 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.292849105 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.294917634 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.294146825 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.294991335 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297784626 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.302134801 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.294851289 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.292072903 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.294623438 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.295071619 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.293620587 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.295002551 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.301387955 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.318916062 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.306688606 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.304218169 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.300493023 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.295271362 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.299192004 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.30329403 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.294546607 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.298916276 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.296706815 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.298607106 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.296701327 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.299444631 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.29609202 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.302562362 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.317572822 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.296086426 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.305465956 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.31725726 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.295556617 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.298020972 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.301464537 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.297381319 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.293529033 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.297074868 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.296306972 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.303999739 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.319420745 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.297633272 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.299262926 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.297373714 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.298795232 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.30184714 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.298373111 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.299318804 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.295072895 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.298787568 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.297371202 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.298431648 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.294772618 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.297662232 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.297979252 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.300691224 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.30468526 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.295775936 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.299915483 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.298414747 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.298214197 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.299840346 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.299675363 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.295535955 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.295712623 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.299259045 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.297830915 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.301054831 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.301477539 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.298074509 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.300857229 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.301651312 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.298420652 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.302391849 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.309956212 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.306191289 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.296746006 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.299274714 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.299652528 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.300804927 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.299759894 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.299614578 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300825035 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.301563595 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.300076291 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.299472152 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.301644301 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.30418822 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.315209755 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.319848279 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.301023899 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.300885532 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.304129879 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.300573874 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.298956615 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.300427566 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.301961057 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.302964886 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.30846663 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.302011984 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.307107244 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.321349139 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.302163188 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.305032812 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.304791222 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.308999374 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.303154556 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.302248699 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.302864217 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.305913643 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.317609117 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.302430854 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.311971535 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.33037832 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.324646364 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.302542082 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.301181681 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.301662364 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.301556435 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.30473503 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.302720392 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.302814367 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.303586816 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.302321751 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.305227125 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.308324992 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.303524335 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.304596992 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.302490715 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.302402199 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.304376736 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.300349038 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.30247372 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.303772251 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.303617418 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.303497089 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.304418753 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.30380108 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.316018228 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.330770821 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.303711335 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.304166831 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.301135957 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.305206403 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.306889894 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.314992978 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.311016039 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.303078368 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.303398032 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.305994491 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.302145093 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.303323345 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.303703316 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.304493864 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.303678154 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.302220046 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.316069486 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.330255579 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.309469282 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.304563043 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.304254149 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.305442368 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.305744807 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.305754563 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.304738639 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.306905214 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.306662143 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.308552188 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.305402635 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.304888641 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.308872035 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.312515151 seconds)
  done (took 769.971158657 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.304317419 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302426969 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302609116 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.302781452 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302808862 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302919834 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302935415 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.304496227 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.303033639 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.303111084 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.304728148 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304067918 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.303500013 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.303593409 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303131924 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30425372 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304219385 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.303581648 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.304367754 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303465718 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.304374713 seconds)
  done (took 28.596802184 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.307343446 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.304181817 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.305010462 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.308564116 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304683633 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.306958187 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.305123168 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306495177 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.30775682 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305248951 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.308551635 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307688461 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.305230105 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.305339034 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306015264 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.307878488 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.308284303 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.304848588 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.307562074 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.305313042 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.307335771 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.305301324 seconds)
  done (took 29.964617147 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.308970305 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.308262264 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.307259785 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.305348187 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.308030209 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.305910875 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.307087075 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.309325119 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.308589965 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.309155851 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.307896509 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.31007936 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.316253537 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.312975487 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.310235107 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.308314145 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.452433867 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.308582723 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.309535373 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.309939793 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.307335569 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.313691758 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.32867092 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.306101834 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.307895803 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.308328973 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.309519775 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.310134356 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.31034054 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.311257128 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.31347033 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.310864554 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.30953265 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.311027515 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.309860852 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.310963315 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.314160081 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.309755646 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.308533583 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.309989379 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.319621302 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.330535051 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.309218148 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.317901437 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.331309558 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.311507258 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.314945096 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.318565622 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.308309394 seconds)
  done (took 65.633617097 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.310931949 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.311578633 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.308527879 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.311530673 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.310705475 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.311961338 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.311271317 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.312202874 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.309013645 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.308594995 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.311818183 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.309502819 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.310044888 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.311169921 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.311921059 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.310424248 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.310114211 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.310429388 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.309880382 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.3097834 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.309693886 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.311554118 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.312508646 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.310462746 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.312460241 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.309402124 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.310109747 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.313688732 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.310871943 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.310176054 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.313282808 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.313716309 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.313346362 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.311813422 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.310907508 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.313692337 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.313096812 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.310307688 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.31271077 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.311060839 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.313387538 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.313095253 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.313133862 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.313933818 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.311202303 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.311569834 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.311135354 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.310622367 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.312537563 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.31504815 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.314084476 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.311402739 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.314407534 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.311088731 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.314657868 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.314976761 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.31197026 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.311691251 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.313461421 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.31298488 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.311714896 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.314268632 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.312686733 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.314920387 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.31523742 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.312262192 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.312370414 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.313948757 seconds)
  done (took 90.439677504 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315298365 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.314737479 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31495351 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.314931079 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.315269676 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.314568788 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.31543969 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.315775552 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.314615354 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.314575764 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.315911088 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.315373464 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.315371696 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.316184454 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.315945582 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.316322172 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.315578376 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.315475832 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.316045573 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.31728438 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.315917127 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.316474167 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.315927493 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.316092332 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.316756388 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.315524297 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.316905137 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.316840797 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.316316109 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.317365491 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.31678583 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.316532202 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.316726064 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.316415564 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.317500933 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.317452266 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.317992822 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.317351283 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.316666299 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.317875829 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.317260782 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.317249483 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.3178865 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.316635248 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.316810335 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.317641486 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.317413797 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.317381643 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.31789191 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.317812677 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.318160503 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.317814296 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31863743 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.318699738 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.317373622 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.318530386 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.318256191 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.318013463 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.319290874 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.317519225 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.318518689 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.320041323 seconds)
  done (took 82.873066439 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.319703161 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.318200825 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.316356222 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.317222625 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.318890591 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.315928276 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.319166264 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.318676695 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.318873648 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.317887015 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320535637 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317564354 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316533538 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319534225 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.316747792 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318090486 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31744022 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.317560835 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.320652259 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.317749389 seconds)
  done (took 27.59788268 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.318312565 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.320407702 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.318977077 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.317815546 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.319708104 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.318224004 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.321173399 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321149869 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319146244 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.321407624 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.320583305 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.322211736 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318455924 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.32018623 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.323030024 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.317853269 seconds)
  done (took 22.353588209 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.320080977 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.322131656 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.321122947 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.320892818 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.318746468 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.318892507 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.321482092 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.317654203 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.319556394 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.322423459 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.322143896 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.321906262 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.32203854 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.321353728 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.319123454 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.321629561 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.319296431 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.31893908 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.321865539 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.322312868 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.321139174 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.319534463 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.322249469 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.321677922 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.31985722 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.3197002 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.320368609 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.32055492 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.320105883 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.321767812 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.320869027 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.319494634 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.321315246 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.320440829 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.32293231 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.321483521 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.323463052 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.323368865 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.32375905 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.324388569 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.323291561 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.321053052 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.32347348 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.323890597 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.321455943 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.324151479 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.322568466 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.322277276 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.321249891 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.32230294 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.324733437 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.323418035 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.324238321 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.324812459 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.323674178 seconds)
  done (took 73.927895242 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.325575002 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.323248648 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.321377323 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.325089404 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.324523361 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.322156099 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.325048083 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.324404313 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.322767707 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.32462275 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.324691375 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.326335161 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.322568077 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.326256241 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.323306346 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.325216453 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.322539657 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.322531892 seconds)
  done (took 25.07213105 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.324292998 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.323795337 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.326131322 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.323176795 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.323129964 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.326622512 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324539448 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.326500159 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326056014 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.323906667 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.324226354 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.326158938 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327554267 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.328390482 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.325542676 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3232134 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.326201891 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.326534795 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.324216368 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.324003993 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.327668369 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.327343428 seconds)
  done (took 30.401317852 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.326491645 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.326634093 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.326873861 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.342841255 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.345457587 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.349320394 seconds)
  done (took 9.259246602 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335916772 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327981012 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.325089207 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328247089 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327607856 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32499072 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325116098 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325640297 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327941829 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325555389 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325364223 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327455655 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328097726 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325933172 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328827771 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327796132 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324996583 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325660613 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326864028 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328452952 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325456061 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328750706 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327100851 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325940984 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32660442 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325048873 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328736031 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326192901 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327093784 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33026221 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328934171 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326591326 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328788737 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327515526 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330157048 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330147559 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326949776 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328287998 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330416094 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327755885 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.330021761 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329929585 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330117446 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327487005 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330893594 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328555689 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328618864 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327364313 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328478157 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33075926 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330343301 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327513411 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329931793 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330791144 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330832664 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331973701 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328464987 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328356561 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33011967 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32784947 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329440736 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330061623 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328601455 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328654159 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330894484 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329151523 seconds)
  done (took 88.93229037 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328927661 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.327705408 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328879512 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33055647 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3283456 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329534561 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328474344 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330377006 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328643372 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329406037 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331026994 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329531684 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329628776 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329105278 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329511163 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330096254 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328614568 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330470584 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330028047 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332533534 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330899949 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330532155 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330198282 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330182835 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330294229 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332762169 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33040354 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330454656 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330083609 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329618878 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331479117 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330254084 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329372571 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.330669577 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330434624 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33103328 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332104606 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331171327 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331428878 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333937495 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329667831 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334118563 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331756746 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331344261 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33220568 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332081275 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331630354 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331672681 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331068422 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331062035 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331675255 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332467515 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332870482 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332024324 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331762491 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332559466 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3317582 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331293757 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333204715 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335305261 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332121761 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333052677 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335739281 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333196514 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332682033 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333680312 seconds)
  done (took 89.099050845 seconds)
done (took 1796.71996883 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.383308594 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.436364397 seconds)
  done (took 14.069113138 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.500311687 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.450535043 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.333955562 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.383112898 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.334349596 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.356672444 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.345665915 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.336796336 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.335247243 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.334225455 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.334677227 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.521255781 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.327799635 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.33502799 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.333945876 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.429376726 seconds)
  done (took 43.250277065 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.362134955 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.340298457 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.459379884 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.357191337 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.362330775 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.538654034 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.394539797 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.339855426 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.524283056 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.382294133 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.9906561 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.363799867 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.338911776 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.515532007 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.358841572 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.539926312 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.60387494 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.995084014 seconds)
  done (took 31.018283093 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.823055458 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.361311067 seconds)
  done (took 9.435513677 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.344601936 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.365989366 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.358618591 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.344591806 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.399174999 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.421559497 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.34863583 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.365623338 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.342069082 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.402943074 seconds)
  done (took 64.95224702 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.360239738 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.341243543 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.340277674 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.338854393 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.330948723 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.331418285 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.338750874 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.33613913 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.263311149 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.475958138 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.360087466 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.347413564 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.359791817 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.340869847 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.336270591 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.378362542 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.495766891 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.357110168 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.335327035 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.344745753 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.33964421 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.438058716 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.385415975 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.339326427 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.476078267 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.31215638 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.349779873 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.347199833 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.476867511 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.357189501 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.339974541 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.340546728 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.342891703 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.946596479 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.871442331 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.351099847 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.365813516 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.350765831 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.338754186 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.456434771 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.361645571 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.346915845 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.335385446 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.845598683 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.500847323 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.461991025 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.649477089 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.343366392 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.341502563 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.406139355 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.34248514 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.342665033 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.372807087 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.126063298 seconds)
  done (took 112.672199939 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.34206788 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.827575964 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.508222758 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.355527476 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.198190683 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.084688735 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.353655174 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.643708869 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.417707412 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.335831267 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.624892279 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.867042418 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.360091693 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.404376678 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.638785965 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.386884314 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.337640512 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.207171359 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.355969666 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.339652549 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.776986053 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.372350403 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.33650145 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.507531038 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.37890241 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.823087816 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.928847279 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.875850507 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.357259364 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.337201427 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.826940748 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.357480796 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.373682489 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.339259901 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.621878492 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.721268349 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.714674638 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.355768019 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.344339235 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.336801538 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.36356921 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.820538364 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.722948796 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.356513044 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.337888333 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.82641698 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.356484681 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.344052898 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.345647128 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541641969 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.402556118 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.339095942 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.912896743 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.337176237 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.330437028 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.377678158 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.383392654 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.853804902 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.357475189 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.530004544 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.389893884 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.340380246 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.342989583 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.337754655 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.33962143 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.711202354 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.521167685 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.338871201 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.713923096 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.842436811 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.358011533 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.887119374 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.220265686 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.363744988 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.409526148 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.338965909 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.992066749 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.871226457 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.362662249 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.339843076 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.696110611 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.359030431 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.637112623 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.363136133 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.35640681 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.786205952 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.360606789 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.38500835 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.349867679 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.340351172 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.020137834 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.343007698 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.643729558 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.421168734 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.339987904 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.339346284 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.384707306 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.3414098 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.358742095 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.346079744 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.886943795 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.36235762 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.495771316 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.36783182 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.350989126 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.341913667 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.340741087 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.341556476 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.562496823 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.924172141 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.348456335 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.34312351 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.342839062 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.345683831 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.484939953 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.344645294 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.67462523 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.361993224 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.343801342 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.346236184 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.134916567 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.378355333 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.342400665 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.342088629 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.183100601 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.574141102 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.362358304 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.361918341 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.344766252 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.361229682 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.815485761 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.343311465 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.420410039 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.345473011 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.071041687 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.398407004 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.345570685 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.069408976 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.344221262 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.343994008 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.364741712 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.343728749 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.667595074 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.639733972 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.460104864 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.346893717 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.362718725 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.073623795 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.401699297 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495927109 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.36422601 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.375351689 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546271383 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.48135248 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.34581962 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.925258046 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.343122616 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.560870364 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.345514485 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.679862214 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.857598576 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.364359615 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.345452931 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.070563563 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.023467998 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.974282785 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.344914948 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.643328326 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.369315135 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.799104199 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.343581041 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.356897073 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.834145146 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.347287474 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.351305508 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.346011576 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.345462365 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.501702207 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.52324182 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.635973081 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.351338494 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.830800677 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.372310795 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.356004327 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.347472934 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.346568457 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.698540144 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.409602771 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.347005847 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.378066717 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.348667797 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.348949079 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.858301094 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.342978793 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.352214629 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.50406314 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.006356625 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.370108279 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.34639452 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.086258305 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.745913789 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.892345782 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.448307456 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.689333305 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.375943523 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.389848267 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.152318135 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.438330829 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.890834866 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.369174463 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.349256069 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.982501133 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.372104896 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.694625749 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.348166757 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.348137367 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923473151 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.373140998 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.354044029 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.888965385 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.354648679 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.618077828 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.349766675 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.366957397 seconds)
  done (took 1117.589494148 seconds)
done (took 1394.234823402 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.349595643 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.356307366 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.338084856 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.356295753 seconds)
  done (took 26.670163192 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.361081069 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.356814202 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.35708285 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.355823205 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.357978677 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.355850135 seconds)
  done (took 9.415079621 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.393946137 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.357330139 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.357245857 seconds)
  done (took 19.37820998 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.595777547 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.724980034 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.763717019 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.755364262 seconds)
  done (took 11.111110873 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.358695525 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.356814252 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.358595224 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.359272072 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.360995979 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.362498909 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.35970097 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.35910313 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.361883369 seconds)
  done (took 13.506331806 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.608236347 seconds)
done (took 86.954867617 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.040635793 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.500176851 seconds)
    (3/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.378088293 seconds)
    (4/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.685118102 seconds)
    (5/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.352547474 seconds)
    (6/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.372133417 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.382093779 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.047869461 seconds)
    (9/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.396564741 seconds)
    (10/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.016081861 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.624933424 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.420371854 seconds)
    (13/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.880713613 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.414923988 seconds)
    (15/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.211647324 seconds)
    (16/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.434737687 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.331711085 seconds)
    (18/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.435921949 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.377294924 seconds)
    (20/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.3770218 seconds)
    (21/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.377329665 seconds)
    (22/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.415545353 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.810491378 seconds)
    (24/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.996321161 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.231305688 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.007818307 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.483560874 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.3534598 seconds)
    (29/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.02887597 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.426414936 seconds)
    (31/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.819567584 seconds)
    (32/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.087968416 seconds)
    (33/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.695748324 seconds)
    (34/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.380100107 seconds)
    (35/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.36355787 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.345149388 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.396245964 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.991418806 seconds)
    (39/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.606817171 seconds)
    (40/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.559477074 seconds)
    (41/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.46135354 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.456367978 seconds)
    (43/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.442517033 seconds)
    (44/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.348218074 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.728059816 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.47593194 seconds)
    (47/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.334129728 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.992581181 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.371181171 seconds)
    (50/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.458372374 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.465661122 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.616197046 seconds)
    (53/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.378793918 seconds)
    (54/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.582573981 seconds)
    (55/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.112903108 seconds)
    (56/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.757862006 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.939880172 seconds)
    (58/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.387922093 seconds)
    (59/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.464434235 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.333378972 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.412566623 seconds)
    (62/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.548857596 seconds)
    (63/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.88155629 seconds)
    (64/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.46831628 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.181088511 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.355837822 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.265466798 seconds)
    (68/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.365506006 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.354938987 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.035958137 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.355991841 seconds)
    (72/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.995133012 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.37322539 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.170523777 seconds)
    (75/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.335573125 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.913875836 seconds)
    (77/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.45810667 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.356835843 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.28786635 seconds)
    (80/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.35230661 seconds)
    (81/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.444764542 seconds)
    (82/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.755341784 seconds)
    (83/309) benchmarking ("sort", Int8, false)...
    done (took 4.453424245 seconds)
    (84/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.425301078 seconds)
    (85/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.272285577 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.441359085 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.356986515 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.606032153 seconds)
    (89/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.623185896 seconds)
    (90/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.702734062 seconds)
    (91/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.789576412 seconds)
    (92/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.425714577 seconds)
    (93/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.374372103 seconds)
    (94/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.191571728 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.357752481 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.376725896 seconds)
    (97/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.307105986 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.368081323 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.147594425 seconds)
    (100/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.337747404 seconds)
    (101/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.340742334 seconds)
    (102/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.602402916 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.510291526 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.368029094 seconds)
    (105/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.645593006 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.399155123 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.425374821 seconds)
    (108/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.301500813 seconds)
    (109/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.422342928 seconds)
    (110/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.374368911 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.786025897 seconds)
    (112/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.765985096 seconds)
    (113/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.791261082 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.377492871 seconds)
    (115/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.044320935 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.573920642 seconds)
    (117/309) benchmarking ("sort", BigInt, false)...
    done (took 6.356861851 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.367729755 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.751115804 seconds)
    (120/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.556998003 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.378826252 seconds)
    (122/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.675885459 seconds)
    (123/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.406365857 seconds)
    (124/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.362012653 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.288905609 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.239254651 seconds)
    (127/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.926285138 seconds)
    (128/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.773791539 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.865015058 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.067403653 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.788434312 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 1.904575474 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.407092968 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.63263289 seconds)
    (135/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.385662125 seconds)
    (136/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.389916086 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.224207598 seconds)
    (138/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.490483048 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.621519185 seconds)
    (140/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.470783593 seconds)
    (141/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.377802507 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.33960724 seconds)
    (143/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.003018113 seconds)
    (144/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.477736815 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.234139759 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.963393245 seconds)
    (147/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.492334816 seconds)
    (148/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.035807266 seconds)
    (149/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.36708233 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.465478261 seconds)
    (151/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.361366867 seconds)
    (152/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.47252733 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.341108749 seconds)
    (154/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.205695618 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.244305948 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.216541163 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.393765224 seconds)
    (158/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.813512692 seconds)
    (159/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.037351569 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.354479538 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.454497846 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.383952898 seconds)
    (163/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.359394999 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.363457994 seconds)
    (165/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.749362362 seconds)
    (166/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.768209506 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.361735255 seconds)
    (168/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.374553267 seconds)
    (169/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.363402827 seconds)
    (170/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.426308813 seconds)
    (171/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.147276747 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.611757137 seconds)
    (173/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.279274364 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.030985328 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.380053937 seconds)
    (176/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.843229167 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.817315604 seconds)
    (178/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.068537064 seconds)
    (179/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.956372851 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.08816939 seconds)
    (181/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.87191801 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.362338955 seconds)
    (183/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.058648722 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.415113343 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.390542548 seconds)
    (186/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.362547045 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.939035447 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.389641106 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.908525148 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.364030452 seconds)
    (191/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.868084158 seconds)
    (192/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.750543194 seconds)
    (193/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.296971855 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.3426489 seconds)
    (195/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.405373591 seconds)
    (196/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.89030945 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.405695839 seconds)
    (198/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.697289901 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.839641479 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.030724147 seconds)
    (201/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.846274474 seconds)
    (202/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.352256125 seconds)
    (203/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.390627914 seconds)
    (204/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.758310628 seconds)
    (205/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.344243134 seconds)
    (206/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.412598278 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.003274554 seconds)
    (208/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.556563455 seconds)
    (209/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.852459518 seconds)
    (210/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.767164184 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.559136672 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.384450737 seconds)
    (213/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.781349688 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.421849265 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.380920935 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.469038272 seconds)
    (217/309) benchmarking ("sort", Float64, false)...
    done (took 5.705670398 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.419715422 seconds)
    (219/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.363593489 seconds)
    (220/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.302920843 seconds)
    (221/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.364921087 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.030893287 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.566263582 seconds)
    (224/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.374407378 seconds)
    (225/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.380014627 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.371383762 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.243942549 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.641854099 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.819830449 seconds)
    (230/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.890511247 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.172501515 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.833457274 seconds)
    (233/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.380618799 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.962610425 seconds)
    (235/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.643947162 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.389075472 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.951616755 seconds)
    (238/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.41300107 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.34745881 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.40711879 seconds)
    (241/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.763290154 seconds)
    (242/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.517206746 seconds)
    (243/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.94254512 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.387282684 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.843320949 seconds)
    (246/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.187649224 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.989367333 seconds)
    (248/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.125377555 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.398650553 seconds)
    (250/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.453877031 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.041677822 seconds)
    (252/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.464732621 seconds)
    (253/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.3943002 seconds)
    (254/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.507617083 seconds)
    (255/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.910645389 seconds)
    (256/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.584678571 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.348039547 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.359308296 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.090495735 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.482097407 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.290631861 seconds)
    (262/309) benchmarking ("sort", Float32, false)...
    done (took 5.399421457 seconds)
    (263/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.913400387 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.591485933 seconds)
    (265/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.284153787 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.374063355 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.395352378 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.461297312 seconds)
    (269/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.672973149 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.774675739 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.36012157 seconds)
    (272/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.432700115 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.469144957 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.450490655 seconds)
    (275/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.746867043 seconds)
    (276/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.457479242 seconds)
    (277/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.491884247 seconds)
    (278/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.005705196 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.735368551 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.392782411 seconds)
    (281/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.396413798 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.441366377 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.452096017 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.155039957 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.452441831 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.791124306 seconds)
    (287/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.387220293 seconds)
    (288/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.351219775 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.483107571 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.412416761 seconds)
    (291/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.560709595 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.234400501 seconds)
    (293/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.77362496 seconds)
    (294/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.453757724 seconds)
    (295/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.879251641 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.412115363 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.791841333 seconds)
    (298/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.808983463 seconds)
    (299/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.435701727 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.496086681 seconds)
    (301/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.554783684 seconds)
    (302/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.351212972 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.452400495 seconds)
    (304/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.397542915 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.39276966 seconds)
    (306/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.754204882 seconds)
    (307/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.695325825 seconds)
    (308/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.390498124 seconds)
    (309/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.412883469 seconds)
  done (took 944.685746419 seconds)
done (took 945.956188905 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.405509368 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.399075911 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.381838906 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.404392618 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.493170656 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.405428941 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.393895307 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.384218284 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.429643968 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.432164209 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.381405512 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.405193463 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.38358758 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.383739187 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.381967939 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397764161 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.545086236 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.389252876 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.398591877 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.39276224 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.399420429 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.380914306 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.43278551 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.405072554 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.386715583 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.386062499 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.386073058 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.402376953 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.495254334 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.386834848 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.388032601 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.394480559 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.542913424 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.388564574 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.380114204 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.403596781 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.394339693 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.393427754 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.38707013 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.416765013 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.942367643 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.402040559 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.386985088 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.386172311 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.385680137 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.389830403 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.385321084 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.392213169 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.399042808 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400594353 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.931925151 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.418558329 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.387564937 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.385998491 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.396935384 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.385592897 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.389194764 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.403722538 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.405473239 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.403200056 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.487906415 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.391084677 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.38881482 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.400593086 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.393255544 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.967967592 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.400565527 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.389388631 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.937741466 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.411699649 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.966266013 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.413707823 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.38952499 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.399734224 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.418604733 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.529832344 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.387227971 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.386706432 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.393469286 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.385022968 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.397182197 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400011106 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.392635524 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.388176561 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.402590394 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.413485065 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.39703715 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.389260388 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.396307321 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.406316458 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.39466691 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.399555977 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.3904235 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.382952282 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.397742297 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.390715869 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.390723481 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.390871202 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.392858385 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.398872757 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.935139868 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.425657101 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.383866839 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.385972967 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.388198667 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.40227315 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.936847903 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.408497034 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.40973733 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.435397978 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.390919587 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.537848779 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.397715567 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.407094663 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.399420149 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.392804917 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.384855099 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.542373426 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.935482991 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.423256421 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.391690508 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.387285115 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.408854766 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.393035789 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.386674056 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.55255661 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.395890605 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.404089445 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.511966212 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.40064925 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.421705007 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.387978494 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.39365772 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.414929114 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.40880597 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.42143557 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.393380061 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.408719541 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.407337737 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.393652966 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.402138784 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.40256773 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.391981052 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.397831102 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.385488367 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.416892942 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.403429229 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.404199516 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.412158196 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.512064517 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.388257998 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.492801588 seconds)
done (took 235.580266196 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.44914749 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.388760205 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.509883521 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.386766967 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.489572471 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.489790916 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.385020708 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.385849282 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.384693752 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.806776826 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.384849205 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.386115445 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.379343529 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.38668485 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.469386804 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.38817451 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.386009491 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.72715517 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.389197244 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.460730309 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.385352586 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.386509142 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.388864688 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.76739412 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.387042517 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.386787025 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.459579555 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.387859847 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.771910873 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.384349913 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.383147276 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.73311697 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.477655502 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.407550847 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.399020123 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.397576445 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.491111395 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.409935365 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.469965161 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.470290776 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.518896368 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.427717416 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.387844648 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.385697216 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.390774355 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.3902982 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.387044297 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.417673227 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.383461886 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.387742551 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.767224786 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.398755893 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.388457624 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.387855252 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.387704374 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.419955056 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.388731294 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.390430142 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.481292826 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.390609629 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.453638396 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.81566845 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.768232317 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.391286324 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.392769465 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.389275011 seconds)
  done (took 152.366623567 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.456508353 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.464723295 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.510258981 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.411284338 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.441277066 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.513129975 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.410059563 seconds)
  done (took 11.508893852 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.399173143 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.392000549 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.441639482 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.441597151 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.391516014 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.540066006 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392970169 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.403357942 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.391095151 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.445745464 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.391798559 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.39302645 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.398631811 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.388375128 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.441829283 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.40614762 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.508118275 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.393397243 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.392856049 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.544101563 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.390688025 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.39922903 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.4448458 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.404634964 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.394899463 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.39946118 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.963668025 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393211053 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.390845394 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.393064309 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.391473505 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.431294323 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.393854499 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.388694145 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.391636633 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.509671335 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.393757642 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.391071446 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.393947601 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.394101243 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.395593256 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.39415534 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.395250391 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.392862818 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.39528595 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.41866099 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.394370239 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.394364118 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.395555792 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.396526492 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.444755182 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.396032153 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.391773869 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.393702258 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.451369767 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.403404511 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.395782527 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.393387311 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.395222474 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.392969079 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.546240147 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.442761971 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.395169665 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.442874778 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395345979 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.395566599 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.396868364 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.396054731 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.450056838 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.396806007 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.443971754 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.393283128 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.548526834 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.418844197 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.39786104 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.398919092 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.398830007 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.396962511 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.394795577 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.40339482 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.394544585 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.397699549 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.403236521 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.393741086 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.395895249 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.4995806 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.506084237 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.395632865 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.410073942 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.405298442 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.396055951 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.450714643 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.398106446 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.395198768 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.450070175 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.513070604 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.452457485 seconds)
  done (took 159.19734787 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.404524435 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.40607683 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.400257867 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.415128639 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.399451903 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.397782471 seconds)
  done (took 9.729511822 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.401879422 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.39966946 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.399320823 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.399867236 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.398633512 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.398520057 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.400633656 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.40012595 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.402278952 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.399764513 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.399850436 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.399385181 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.400463759 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.400131606 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.399640433 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.400933222 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.398663452 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.396509292 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.398917161 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39963722 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.508101477 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.399833151 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.39987862 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.402267219 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.404444161 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.400264751 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.408169118 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.400294152 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.400886054 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.405055539 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.422307337 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.401873155 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.400943651 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.406802784 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.404488006 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.402718516 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.405287199 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.40098072 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.399036631 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.401064849 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.401492469 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.401597117 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.400843449 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.40134722 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.403535261 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.406477332 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.40491868 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.4086607 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.401234358 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.403642397 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.402343063 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.401033642 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.402256111 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.401475718 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.404191142 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.424937911 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.407141146 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.402155428 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.402670293 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.404252343 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.404333584 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.401507555 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.404099253 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.406615417 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.400525617 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.402816628 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.404073428 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.407298419 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.40306713 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.403563777 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.403528598 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.401024689 seconds)
  done (took 103.408123231 seconds)
done (took 437.504066825 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.421899382 seconds)
  done (took 7.73401163 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.578179117 seconds)
  done (took 7.8917348 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.427694943 seconds)
  done (took 23.744681143 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.420597863 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.459053882 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.884794846 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.403150935 seconds)
  done (took 27.480222796 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.934169332 seconds)
  done (took 8.246936783 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.395668212 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.424832372 seconds)
  done (took 14.133641613 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.577267003 seconds)
  done (took 7.889977314 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.117313665 seconds)
  done (took 8.435007057 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.42047186 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.412734398 seconds)
  done (took 14.419755398 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.376641811 seconds)
  done (took 7.687727236 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.573682474 seconds)
  done (took 8.885920658 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.401551344 seconds)
  done (took 7.714594491 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.412570229 seconds)
  done (took 7.724582674 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.176641399 seconds)
  done (took 10.488217466 seconds)
done (took 163.786943748 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.396238849 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.402426589 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.40460977 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.404097998 seconds)
  done (took 26.919883243 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.437093523 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.437492186 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.43881281 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.448148548 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.440531421 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.437423877 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.430574911 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.430617022 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.44825746 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.441733562 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.439922838 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.439907153 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.437503903 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.431224778 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.439901545 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.441390849 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.449414215 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.440315214 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.431541012 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.441906078 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.407065014 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.450313797 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.442420979 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.406044992 seconds)
  done (took 35.805339158 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.926968428 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.475848844 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.559348949 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.457779289 seconds)
  done (took 7.733814169 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.457549759 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.459306197 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.471057359 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.513532105 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.535761104 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.468258907 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.433426739 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.427713571 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.414478997 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.460725588 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.534514456 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.476085418 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.546038745 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.40679375 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.609082794 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.40627981 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.405669356 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.458900611 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.51072645 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.525705329 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.406269689 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.459517492 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.461798969 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.476014287 seconds)
  done (took 36.639880505 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.419152193 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.415065913 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.406258545 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.404882147 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.429000165 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.405787948 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.407046485 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.407682923 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.406234486 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.412518684 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.406109792 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.419921001 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.405537272 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.406818219 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.412589741 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.407515398 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.413148414 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.406540007 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.406224361 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.410108053 seconds)
  done (took 29.523659056 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.402405415 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.258525743 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.753551 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.658417487 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.401357805 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.407903496 seconds)
  done (took 28.198999439 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.487544249 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.652804842 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.409124074 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.803372503 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.898174325 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.428842688 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.408428699 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.670471704 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.026910027 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.025293923 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.480120894 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.482781103 seconds)
  done (took 21.092654445 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.408899852 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.407796105 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.410846057 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.425017946 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.470125598 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.431265868 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.415584155 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.402760846 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.477272743 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.494320677 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.432514161 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.470642828 seconds)
  done (took 38.565123965 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492495336 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.454519604 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.4095673 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366915092 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.13020652 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61525038 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.317686689 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.8673463 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.4074131 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677740725 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421284399 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501366499 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.662740449 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419623 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.413122581 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.48130668 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651818609 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923068051 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40734422 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.725599642 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431061422 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412662128 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.840686162 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.439831552 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617444782 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.388559205 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.666067568 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.182579407 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726421044 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.424047283 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417503542 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406041956 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681564053 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12155609 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523966958 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416435093 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.34317066 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.955303645 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.407001064 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.802754488 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409966753 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.408844 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417700288 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406332069 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.342383788 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41352585 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886408505 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.413680895 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.118564309 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40739043 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418205068 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502847973 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.410402028 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.980589156 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548762511 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.41397868 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.404990619 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421987105 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974668131 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.200275914 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421809277 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.350761859 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.959308669 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.811008078 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087860934 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.530433915 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.412817926 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411523568 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343230377 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.811543533 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424922125 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544380823 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.433537249 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.070574602 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170161018 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.432729119 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.34061048 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98763588 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412433668 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.351211384 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639968778 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.185974639 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349299779 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.358203131 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.341852957 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168350233 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41752913 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.848033983 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418032125 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.87344779 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.420342971 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428612242 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433369429 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.633964516 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.288782034 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410582087 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.409634289 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525299164 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432370123 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.876798806 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345358936 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.414981746 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668056549 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.621365818 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424032748 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.511967358 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659479327 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411425404 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.452849778 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.414538519 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.428721794 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.048765789 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.449941313 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.208170982 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428704565 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.189187966 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187046064 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412038267 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.519818392 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.412289322 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677451452 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.228410826 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.315558703 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479628898 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416689206 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412263605 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.838404802 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.265152016 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.572975146 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.410844411 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415343102 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.431347747 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.412254454 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373070677 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.424000271 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413188074 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.211761102 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.637303716 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420071804 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695808187 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34686853 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549831844 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.429288608 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.637073935 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.70865176 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.432651102 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676060117 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427039102 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.434788889 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.433635854 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432161944 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511425524 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43585236 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.425615497 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.680330652 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.417519148 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.419473955 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.846960902 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.192042006 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422953989 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.42022205 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.387622653 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057706267 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4143945 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.417495087 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.309913146 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.428225941 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483278761 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.421952348 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.425965241 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.430843323 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.473125554 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.418996155 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.414419855 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640113741 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425800054 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.830415469 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.497016019 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.639999007 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.060500849 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456922719 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.350217165 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.128486898 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.109106404 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416280241 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.609135958 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417498381 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426105319 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428505498 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.144071405 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.060195528 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445809882 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.759422409 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.42278 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.42749372 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.422754508 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416666232 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.407426011 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.25487975 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428798267 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.437172836 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560575982 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.430753675 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.35210062 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.933666667 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.422728914 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.417805843 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.192218465 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45111316 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.763840451 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923654565 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680676354 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.324162955 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428401438 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.877055998 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.455099576 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.444961926 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431839389 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431132876 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.449941534 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426133874 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.429131237 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.848166303 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.86720447 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984338741 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202125765 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039022038 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.44683092 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.425878469 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.309127928 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.890986013 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353771821 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.070143088 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630179247 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.910081128 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37697832 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646781534 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.716522921 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278711448 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.428474467 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648871593 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4104198 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.421754634 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452839646 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630622746 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453889488 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.426214728 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.356735022 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.937987385 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697616593 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420824593 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501781061 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893080424 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420985432 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.201510879 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.418700478 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.824526692 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.63105509 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.968782521 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.815077211 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.426083926 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.434171369 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923717064 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424861038 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.951000857 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088849044 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.450576525 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.655526334 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36270322 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.431860844 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.432490428 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.418622243 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.908112126 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.45154787 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.686606677 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.434045996 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3566084 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.427783936 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017598887 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.304420365 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.429026965 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423394674 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226691831 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424513153 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.750754429 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.440704726 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.430792581 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454227377 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.358471235 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357284853 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.115215664 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.432756415 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392782792 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957150707 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.921974606 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.551067412 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44589062 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28220189 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.682432462 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.437048502 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.075387374 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679090757 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.448153328 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447136296 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.524249538 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423694494 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.427085721 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.32077166 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.661622367 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388773667 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.649020959 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.449228713 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.32518537 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.425070817 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.637077963 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.319472539 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.425781799 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694942814 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.163604303 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.439935671 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219791645 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470642498 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.438062739 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.44430175 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.977701997 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433107609 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495454518 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.436579629 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.43793401 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.436920276 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.612923458 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425963453 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.448507111 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.442159025 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520004622 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.262295665 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.425522835 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.225759951 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078026845 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240920993 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.09108058 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467056993 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.426958497 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42761547 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361805018 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574911203 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.955541981 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700930208 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544775947 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.109705767 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450275648 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434014866 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431531289 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647119902 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701820936 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.301528085 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426455731 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.098061564 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.310045304 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.439639648 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.640559667 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961637765 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026061452 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543718666 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.431785933 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.903106455 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701636051 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.519578718 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428308557 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.02249397 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.452356289 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.8499262 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.454280558 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428959832 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575758603 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.438093749 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122764986 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.460082944 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.583681348 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.202823611 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.820209989 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.686885375 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.89710801 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.440771579 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078600677 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.233897482 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.701798036 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500290416 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.440327781 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.538012145 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576265898 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.432545307 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.313284076 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430336564 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278471231 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.140770062 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.43979822 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070630677 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715525519 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.427920064 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.433937297 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45408753 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.440234352 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.655456699 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191804449 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.655715362 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440043227 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.439707675 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.004046637 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07319802 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464596365 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365867547 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.43485724 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699309269 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.696003075 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456245229 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.884700817 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.143236727 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009535385 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.40766487 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455576087 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43199306 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.198510454 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065530948 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.430547935 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968208546 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.094696598 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441010179 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715011479 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.437872246 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.442163967 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715666244 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.437011076 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.433572495 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.453351365 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.067509572 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.293741624 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.449722279 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.834695301 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.371575855 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.661643558 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199616339 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370159322 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433197398 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.628686441 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.433769613 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552788614 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445773972 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.436223409 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445423037 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.199132097 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713669356 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.439787607 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.427842329 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.426994107 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.437458285 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449248405 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.712761677 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437810613 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.109476852 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.786929487 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.691769396 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.450679321 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.421327862 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.43920277 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435041445 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.159989735 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.41282172 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.175404785 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037271993 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.452212321 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.453425071 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.439310631 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.650648799 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647246982 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.441546132 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.449109651 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44379698 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457885579 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.578907264 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.209715733 seconds)
  done (took 1642.231601641 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.479113028 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.489664982 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.471185902 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.514178115 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.45264805 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.490563247 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.551159256 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.506747223 seconds)
  done (took 53.3043965 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.43584954 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.594497546 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.469441564 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.450041747 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.44610886 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.443333139 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.935745957 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.460497132 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.446193652 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.447464135 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.437096703 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.444783999 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.157165071 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.446344643 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.43918262 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.42641998 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.446561756 seconds)
  done (took 67.282057851 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.444525663 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.903861463 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.458461425 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.441265134 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.934672015 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.469761711 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.848543276 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.505227383 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.439269972 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.814361532 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.113675989 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.44716327 seconds)
  done (took 82.171205547 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.447389306 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.446939083 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.448452591 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.44637653 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.447737356 seconds)
  done (took 8.588069423 seconds)
done (took 2079.36904549 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.684817146 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.221053927 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.118070659 seconds)
  done (took 5.690599539 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.586313619 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.634874799 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.821228809 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.789538521 seconds)
  done (took 8.183200732 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.719487005 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.819972396 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.62913915 seconds)
  done (took 6.519228945 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.006625492 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.457506377 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.591952252 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.441290761 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.446000535 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.446838391 seconds)
  done (took 20.684541639 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.442705244 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.445743844 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.443576056 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.444846603 seconds)
  done (took 7.130268173 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.419077056 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.153175866 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.424099952 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.443256312 seconds)
  done (took 18.790907358 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.190516871 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.203145866 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.188198996 seconds)
  done (took 7.934290675 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.440018095 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.292148639 seconds)
  done (took 10.08480908 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.74688681 seconds)
  done (took 3.099414249 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.576585445 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.772302268 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.570789189 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.475424337 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.593095271 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.812313084 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.314979445 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.810356741 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.4365607 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.867240988 seconds)
  done (took 30.583178024 seconds)
done (took 132.790128358 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.608141565 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.845201189 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.650244923 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.62322879 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.674616077 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.649121275 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.755789205 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.590723501 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.092371692 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.081063879 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.629431433 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.677377387 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.707829136 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.847368315 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.706035621 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.848763371 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.675817996 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.642431563 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.272795872 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.442661437 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.775579276 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.217206157 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.456009543 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.237999948 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.676324699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.600267174 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.798728887 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.847349214 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.443033897 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.819044404 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.598966857 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.457310138 seconds)
  done (took 200.302837637 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.449587646 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.443154952 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.464415502 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.442553603 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.443887208 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.462652764 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.454241465 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.443676553 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.443845568 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.46493757 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.450358028 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.450202002 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.443582657 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.478208858 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.445617452 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.477754675 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.443989666 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.463400614 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.462737952 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.462053675 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.446325252 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.472665473 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.443816501 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.464074868 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.463096433 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.445629003 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.449190845 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.443069938 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.44485145 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.456867052 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.444106275 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.455153343 seconds)
  done (took 207.875263553 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.4442801 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.464524366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.445322958 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.445445963 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.463833991 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.445611915 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.447962216 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.467687921 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.461687995 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.4515929 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.445197368 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.444813722 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.465919432 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.464561713 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.447169418 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.446379392 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.457800685 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.456887229 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.446904585 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.451942778 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.450012484 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.466018702 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.466869942 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.445895734 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.472209735 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.447399114 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.447544042 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.447447512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.447135357 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.472305548 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.448084591 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.447678194 seconds)
  done (took 207.881752784 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.643550301 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.456587526 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.455943213 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.394044327 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.455339251 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.454419374 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.451111847 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.652792676 seconds)
  done (took 15.321883025 seconds)
done (took 632.732437871 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.950239038 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.653008107 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.674621773 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.476163992 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.372270485 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.504145082 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.475745937 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.660852504 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.419362481 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.678844378 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.818490651 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.493395973 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.96801754 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.474305989 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.74512925 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.583581152 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.412548379 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.539796091 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.816782489 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.112479549 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.767039083 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.065353389 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.697842859 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.425816615 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.989372996 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.022835829 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.241017472 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.398117706 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.50319832 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.820896493 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.305894639 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.502524869 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.54586345 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.545355905 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.609484592 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.583828255 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.47790215 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.543105928 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.689104297 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.789978299 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.124396366 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.239089979 seconds)
  done (took 99.079247545 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.440573983 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.440400941 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.43831705 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.439656528 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.440515872 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.439308172 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.439107778 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.438613467 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.44040134 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.441721732 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.4400572 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.441386489 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.439925256 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.44198062 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.441304556 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.440439541 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.441783793 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.442737648 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.44125765 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.440524636 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.441451645 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.441768317 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.441351312 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.440267634 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.440872818 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.440960888 seconds)
  done (took 38.820883054 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.458786367 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.723114212 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.910163375 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.472815523 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.459269451 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.463197901 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.546832557 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.463217945 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.462894499 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.462723762 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.639092361 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.463486017 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.495109249 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.934901352 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.471845519 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.461176237 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.460250194 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.460807247 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.733796462 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.470067851 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.57284971 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.470347893 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.547150352 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.47300067 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.487061118 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.461061303 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.465350846 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.990085456 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.484848406 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.638332214 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.356737551 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.552440311 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.942521994 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.935264555 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.369197061 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.472434497 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.462639671 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.643573173 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.465190397 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.46242322 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.547222824 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.463839263 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.914243496 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.111082361 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.492069946 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.464271543 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.013428301 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.664268311 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.742724268 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.479466215 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.941234203 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.474559335 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.465339752 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.464525591 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.735294904 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.471280123 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.464836289 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.02625642 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.498361518 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.559334563 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.47333542 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.464799679 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.740312987 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.465014225 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.728905667 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.46650172 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.473718017 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.48548297 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.916234169 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.475684212 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.131526826 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.493062638 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.465711336 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.641257704 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.730382348 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.050236013 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.4878215 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.744063201 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.958342829 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.569148069 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.469717536 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.981525083 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.573597537 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.469905966 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.467063571 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.467444467 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.46580732 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.512457373 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.548419305 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.053617165 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.142014791 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.038011426 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.574625948 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.479209043 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.466732026 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.016292708 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.487063563 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.4665234 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.910881029 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.137724996 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.496106292 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.474803097 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.126127771 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.49356124 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.552208356 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.473581434 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.925761168 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.476040478 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.515314396 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.467098113 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.474369211 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.491838154 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.552206992 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.47158956 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.468221308 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.099382454 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.680020647 seconds)
  done (took 192.556862632 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.469214272 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.462315523 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.471267098 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.460468327 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.460670839 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.469730456 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.461281995 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.462116156 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.467559954 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.460896927 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.461374045 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.463494856 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.463425361 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.472383058 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.473773762 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.468464906 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.073265949 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.461739914 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.460899593 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.462952934 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.280548827 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.472106667 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.462785956 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.461834022 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.462814181 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.461749375 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.474362786 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.464634337 seconds)
  done (took 155.819809581 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.471438976 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.090605934 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.490616586 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.617769463 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.500726947 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.466887749 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.612373232 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.535481192 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.498765661 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.468178667 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.466855178 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.802155419 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.47158165 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.039532885 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.686770363 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.649533235 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.04641842 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.492731634 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.468405395 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.468975381 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.617083678 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.474872533 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.816009274 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.103249595 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.493243412 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.093096789 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.456009899 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.471480917 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.470002464 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.095442347 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.490333938 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.806221945 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.557343984 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.539740814 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.119698231 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.059775543 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.06098709 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.644637922 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.480968257 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.470734652 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.469640994 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.454789951 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.096907899 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.493714976 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.473024355 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.084492513 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.494193226 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.47240429 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.47877227 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.470341516 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.540476507 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.563581834 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.831926195 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.103402143 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.578977568 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.485467602 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.623703542 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.882853995 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.477251712 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.066887007 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.463911704 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.101997866 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.493877547 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.45778503 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.471882887 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.476787364 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.641628106 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.628839381 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.052624086 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.494192054 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.040566549 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.662150746 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.47393366 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.472321507 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.476404383 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.103566702 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.06725822 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.662525965 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.625926028 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.692638943 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.467158767 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.473501381 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.457811617 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.560780188 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.476753532 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.104952564 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.064477272 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.495240566 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.476908927 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.476069888 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.47643324 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.671911829 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.13359999 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.581018451 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.03715532 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.830729657 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.812459094 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.476839259 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.542752091 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.496552704 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.813900418 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.477833355 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.541114166 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.949066652 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.812734321 seconds)
  done (took 176.456471681 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.740995599 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.791039923 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.574181982 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.626422182 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.09502289 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.068804901 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.808239286 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.622999207 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.595441366 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.756985938 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.704151571 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.563948128 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.667811489 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.564390234 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.246585054 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.57966446 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.592499342 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.627820424 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.60041992 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.546346241 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.152791252 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.779248158 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.670605652 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.506570922 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.576362952 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.318316895 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.080800717 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.032373091 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.667367338 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.896766498 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.052743057 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.694271649 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.504995395 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.21195817 seconds)
  done (took 70.899840261 seconds)
done (took 734.990505966 seconds)
SAVING RESULT...
DONE!
