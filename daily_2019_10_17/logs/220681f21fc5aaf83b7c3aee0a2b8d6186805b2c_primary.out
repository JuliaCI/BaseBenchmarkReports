cset: moving following pidspec: 9615
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.343369205 seconds)
loading group "string"... done (took 0.544509223 seconds)
loading group "linalg"... done (took 7.065589416 seconds)
loading group "parallel"... done (took 0.166108195 seconds)
loading group "find"... done (took 1.105735174 seconds)
loading group "tuple"... done (took 1.854335542 seconds)
loading group "dates"... done (took 1.206362479 seconds)
loading group "micro"... done (took 0.216890928 seconds)
loading group "io"... done (took 0.912278141 seconds)
loading group "scalar"... done (took 37.451775725 seconds)
loading group "sparse"... done (took 11.562404293 seconds)
loading group "broadcast"... done (took 0.935392643 seconds)
loading group "union"... done (took 11.910256858 seconds)
loading group "simd"... done (took 4.306311735 seconds)
loading group "random"... done (took 8.617241941 seconds)
loading group "problem"... done (took 1.86816446 seconds)
loading group "array"... done (took 19.784259201 seconds)
loading group "misc"... done (took 1.616375097 seconds)
loading group "sort"... done (took 3.064218801 seconds)
loading group "collection"... done (took 16.295732189 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.483172887 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122282433 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113630433 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117554225 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144216216 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11390093 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121675671 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083112729 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.773213851 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146841528 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118726449 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412074385 seconds)
done (took 5.059076996 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.169942225 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082557322 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081423191 seconds)
  done (took 1.284182042 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064811942 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120616672 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066060535 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066753554 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066578061 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06583491 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065550376 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065372208 seconds)
  done (took 1.640549025 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072478291 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068075766 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068524564 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067816942 seconds)
  done (took 1.402557084 seconds)
done (took 5.694382696 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.760381018 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200062064 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181333054 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.394779958 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127673492 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153515457 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.635711596 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.322697505 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182374869 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081116949 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103639096 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.3149616 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106544553 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.624543173 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07668792 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090258064 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13849995 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.409934174 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067127751 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081601054 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088132814 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127837812 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086934177 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074333904 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145322597 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067470157 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133802474 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079893349 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065928411 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205894797 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171953331 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660571421 seconds)
  done (took 10.125116572 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095767387 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096707441 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067787277 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135689877 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096170606 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068813785 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070339422 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067319701 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086493241 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127363594 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08781433 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100400392 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064864737 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068512572 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083881035 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203249324 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079203758 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080464423 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06983579 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074809993 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118477661 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077488745 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077505678 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076905946 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127914525 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179452509 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095893795 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096707128 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066790825 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.0804191 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114348554 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127053039 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06599506 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065604428 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123570034 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093682276 seconds)
  done (took 4.578089709 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.28563908 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.13816785 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.088861132 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13199489 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064276207 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105672443 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065280031 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08007014 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.198155509 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.295240162 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083283465 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.570956857 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090576143 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110099679 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103027391 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06705462 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067827787 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064375762 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065927324 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.344722138 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107767514 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104250334 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080556567 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069482667 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068687322 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361364195 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067672088 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063900993 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068106718 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058078743 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12261308 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067345239 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.914871527 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123497233 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066064617 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099795413 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.292823299 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064653359 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08743044 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141273479 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067874218 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063640468 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148693838 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070003938 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065946471 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082932386 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103701182 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112009853 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065093226 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066749666 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160431144 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065032452 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078408199 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.999800145 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154783486 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078962747 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064884595 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.243970397 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084839287 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068966027 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064695672 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.178677557 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137129141 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067513841 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066196284 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067418266 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068672711 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.361533667 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06849712 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.727852798 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069571255 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077053103 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068745361 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071407717 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072155584 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071868532 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085111837 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066005794 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075182238 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065554926 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065328428 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066277518 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084202776 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.356535375 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066315033 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067792272 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064234029 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085787349 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096124604 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065849076 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064562358 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.200168765 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068927507 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06650196 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105778551 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066949245 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083435799 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.06882271 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112393793 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068769993 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.097375251 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067528436 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100114002 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.06981317 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098608072 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080798183 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068158178 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.395933298 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064891141 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064404004 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067436736 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064826734 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067019138 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066033761 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079121681 seconds)
  done (took 20.819567023 seconds)
done (took 37.93463197 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.232086084 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078117271 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079195092 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07874138 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078700985 seconds)
  done (took 1.762717551 seconds)
done (took 2.96301451 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118619771 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097529796 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063700477 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094372219 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063433947 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099747982 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098770373 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080665221 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097870556 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063381636 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09530086 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063826152 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064012451 seconds)
  done (took 2.323399006 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082026358 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082895663 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069019543 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081312799 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063390847 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081770079 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07992528 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08834269 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081183043 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073250437 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064884315 seconds)
  done (took 2.046898992 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082104276 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083584265 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068732603 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080452178 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065745293 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080743752 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080219114 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085051243 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080763097 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072232966 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063110672 seconds)
  done (took 2.035572749 seconds)
done (took 7.597938256 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078211924 seconds)
  done (took 1.257675082 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.583504478 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.039407387 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081065083 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111620219 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181650424 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11907216 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275574037 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085776988 seconds)
  done (took 8.841121393 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08767911 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.080721975 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069161465 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071019721 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071152362 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069019095 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068456211 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07059602 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070306497 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072076904 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067704292 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069153896 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067759452 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07135278 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068941242 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071724137 seconds)
  done (took 2.403884448 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091303194 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089976759 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073297375 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074500474 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071687578 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071837192 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073743681 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073100043 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070365297 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071311704 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073835683 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072693957 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070760494 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064844965 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073602756 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075605011 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070485219 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07334748 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074276906 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07420965 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073974224 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06426119 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071192987 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073672374 seconds)
  done (took 3.058965297 seconds)
done (took 16.751971823 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115154609 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070870175 seconds)
  done (took 1.370890701 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081777818 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083219258 seconds)
  done (took 1.363764488 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083492761 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065463177 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091325479 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078428464 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065692435 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065264295 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089167991 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065861447 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065178535 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066406928 seconds)
  done (took 1.934638545 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069273387 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079019456 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07103616 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080745487 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073595032 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064192704 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072445827 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067398204 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.0778114 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062353044 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071549222 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082380914 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071174216 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08425576 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07242127 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068588391 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071055525 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067366235 seconds)
  done (took 2.509136381 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064755226 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066476076 seconds)
  done (took 1.335568291 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067577947 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063361551 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06672784 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067085964 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062981314 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062073813 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063010742 seconds)
  done (took 1.653166379 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.379598235 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109815814 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.295718415 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069713352 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080805372 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.246766108 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06475176 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069577887 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069830041 seconds)
  done (took 2.631004509 seconds)
done (took 14.003776093 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078260168 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084850363 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094344426 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.359461463 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09108202 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065017648 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113271419 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190187362 seconds)
done (took 2.292861783 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217651106 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.608199398 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.384817242 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195611087 seconds)
  done (took 2.395669992 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.3245673 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086474312 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058997398 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066303527 seconds)
  done (took 1.751477033 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065507198 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068035009 seconds)
  done (took 1.346827156 seconds)
done (took 6.924689014 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066188146 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065953869 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063333304 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065291654 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062947591 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063250859 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06565822 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083952511 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070343605 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063428128 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067383295 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065074326 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065031411 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063175631 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063169031 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065462435 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062903257 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065025325 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063115599 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063013138 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064955216 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062954935 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062597382 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062892469 seconds)
  done (took 2.815141197 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082990939 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06648181 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070895061 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070335495 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06985212 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072361102 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070492608 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06543268 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070478658 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067420769 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069121044 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069074912 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067232249 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069542835 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067497988 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069790898 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070333294 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065744032 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067592258 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069270693 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070096472 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065889973 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069274722 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070278868 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069147597 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07051093 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06759256 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065999075 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070551114 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068884213 seconds)
  done (took 3.303920545 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069871389 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062831317 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063380303 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069996804 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063224002 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064983263 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062966081 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063272074 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064342399 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063070092 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064753958 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062604887 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06305232 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063787954 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063463748 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066719723 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078152831 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063713836 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062776731 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063381336 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066263074 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063856903 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063000442 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062691759 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063049355 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062453654 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063223518 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062727477 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063599406 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.170470662 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065929162 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066485844 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062213555 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068906324 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066153425 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062670388 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06669536 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062398459 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063183709 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062251204 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062235097 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062524378 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063110892 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069455251 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063059114 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064163683 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062889988 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063844157 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063076641 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06514951 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062219181 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062875575 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064498984 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06381481 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066369433 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062471185 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063341607 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061995949 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063325059 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062462228 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062271493 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062354259 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065626252 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063481991 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076572362 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069058793 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062332806 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064829967 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063659051 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064935224 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064498805 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075931652 seconds)
  done (took 5.980400046 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089731961 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086351608 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063963358 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06454291 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061405781 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063692994 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067012187 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063881771 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065082081 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069365116 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063219047 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064497586 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064838077 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076609838 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063916361 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064754073 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069178839 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061783361 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063204357 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06629886 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06359678 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066583951 seconds)
  done (took 2.716999647 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151447823 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069600659 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104914633 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072240126 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06676778 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072305275 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068837717 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069429757 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069547145 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067782893 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067620985 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069094471 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067220171 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067275967 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067470389 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067870196 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069295632 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068607062 seconds)
  done (took 2.582624837 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076192238 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065873057 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08497003 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065729164 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065479994 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067391625 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070083647 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073194075 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067366439 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065160213 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073373832 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067130031 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067347423 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065188258 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067736147 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064907346 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068068617 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065393014 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073450568 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069801581 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069859459 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073088269 seconds)
  done (took 2.753861792 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078732417 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067085005 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081513673 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068009477 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061772067 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06396879 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069250535 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065478964 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069350996 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066819567 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065602712 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063795942 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06875361 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065283727 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068587634 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065620976 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066946671 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065136551 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066892939 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061407211 seconds)
  done (took 2.579738212 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085307358 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066988628 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067141333 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075151253 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067214612 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066812706 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074169275 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066533331 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066931326 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086414537 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066903543 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066976629 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074830304 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071883849 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066930487 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074328694 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074267608 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074169313 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066811817 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066736923 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086159779 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066473923 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074046174 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066533166 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066506024 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066572323 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066669217 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071622138 seconds)
  done (took 3.221004822 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066057694 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064803235 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063437762 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062686835 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06305364 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063005067 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062856917 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063057168 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065126188 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062927821 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065152608 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065083726 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065306933 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065202155 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064972757 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065051505 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065451931 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063614603 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063357078 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062803716 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065053358 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065330635 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06499532 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062607729 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062970353 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065344901 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063281939 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062493408 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064954787 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06269189 seconds)
  done (took 3.156350544 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074692312 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072663793 seconds)
  done (took 1.382138787 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062358557 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079069016 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063293553 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068710851 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069520448 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065823559 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072306319 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069251593 seconds)
  done (took 1.780065775 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081178407 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076544074 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067198053 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079607548 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075739297 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082219496 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131263066 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066869233 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07223077 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063594533 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07870129 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064637379 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07166416 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065857053 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070907442 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071952411 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063546634 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071924172 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068167788 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064254756 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066966377 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074418576 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068272064 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061145629 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066708374 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087377952 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076735762 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065375811 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068925091 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073203962 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071377812 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060681453 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065617131 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066436771 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063795917 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07523782 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080573173 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068813514 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074371762 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066909244 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076699107 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060957791 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070273002 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072013548 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075494658 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066427541 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066540541 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061336607 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063541709 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068422576 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061262398 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066152197 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060691684 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075743618 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069467856 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07628229 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064938877 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067058355 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06891946 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069157947 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072514974 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067561614 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068249222 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065450618 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075438707 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070284641 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074875577 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06056633 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060060978 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063849001 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07491959 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087885526 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07177316 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066540569 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066223425 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063614299 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068481971 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067090395 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071424445 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07198112 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065645054 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071075442 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072887738 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066059455 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068458568 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074088241 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063817748 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068578553 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06347826 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081593772 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064595958 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063375277 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.0640862 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076086047 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069007634 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065521836 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.0644877 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073089218 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059880629 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065707234 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065693284 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065357106 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074382129 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068564076 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069304614 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072983646 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07163547 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064688912 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066984605 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061137027 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065290241 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063311939 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071334053 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058736603 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067076672 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065058095 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065464701 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200819157 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065067027 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066910232 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07382459 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072042761 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064986762 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062675436 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069295502 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066330343 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069427247 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073655761 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064977734 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061875226 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061732376 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069878903 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065732442 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070261238 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071210551 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069537899 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061331931 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064779654 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071522669 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075050059 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066456202 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067242378 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072161401 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067481901 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065278053 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072493295 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069482731 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065891676 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071553607 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067233101 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061299143 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069485117 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069092302 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064930819 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069582325 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069860159 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068992296 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066349774 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065350329 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073083964 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06676652 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065114073 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065635612 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065038773 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076326948 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068363898 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061679271 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063093487 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075040698 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064083807 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066012063 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065010228 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068332109 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067217822 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064797859 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066647837 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06877397 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076616795 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069918796 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06725373 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072360007 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077794888 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065770333 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069084115 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066176697 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067032448 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066971065 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074640605 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071209818 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070171335 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068418994 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06263779 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071178653 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073194908 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064833241 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063630387 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06469406 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070052754 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071792474 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070017184 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066282192 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064397573 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066586651 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068642307 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068369318 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065140371 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064714252 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072208969 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063976815 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072841428 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066341375 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075743819 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068765358 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060998513 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068682903 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063959055 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071481083 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060890107 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063888526 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064751317 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065818278 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063690161 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066689811 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059252754 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07094979 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071840441 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065180811 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064413825 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064409656 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071291198 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066193411 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068548999 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067911922 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070397557 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074754141 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064478127 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06799258 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.203743094 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067242261 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060707196 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071737221 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065485377 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065900425 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065086315 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064448338 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069448273 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074972259 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073335447 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060172081 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069107143 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064513044 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065892633 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061981452 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070944298 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069805157 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067537492 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073330125 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067576472 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066871805 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070607533 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066109803 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06754045 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067510541 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069672221 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067218388 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067856258 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066520105 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069312999 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065117574 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064513564 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069556402 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06659691 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067286589 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072170043 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065864687 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066736848 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068728375 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067123494 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06757892 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066850632 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066188133 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069637605 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06651425 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06721936 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069000365 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061396883 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07420433 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066303976 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073818677 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066952684 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063914132 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073614822 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068448959 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072325148 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067623802 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066549888 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067982726 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065870134 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069004883 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072753923 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064075936 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076901369 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073170789 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067629923 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068699589 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066663658 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067365381 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065902368 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067191263 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066450036 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066105483 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066085778 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070231827 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068343266 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066001315 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067378076 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066291443 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06604762 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066862808 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060172126 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065016226 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064816666 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065383121 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075559683 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066076597 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065751284 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064647659 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066609794 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06479756 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062653681 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074291382 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075228194 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066424778 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072799459 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064950379 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067341753 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075928898 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060546184 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064233442 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063531454 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063598661 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073067247 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066477573 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074149483 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065836546 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064804392 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062398337 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065315395 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063662298 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.05954339 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062557064 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067751428 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063574807 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063857202 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065279927 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067176446 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065476115 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074095185 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064359857 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065894079 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064919536 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.194599715 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066618039 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065936056 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069861447 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068357173 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063573518 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063838878 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065906425 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067461615 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067436341 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066120542 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067519081 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075277356 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0656957 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069311072 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069418606 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06203986 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068947177 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066868777 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065935365 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065427193 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.06989298 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06983121 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067835928 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074608621 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066115461 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067646299 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066527025 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064537423 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066490201 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06550051 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066789452 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065038624 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067434003 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073726419 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063918278 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069341638 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066246206 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066773585 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073240069 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067414887 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069535723 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073389987 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065954934 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067420458 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074424362 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070480515 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06980098 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067460442 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068186988 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071905699 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065214834 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073289486 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066964614 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066318259 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068920609 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064141048 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065510751 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065763047 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065445516 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07241401 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067321029 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065586943 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065220868 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063764067 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066893717 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069688681 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073924136 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068793307 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069013997 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061928107 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063505984 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066774505 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064247923 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067967899 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067842504 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071471298 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067738648 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066404301 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064659551 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074622288 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071337233 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069404657 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064088276 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069199955 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066732499 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067836162 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067134303 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066423184 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067230988 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069753839 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067907279 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065628955 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073246996 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069478195 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06695657 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067593886 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067089126 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065983076 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061311735 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066653852 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067794826 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071034235 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068389672 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06582683 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076135348 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063663016 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06566866 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068417798 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064517802 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069748327 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060905551 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066997462 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065885265 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065708101 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060088858 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063728661 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062899037 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066407656 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064156421 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059824658 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074597537 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073434674 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06796755 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.194446694 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065249394 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061792762 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061461323 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066667149 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067875634 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068204679 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076449465 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065762777 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065625673 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061815383 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06622384 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069118993 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.06915622 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063665781 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061720186 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065496989 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069510787 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072296725 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064687344 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065777098 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069416904 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068872475 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064630209 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069773765 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063410384 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070122141 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079053678 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066848475 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067272712 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073144134 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073618339 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06747674 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062090885 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066947695 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069531291 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067018905 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067700087 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067881228 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080723689 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069442646 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066216564 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065353723 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069011959 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065651355 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074427784 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067952791 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067010318 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071075679 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068278005 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07473361 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068917505 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073909661 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069437547 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069340645 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065487548 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066653064 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065002055 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06527835 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06708035 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067592413 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071480917 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074520236 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065917944 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077670175 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074880986 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067906674 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063514341 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065953327 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065632492 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060769057 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066485638 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064284593 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063994872 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064219327 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064822556 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067034229 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071258766 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066514602 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066234356 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065295036 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059842559 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068004737 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068161462 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066554561 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062711329 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065827279 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066110877 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069479854 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068776797 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063181933 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067028981 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067207338 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066714466 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061254696 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072407735 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065019975 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06758354 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065420215 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066115658 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066727274 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069419636 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071190526 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067083127 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068106638 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069340873 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067687229 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062650515 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062503434 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070460278 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063511543 seconds)
  done (took 42.278888 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101813615 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063337665 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062722472 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061893862 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073716395 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063029826 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061962292 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062827054 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062756114 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065690479 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062120272 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062059463 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071386021 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078183682 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073719893 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066527781 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062091415 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062798038 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062080369 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063521924 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071229198 seconds)
  done (took 2.756796341 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075395764 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07031127 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073032205 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075478393 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06691941 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070730228 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072554389 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070404365 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076268329 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067134866 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076011452 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071010684 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067075034 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067311722 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067331859 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070807131 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075708317 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067486378 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07053914 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072325379 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07067769 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072324875 seconds)
  done (took 2.876060623 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069026624 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066262788 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067965064 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061572455 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.074399851 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061533983 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069241154 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06402344 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069362412 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065352855 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065515516 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065083702 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067852384 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061072923 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066252338 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063590835 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108554566 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069433855 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065492088 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066185421 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061318421 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067531524 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061187034 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061911884 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064810553 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069446113 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066778559 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064132201 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065394938 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064763254 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065585285 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064013098 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067111412 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066282508 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064926746 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06495443 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065465744 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06637912 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061402465 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063761613 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066159708 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061702133 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06657963 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067151703 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063759589 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063863436 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067381511 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065425715 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061279485 seconds)
  done (took 4.561335241 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081167965 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108188869 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06794941 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088466651 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080453631 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075052341 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069107505 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089052577 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063155462 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064098649 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081038611 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079300086 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065802284 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070255273 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073959352 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066616009 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066649183 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064864932 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069550785 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064903773 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069412943 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071966288 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080460788 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078610912 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069285909 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064541118 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064789201 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069906118 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078271346 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069931825 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070230655 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070987489 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080242957 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071092156 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064718554 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068114349 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08154731 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065658191 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067662728 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062999883 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067302206 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069526524 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072064141 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081363557 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065691135 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070485556 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065268604 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062932927 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077860388 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068066397 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073359892 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079791913 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069115417 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06593054 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069811562 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080099561 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065546552 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063779206 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068554016 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077763204 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063095038 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069364451 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078769277 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067485064 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072237387 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079719145 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070688962 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069180425 seconds)
  done (took 6.341175428 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076752069 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.07324601 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079101876 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080091487 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072441837 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072651826 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072110373 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072160385 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072538554 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076924132 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072536365 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093199382 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067775602 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075042011 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072244906 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072081006 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072037362 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072153255 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072022079 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072133564 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072823078 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080389391 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072587397 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079929618 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098132342 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067709077 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071920402 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072029877 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080155668 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072303894 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079364913 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072737097 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072675081 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079787518 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07891328 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07198396 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06552896 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071698919 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072286874 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072383043 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067126107 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079792203 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071486809 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066905963 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071556272 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071368075 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07937006 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078562579 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074281876 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076180068 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071443471 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0794647 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071364929 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071974123 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079873607 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103987344 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079287072 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079828621 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072008661 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079660846 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079338942 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085866807 seconds)
  done (took 6.01639408 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085554219 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073853905 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075762199 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061009064 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064169011 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069677426 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064010953 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063887679 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074074304 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074235463 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076604083 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069575882 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072167357 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07673222 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069900237 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072197207 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069342661 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069377723 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074068628 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069391571 seconds)
  done (took 2.758907454 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077145731 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082211812 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066298951 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072053465 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068648553 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071722104 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067931837 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068454128 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066550075 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068864039 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075875367 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075654205 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06683672 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071628654 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075401801 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07119573 seconds)
  done (took 2.468393325 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076370104 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072191829 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079473523 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065649549 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064158412 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06284828 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066067703 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061688541 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062766897 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07732751 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066318956 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068080158 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06553379 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064381011 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062556035 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068413318 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062412945 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063219342 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065365835 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077760561 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076420247 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064185967 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06617248 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065715209 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06635087 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070774456 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064987574 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.0632664 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063134005 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065881468 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066168863 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06940152 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063052371 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063553942 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064433648 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063805182 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06527331 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06620605 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068270727 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065726899 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064008478 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065643772 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06566584 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066673016 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.0621468 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066426687 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062235399 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067838211 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064132285 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066566872 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065581096 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067924111 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066300066 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072409696 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068509265 seconds)
  done (took 4.993242555 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080175234 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069223454 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062474932 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064218521 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068450703 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06728809 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069665721 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067404703 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067744712 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064512772 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068010558 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068178908 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067471837 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069420532 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067844311 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06951268 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061640183 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067738323 seconds)
  done (took 2.559639698 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073005847 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066186169 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072659156 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066483892 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066135788 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068261384 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062312074 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06431136 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064405086 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065821067 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066335898 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06823874 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064321525 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06822069 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065939446 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065828182 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068235432 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064632899 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065552908 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061867386 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068334773 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064414018 seconds)
  done (took 2.792417257 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093550054 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08136494 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.13708404 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079106047 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082920317 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071437836 seconds)
  done (took 1.878912629 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091168138 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078620797 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066493075 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08866725 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073206853 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067484069 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067233118 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067742343 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076100903 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07603123 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067480973 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075846782 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075594236 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074987771 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073063694 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072810533 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067115646 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067069287 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065734572 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084966322 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067253881 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075006949 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06723322 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066798868 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067301613 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074877585 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07558192 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075810491 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066982539 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075811521 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072733374 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06713877 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075689534 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075904254 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068986546 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075745819 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067608819 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08379904 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0729836 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075276534 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068776958 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073566566 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075794713 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072179092 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075861796 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067750848 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072548718 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067730154 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067374484 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08572045 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07336766 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074963517 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073102601 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07622314 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076064984 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086271186 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075934393 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075193561 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073410303 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078085602 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075660399 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073258634 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075289621 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075990812 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073630224 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075574489 seconds)
  done (took 6.197686312 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083384901 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086180789 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06785736 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075704974 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075336312 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067422185 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067526014 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067689989 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068177173 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067515585 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107889235 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067675905 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07544343 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075165894 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06804116 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067934557 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0676079 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075123233 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067860656 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085935726 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067582834 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07538508 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075329457 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075096489 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076119471 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073319233 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067618348 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067345548 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068116877 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067288594 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07218821 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067678302 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07571903 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067402323 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075326532 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067627523 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067344635 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072566204 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06787657 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072691383 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075402225 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083525661 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067773352 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067270165 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075940478 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067354188 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067154802 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066899627 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067499456 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06680857 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075799395 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075666379 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075881114 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074623054 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067324806 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0673045 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06731708 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067012544 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067123518 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072767372 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07471215 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067591143 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085349926 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067247446 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066976133 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074927006 seconds)
  done (took 6.109434158 seconds)
done (took 128.073721224 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184233922 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165740929 seconds)
  done (took 1.674469985 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070388199 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097344447 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076538714 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127881823 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066106801 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.09965743 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099119093 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077348495 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065760283 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066139513 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066563243 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068426403 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130915489 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066179462 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065788252 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068563024 seconds)
  done (took 2.65337116 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098165432 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157226736 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098614807 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064492652 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097201372 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073055971 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064702269 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075172271 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070923761 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064776571 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072821926 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070325877 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064905102 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070565794 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070604851 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072755904 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064708103 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072560765 seconds)
  done (took 2.767558922 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102804139 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090721261 seconds)
  done (took 1.541170484 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161033085 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105615984 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150792702 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.350537098 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168101161 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230184058 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.12894981 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130232729 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120247964 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124031632 seconds)
  done (took 3.011960289 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099627962 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151928138 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256170814 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115032823 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072046605 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094930345 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116421047 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077502895 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080607386 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080675875 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079941389 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075966604 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.0983455 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073616752 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072947348 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075997505 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102180765 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07240604 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073737153 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07652277 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099261281 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065855035 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073418814 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071905023 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076911589 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077067952 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065254806 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065368781 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07645864 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073960669 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077086427 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093655886 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07718771 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106321902 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069977152 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.1074978 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.0761626 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073625545 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073668846 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07387537 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078927957 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07825112 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072236537 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075716884 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064900768 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077175287 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065104257 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06550998 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.0776897 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066636223 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079242628 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076614447 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106369236 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066512008 seconds)
  done (took 5.943024233 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101699427 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104407647 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070863373 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110264724 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099842866 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070948875 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10123705 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093060021 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102582555 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069802872 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067942863 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070236448 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081929995 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082629413 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111328518 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103747236 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073217557 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069971837 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103443221 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102600301 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068171888 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094696492 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089438115 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101611438 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067415127 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069878193 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06767658 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06989046 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076796284 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078406451 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069507568 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081008157 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08415719 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07817239 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066736895 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067975526 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067859102 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079308086 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079623611 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07870267 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077410046 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067444256 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067508591 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069232228 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069944037 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066994604 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07855557 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080182203 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078591651 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068933944 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069734122 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067748254 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069146113 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079701908 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077994131 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080736133 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079794743 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067885924 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068209502 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071513437 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080690255 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078899679 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078942335 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069603802 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078880998 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068649491 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080326753 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083946182 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068413911 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069464714 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068246171 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069024196 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069500543 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077921243 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077754541 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069871797 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06931254 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068118585 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079801852 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078474466 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068176476 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077378348 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067568618 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068280763 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069789622 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069461576 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078532318 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079928527 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069807038 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06812714 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069225893 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067936422 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066648387 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076515843 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079072163 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077372718 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077188755 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068360294 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077280086 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076924959 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06868797 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077555175 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066956304 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199049911 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070570212 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079253281 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078301995 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079743806 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070412766 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06843434 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078858987 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08155881 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068869881 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079240258 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081566226 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079861161 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068603768 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08229993 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068570501 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079885084 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069894234 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079628645 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069115062 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080107301 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068780614 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068165098 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069167722 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080422441 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070547465 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069078353 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070356384 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0697105 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079812738 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082709687 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070638601 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080829124 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078394607 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070346071 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079440827 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068850638 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078645161 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069320205 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07099663 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067077967 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081793553 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06846053 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068564186 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069829297 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08073939 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067941516 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080133842 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078406978 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068049238 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081924105 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081055426 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078021546 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079403737 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070093554 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068061546 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068025792 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069730205 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078142793 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079672839 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071322361 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069039968 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078596421 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079387793 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067087958 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078006729 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078243638 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078714407 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068435879 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069552179 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079907714 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080674368 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078213847 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078017468 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078142963 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067996652 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076962519 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077956173 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067828189 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083541945 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067807225 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082536587 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079437507 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076787425 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07886315 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080321517 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080248587 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079783299 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.0823883 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067490161 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06780445 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079388201 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067780046 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068779087 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077131725 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06843818 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.0685399 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081701466 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066864016 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078022093 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066563715 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076916929 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065577426 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068406934 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081306444 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.199348653 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070523665 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080335454 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070091209 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078506866 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081705451 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.0790485 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068571202 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069606007 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079625983 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079456018 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069141958 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068445093 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070856965 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079133659 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077533895 seconds)
  done (took 18.592504729 seconds)
done (took 37.537227174 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208713823 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149197458 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200091022 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118254317 seconds)
  done (took 2.114981386 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122070687 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100216849 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094428873 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065049347 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101381567 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064906278 seconds)
  done (took 1.929395045 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311556757 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210920651 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181653363 seconds)
  done (took 2.085443709 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198884515 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187198239 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393833872 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252807946 seconds)
  done (took 2.512681212 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142424443 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088837913 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066960597 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082672893 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133770817 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159749485 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10071658 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125169222 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077990509 seconds)
  done (took 2.409565724 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146538946 seconds)
done (took 12.5695828 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.21741443 seconds)
    (2/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.194123897 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.185319022 seconds)
    (4/309) benchmarking ("sort", BigInt, false)...
    done (took 0.202143055 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.220689619 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.107492878 seconds)
    (7/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.172185442 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.127586117 seconds)
    (9/309) benchmarking ("sort", Float32, false)...
    done (took 0.125868866 seconds)
    (10/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148983871 seconds)
    (11/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.168853566 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081098166 seconds)
    (13/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076190458 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076690805 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.110077039 seconds)
    (16/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.130916832 seconds)
    (17/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072860268 seconds)
    (18/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.078369686 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07198606 seconds)
    (20/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07555634 seconds)
    (21/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.200166335 seconds)
    (22/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.188536493 seconds)
    (23/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.071775594 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102066495 seconds)
    (25/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.105995003 seconds)
    (26/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.202504642 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064767152 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.184672965 seconds)
    (29/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080013252 seconds)
    (30/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081118278 seconds)
    (31/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108014212 seconds)
    (32/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073370483 seconds)
    (33/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07215645 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.089228182 seconds)
    (35/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073460428 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064722252 seconds)
    (37/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095567358 seconds)
    (38/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070413875 seconds)
    (39/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.181687071 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.183006364 seconds)
    (41/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069007937 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.194397957 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13479875 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094436797 seconds)
    (45/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.11032067 seconds)
    (46/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075208759 seconds)
    (47/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071411111 seconds)
    (48/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075984748 seconds)
    (49/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.120380511 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149287813 seconds)
    (51/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065484362 seconds)
    (52/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070863466 seconds)
    (53/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074567634 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072874483 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051066123 seconds)
    (56/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072273744 seconds)
    (57/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112586359 seconds)
    (58/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.119258495 seconds)
    (59/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.149780321 seconds)
    (60/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.145379848 seconds)
    (61/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.140756664 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.1753939 seconds)
    (63/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103817405 seconds)
    (64/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072485482 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175344277 seconds)
    (66/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053756565 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072006304 seconds)
    (68/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.087230175 seconds)
    (69/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.15636708 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066529648 seconds)
    (71/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.090981837 seconds)
    (72/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.193268205 seconds)
    (73/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075021217 seconds)
    (74/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070368642 seconds)
    (75/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078121617 seconds)
    (76/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.196143464 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08841919 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110510486 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.130393083 seconds)
    (80/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.149749624 seconds)
    (81/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.287316036 seconds)
    (82/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072639153 seconds)
    (83/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.063557991 seconds)
    (84/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.187065816 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091636044 seconds)
    (86/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073450239 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.266296487 seconds)
    (88/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081147931 seconds)
    (89/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.21796545 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.066503368 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051425473 seconds)
    (92/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.150622873 seconds)
    (93/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051316267 seconds)
    (94/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051333486 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089713696 seconds)
    (96/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062228054 seconds)
    (97/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069417818 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173499803 seconds)
    (99/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.0726533 seconds)
    (100/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051760512 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05225495 seconds)
    (102/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08776614 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.15113723 seconds)
    (104/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088526646 seconds)
    (105/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072442937 seconds)
    (106/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075142112 seconds)
    (107/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104708967 seconds)
    (108/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071968969 seconds)
    (109/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.05327184 seconds)
    (110/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071821477 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053471617 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139910846 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091550609 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089369672 seconds)
    (115/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051892383 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06667578 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089093588 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072328802 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071684506 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051074275 seconds)
    (121/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073077749 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088784298 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095907965 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.134762202 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087334851 seconds)
    (126/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074048421 seconds)
    (127/309) benchmarking ("sort", Int8, false)...
    done (took 0.138715179 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090333514 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071292501 seconds)
    (130/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052230187 seconds)
    (131/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071832843 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120256925 seconds)
    (133/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071293825 seconds)
    (134/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076624567 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148342644 seconds)
    (136/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069113956 seconds)
    (137/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052122894 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 0.132197341 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073408981 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071414551 seconds)
    (141/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050901556 seconds)
    (142/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051221415 seconds)
    (143/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050940248 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06989611 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071581529 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144508438 seconds)
    (147/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.155746934 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090678979 seconds)
    (149/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051624727 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128014153 seconds)
    (151/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06383308 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071005133 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.136464101 seconds)
    (154/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070514505 seconds)
    (155/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050892055 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064541146 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071790251 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.156931824 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.194199652 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064832515 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086404729 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052275877 seconds)
    (163/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051940726 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072896913 seconds)
    (165/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068696464 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06468668 seconds)
    (167/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068259905 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073075329 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062431541 seconds)
    (170/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084331453 seconds)
    (171/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11671554 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088402632 seconds)
    (173/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.157149005 seconds)
    (174/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054147744 seconds)
    (175/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067057923 seconds)
    (176/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068219757 seconds)
    (177/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.148408376 seconds)
    (178/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.145914875 seconds)
    (179/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.112588593 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092692661 seconds)
    (181/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065712779 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064397333 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064290409 seconds)
    (184/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051842432 seconds)
    (185/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074418028 seconds)
    (186/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066627123 seconds)
    (187/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.06690217 seconds)
    (188/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050614999 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064826571 seconds)
    (190/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.184232786 seconds)
    (191/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.148912709 seconds)
    (192/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.338749475 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052100941 seconds)
    (194/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051752094 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090125678 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063661414 seconds)
    (197/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052393729 seconds)
    (198/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067244864 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071896032 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140086066 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051714698 seconds)
    (202/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052193862 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091148911 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065028367 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065639775 seconds)
    (206/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075638724 seconds)
    (207/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073917343 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089012402 seconds)
    (209/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065366312 seconds)
    (210/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098754479 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064222892 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06575738 seconds)
    (213/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065700637 seconds)
    (214/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072811385 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086952804 seconds)
    (216/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051767397 seconds)
    (217/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173830121 seconds)
    (218/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065921165 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.094440251 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073815655 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072267018 seconds)
    (222/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051508154 seconds)
    (223/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097401692 seconds)
    (224/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051479467 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092538335 seconds)
    (226/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07747713 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134072564 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070954775 seconds)
    (229/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.150403606 seconds)
    (230/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072383282 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12816026 seconds)
    (232/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070196699 seconds)
    (233/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088663865 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113382324 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064197196 seconds)
    (236/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080139888 seconds)
    (237/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070529799 seconds)
    (238/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053309761 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107547086 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066278262 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052964174 seconds)
    (242/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081942431 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132487451 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065527467 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071122235 seconds)
    (246/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052393043 seconds)
    (247/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067441016 seconds)
    (248/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052147775 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065070249 seconds)
    (250/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061017558 seconds)
    (251/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071580187 seconds)
    (252/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063731503 seconds)
    (253/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066393538 seconds)
    (254/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072711336 seconds)
    (255/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075359403 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086168246 seconds)
    (257/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079057857 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065612866 seconds)
    (259/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066291691 seconds)
    (260/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051586196 seconds)
    (261/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051088225 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064472578 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.107794845 seconds)
    (264/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099559236 seconds)
    (265/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06571126 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071159463 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098693387 seconds)
    (268/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051166446 seconds)
    (269/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065378232 seconds)
    (270/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061778385 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072154926 seconds)
    (272/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051079947 seconds)
    (273/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051160759 seconds)
    (274/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052170141 seconds)
    (275/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.05154599 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063571556 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052514401 seconds)
    (278/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051506501 seconds)
    (279/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061268027 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064448349 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088989223 seconds)
    (282/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.162808895 seconds)
    (283/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077529096 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051066187 seconds)
    (285/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067735717 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064844107 seconds)
    (287/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050825653 seconds)
    (288/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064839007 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072981984 seconds)
    (290/309) benchmarking ("sort", Float64, false)...
    done (took 0.125293775 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06381059 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06721095 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063572148 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072195494 seconds)
    (295/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060547855 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165817213 seconds)
    (297/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086735421 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06554193 seconds)
    (299/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051647668 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070546235 seconds)
    (301/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060686398 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052460839 seconds)
    (303/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065782349 seconds)
    (304/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050650155 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.06978145 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.0849815 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065543099 seconds)
    (308/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070616371 seconds)
    (309/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064288757 seconds)
  done (took 30.268865574 seconds)
done (took 31.663309549 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087251131 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09275911 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073523165 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.090984896 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.078853049 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075375084 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071122363 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076763887 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.07869183 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080241485 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077899594 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05447434 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073044122 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072926567 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073646535 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089998668 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077146828 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072476622 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072638489 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063971828 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072552077 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065134308 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066486896 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05436526 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076951186 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070702517 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071655424 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073194987 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065390012 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065446344 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068460447 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072542298 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065093811 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077015942 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071614978 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072606164 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074288989 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076149209 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06721853 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065262731 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.0737879 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065460503 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07213169 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.0730976 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071791218 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070895012 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073021432 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078152279 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091287924 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067419546 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073548625 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075402796 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075812629 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071775517 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068760082 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071968263 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070028079 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090813023 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072941955 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067391649 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073285455 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073103898 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070368703 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072102966 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072266401 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074393131 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074866066 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070358199 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073763781 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070821353 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064787196 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072033246 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068353614 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065054213 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074596618 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076075528 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063961439 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070080105 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071568886 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071258975 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064411711 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066826038 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066159711 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070974904 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066506366 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054096295 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068083378 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070681553 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063500812 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07228766 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070472897 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071383886 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066275148 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074340589 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063947327 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069439485 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064876697 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064789712 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066698131 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068907291 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065602109 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067063619 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074133896 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066274833 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070407646 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078311328 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064880358 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070560835 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06378323 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064622421 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078146876 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073632937 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064644399 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067524207 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06365148 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071377138 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063704856 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06453441 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064142334 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064487861 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069225323 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063857065 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066137803 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070418143 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075882635 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063585695 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066641129 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065697855 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063849296 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069160754 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064132743 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.199714094 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066940072 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061320817 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067699744 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065409698 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072403194 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066773536 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072958738 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066635 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072728305 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069371892 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071128365 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069784041 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064116267 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058360678 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067928573 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068046882 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066671439 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064985076 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066403176 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06504708 seconds)
done (took 12.329944652 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068656768 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142731415 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098460078 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094351421 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085488597 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06620003 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076010742 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100905174 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066963656 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101756928 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086561227 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084451773 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112154409 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064462897 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065855979 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068785158 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066862273 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081160861 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100228145 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085879134 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114963613 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065373049 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093675226 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089214207 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086443342 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100681021 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066996316 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069131484 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069107928 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09037357 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085628308 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069249651 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06636555 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099014481 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091548029 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082437028 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06559623 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081828532 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065803192 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065875682 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06702999 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097647123 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079066304 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079737019 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069469925 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06865203 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066444649 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08290009 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088262845 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077990319 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085566052 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101905387 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068150621 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064809613 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064082679 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084698602 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064941046 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067999695 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065779509 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067194068 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065371243 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068686758 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080213585 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08114211 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069223778 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079814468 seconds)
  done (took 6.741837084 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08550561 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.0888363 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082644459 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082227165 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064601394 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066112594 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065832996 seconds)
  done (took 2.014675396 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068564986 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087602449 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088669048 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087679912 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083649973 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08637717 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074741915 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065776039 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079872705 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067270508 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086127309 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100864682 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066355354 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071926919 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089777767 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066170179 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089302074 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065916186 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069196783 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088848668 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068061052 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081233606 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069350927 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066367377 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079697545 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066067829 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112215224 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069940964 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067606565 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068726761 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063999046 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105987528 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079515381 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074697324 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066365706 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080130996 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079554638 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064271993 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081628503 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070789945 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.07908085 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066211145 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066663781 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063523223 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069997213 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076130471 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066739273 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066648688 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068701431 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085130082 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066963972 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079557758 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069286557 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068672367 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067958694 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07033309 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075805738 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066863262 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085311593 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067358833 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081986398 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084210311 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079712951 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081827923 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068001168 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078830101 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079231934 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068137876 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067490468 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069126519 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081605536 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064234638 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06725603 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076274989 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067491386 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088562414 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088121433 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067092767 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075199095 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066225944 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066049598 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066011121 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08850957 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068623562 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06606769 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070720716 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069000747 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064701401 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065489966 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069760876 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064058024 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067516737 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069218825 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068987078 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068486158 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081922918 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068274929 seconds)
  done (took 8.681417031 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070523246 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067505093 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069459839 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067452222 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067365904 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067535998 seconds)
  done (took 1.910886052 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094762298 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068457078 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079763683 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072187239 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103989675 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086599629 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086389958 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07821027 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083362072 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078282241 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086234155 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088231873 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092093724 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072359889 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086230372 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071431515 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086483131 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075303639 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077793511 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072253554 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085972722 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072225476 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072272426 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081246423 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07493649 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072000793 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06673615 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078059344 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077917036 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07800363 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072089606 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075061225 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070427853 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078269066 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085861204 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070189436 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071304322 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076355025 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072471762 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075087488 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087762986 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072194297 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073866061 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07636408 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077869319 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069896654 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076652337 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075565587 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085233089 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076364902 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076264913 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070935559 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077472849 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076420799 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069793003 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077492583 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075974258 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085730862 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071419554 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069994782 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068477509 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075150234 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07747157 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075322376 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078445837 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076590994 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070428787 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072422189 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072110234 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071584541 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076080968 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068383639 seconds)
  done (took 7.029659518 seconds)
done (took 27.850235503 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.547574014 seconds)
  done (took 2.013251487 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.597019257 seconds)
  done (took 2.088132602 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.567979971 seconds)
  done (took 8.055752124 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.392039257 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.470098236 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.680942323 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130007922 seconds)
  done (took 3.201334817 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.68470067 seconds)
  done (took 2.188546889 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210703144 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196212072 seconds)
  done (took 1.914165812 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377661598 seconds)
  done (took 1.867663179 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.099512569 seconds)
  done (took 2.592484501 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263592769 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.209399121 seconds)
  done (took 1.968836692 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.469094243 seconds)
  done (took 1.969054767 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.816225713 seconds)
  done (took 6.314651842 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.209643653 seconds)
  done (took 1.750008311 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240539244 seconds)
  done (took 1.744444212 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.688997586 seconds)
  done (took 3.185663758 seconds)
done (took 42.348580476 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082591876 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080723948 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080772964 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077672362 seconds)
  done (took 1.80464459 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079209149 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072228658 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075943362 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072525918 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07615837 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071961335 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073924283 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076465931 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072031573 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072574508 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071786338 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071800251 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074471058 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074274912 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070670105 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.0746387 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075443352 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071856426 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.078545481 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072082353 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070506301 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074860431 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074041848 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071482125 seconds)
  done (took 3.271156243 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080238655 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072141452 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074322282 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071425402 seconds)
  done (took 1.805374964 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079447498 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092270642 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088981857 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07684835 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092170309 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085353858 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068806257 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068853644 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072558281 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076576763 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067721091 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095455248 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087101102 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07638928 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078892747 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065733934 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068059628 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086312774 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076608731 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077605752 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070019015 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076767067 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067594936 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087515933 seconds)
  done (took 3.388495898 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080512089 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103188793 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076590616 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08727937 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089936568 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06491396 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073936914 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088802835 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122345654 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065146608 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069535543 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065364101 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072261929 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065023598 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075565543 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104079139 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107612581 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06812691 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095220596 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065252526 seconds)
  done (took 3.154039499 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075491422 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070276292 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065606035 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068084189 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076566482 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072156745 seconds)
  done (took 1.939477108 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071099571 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06797022 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066703136 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066300127 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071153497 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066795318 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065857807 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067148556 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066678047 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066907176 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066718088 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066136876 seconds)
  done (took 2.315542861 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.173388266 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068691295 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070392292 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065780439 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07083404 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065984339 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079515318 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067288641 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089830168 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065939201 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066234756 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068519235 seconds)
  done (took 2.459478896 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208195023 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075603186 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235190422 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136644654 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111234616 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114885584 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103349235 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11295615 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142791675 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101273186 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167125938 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16516746 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106997825 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136745547 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088804281 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097862173 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155156763 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161232577 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103793975 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16486326 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142940386 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123732276 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147897016 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10097115 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105391219 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121206848 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070590745 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079596811 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169595344 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131711936 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146164045 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110730652 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093504894 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176167887 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170681055 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142382024 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134380547 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083033304 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102879658 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132113667 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197983801 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087800669 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161687966 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246899443 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081215658 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133148058 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120072484 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119791674 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106706848 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090099526 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144672566 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181549139 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138500866 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086849211 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11263424 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114718616 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115358336 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102730097 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180071431 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160488494 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126700628 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070806908 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09850427 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152759772 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129828741 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109351174 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125798537 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093567504 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133015239 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154632795 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117807366 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144714079 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128702427 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089084306 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118680835 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139376284 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128228069 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169578727 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124081379 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073108276 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125047343 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103742416 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081638866 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142388628 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075461869 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175164232 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098225743 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106026044 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113033758 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108622852 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108174107 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160050857 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283847402 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103491288 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065796592 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103319385 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120389472 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146683285 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087299138 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108256719 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116636997 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078320558 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140025355 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074760574 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123993564 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076062618 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125511191 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130669289 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075313458 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120552798 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100950093 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100564334 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132405287 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159610343 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088801071 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082369488 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165585045 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122614606 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10393518 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144040431 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15507232 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098838268 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10266412 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148047267 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179022278 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089425224 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162314668 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107514138 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083363051 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087197844 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123465073 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11207075 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122106625 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08187614 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118639866 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167883503 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074917063 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094811825 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133318349 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078603559 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080148648 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102725913 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101315112 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09852187 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101296629 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103710112 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137239592 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122294606 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.247636367 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12614417 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098119733 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168632185 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088478605 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100068965 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10397377 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070245118 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136187866 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156993093 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08028911 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164404071 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122390409 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104827883 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119069043 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082340991 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138567028 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078270935 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069591716 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143103683 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109412108 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110518802 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150726969 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104655817 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126902747 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119326196 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13428672 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131172505 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127958141 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10501785 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087341742 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111543417 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125741316 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072883174 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090845954 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079863834 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103642987 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095454466 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083186611 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141868235 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124797039 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100286857 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1117731 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096275681 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146878096 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076170586 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129352319 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118301641 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093528753 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153898743 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152801218 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13049072 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098463762 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143375181 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069368812 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072687025 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.23462378 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124136376 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083616392 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084107563 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118346003 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147029274 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129701759 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136281947 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111601786 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120774202 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154903923 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069315151 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115018922 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147745338 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120111597 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104122103 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089487653 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098374248 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141250307 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108587155 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180906149 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1137181 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12499458 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15234797 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099568765 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079383867 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102172416 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135590096 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104666336 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144160832 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09934648 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087797782 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109846209 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07428419 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099949633 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127173295 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11982903 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138042096 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114680247 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133180572 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076852441 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116752755 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120399413 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123138558 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063703657 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119047919 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160516161 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093221802 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118146031 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151778267 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07873377 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.125212498 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.323533363 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146640262 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085015222 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110012985 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118815277 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127841291 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12013674 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141251776 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107889337 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133652648 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108995459 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084826996 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087920078 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096684214 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104850508 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094046159 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108998882 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11444574 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09615878 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130886675 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102402143 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108357457 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118436713 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095915243 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089756604 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096189089 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172851948 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118972778 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171282127 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098019493 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144613906 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163319614 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074286329 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078685402 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077910717 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139380784 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083633312 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130434015 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097743815 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10596356 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123554069 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141784257 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094999905 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068614048 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108285219 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134816216 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11219097 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097734523 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103548033 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16130117 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102302451 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078589697 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112410442 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10435864 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101083793 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314991292 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062434461 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098520214 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076222324 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080686924 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128000418 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15305899 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080569606 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103057703 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119215602 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110282693 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127279566 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10130884 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099708236 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114621251 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149842861 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128047468 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089197483 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112491687 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128968797 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15602292 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10523508 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09532309 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171241352 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15136711 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159935202 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088302522 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113801447 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113968975 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107582301 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137982994 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082620647 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163291405 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081880094 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135758058 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104026612 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090063204 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145716336 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098558097 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088028336 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14788566 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117833055 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082353178 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077795069 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117672012 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119081039 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105586639 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074859037 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137959159 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072269147 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133351336 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167072611 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225896657 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105269153 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097619933 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080355226 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108608682 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103466058 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089797103 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098661491 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172306869 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08800808 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150343362 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142118285 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11328293 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136449701 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099291275 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635966933 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078027014 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151648208 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116255453 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172262539 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097842274 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117201964 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108931111 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123026299 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144396267 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104745957 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17865247 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131932032 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115886037 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079797837 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102128664 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102130618 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088458423 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105304547 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11312553 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115889528 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093920098 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115673998 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123447305 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08158224 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094826743 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15596609 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117185727 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144065791 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139999467 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08402878 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116420919 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137774982 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079203634 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121429516 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150460603 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105380218 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245648897 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082304408 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102661713 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171152159 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073005524 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161369224 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120011449 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108586925 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112494257 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113090198 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130728367 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108032664 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121758911 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093761714 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.10998275 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112567488 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081400407 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.0766465 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104395178 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112830971 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097266284 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097478245 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097427111 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150872831 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071132203 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095485933 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103362251 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145031185 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174362788 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087777876 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082742953 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119409312 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112280186 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112540633 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120248991 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078942887 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081931267 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081688573 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076937389 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108095259 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111808186 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10447329 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110974197 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165071674 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08230617 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223760582 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094886578 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10425813 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069505019 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078437048 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095526125 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096705722 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107164216 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099110226 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167471892 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094228959 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089055766 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090892535 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071810604 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080807533 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124477784 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10735158 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115395125 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094227438 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061060374 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104966631 seconds)
  done (took 58.547224771 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123280697 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083365482 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097118509 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150218687 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123139998 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212281099 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157674175 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199108865 seconds)
  done (took 2.798555439 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070804125 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093776669 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098636534 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081848501 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066047557 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067906586 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223727691 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079798782 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066182998 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087859369 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07810366 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068183103 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.418990353 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066392438 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067144977 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061593711 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067371687 seconds)
  done (took 3.377592913 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.369306727 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599582696 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.373353007 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073235029 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.84004556 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092259349 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.035353012 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129244443 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073880729 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.523830781 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701724113 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124943334 seconds)
  done (took 18.556100087 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078501411 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069700803 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084751148 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083931056 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072158993 seconds)
  done (took 2.0054669 seconds)
done (took 106.980262849 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082506679 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.394577461 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053611056 seconds)
  done (took 2.096619731 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086444396 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084205007 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083775531 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083137301 seconds)
  done (took 1.961281018 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076832135 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075947558 seconds)
  done (took 1.769751501 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223943842 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.157313574 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086248046 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084885582 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07737527 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.0780305 seconds)
  done (took 1.866368308 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074161456 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074828259 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071865844 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075907542 seconds)
  done (took 1.91662353 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078076828 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052928084 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054867044 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055534966 seconds)
  done (took 1.862483936 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088303277 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078417376 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077677248 seconds)
  done (took 1.865973685 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103423764 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083988791 seconds)
  done (took 1.811445357 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084568258 seconds)
  done (took 1.708993193 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10041448 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113400619 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129633013 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109358114 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137629801 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108043617 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084931677 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085924403 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076897202 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08687645 seconds)
  done (took 2.65669061 seconds)
done (took 21.684634097 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081819778 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.35760946 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359758505 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088091339 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668716124 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355901123 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.00163988 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091639355 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112965098 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067675784 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083495826 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650225777 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.953073309 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.31732422 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.943399248 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319052674 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649585089 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067999196 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067574712 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067705227 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.986602408 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067104841 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067246852 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068600809 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649021131 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370717854 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067764813 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318835785 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067650738 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069375883 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354776125 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067872966 seconds)
  done (took 16.071015277 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073683321 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11732689 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073775882 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083831418 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070346679 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069434469 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070896474 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068796399 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118767556 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067719362 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084395919 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067590538 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071423699 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068182275 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086565388 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068270613 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068611679 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068240711 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06859691 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068254527 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085721769 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067670779 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067870064 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068068327 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067821922 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078964307 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06807984 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067946373 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06811898 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069944321 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070927795 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068573147 seconds)
  done (took 4.022499039 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116826493 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124535018 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074202158 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102856985 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111292965 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069946127 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142176048 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092406579 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126844442 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068215322 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084332204 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067702873 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100327985 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068428729 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087198287 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068215932 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069179177 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069110932 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068394426 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068502949 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086732103 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067814102 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068215118 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069076569 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068436941 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08155043 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068475742 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068455009 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0685631 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07034278 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071520353 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068757538 seconds)
  done (took 4.27989256 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074768149 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074457543 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083073421 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083337869 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06920924 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071282604 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072347267 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069599602 seconds)
  done (took 2.242724184 seconds)
done (took 28.247946345 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080983448 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069253804 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072254978 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080186956 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073656018 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078268025 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06749234 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073945928 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071612401 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072961875 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074523652 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067139382 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070956574 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066780917 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073570444 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067645919 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079180677 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071713477 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078641066 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079112694 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069488119 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072737823 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073905383 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078704222 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078901283 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079227758 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077109477 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072675603 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069029439 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070106213 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076291403 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08421037 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068996975 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078853922 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06767937 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067383933 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071475883 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067792238 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078892145 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07614972 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069432562 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076209277 seconds)
  done (took 4.711865306 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090620388 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091302179 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08420893 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061623609 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066761777 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064615631 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088141474 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.05948665 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059415538 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087784718 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055755207 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059348178 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062551074 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054252468 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059143824 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056709116 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061465311 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055618715 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058988717 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06205993 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057908145 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05435077 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059990108 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062634114 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058195274 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061822684 seconds)
  done (took 3.337826408 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077285568 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083849515 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087579394 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126344644 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103402528 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076673589 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077923977 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091368223 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084628765 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066384971 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070644356 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092951158 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087740375 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073412163 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067201024 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083972562 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081600098 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068498651 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073285992 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09046591 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08388544 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082894442 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091998904 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080256956 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066864219 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069519457 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070805668 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080419196 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071851248 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076570242 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071334773 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070908554 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068989529 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07815307 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071179358 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068774879 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090013413 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076369272 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077105941 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067692928 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07087938 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068393737 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089678142 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122137513 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066827744 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073490543 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074824033 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076274162 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06742923 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08587793 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078627976 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066882325 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070145552 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066512326 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067263546 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079992584 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069220331 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069533132 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076292847 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070333846 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085089234 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071276636 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082737428 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066994121 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074888669 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066707472 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068729388 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066468122 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091730413 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068754241 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108096394 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068380228 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068125347 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075882668 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07480687 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073637472 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06787125 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082208166 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077239412 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070753997 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075804284 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070529897 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07015768 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087555687 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06986439 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068814062 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068169641 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073369587 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070047317 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068794467 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080410037 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067858514 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070529664 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083729599 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067110675 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068427364 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073296001 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072300728 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066863973 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078481105 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072111553 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068243198 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076635566 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067698641 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072397853 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07754215 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073679919 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066754153 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071765992 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073557668 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068047646 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068384766 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070098754 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06884308 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07530273 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073354864 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07172257 seconds)
  done (took 10.520329582 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163182046 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153442801 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070711737 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146693885 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076394177 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078941884 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146977314 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094027353 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06825457 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068496781 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069091021 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109663962 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105424573 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115000145 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078741311 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067663154 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08336187 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113382415 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148417768 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142823053 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083769132 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076684145 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069807902 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069047235 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070513607 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078049778 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08527655 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077016764 seconds)
  done (took 4.388021958 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082219707 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096917548 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073692445 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089104745 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090813416 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067804931 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070462862 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069434828 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080891778 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078688795 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067308385 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073089979 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074486202 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071159086 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068999467 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074933914 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074779939 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068991876 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070662491 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072697797 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07739963 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080482609 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071246679 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066830998 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073758414 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067057901 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064086938 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084082277 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067776976 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.08990409 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065571619 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074614589 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081000695 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067976974 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067158164 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067304262 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066931981 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067433443 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06944466 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06620422 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066718899 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060094925 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066591552 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079293807 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073555645 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056473858 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071951476 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072114025 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072873751 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065082018 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070277522 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070183363 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070602063 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07425171 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072400121 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072488986 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068704446 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073525964 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075125514 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067219946 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064463376 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065856807 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071965979 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065809164 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075395281 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071876855 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06586822 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066933869 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068961931 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073290527 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06712768 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070012732 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064737094 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06889721 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071579128 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06876423 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068032305 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06584572 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066469588 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067503467 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055353078 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067580368 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053218243 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070193069 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065617693 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065711135 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06753963 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072065475 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079301649 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068862463 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073008075 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06804931 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066720235 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070455696 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06019962 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069924289 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082124858 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082470111 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06705337 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065116951 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08142037 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071686898 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066037314 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055901626 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074616165 seconds)
  done (took 9.113620082 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091529003 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069394475 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082651609 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090672894 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085226441 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.0747229 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076435138 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06930405 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081955251 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07333782 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076039634 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068047161 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07681203 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076967919 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070113652 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07637206 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071706368 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082782846 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081985126 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068164447 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075699481 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08061699 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088865088 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079393059 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078608665 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080390762 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088597271 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072114992 seconds)
  done (took 3.86725443 seconds)
done (took 37.575056251 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.722537265 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.897861389 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.713881422 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.069123534 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.789921536 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.788590034 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.850517258 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.710772523 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.878954582 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.762110726 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.007411085 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.759409042 seconds)
done (took 64.602713484 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.770334634 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.852614372 seconds)
    (2/2) benchmarking "String"...
    done (took 2.007234345 seconds)
  done (took 5.511517874 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.030408717 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.255021225 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.95954453 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.708936111 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.715700847 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.018173708 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.518699663 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.248221431 seconds)
  done (took 30.077242209 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.85208864 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.956617632 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.398040363 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.435687405 seconds)
  done (took 15.353637444 seconds)
done (took 62.486553834 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.738795888 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.746935765 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.746661058 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.694836062 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.768760115 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.718728396 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.908875155 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.924087438 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.707272845 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.696281273 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.708311022 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.127128582 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.712179591 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.848002906 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.714814804 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.711106087 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.723172677 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.148978748 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.865429804 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.720699681 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.710876226 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.765951332 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.709204817 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.718207526 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.749151962 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.711970367 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.122326069 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.722537538 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.325889323 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.714280874 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.741415013 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.043301463 seconds)
  done (took 202.621191567 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.711012375 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.6402855 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.68705664 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.758720051 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.135861203 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.895400745 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.808143685 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.164967105 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.714908998 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.714068136 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.882489424 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.714364894 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.907098492 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.657639972 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.74458724 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.720648789 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.89698871 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.93520657 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.748300085 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.835444923 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.734108471 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.733483439 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.687332507 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.866478635 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.716651216 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.739642862 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.887272968 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.733256999 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.913098316 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.877814678 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.736961553 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.725939361 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.938880443 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.584830465 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.734517848 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.7171793 seconds)
  done (took 167.255544185 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.885774994 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.720086682 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.717677653 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.7202081 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.729373762 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.721825313 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.841639996 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.842055553 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.177439007 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.130294893 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.72461554 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.769893995 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.71774015 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.556906682 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.716102284 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.788735267 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.727994688 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.712077092 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.720997106 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.732762126 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.746620158 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.718557064 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.719319669 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.842727025 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.728674246 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.940882012 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.730780512 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.718694785 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.724193108 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.090754912 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.718261395 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.726541643 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.978366914 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.713921078 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.718039848 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.616592257 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.4384192 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.728497989 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.802470161 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.718800193 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.72726851 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.719577076 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.941606168 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.715715154 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.717823522 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.722436876 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898607284 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.715501159 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.842693673 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.717255972 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.219629225 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.717829361 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.71658479 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.309007637 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.403088506 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.71301155 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.713966426 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.714807497 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.714332205 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.712055908 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.719588581 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.426778898 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.794218013 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.719313348 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.721379748 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.724949757 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.721214596 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.82673819 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.718634615 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.731331838 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.771446733 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.831886575 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.83419237 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.715434764 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.780345601 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.810018097 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.710638737 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.715949209 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.715169779 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.71543341 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.799164748 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.712879047 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.833278049 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.720006948 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.717330721 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.769948242 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.783841939 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.716565316 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.600298636 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.715441647 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.71466085 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.04746694 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.786807984 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.709498862 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.718892014 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.711874648 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.88474526 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.834014402 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.490193468 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.71058347 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.572338316 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.723473788 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.861992276 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.715353721 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.905586141 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.71786808 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.801911771 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.71574183 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.717712648 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.714366555 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.750117808 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.719155476 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.775915948 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.712983191 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.08996609 seconds)
  done (took 395.391297534 seconds)
done (took 768.870146704 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.388851042 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.345381592 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.451297018 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.363725086 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.339783214 seconds)
  done (took 13.542904752 seconds)
done (took 15.197541513 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.800770105 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.806687632 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.738052633 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.807482077 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.735242899 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.808394904 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.785575316 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.74184932 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.774542975 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.739322306 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.772752782 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.740388436 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.732153146 seconds)
  done (took 24.636644681 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.95595057 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.954365226 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.782782868 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.947647397 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.765605743 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.962176297 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.879200377 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.868427452 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.887238358 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.732042628 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.731038425 seconds)
  done (took 22.122385775 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.952126715 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.960674524 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.788663103 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.951090075 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.769147479 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.961044323 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.893392747 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.87079605 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.870953915 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.732265939 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.729953215 seconds)
  done (took 22.138224144 seconds)
done (took 70.551960642 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.725533577 seconds)
  done (took 3.379390016 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.749855563 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.886267163 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.733134059 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.729153958 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.729471266 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.726845099 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.734646799 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.728357125 seconds)
  done (took 15.675467979 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.721298273 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.726565496 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.725536389 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.727356571 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.726209212 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.722635685 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.725837982 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.727637643 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.727592404 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.729194624 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.725791316 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.724174376 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.724354561 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.727791562 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.728124348 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.729151882 seconds)
  done (took 29.275075438 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.727356225 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.726345415 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.727659448 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.723995891 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.725366558 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.729055729 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.728411919 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.727661069 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.728111158 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.731059896 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.728291266 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.727076554 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.728992523 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.728855692 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.727699732 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.727300472 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.725169287 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.727855865 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.73190236 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.7269652 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.726811715 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.728567204 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.727880196 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.726793578 seconds)
  done (took 43.125271532 seconds)
done (took 93.112182466 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.636642282 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.151429319 seconds)
  done (took 8.445562543 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.730315247 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.726694662 seconds)
  done (took 5.155049872 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.728718618 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.727754912 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.727603892 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.730646399 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.726588868 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.728751115 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.725769336 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.726448907 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.72774668 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.729173025 seconds)
  done (took 18.935721208 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.728406334 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.729674027 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.723581212 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.72745559 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.73012888 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.724463689 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.729032158 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.729067568 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.725457905 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.72834381 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.729632836 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.725510024 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.730983801 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.725809714 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.726163879 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.728837661 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.725612503 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.725073345 seconds)
  done (took 32.752089426 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.729992731 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.72891294 seconds)
  done (took 5.118544874 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.732437066 seconds)
    (2/7) benchmarking "second"...
    done (took 1.726707894 seconds)
    (3/7) benchmarking "month"...
    done (took 1.727781268 seconds)
    (4/7) benchmarking "year"...
    done (took 1.726036594 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.726496092 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.72391706 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.723959773 seconds)
  done (took 13.749608458 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.727473383 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.893259598 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.9635897 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.402558987 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.732173611 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.733792438 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.674820318 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.735247342 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.733370468 seconds)
  done (took 19.256387634 seconds)
done (took 105.070111732 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.525135509 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.725747134 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.085687281 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.824166696 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.740934097 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.066205503 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.753156539 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.954947644 seconds)
done (took 42.335247473 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.744336663 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.309746961 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.340134216 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.028633159 seconds)
  done (took 12.3420815 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.713802872 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.247319856 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.772993457 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.322569364 seconds)
  done (took 19.740292712 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.09465167 seconds)
    (2/2) benchmarking "read"...
    done (took 2.081239051 seconds)
  done (took 5.844320449 seconds)
done (took 46.337810484 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.730538021 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.733015166 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.731794504 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.732277068 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.729666469 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.732395847 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.736273598 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.732978271 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.732534558 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.731426238 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.733607068 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.732839893 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730929401 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.727731943 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730809192 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.734469726 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.732218241 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.731908074 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730067778 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.730770219 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.734454494 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.732908264 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.732612629 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.733345933 seconds)
  done (took 43.235769992 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.732830134 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.734094293 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.735120927 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.733745621 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.730645511 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.733641492 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.734611961 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.73066752 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.73558576 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.735858642 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.732020553 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.732042396 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.733564356 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.733480308 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.731899619 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.731155297 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.735971016 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.733278114 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.735717807 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.735193009 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.738705023 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734419254 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.73347531 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736401881 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.735278954 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.736329765 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.735556967 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.736585557 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.736868628 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.735850763 seconds)
  done (took 53.693026899 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.744503314 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.744235438 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.738180185 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.73628922 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.736513837 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.736366484 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.739963784 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.737358844 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.738704408 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.738847286 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.736679189 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.739372479 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.736694215 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.73841437 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.735508638 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.732368632 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.737689725 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.738684882 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.739578446 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.737889388 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.738547688 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.736058374 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.735518384 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.740439324 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.736415277 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.738483472 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.737843933 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.737180845 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.739133224 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.736374902 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.737495356 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.735144057 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.736216946 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.736078394 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.738897827 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.737277004 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.744898152 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.746745084 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.737908042 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.737411834 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.737046711 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.735347316 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.739201284 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.737071016 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.737267251 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.738867464 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.737369519 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.738713293 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.738079686 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.73953912 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.739361397 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.73875168 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.738273936 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.739826531 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.737237624 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.737850192 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.738293982 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.740336007 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.741046608 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.742236728 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.741320317 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.739769549 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.742165316 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.740758929 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.740758918 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.741356383 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.73911082 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.736660056 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.737665313 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.73812022 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.738400133 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.741573572 seconds)
  done (took 126.848844586 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.740649428 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.740087754 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.739089912 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.734452383 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.738443135 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.739572252 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.73766224 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740087575 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739674595 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.739465414 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739526074 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.738199761 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736666033 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.741076306 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.743651881 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.737580445 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.738510909 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.736017835 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.741115937 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.740628221 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.741275307 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.739238861 seconds)
  done (took 39.934105116 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739786107 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.740360614 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.739871308 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.739904899 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.737034603 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.739109262 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.741470215 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.741275623 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741566165 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.738593823 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736441432 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741173796 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.73906945 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740244772 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.739951489 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.739361159 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.744422588 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.74186601 seconds)
  done (took 32.993230169 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.73962129 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.740465044 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.744187519 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.735891051 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.738410724 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.741020935 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.739369321 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.73965389 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.7427774 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.736876685 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.741867836 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741153036 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.744157012 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741125296 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743913894 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.741607091 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.740146405 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738913721 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.741765033 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.739409824 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.740242881 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.742794122 seconds)
  done (took 39.969563137 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740894206 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.744725913 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.739689634 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.740057629 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.739519155 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.741226971 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.739399906 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.737029666 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.744924666 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.7425296 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740165251 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.743425261 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.738946651 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.742652547 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.741448099 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.739430884 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.741707072 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.744962511 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.741409147 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.740593707 seconds)
  done (took 36.500007626 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.743058175 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.742967758 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.744634368 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.744884818 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.745177353 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.743988222 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.746066004 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.747095929 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.746702465 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.745352304 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.747843043 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.744156963 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.74472667 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.746310302 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.746801456 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.749199572 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.747511313 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.745709624 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.747956405 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.748098701 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.748641538 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.745208306 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.746729161 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.745002833 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.747503908 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.746797407 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.743793948 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.746512975 seconds)
  done (took 50.562175698 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.743661193 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.745447511 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.742826721 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.742469568 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.74191604 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.74041005 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.742526469 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.742584958 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.745104401 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.741248273 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.745318412 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.747185771 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.744189868 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.746663396 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.745267969 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.747798901 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74778748 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.743936382 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.744037701 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743134779 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.746722766 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74665148 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.747305894 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.743292347 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745394093 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.748624773 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745215097 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.746804031 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748176925 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.745096979 seconds)
  done (took 54.023288375 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.765982322 seconds)
    (2/2) benchmarking "in"...
    done (took 1.76674576 seconds)
  done (took 5.21229639 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.746663731 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.74873533 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.748827964 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.746358111 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.746381805 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.748676001 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.747768105 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.748615941 seconds)
  done (took 15.660720881 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.746681659 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.748757547 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.748150322 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.748830645 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.749922678 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.748836103 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.755961112 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.747598989 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.751369804 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.749684811 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.757316238 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.756979267 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.751930324 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.74643126 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.748781201 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.750257005 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.750504154 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.750515856 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.749821097 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.74713609 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.750908229 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.750856668 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.748129291 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.746435662 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.752106649 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.761912941 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.754281374 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.747060642 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.746094387 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.754039538 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.750170782 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.74666653 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.750182631 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.751207009 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.748642848 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.750700769 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.755051051 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.750184268 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.754714947 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.748500566 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.750034863 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.744393229 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.750556709 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.749887952 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.750579023 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.748331982 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.750994896 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.748341503 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.751517536 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.753045653 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.758253854 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.747497759 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.74778667 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.753866928 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.750122936 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.756548387 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.752498538 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.75356035 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.760610661 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.760342629 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.762176388 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.757872609 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.750313964 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.75283771 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.759931066 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.773270179 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.75556173 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.748572783 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.745320133 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.751589627 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.760274454 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.766235242 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.759959834 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.753577934 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.753817471 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.751428323 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.752536641 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.753626128 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.759503017 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.751914533 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.755504356 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.755091225 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.762193232 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.774053252 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.750345977 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.751493874 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.752073467 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.751364158 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.753993838 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.760607422 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.752069404 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.748440104 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.752556194 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.75186197 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.75316266 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.753197416 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.752007947 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.749567347 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.750452001 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.753364839 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.752642377 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.755912057 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.762093502 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.752810263 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.753815675 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.760703517 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.753266494 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.752427076 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.759527248 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.750390181 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.751826026 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.752517979 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.762339703 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.751492174 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.756713145 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.763430444 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.753549375 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.754924526 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.757132687 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.753854842 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.763822834 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.782776406 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.752088365 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.753171502 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.756263508 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.766626568 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.754566669 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.756088289 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.751015224 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.749928714 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.747113403 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.754812121 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.751746186 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.751520913 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.75139188 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.75487671 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.74749413 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.754206836 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.751910391 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.754969206 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.756817788 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.755678851 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.754870429 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.754600319 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.755028046 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.755901943 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.761158075 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.755914749 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.755281688 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.752709436 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.751381554 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.751723081 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.756153342 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.754771862 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.752756814 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.75439649 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.755543934 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.752893332 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.75547717 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.754440343 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.756450924 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.755727555 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.761931215 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.755806079 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.761474621 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.757507758 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.750461441 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.754642871 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.756370343 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.753839311 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.756463719 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.752772191 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.755964379 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.761819453 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.753653402 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.755690521 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.760120242 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.75509129 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.756965991 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.757736403 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.759123168 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.763901579 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.756637703 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.764113534 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.755802386 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.756265755 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.751843063 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.7551653 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.756788158 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.756369263 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.759752317 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.765854643 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.771991547 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.764099871 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.756623 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.758135313 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.756380778 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.7616299 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.760167145 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.75662102 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.755504483 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.754159384 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.757273186 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.75653346 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.75633798 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.756979627 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.757041683 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.756179536 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.758939121 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.759972071 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.759456328 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.757902414 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.755177308 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.753882168 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.75713411 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.756841072 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.755103942 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.75311919 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.753940799 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.756766679 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.757603592 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.758716362 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.763586482 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.751439567 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.757873657 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756910884 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.754320108 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.75321527 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.757301251 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.760002855 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.755190313 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.763968529 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.755012726 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.758630141 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.759228898 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.75602173 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.75492757 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.756905438 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.759069524 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.75367324 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.759124674 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.765207781 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.75738805 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.759440606 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.75808725 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.759167302 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.75946366 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.763696512 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.753885489 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.757986672 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.75398108 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.758669739 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.7550979 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.756596453 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.760907589 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.76099078 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.758574485 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.759382518 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.756279635 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.759727402 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.756599863 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.761297204 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.757442333 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.763397626 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.764820713 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.765189524 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.759452371 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.760882656 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.762540664 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.763638986 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.75894667 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.762851554 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.758349743 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.77464763 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.767690755 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.763991544 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.760153199 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.759974859 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.766277121 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.75785713 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.766170031 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.759707856 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.761583195 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.758921816 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.758249866 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.754678984 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.761489046 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.760063576 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.76266526 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.759666514 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.763884837 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.758648124 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.758190879 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.759096903 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.762147802 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.760099642 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.758452672 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.760242816 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.763474716 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.764544812 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.757557074 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.763299396 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.76713849 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.762764022 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.758907809 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.760631205 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.760851802 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.761508498 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.76190193 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.759753231 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.764552121 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.771865836 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.761810548 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.770738115 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.760316888 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.771432584 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.761841855 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.764243252 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.769935842 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.757730187 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.759962163 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.761577785 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.760450876 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.768214298 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.761772353 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.762738152 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.76723722 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.760665336 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.764247024 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.762203387 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.762570841 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.766912914 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.763925662 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.768456768 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.761466439 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.767841113 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.761712038 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.762491865 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.763611361 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.763792485 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.761002404 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.76855728 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.764516961 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.763104648 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.762506926 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.768289515 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.761881523 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.764897212 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.763195549 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.761121763 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.764888875 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.771117117 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.763301172 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.768797359 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.766767595 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.773054732 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.762520861 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.773610882 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.762409645 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.764639711 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.766154068 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.765361638 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.766307119 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.765267333 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.762374649 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.766152371 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.766708156 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.767749484 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.76700322 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.767092517 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.767435652 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.767999882 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.765185561 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.774064457 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.792352362 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.764776778 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.769090764 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.763896462 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.768284429 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.770270428 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.767219491 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.766126871 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.766330999 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.778454645 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.77135981 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.766842835 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.76879295 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.76515757 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.767263171 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.765533493 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.764862637 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.768420192 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.763932493 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.765439947 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.768798685 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.769179085 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.766452874 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.766180412 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.767153779 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.766810766 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.779454081 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.768994202 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.769127658 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.769089552 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.766547802 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.76522522 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.767293046 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.769378777 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.765584719 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.76945786 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.766637912 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.777090042 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.774482804 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.771588466 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.762881349 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.767822809 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.768396443 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.769325678 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.768622923 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.76994429 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.768896538 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.767576162 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.766238342 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.769912458 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.767173215 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.768669936 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.765094994 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.765290778 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.769074189 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.775137312 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.764873855 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.765970385 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.768193614 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.772572359 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.76637247 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.765310145 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.776382228 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.770511138 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.778448279 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.778027388 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.773737388 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.770390425 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.773265367 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.774552552 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.770828298 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.767800217 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.770394464 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.772270143 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.772867061 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.774712858 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.767907277 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.775781411 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.771106779 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.770562174 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.778187353 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.769194854 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.771314514 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.770647598 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.775099519 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.769410017 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.765568005 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.766287186 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.766593947 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.777562622 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.772398014 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.769759571 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.773168158 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.769735723 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.768589982 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.772090942 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.76910983 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.769851077 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.766188539 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.769131811 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.770556334 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.772198096 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.766853618 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.76867961 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.76658844 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.771755283 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.776562725 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.769019135 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.770012481 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.771107731 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.770494126 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.771464188 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.76961365 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.76510695 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.769819638 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.772489728 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.770315238 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.773268826 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.771600114 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.771936393 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.775101083 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.77223231 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.771253401 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.774049747 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.781143436 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.77993701 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.766979376 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.771065994 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.774837816 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.773444603 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.772531875 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.772778364 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.771627826 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.774088868 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.770299665 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.774481678 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.772186101 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.778383487 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.788388194 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.775027668 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.772146863 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.770784717 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.775963502 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.775048588 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.768423321 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.773135645 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.771453392 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.775005041 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.780054575 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.774052597 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.775630277 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.771400457 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.77657693 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.776915331 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.774009429 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.781651333 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.776247251 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.772303478 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.775489099 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.780356641 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.793372721 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.772202314 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.780808549 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804904665 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.771234022 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.774285264 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.775064359 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.775865292 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.774721383 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.772942289 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.77406854 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.770986833 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.775457582 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.772524156 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.771966861 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.781089662 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.775448689 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.774319158 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.773423752 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.774939128 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.776505838 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.770777627 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.779018791 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.774607687 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.774133443 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.775039595 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.779021567 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.777938823 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.789461456 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.786439002 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.775914701 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.777600491 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.77471447 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.782457407 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.780618052 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.789102413 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.78750576 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.778645737 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.77605349 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.779010067 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.779853158 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.772704908 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.777765665 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.776882764 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.780031721 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.775517246 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.787875429 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.785170285 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.786231784 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.777990348 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.780188717 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.776028611 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.780499936 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.776973976 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.778733136 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.780464246 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.779066605 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.781043727 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.777454141 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.777584006 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.781829347 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.785823044 seconds)
  done (took 1052.741247269 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.776319443 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.774774126 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.777950315 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.773370133 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.776964353 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.77573617 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.774130535 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.777880337 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.779210606 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.777681797 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.777805268 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.773389249 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.77647724 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.776528722 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776317562 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.777736627 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.778843874 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.778623396 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.779748633 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.775780462 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.777058659 seconds)
  done (took 39.020393424 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.779987823 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.776792261 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.774902492 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.779944978 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776152937 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.777508621 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.776952982 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778707528 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.780316679 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776548286 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.778349163 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779506714 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.779791225 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.77584159 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776828451 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780322446 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.780046889 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.776775893 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.78000685 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.778993486 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.780648824 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.777222479 seconds)
  done (took 40.830377175 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.782651161 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.77989436 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.78133163 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.779578505 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.782972634 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.779569943 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.78268984 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.782966926 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.78036272 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.783626323 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.782778018 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.783074153 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.788283143 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.787120456 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.782883134 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.782203739 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.927503841 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.78409378 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.783693962 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.781577971 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.780352028 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.787975462 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.780249146 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.780725576 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.781187087 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.782646681 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.782616418 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.785111275 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.781423275 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.781224839 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.78642116 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.783906141 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.781922218 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.785546847 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.783372193 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.785222082 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.788843136 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.781162414 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.78009036 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.781463648 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.795522041 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.806514788 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.786407282 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.790658314 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.783291682 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.785452277 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.786829513 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.791546744 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.779611471 seconds)
  done (took 89.280595903 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.785680791 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.783561033 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.782391988 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.785969321 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.784295037 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.78561928 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.781943791 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.783073487 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.782129286 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.782659629 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.782826236 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.780135437 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.777829049 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.780719411 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.783292992 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.778726398 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.777648459 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.779848081 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.777559934 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.778225834 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.778159023 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.781496479 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.784912166 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.77932911 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.780756441 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.778083461 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.7823238 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.785674051 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.779668877 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.782146414 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.783097227 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.782430908 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.781997791 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.781542292 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.779730704 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.7824943 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.78449639 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.778574727 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.780391462 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.783314807 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.782499758 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.782801143 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.782013318 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.780971383 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.780079573 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.781298854 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.780522194 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.777248499 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.783793774 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.785359128 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.780967983 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.778369111 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.782416113 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.782072295 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.78178093 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.782843232 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.779865881 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.77787237 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.783022443 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.779210097 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.778691177 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.782693837 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.779197124 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.782211342 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.780940389 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.780280362 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.779432859 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.783215667 seconds)
  done (took 122.851071492 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.78267472 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.785731975 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784798128 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783953457 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.784575846 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.785203596 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.785309999 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.782595652 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.785219026 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.785897022 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.784239382 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.782451935 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.783980644 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.783949674 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.782791904 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.78468833 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.783179494 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.786144274 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.788519664 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782952322 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.787877799 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.786288761 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.7859441 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.786996772 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.783372115 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.788606771 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.78664276 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.783765421 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.786369972 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.786807509 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.785378191 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.786012444 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.786938647 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.785005827 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.78837029 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.783586147 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.786323625 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785749437 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.785208774 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.787091029 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.786561978 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.786747779 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.784628054 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.788266011 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786970377 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.783527577 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.785770413 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.788853709 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.786550851 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.788953859 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.786105314 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.78784754 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.789454413 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.785307755 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.788569892 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.789854392 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786992562 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.787280286 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.789282102 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.789243336 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.788414679 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.783429386 seconds)
  done (took 112.444453861 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787329968 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.786962358 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.781155324 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.781773007 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.785188407 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.781406007 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.784465216 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.787835229 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.78458219 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.78651792 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7849322 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784111683 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782586148 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787559235 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.786154394 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784111688 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785666481 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.786715206 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78705464 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.783894236 seconds)
  done (took 37.4146075 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.786501212 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.788549201 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.785899248 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.78750896 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.787122297 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.784327907 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.786230615 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789947471 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787149025 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788837155 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.791122728 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.788065087 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783112658 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.787849047 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.787025024 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.786944265 seconds)
  done (took 30.312392303 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.786043468 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.78820114 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.788560602 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.789372605 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.784469363 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.783178275 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.786321226 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.782546331 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.784206641 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.788801483 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.791032442 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.787494849 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.786745113 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.791905838 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.785756651 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.78817725 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.788973297 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.789016141 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.789258584 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.793730663 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.786121421 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.787721213 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.789290054 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.789791663 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.790519293 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.788256324 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.788574687 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.787021783 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.78984921 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.788372076 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.789409629 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.789401277 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.784771647 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.787933931 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.793958867 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.787257616 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.790619045 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.789865172 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.793287094 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.792168667 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.789314556 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.786673653 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.792342556 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.791899522 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.788943867 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.793991777 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.788679915 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.787721819 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.787276331 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.794512581 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.794064603 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.794392895 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.793264297 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.791216606 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.794889913 seconds)
  done (took 100.124453649 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.79178817 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.791276645 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.790907687 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.793562646 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.794045167 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.791616907 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.788776542 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.791096026 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789305095 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.798394682 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.78884226 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.790977655 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791177961 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.792387322 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.793279403 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.792300041 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.792325053 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.791903497 seconds)
  done (took 33.975805666 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.790847246 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.792841815 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.796473895 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.793649682 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.79139325 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.793183927 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790100388 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.794408447 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794492189 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.795235292 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790603659 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.795267558 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796296221 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.793510681 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.789410153 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797022992 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.792075798 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795642989 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.793023233 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.794168622 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.796874851 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79928466 seconds)
  done (took 41.188375413 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.795171541 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.796737588 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.811204962 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.814917691 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.817429811 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.830368166 seconds)
  done (took 12.58785993 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795190512 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795102226 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.791916983 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795589829 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800443113 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795824258 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795367513 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794289639 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794742347 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793005109 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792854394 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796621507 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796064196 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794438985 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797567415 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794706042 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796820871 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796965262 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796681466 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79540497 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795094905 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79479657 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792442753 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792488824 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792397028 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794327799 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797133139 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795109373 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796223518 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795206194 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798937388 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794231156 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800051863 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797503589 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801346932 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798083318 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79789497 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801197748 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797609961 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797390517 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.798544941 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798997345 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800333723 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796396777 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80197095 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799674094 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801468282 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800346057 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799803812 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801015052 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797424963 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800941984 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798909812 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800907274 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800493182 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800962166 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797498523 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798986461 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799796673 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796907957 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796705037 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800061878 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793918191 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799362111 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802556802 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79872077 seconds)
  done (took 120.347547509 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796184909 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.798285593 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800569505 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797662696 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795315819 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800070224 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797953882 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79593543 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798646192 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79571743 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799820873 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798940264 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797127852 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798657827 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796877257 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79683766 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798592169 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796094246 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797667969 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79943885 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796075755 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799559174 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798317836 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795380591 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797894843 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797185308 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797475344 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79869651 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798328458 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800329517 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802998229 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800469688 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798735783 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.799338547 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800912532 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80206626 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798636336 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799687701 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79722653 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802286103 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803544983 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802657082 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799607986 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801232997 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799683068 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801815123 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799450372 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798699248 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800829144 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802132803 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806023127 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80400783 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804331441 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80259429 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803223613 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801690109 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80294452 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802435322 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798927423 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804242641 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802524437 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802496925 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801362331 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802814314 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80074784 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802662495 seconds)
  done (took 120.520801333 seconds)
done (took 2453.937895393 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.861268941 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.121469079 seconds)
  done (took 15.713713488 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.964605448 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.91919104 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.804541408 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.80462374 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.802830299 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.82233009 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.820180909 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.803561713 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.804637471 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.804665608 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.804473419 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.992126044 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.809547701 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.802755061 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.805112866 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.896996758 seconds)
  done (took 51.20343214 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.808464488 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.807667342 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.820664503 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.811131037 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.810182071 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.828418575 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.839186891 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.808699144 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.86870323 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.820736266 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.93548264 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.815749136 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.803764165 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.869834062 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.822045192 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.823418736 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.895968408 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.879140465 seconds)
  done (took 34.804086481 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.88709421 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.814971161 seconds)
  done (took 10.448177306 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.831751437 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.808095565 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.832259573 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.829442723 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.806138709 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.823857844 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.824838124 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.827222077 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.820258318 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.83350014 seconds)
  done (took 69.977599558 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.813727611 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.808593731 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.813546988 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.811445893 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.799299919 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.805019982 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.809130232 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.803481469 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.502433727 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.844611443 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.812961558 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.815305231 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.809938349 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.810938593 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.809971082 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.833564347 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.943163989 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.811348446 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.811125528 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.817882864 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.814755028 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.866670961 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.828047803 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.816628339 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.84408358 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.501071708 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.819723332 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.81665998 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.930072522 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.811564345 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.809822524 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.814064349 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.814499401 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.188625914 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.099702097 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.808416808 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.821181862 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.819943419 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.811981794 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.937122362 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.811604955 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.817504338 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.80283765 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.083903612 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.910412643 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.855461121 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.224802727 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.813924783 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.814184961 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.843956553 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.813942911 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.812478077 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.823525246 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.327313495 seconds)
  done (took 129.560730912 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.808197457 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.109751568 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.963168496 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.806667728 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081058913 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012997868 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.807130724 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.85735819 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.807926524 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.009923673 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.971184124 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.915613002 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.807007407 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.811415428 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.807877985 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.80351432 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.965301765 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.876765742 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.814150141 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.806916707 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834380337 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.019273172 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.93718724 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.809937674 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.83037929 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.022406557 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.932147829 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.917040393 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.101216525 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.808590055 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.874959538 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.80659994 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.808385466 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.802832509 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.963878821 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.906651023 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.899329297 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.804807025 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.807759433 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.808847578 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.475789977 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006323642 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.906313587 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.949562743 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.004118623 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.013957666 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.455478731 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.810656719 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.454325808 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.973298178 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.021964253 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.027271715 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.934659399 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.809375654 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.048596927 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.808308764 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.808563843 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.045070026 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.958024993 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.918576924 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.810539579 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.809301378 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.809200888 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.05666813 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.81161545 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.909607298 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.810613777 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.807064413 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.911017959 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.920485503 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.953626835 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.028063814 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.847398839 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.71340958 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.322380955 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.028232297 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.882397945 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051878191 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.813471917 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.807804703 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.898434544 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.566719254 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.969124966 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.064597605 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.037398414 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.84492847 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.418909249 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.809177237 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.010806608 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.00154465 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.002999628 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.019897536 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.969331457 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.020849884 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.813337116 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.812146792 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.018327604 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.949152034 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.81502358 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.168058555 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.048024748 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.443181939 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.83486255 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.111404703 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949369325 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.242779466 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.440765993 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.812104253 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.978574023 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.851524398 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.811454521 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.81300927 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.005953355 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.624639583 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.812525777 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.344184023 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.879984421 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.815878941 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.019358794 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.818107931 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025093725 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.815857129 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053827673 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.024299075 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.848258776 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.984664992 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.023388111 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.609723709 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.066497597 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.061541349 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.936429917 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.040316649 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.408615992 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.813757447 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.090609402 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.818833944 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.812346389 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.98116744 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.815402346 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.962533689 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.818335531 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.044804526 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.840240303 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.973858884 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.817761266 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.055241058 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.851872892 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.867076117 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.813926013 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.943490574 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.814677215 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.700356018 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.969119658 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.815915953 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.811599261 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.245214094 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.815759896 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.963282564 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.050335619 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836338751 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.887278355 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.337973508 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.81577232 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.903971389 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.843829599 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.212858241 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.816881084 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.974316573 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.78515913 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.250173722 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.815484017 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.058773051 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.999749368 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.819696866 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.814832955 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.557946815 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.530190911 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.815424595 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.974491799 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.638401125 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.471548325 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.021655507 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.814887399 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946076735 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.820934866 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.892802324 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.166019282 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.815127018 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.816789432 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.815933403 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.815917288 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.8160198 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.026631644 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.846982873 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.315297795 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.955039449 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.033831643 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.127289384 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.040617025 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.861632933 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.820672009 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.079887838 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.817371355 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.883367297 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.817362114 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.841584461 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051433578 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.819199378 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.047718818 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.07238706 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.717753182 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.86942381 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.818517396 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.815566449 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.81685757 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.969452801 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.913868325 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.817211317 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.81632106 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.931199045 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.947563648 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.011307052 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.410813622 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.991896324 seconds)
  done (took 885.315817129 seconds)
done (took 1198.756995356 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.816743827 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.815660186 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.804618654 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.813231919 seconds)
  done (took 29.001747545 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.823302046 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.819639978 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.821685941 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.821109159 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.822167365 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.819991833 seconds)
  done (took 12.675756481 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.867345357 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.811465352 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.815542946 seconds)
  done (took 21.242512293 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.889702163 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.235273782 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.922852259 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.269459051 seconds)
  done (took 10.065459351 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.823554169 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.821073777 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.823007284 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.82404456 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.822986982 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.825336086 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.821710877 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.825579148 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.8243145 seconds)
  done (took 18.163018746 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.171347213 seconds)
done (took 97.071116661 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.808555062 seconds)
    (2/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 3.579614942 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.814687669 seconds)
    (4/309) benchmarking ("sort", BigInt, false)...
    done (took 6.816933262 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.800837278 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.8321576 seconds)
    (7/309) benchmarking ("map", abs, Float32, false)...
    done (took 3.465554762 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.801143733 seconds)
    (9/309) benchmarking ("sort", Float32, false)...
    done (took 5.639787603 seconds)
    (10/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.813050606 seconds)
    (11/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.959047609 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.947642962 seconds)
    (13/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.149561567 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.982746229 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.601831683 seconds)
    (16/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.105409275 seconds)
    (17/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.947267231 seconds)
    (18/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.031340148 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.930192734 seconds)
    (20/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.840161877 seconds)
    (21/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.178629859 seconds)
    (22/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.999655211 seconds)
    (23/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.019790039 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.481464942 seconds)
    (25/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.833036479 seconds)
    (26/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.800744694 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.482050572 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.099877552 seconds)
    (29/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.816892616 seconds)
    (30/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.032678351 seconds)
    (31/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.129183022 seconds)
    (32/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.933426284 seconds)
    (33/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.842123402 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.116315356 seconds)
    (35/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.372895291 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.50940824 seconds)
    (37/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.759223858 seconds)
    (38/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.940854127 seconds)
    (39/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.176222262 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.978592316 seconds)
    (41/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.389998445 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.120695995 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.82565588 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.881100006 seconds)
    (45/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.3357985 seconds)
    (46/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.825132283 seconds)
    (47/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.964658834 seconds)
    (48/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.947948006 seconds)
    (49/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.157937252 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.877786389 seconds)
    (51/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.817271899 seconds)
    (52/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.135843064 seconds)
    (53/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.90405179 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.844606206 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.115756858 seconds)
    (56/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.849896061 seconds)
    (57/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.011910666 seconds)
    (58/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.124463582 seconds)
    (59/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.029157134 seconds)
    (60/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.01410299 seconds)
    (61/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.200076639 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.816470323 seconds)
    (63/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.802631563 seconds)
    (64/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.986037381 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.817528893 seconds)
    (66/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.802205193 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.103025024 seconds)
    (68/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.825105652 seconds)
    (69/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.321703801 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.883498167 seconds)
    (71/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.325816219 seconds)
    (72/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.173534802 seconds)
    (73/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.828733752 seconds)
    (74/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.904475734 seconds)
    (75/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.942847587 seconds)
    (76/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.259250488 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.062057837 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.892459044 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.818222974 seconds)
    (80/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.918908366 seconds)
    (81/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.986141441 seconds)
    (82/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.842093957 seconds)
    (83/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.202752223 seconds)
    (84/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.805130977 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.498897715 seconds)
    (86/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.850351946 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.988046551 seconds)
    (88/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.654199933 seconds)
    (89/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.0309757 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.530207409 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.119728463 seconds)
    (92/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.129356659 seconds)
    (93/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.096611738 seconds)
    (94/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.111495039 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.743491205 seconds)
    (96/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.038464994 seconds)
    (97/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.888360847 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.820484888 seconds)
    (99/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.843479791 seconds)
    (100/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.98715177 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.708423125 seconds)
    (102/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.943644917 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.161699522 seconds)
    (104/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.848876932 seconds)
    (105/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.828243406 seconds)
    (106/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.904965705 seconds)
    (107/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.99704165 seconds)
    (108/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.852478447 seconds)
    (109/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.805736855 seconds)
    (110/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.937073779 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.805486348 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.002580607 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.467090968 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.21262534 seconds)
    (115/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.805856752 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.824634216 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 3.601696911 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.036575818 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.162964861 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.11313501 seconds)
    (121/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.882170499 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.286072712 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.870383367 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.820157444 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.069474868 seconds)
    (126/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.87695111 seconds)
    (127/309) benchmarking ("sort", Int8, false)...
    done (took 4.777341602 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.971690925 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.083956101 seconds)
    (130/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.805607566 seconds)
    (131/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.982949152 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.606193564 seconds)
    (133/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.953391631 seconds)
    (134/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.910437427 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.916672992 seconds)
    (136/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.334303325 seconds)
    (137/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.411737884 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 2.274001088 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.85024285 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.080040714 seconds)
    (141/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.91610702 seconds)
    (142/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.956946326 seconds)
    (143/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.736147044 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.041423142 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.09836612 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.92277834 seconds)
    (147/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.330988493 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.224560681 seconds)
    (149/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.962976639 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.84770945 seconds)
    (151/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.759278165 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.926574921 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.823567726 seconds)
    (154/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.933142844 seconds)
    (155/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.00810919 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.04507223 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.849071759 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.428785159 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.808272061 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 3.496153964 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.795986581 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.716107167 seconds)
    (163/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.401981241 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.85371767 seconds)
    (165/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.908197046 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.196978062 seconds)
    (167/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.887535882 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.896547415 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.891306034 seconds)
    (170/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.908158823 seconds)
    (171/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.823190855 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.799630244 seconds)
    (173/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.035503893 seconds)
    (174/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.430964536 seconds)
    (175/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.905988398 seconds)
    (176/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.88723804 seconds)
    (177/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.9033302 seconds)
    (178/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.895601025 seconds)
    (179/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.379909424 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.863522906 seconds)
    (181/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.911865567 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.129188193 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.100083397 seconds)
    (184/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.32986164 seconds)
    (185/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.929681565 seconds)
    (186/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.980725993 seconds)
    (187/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.932093218 seconds)
    (188/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.930738172 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.065244685 seconds)
    (190/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.43869232 seconds)
    (191/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.029117495 seconds)
    (192/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.807894533 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 3.732846246 seconds)
    (194/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.025369527 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.082314204 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.167771213 seconds)
    (197/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.958678555 seconds)
    (198/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.949517463 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.851455461 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.847685656 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.450195745 seconds)
    (202/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.04603926 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.512820863 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.194514001 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.154993653 seconds)
    (206/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.828016737 seconds)
    (207/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.928636548 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.870794125 seconds)
    (209/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.826561545 seconds)
    (210/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.218039774 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.883918904 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.14966511 seconds)
    (213/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.491259237 seconds)
    (214/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.938377849 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.73762933 seconds)
    (216/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.216380159 seconds)
    (217/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.825248227 seconds)
    (218/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.529248164 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.263734117 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.713773696 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.034074782 seconds)
    (222/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.190130454 seconds)
    (223/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.960326596 seconds)
    (224/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.140197664 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.875559584 seconds)
    (226/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.517164821 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.831077666 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.85072366 seconds)
    (229/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.931519622 seconds)
    (230/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.858209536 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.946406111 seconds)
    (232/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.845616691 seconds)
    (233/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.910690035 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.927796016 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.867345816 seconds)
    (236/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.798250748 seconds)
    (237/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.858542224 seconds)
    (238/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.813444073 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 8.272617301 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.928918351 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.464905564 seconds)
    (242/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.674411226 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.774388299 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.053788485 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.972053243 seconds)
    (246/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.232445493 seconds)
    (247/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.893070691 seconds)
    (248/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.281595733 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.23200865 seconds)
    (250/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.348186653 seconds)
    (251/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.853387352 seconds)
    (252/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.952913421 seconds)
    (253/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.938955185 seconds)
    (254/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.912354213 seconds)
    (255/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.828512712 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.807115491 seconds)
    (257/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.407473936 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.139067498 seconds)
    (259/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.976347811 seconds)
    (260/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.986227558 seconds)
    (261/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.813654945 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.929101043 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.912346623 seconds)
    (264/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.976376923 seconds)
    (265/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.829424188 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.894231961 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.902934436 seconds)
    (268/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.429943174 seconds)
    (269/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.827587491 seconds)
    (270/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.170840647 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.207834528 seconds)
    (272/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.019342728 seconds)
    (273/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.077104943 seconds)
    (274/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.326427267 seconds)
    (275/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.971318099 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.95311871 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.037732958 seconds)
    (278/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.814028975 seconds)
    (279/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.171090611 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.019946008 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.644639981 seconds)
    (282/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.776349903 seconds)
    (283/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.529142124 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.223881408 seconds)
    (285/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.70708223 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.354820919 seconds)
    (287/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.994458141 seconds)
    (288/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.937956022 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.930338321 seconds)
    (290/309) benchmarking ("sort", Float64, false)...
    done (took 5.632812011 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.916368781 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.889417031 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.97082765 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.619208037 seconds)
    (295/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.347088916 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.829157365 seconds)
    (297/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.830891685 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.20527829 seconds)
    (299/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.018562218 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.876185632 seconds)
    (301/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.012087957 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.822882238 seconds)
    (303/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 9.652932918 seconds)
    (304/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.991303092 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.864407454 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.751638949 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.83934102 seconds)
    (308/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.982533612 seconds)
    (309/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.24597799 seconds)
  done (took 1005.208306959 seconds)
done (took 1007.025412425 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.867042294 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.860182424 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.843508321 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.863479374 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.955924941 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.876219427 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.853433973 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.845239118 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.890950885 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.895501471 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.842824192 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.877436171 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.846898808 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.843696744 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.844628674 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.86010822 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.154009065 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.872814025 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.862607384 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.854136504 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.861568191 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.845635914 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.893750889 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.878293816 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.849272075 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.847281078 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.847974798 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.865045107 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.957680461 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.850369588 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.84852113 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.858042381 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.156098137 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.870349879 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.839726527 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.866664483 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.858150017 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.854877576 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.851102571 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.879340477 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.303712917 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.85151251 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.850607307 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.847324155 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.847140563 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.851686167 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.84587078 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.852574672 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.858463748 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.859782559 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.299086894 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.866129464 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.849585934 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.847787529 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.856293961 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.846791318 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.848778097 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.863035914 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.866622331 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.860708578 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.147312895 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.878055707 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.849239092 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.865282776 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.854288204 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.338089399 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.846207233 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.84999403 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.303418813 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.855505986 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.338771684 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.861530113 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.849225208 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.862063739 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.881119442 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.156393802 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.868013482 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.846809472 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.85585572 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.84485054 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.856706004 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.861253753 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.851888695 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.847995867 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862508635 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.882364571 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.856631309 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.850698757 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.858804842 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.868835972 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.856504273 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.860081243 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.853991609 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.844102957 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.85898553 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.851264989 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.852748351 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.854545719 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.854573398 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.859339554 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.299621708 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.87055978 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.8456506 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.84424829 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.849842135 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.864380874 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.301812279 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.853626989 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.869969556 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.895075156 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.850178325 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.147970399 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.880264384 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.864939863 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.859384124 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.852321195 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.845409991 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.14913576 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.330084459 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.869797878 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.851393482 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.848205986 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.868350969 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.852028132 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.845495837 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.16034625 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.876721925 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.864688301 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.972534495 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.859769028 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.880009305 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.848707963 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.853335581 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.884580235 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.866858941 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.88254163 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.851722284 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.866168812 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.867607404 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.849637671 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.863199986 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.862159949 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.851711572 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.855968384 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.844845687 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.885712433 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.863368209 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.863964052 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.873532836 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.971869025 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.849433532 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.153453628 seconds)
done (took 290.767958329 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.921224562 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.845946363 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.948906786 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.846810811 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.934225292 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.934518667 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.844260529 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.84369706 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.844060318 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.252691328 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.846082146 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.846074974 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.848747007 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.845180093 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.933380285 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.846897933 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.84492516 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.191350612 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.850208321 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.923948208 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.838969537 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.84578761 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.848517413 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.231845218 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.84585334 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.842296494 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.92105898 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.847601548 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.194077873 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.849605762 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.849731175 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.194793199 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.938424817 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.866353394 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.859174294 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.854462431 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.934223817 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.852639808 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.931397531 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.93356282 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.951180343 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.889725067 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.848693212 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.843437873 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.852530192 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.851096298 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.845803502 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.876042817 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.848522067 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.847612245 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.191027399 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.860140603 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.858625567 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.847800758 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.847525646 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.872230552 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.847793327 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.851107843 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.943198112 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.85061906 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.913210347 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.233408387 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.228940893 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.849267628 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.845020445 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.847975095 seconds)
  done (took 182.990168272 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.916724399 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.922501265 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.920165258 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.853720348 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.901907403 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.923011781 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.85222791 seconds)
  done (took 15.065658545 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.856436027 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.850335827 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.899331733 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.90009177 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.851601865 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.00150724 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.852809356 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.306079885 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.847982167 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.904272445 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.853618182 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.849858558 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.858467992 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.851045067 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.899126481 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.862474959 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.966992831 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.851474228 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.853847742 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.005022951 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.849563274 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.858508525 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.906421545 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.863414376 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.853482865 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.858318784 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.434902726 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.852169034 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.848280901 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.853174783 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.849220592 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.895950319 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.851387821 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.852535354 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.849471352 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.968834472 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.853791702 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.849678203 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.853472665 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.849768904 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.851889877 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.851914024 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.853272884 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.851756339 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.851960936 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.874583286 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.851939443 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.852754171 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.852953839 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.852612011 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.903144087 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.85213282 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.851807215 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.850828741 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.909594826 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.8606731 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.855234108 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.850953014 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.852300595 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.849980242 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.005188727 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.900730978 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.852111013 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.901132089 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.853002971 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.852685772 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.852566352 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.853090815 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.908247326 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.854330865 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.902802735 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.850715129 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.012774867 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.877932494 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.855612718 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.8560613 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.856133833 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.855136006 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.853118865 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.861189525 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.852259849 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.856094877 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.858995102 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.852441147 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.852435298 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.968050591 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.973629968 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.853870088 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.867890827 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.861324175 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.853242345 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.907677272 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.853057865 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.850180698 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.906681115 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.969840671 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.911224758 seconds)
  done (took 204.598816593 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.860487817 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.860979268 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.855217634 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.87234124 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.853823668 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.855393697 seconds)
  done (took 12.936845633 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.857358227 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.856388361 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.854143871 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.854980892 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.855516376 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.854853998 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.856828649 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.85703383 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.860701495 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.854851894 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.856514505 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.855691242 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.857485026 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.857135744 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.856510745 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.854113953 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.856552722 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.852139825 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.856924631 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.856710689 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.999767807 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.856862427 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.855555153 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.856878522 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.861183177 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.857643486 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.86363088 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.853875854 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.856133972 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.864315666 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.861334821 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.855823304 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.857106181 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.864327952 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.864765764 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.857079206 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.86118927 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.857086722 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.853800912 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.855692349 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.858837334 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.859066047 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.857762539 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.857682162 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.855901217 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.860738487 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.861286149 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.862968708 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.858257338 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.858584416 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.857040122 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.854816818 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.856462744 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.858909444 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.857923173 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.861914615 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.861408373 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.857465803 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.859315794 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.858457008 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.859751131 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.858005963 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.859396025 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.862941982 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.862923984 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.858065472 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.857645513 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.862078103 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.85685732 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.857287258 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.858816904 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.855725113 seconds)
  done (took 136.704016033 seconds)
done (took 554.085496397 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.100569031 seconds)
  done (took 8.882315878 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.918831719 seconds)
  done (took 8.777964454 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.540078626 seconds)
  done (took 10.32423391 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.865563935 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.854447421 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.862566802 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.85769889 seconds)
  done (took 29.234431884 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.201875927 seconds)
  done (took 8.985185671 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.867680892 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.847989262 seconds)
  done (took 15.560864155 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.889720835 seconds)
  done (took 8.674304747 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.920007874 seconds)
  done (took 8.735592476 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.852454569 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.871484688 seconds)
  done (took 15.52088053 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.838696585 seconds)
  done (took 8.622472377 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.477017584 seconds)
  done (took 11.269819298 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.862070615 seconds)
  done (took 8.659856148 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.858999168 seconds)
  done (took 8.64371693 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.04937725 seconds)
  done (took 9.833936434 seconds)
done (took 163.506825382 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.856442358 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.853273945 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.853594105 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.852289326 seconds)
  done (took 29.197461999 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.892792848 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.894487968 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.89448761 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.903821505 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.896093284 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.893419794 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.884969546 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.885337393 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.902567446 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.895208486 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.89416165 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.894430235 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.892178473 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.886398939 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.894939459 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.893605209 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.905328916 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.895623606 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.886090984 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.896143829 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.859849352 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.904531318 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.896300011 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.859964223 seconds)
  done (took 47.188805597 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.058640734 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.931987905 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.013156301 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.912822875 seconds)
  done (took 9.701746906 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.912196677 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.913404737 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.924908305 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.96519453 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.989945425 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.923669575 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.887188108 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.882528038 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.868402559 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.913774419 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.991646542 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.928057925 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.997808632 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.860904891 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.07044777 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.859772985 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.860674695 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.91332626 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.964298032 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.999589946 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.861929393 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.912843689 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.915834958 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.931560945 seconds)
  done (took 48.0341422 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.859650707 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.867449716 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.865899779 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.860156079 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.861154072 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.861847257 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.866354732 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.861698678 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.883558219 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.8630076 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.859391323 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.861936572 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.860177731 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.862234086 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.860413755 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.873702149 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.874047785 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.860952869 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.863509535 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.867673448 seconds)
  done (took 39.081036317 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.854736643 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.710627741 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.206558607 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.110708914 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.854091395 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.853925658 seconds)
  done (took 31.375832482 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.875708789 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.868052955 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.860572858 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.918253814 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.001064244 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.86835966 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.861717004 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.871744959 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.910210568 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.925451821 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.884148355 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.889878522 seconds)
  done (took 24.523077655 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.857413311 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.855546413 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.854681201 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.873044623 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.872529384 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.869656467 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.868477617 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.85574024 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.873775581 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.879782503 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.868188469 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.875137547 seconds)
  done (took 44.195265576 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945780472 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.901195411 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.88179311 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.539447923 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.23756564 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065816726 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.510274215 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.186978759 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.85968906 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13087771 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.823889203 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961771799 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.114043308 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431089758 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.894585089 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.305137433 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147038606 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065699976 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879946466 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507377471 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916896934 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.12269846 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.574739411 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.911927768 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.068691319 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.992658541 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.118594361 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.857272016 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988747568 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889941632 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869887016 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859675644 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133464348 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23028509 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959088823 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869061399 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.478285487 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.572517939 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.953346413 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.503852382 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.515329821 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.97282943 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869136045 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859522496 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.793381162 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.095160684 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241456218 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.863575944 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.571216541 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.861377917 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870578687 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954123133 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.864092558 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.67601525 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809213856 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.859890837 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.857848875 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865033852 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.428166232 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.93511234 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.12210431 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.840413652 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.953147431 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.566758732 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241511615 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.006882169 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.863137089 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.864622722 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797044286 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.504505245 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90978905 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192263162 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.880081913 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.512154246 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152249292 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.889284219 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.801711435 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129877182 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.469911179 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.840817294 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090074169 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862457418 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800894482 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.810927986 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.797539112 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12244371 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896309651 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.609098106 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899236126 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.19166875 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.870996586 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880314887 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885448385 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.088036775 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.747649526 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863635912 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.578501509 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.006369464 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880633472 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.192317839 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794498502 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.864271954 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117199157 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.075333914 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.006799085 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.353782001 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011959019 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.506058 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.920986248 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.081576065 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.918118781 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.128777081 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920471728 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.936382807 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913587086 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.866226956 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158930068 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.532533339 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.004868244 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.823531144 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.989392741 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.182845926 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885997117 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945467233 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.866619433 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.862852903 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.615387919 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412552532 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.863464982 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.867416576 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.005280987 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.919113752 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.865250864 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815067754 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.49569675 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.831543527 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.875683221 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.091913623 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.514786194 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183500929 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798565167 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.194262858 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.955957015 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.084819209 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.498498407 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.924753481 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128078798 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.009008581 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.051870163 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919718043 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885010985 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965596545 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887587522 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.08443178 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.164829704 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.871065786 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.870842379 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.601733384 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.896957319 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874734185 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.871627659 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.618783914 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134182842 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.886967954 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.87146748 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.756374412 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.880379084 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931316455 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871971847 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.877875778 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.411246582 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.57859744 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.872097737 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.458596997 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088720785 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878074373 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.556735298 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976390739 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.950413831 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.132867811 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922432548 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.802407647 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.578930054 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.558565939 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868128932 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.8038798 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.867012821 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876413127 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879960759 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.066487947 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.139276112 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906800933 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.514045766 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.90524503 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878723108 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.871573569 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868007004 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.38469054 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.945478883 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.125353925 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.920175427 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011303074 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.883200976 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.802407906 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.871512504 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.875370705 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.869308563 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.870836146 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902553939 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.522096753 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244033027 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127298402 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.48099516 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881313545 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.578969255 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.922684124 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.870438204 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.59620328 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.116641055 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.904450441 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900045286 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.882216795 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.590773012 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.573048459 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.434493224 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173792144 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169087393 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299254721 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.154335056 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.901382658 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.206660563 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803630555 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.430143068 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93047517 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212169708 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814810905 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954320982 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.50219705 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201106805 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883925689 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100505739 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253394846 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.522533088 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02746439 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.082702543 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90554837 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.108949458 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837667457 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.164513957 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013557227 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.506976128 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066843479 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205038967 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.462787483 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.986497115 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.871067743 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.546486779 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954999121 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.584420159 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.045005853 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.139123576 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.792400607 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339241178 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.877028195 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.097649222 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218938252 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.104798066 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.000356837 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805721904 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.881359411 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.882991299 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.874038311 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.87507173 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.753252931 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.123577432 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884976436 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809208455 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.064007471 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161898195 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.787899586 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.877652664 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873497697 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163940035 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.487368565 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042684962 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.037293374 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.405309422 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880668712 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.80965867 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809324486 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.56802574 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.881609672 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.848688188 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077973576 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.974010193 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.787041492 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.022520017 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.961431375 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.130201932 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.888845065 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.140016015 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146433542 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.573124904 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897836248 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.974717342 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.480485839 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.97449701 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.873826459 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.109868488 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.629870911 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.100852127 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.896285611 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.830824292 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.873066567 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087623297 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.875178589 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.740702847 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096158694 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.594314285 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.878838029 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187229697 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945298485 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.688498305 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.91344757 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.967813556 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886661548 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9554659 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88713931 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.886221575 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.886287388 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921560108 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.704202489 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.989406739 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.889606605 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970558812 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.956838752 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.402746073 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.881247061 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145526779 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221667495 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.192005873 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93318302 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.874640536 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876036351 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812159538 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023960324 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.103139554 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1493179 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.006629068 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.992040974 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902928318 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.479731791 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.149588991 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122396727 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150178683 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.772677534 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.461742936 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.922892372 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.876521565 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889445666 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.089199508 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087400029 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177235815 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.023372999 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.030061636 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.243095518 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150163661 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.877984548 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879585202 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.467637277 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.89123612 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.564543137 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.917541294 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.744256056 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144429178 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888173389 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248624881 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.898971494 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.037098088 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.6529581 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.528717009 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.164529159 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.858810559 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.92836677 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147023678 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.260389953 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190475592 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944783563 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890134274 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.991915075 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027628491 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.759602489 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.878671335 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879765706 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.930068009 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.589541901 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.889394121 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151522799 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187623257 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.874825246 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.766366122 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901296157 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.890413277 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.104720664 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145274134 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.130149463 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890224769 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.888716304 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.696588169 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149068792 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935850622 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813971667 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.881631709 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976206169 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.125446328 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900924702 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.332874357 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.593072113 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152716152 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.879367432 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90160745 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.119440103 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.24969295 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197280474 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.421718692 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087374768 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.467480367 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.538785676 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185502216 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.885681037 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.11716774 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188192924 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.887275621 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.035771448 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924679078 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.145430452 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194002252 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.886844583 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.545590659 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.847721973 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.224871284 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443253338 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818560616 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879551912 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.94149432 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.880579694 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.015262001 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890598233 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.766857597 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.120946082 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.645456645 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.155415593 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.884866475 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.871027904 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.546194014 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.235562499 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919916434 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025736922 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885306263 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.557425041 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.232913112 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140253333 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.037448437 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.893025211 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.886895153 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884670196 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.870901049 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.078909029 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.079405063 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158446138 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.04815955 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.924765452 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.886369166 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.100456757 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095743071 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.718085696 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013545469 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.033085779 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928840451 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.795228407 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.387102759 seconds)
  done (took 1674.757856658 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.894076992 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.901995098 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.944897265 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.988830371 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.932244833 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.964723909 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.044985154 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.939196713 seconds)
  done (took 57.426282641 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.885193551 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.076932543 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.89204752 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.884065276 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.892626632 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.898263529 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.053457615 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.894247505 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.893313115 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.894417591 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.886083737 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.90079386 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.201599916 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.907727034 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.884447403 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.871145756 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.892026152 seconds)
  done (took 74.640247424 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.885430942 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.994478984 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.918804856 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.899782374 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.845021815 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.893309109 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.755790329 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.938013742 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.884341263 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.122770386 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.519072125 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.91139593 seconds)
  done (took 90.385971867 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.898258929 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.893348252 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.89256952 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.892777298 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.894337621 seconds)
  done (took 11.292219022 seconds)
done (took 2183.609934987 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.14243857 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.104237539 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.119478414 seconds)
  done (took 6.041395695 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.036106985 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.08110841 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.200053641 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.2074586 seconds)
  done (took 10.344086277 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.169378687 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.258544378 seconds)
  done (took 6.241728843 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.29523367 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.894778038 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.268055774 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.884431479 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.881967299 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.884188828 seconds)
  done (took 22.470697276 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.888682792 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.891964945 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.88864959 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.8915047 seconds)
  done (took 9.376020919 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.869921261 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.581666386 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.869539533 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.885825731 seconds)
  done (took 21.021764189 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.63776233 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.647702031 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.633851747 seconds)
  done (took 9.735524571 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.339827103 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.765684916 seconds)
  done (took 8.920801107 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.151018226 seconds)
  done (took 3.966916125 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.022009866 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.203596889 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.399921457 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.423726842 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.494894221 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.594375323 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.218261051 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.140967122 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.298415391 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.334812486 seconds)
  done (took 24.948438289 seconds)
done (took 138.486023457 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.275796335 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.8879745 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.10210834 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.229478814 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.119524975 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.102398074 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.301970098 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.213062785 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.738137457 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.734197975 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.227550075 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.11746917 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.036500753 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.885948961 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.036780933 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.13786882 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.114683405 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.286184836 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.962837285 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.128429515 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.305724979 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.867509418 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.068204534 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.878854854 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.117981761 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.047939336 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.444364597 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.136484896 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.121011999 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.454465633 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.047154914 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.277115154 seconds)
  done (took 171.222659514 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.66126335 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.885636786 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.886315383 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.885907459 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.25665682 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.88689424 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.886508728 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.885811026 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.149313055 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.135914159 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.891092611 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.279698427 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.898703261 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.886233973 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.892355903 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.885576265 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.2748217 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.73251511 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.901495606 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.904233086 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.908335988 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.191398987 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.906080265 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.220522388 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.281223061 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.904360741 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.887630464 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.904569555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.895925939 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.897014657 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.89936932 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.887845422 seconds)
  done (took 208.672042766 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.890881073 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.890239253 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.889399438 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.888493698 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.891673197 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.897595888 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.889150494 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.888928461 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.471844531 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.463898055 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.898644068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.896886459 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.895353748 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.888301405 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.900976192 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.89014214 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.903106749 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.900227792 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.892895279 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.895539601 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.898358182 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.675005169 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.899300527 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.669814859 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.894977911 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.895442549 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.890088998 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.898851876 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.902817624 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.905141605 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.903519755 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.891123886 seconds)
  done (took 221.184451947 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.094657269 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.897927074 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.898750621 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.854072301 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.898769279 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.898789137 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.892631866 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.095466632 seconds)
  done (took 19.379293683 seconds)
done (took 622.28835825 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.360790069 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.205963092 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.084911473 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.921852 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.152290329 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.961544043 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.918883807 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.98188234 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.6490108 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.988147339 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.557810517 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.938720571 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.651358017 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.943248514 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.043526781 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.973396413 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.479743923 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.571890325 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.100843158 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.972006454 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.097242802 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.85149927 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.994540933 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.671086971 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.66885489 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.899452284 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.102946995 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.488735143 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.92989329 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.084809104 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.697487434 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.315337191 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.929536527 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.916811746 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.972869108 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.953854402 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.268055809 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.929538108 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.048642814 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.654224987 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.96975702 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.54611809 seconds)
  done (took 104.272075545 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.890667157 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.889615527 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.887558333 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.889399086 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.890292458 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.889062055 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.888612689 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.889267728 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.889072199 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.888991726 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.888481792 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.889516539 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.888000043 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.889503798 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.889635876 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.888452301 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.888119521 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.890919069 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.888508555 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.888468511 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.890535 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.89004622 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.890867806 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.891406623 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.889814707 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.891788436 seconds)
  done (took 50.964839572 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.903643746 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.046144716 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.130248499 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.919524985 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.901434891 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.906886701 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.920875544 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.908056576 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.905379356 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.904906023 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.999040595 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.90778558 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.922436771 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.130056176 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.916725869 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.903782871 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.904336732 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.903029443 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.051543196 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.919160201 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.921650087 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.908634699 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.923402814 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.916995158 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.904721949 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.904562824 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.907771459 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.346318615 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.912342007 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.000317367 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.947084738 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.926191383 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.303497578 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.139549688 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.955465849 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.911817691 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.905321919 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.007965237 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.909285543 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.90867889 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.924496281 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.910352622 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.132748842 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.402508066 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.918171079 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.906692833 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.356650472 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.011679835 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.944530705 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.915314571 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.134424697 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.920710316 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.907135513 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.906233381 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.942437597 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.915791334 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.905392293 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.223525826 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.917008815 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.923171776 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.910078548 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.906096781 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.059751144 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.912162785 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.048392804 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.913431008 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.913422825 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.906639671 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.132171642 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.922102432 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.401585218 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.91711372 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.907471631 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.001001955 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.052672855 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.383732486 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.917424921 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.062781016 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.314969738 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.92927257 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.914180804 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.339975618 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.933681852 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.913249949 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.908569744 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.907640351 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.908795719 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.952267971 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.923496656 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.344038756 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.408690395 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.235733601 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.931878036 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.923992273 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.907723627 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.229636001 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.914471853 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.908166463 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.126426836 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.418909808 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.918326387 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.915122218 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.389550846 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.920055715 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.926893887 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.915552972 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.135893692 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.921413546 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.951262104 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.907413046 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.915046471 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.909141918 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.926861004 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.915348489 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.910778096 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.38270965 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.019504109 seconds)
  done (took 235.962051625 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.90411579 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.900458623 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.90371688 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.901096052 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.903467054 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.907958463 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.903122603 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.901634933 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.910940264 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.902355193 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.90183981 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.901405712 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.903767881 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.9007207 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.379858282 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.911354181 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.51796105 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.905815792 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.902968179 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.901346347 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.581305822 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.908064944 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.904081445 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.911219338 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.907608643 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.907176722 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.908361758 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.942863841 seconds)
  done (took 168.971830346 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.912007663 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.091918582 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.92859503 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.947137324 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.916933701 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.909546192 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.933798472 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.928016373 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.916708686 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.908872514 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.909656451 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.972566402 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.921492646 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.050226339 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.942450146 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.940013253 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.014944371 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.917357157 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.908714783 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.909570432 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.938487928 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.905375582 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.972349161 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.039864563 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.928385465 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.029075559 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.913830724 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.913975208 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.912396606 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.030789551 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.925294117 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.972718755 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.937787887 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.929423231 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.036002878 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.027474856 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.018531419 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.940781884 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.912515684 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.910470763 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.910930733 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.899100158 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.030204021 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.928838888 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.913678162 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.022884646 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.928915094 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.915853822 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.922647956 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.91225125 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.926949847 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.931269695 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.981264445 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.043782151 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.945225604 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.936936394 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.938554802 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.190195373 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.923445258 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.013937 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.906638613 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.031930686 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.931011542 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.901471003 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.912959638 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.918276722 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.942091942 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.942253775 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.016593342 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.919732192 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.014103643 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.947126553 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.917916961 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.912599137 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.917686845 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.03154702 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.03078758 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.947782275 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.947619126 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.942484699 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.907035194 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.914129215 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.903786508 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.931935283 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.914500288 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.032297184 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.032093795 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.921031425 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.916160649 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.916148649 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.918619478 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.940353369 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.039241053 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.946319076 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.00909097 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.982726658 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.986485807 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.925123749 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.928852555 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.920759197 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.97801415 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.927654278 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.926755405 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.239443724 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.986952606 seconds)
  done (took 207.210526846 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.395846802 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.970419933 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.972021469 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.188226187 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.329930806 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.786411631 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.95924852 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.964311856 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.989241166 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.146362146 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.022496586 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.97574776 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.94922073 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.93795298 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.963476353 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.982971939 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.967043492 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.254941928 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.082439282 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.081265195 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.943712591 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.264604 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.2841762 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.341046399 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.995917376 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.27763715 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.643633057 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.205392787 seconds)
  done (took 62.725158814 seconds)
done (took 831.929394611 seconds)
SAVING RESULT...
DONE!
