cset: moving following pidspec: 27055
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.346943349 seconds)
loading group "string"... done (took 0.570290565 seconds)
loading group "linalg"... done (took 7.633365949 seconds)
loading group "parallel"... done (took 0.160933802 seconds)
loading group "find"... done (took 1.136301738 seconds)
loading group "tuple"... done (took 1.866184705 seconds)
loading group "dates"... done (took 1.237429157 seconds)
loading group "micro"... done (took 0.234397757 seconds)
loading group "io"... done (took 0.905051227 seconds)
loading group "scalar"... done (took 38.200858607 seconds)
loading group "sparse"... done (took 12.040902309 seconds)
loading group "broadcast"... done (took 0.975488573 seconds)
loading group "union"... done (took 13.231280332 seconds)
loading group "simd"... done (took 4.761843673 seconds)
loading group "random"... done (took 9.401580057 seconds)
loading group "problem"... done (took 1.854903616 seconds)
loading group "array"... done (took 22.0296526 seconds)
loading group "misc"... done (took 1.913445578 seconds)
loading group "sort"... done (took 3.513510363 seconds)
loading group "collection"... done (took 18.679670258 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.561762702 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.1343464 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.139644778 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.126858433 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153408248 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.124282631 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131376048 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09087607 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.911089472 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.158351628 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118562865 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415776038 seconds)
done (took 5.556239295 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.179646183 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090735825 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088656491 seconds)
  done (took 1.331486032 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.070915426 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13443488 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.073364685 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073231678 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073336369 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.072913368 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072556894 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072653467 seconds)
  done (took 1.726309689 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.080677511 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.075488255 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071624213 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073694174 seconds)
  done (took 1.455536128 seconds)
done (took 5.927319094 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.784707325 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.213210157 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192182115 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.398842461 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137595959 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.180889213 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.644141763 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.316316621 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192932599 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080354882 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112593938 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.34894941 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125941159 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649148142 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08303445 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09859026 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.146434658 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.424189696 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072756242 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087757553 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094718069 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133918978 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093215709 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081791812 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.156799387 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073066571 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.139725523 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086250752 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074269313 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.221645677 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177938706 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662771167 seconds)
  done (took 10.470754728 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10940477 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102986846 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074569809 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130172693 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103279522 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074991899 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08063965 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.072939887 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094807181 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133735734 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09651996 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111077226 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071214384 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074637596 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088527358 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214445995 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088319427 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.089681976 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.077380797 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084842991 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113045978 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083426673 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085225071 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084971912 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.134117501 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185529857 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103431108 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103129418 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071688152 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086365336 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119956179 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132347047 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071541807 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070747202 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.130464707 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.10279933 seconds)
  done (took 4.844062188 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.983299088 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150512058 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095741869 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141338795 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.072601317 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113386695 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.071955548 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085295717 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.21091545 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.457679279 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.590731373 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.139282185 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117896572 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111369709 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075674112 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076374153 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074813049 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.500312882 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107549151 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114377171 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087529009 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077584414 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07722565 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.072550289 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075173936 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.071671334 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07556306 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.121051435 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081731207 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.308889767 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126347022 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075823063 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.947190559 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.171559244 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071592773 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.243057465 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.176911005 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098951868 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148059288 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076262756 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072768418 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167384132 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072432506 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076930218 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073889601 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089554208 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108578236 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124250334 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.073894589 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072035834 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172063022 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070489136 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084676094 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.180460956 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.160454297 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07163624 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292609728 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095366542 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076151069 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.071274727 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07096639 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.154721225 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.12919341 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.075470499 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.071838972 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07378548 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073975851 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073828426 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.379306047 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071782469 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.191297284 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076710668 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.088257085 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077401881 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074949642 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078618728 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078137272 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094081298 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096286939 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071821943 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078545341 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.071896119 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07164645 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.072125341 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.070036562 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088145708 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.480426286 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074919059 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075331382 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.072788012 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098506843 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103044179 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.075187305 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07349009 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106752598 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074021645 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.071556373 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072373936 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087829193 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075838499 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.118277028 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.072764756 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.108984891 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104303506 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.0770611 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106642913 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.087210061 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078325744 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.425124483 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07295413 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075061547 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.072722371 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.074900384 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.073684481 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.085761208 seconds)
  done (took 22.744255644 seconds)
done (took 40.194679459 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.250721506 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076522082 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077005737 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077466415 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077470798 seconds)
  done (took 1.796743199 seconds)
done (took 3.025770316 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127643305 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105410104 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071716161 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103721431 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072038989 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110375456 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106986663 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084455975 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106608529 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072241491 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103936662 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072201437 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071507031 seconds)
  done (took 2.444998478 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091481209 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091539044 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078157831 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090311403 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071099955 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089572012 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089304526 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096752801 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091571036 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079980727 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07146987 seconds)
  done (took 2.160365744 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090924188 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091685734 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078240869 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089024068 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071395527 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08934438 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089334314 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09298391 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089188685 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081463886 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070883882 seconds)
  done (took 2.150714968 seconds)
done (took 7.969171114 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082893532 seconds)
  done (took 1.285863878 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.541124515 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.726310766 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086377322 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11160006 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.196864518 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117451655 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.249506457 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.09135828 seconds)
  done (took 8.487279213 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097799333 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088352351 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07932357 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077032638 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076289554 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076701274 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075991668 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078655475 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079752121 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077068554 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079160608 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076010326 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078714316 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078340079 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075709982 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079096344 seconds)
  done (took 2.557914066 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099040495 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097937821 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.080435904 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.082720223 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.079787025 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079087938 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.080895349 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078735454 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.0759008 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.078556362 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.080320715 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078205103 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076267976 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069022256 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078558586 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080928188 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075757086 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.079170696 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.080243276 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080130864 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.081449899 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.070132657 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.078407372 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.081188534 seconds)
  done (took 3.228325686 seconds)
done (took 16.772917371 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114106869 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075057047 seconds)
  done (took 1.398118465 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.086806686 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086717087 seconds)
  done (took 1.397175411 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.088063788 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.072785965 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094219813 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.083368447 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.072273488 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.071990865 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.09155419 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.072520263 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.072382705 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.072640661 seconds)
  done (took 2.013956825 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.075333692 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082046291 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.075613453 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.086129652 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.079406543 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.070452126 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078306731 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.074081587 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082983221 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06909366 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07703781 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.089553119 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.077616033 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091305573 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.077827555 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.074824828 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.076421476 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.07362184 seconds)
  done (took 2.636502912 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.072614076 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.072818949 seconds)
  done (took 1.376153432 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07297449 seconds)
    (2/7) benchmarking "second"...
    done (took 0.069569456 seconds)
    (3/7) benchmarking "month"...
    done (took 0.072623166 seconds)
    (4/7) benchmarking "year"...
    done (took 0.072242007 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06942348 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.068985931 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.069785873 seconds)
  done (took 1.720173897 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.39990977 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.124266833 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.31223142 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.078738085 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08863274 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260874581 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.07205727 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076507031 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076542757 seconds)
  done (took 2.752193231 seconds)
done (took 14.522338765 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08863383 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.094363602 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.102462674 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.38673397 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097418044 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.07253386 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.119091374 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184922 seconds)
done (took 2.384526343 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217749734 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.669350622 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.406199224 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207859747 seconds)
  done (took 2.510462072 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.349242991 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092797128 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065861253 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073211923 seconds)
  done (took 1.815548986 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075342151 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075884345 seconds)
  done (took 1.382895905 seconds)
done (took 7.165269587 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075047487 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.189590279 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.070386827 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.072388573 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.092715366 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.071450009 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071078803 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073621708 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073633915 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073119099 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.070883358 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.073373906 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.073173408 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073125459 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071003335 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070824915 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072751837 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.070613259 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07072172 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070702714 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073313109 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.070850414 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071028458 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.07100326 seconds)
  done (took 3.125266315 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.09053925 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.072338738 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076688672 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.077194514 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07463732 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07676946 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07491608 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070960568 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075249288 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073007764 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072901946 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072960638 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073185862 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073401105 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073025908 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073098142 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075025348 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0713044 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073412389 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073419833 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075117276 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071542681 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073246957 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075217062 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073736749 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073595264 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073565565 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071600634 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075426646 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073263714 seconds)
  done (took 3.472589694 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.077178912 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.069561025 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.070383942 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.077869228 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06997114 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.07065151 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.069277762 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.070844491 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.070985245 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.069885031 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.071416665 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.070011397 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.069630883 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.070789807 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.070430514 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074398583 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.086432981 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06961087 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.069421325 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.069635147 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074181594 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.073187351 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.069779804 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.069507834 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.07051697 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.069153217 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06897828 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.069652011 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.070491489 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.069219766 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072927434 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072745837 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068153091 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07647949 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072633952 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068088314 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.073224706 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.068329578 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068826162 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067869841 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.068394661 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06832538 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06863146 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076104646 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068836584 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069291225 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068578207 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069550505 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068760983 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070419819 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067916907 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068090053 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070274067 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069234677 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072976364 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.068005362 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068904973 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067998982 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068919444 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068276434 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.068296402 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.069200705 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.072743702 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.069661492 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.086785471 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.077552891 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068420076 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069703504 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068790814 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.07305571 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.071651262 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.084572252 seconds)
  done (took 6.368197419 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094657463 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094400526 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072635252 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071420807 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067190344 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068795771 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074223236 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0686847 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071032293 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087885472 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068992698 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071138656 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071337038 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073939146 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070643405 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071155212 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077965286 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067165816 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068823358 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072835618 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068848319 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074250472 seconds)
  done (took 2.888669063 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155720008 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076581539 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112999374 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081408602 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077212537 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081552637 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07703047 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077213744 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075420854 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072712447 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072561383 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074872664 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074814944 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072483948 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072808322 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074418688 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076928735 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075122424 seconds)
  done (took 2.734613447 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.084726946 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.073430187 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.094971006 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072608864 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.072054477 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073785328 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0750777 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078499253 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073446638 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071657909 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078519463 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073159731 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073595015 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071623524 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07355875 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071742588 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.075296939 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073558305 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080684898 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077518924 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077440435 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080631383 seconds)
  done (took 2.931912925 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087002882 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07449609 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08823606 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.074707209 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06786664 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.070952116 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077244225 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.073050428 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.076783666 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.074531057 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073113717 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070400597 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.075091897 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072908383 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075250551 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073005569 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074545556 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072946479 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075056915 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067806277 seconds)
  done (took 2.751424625 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091439194 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073381288 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074040525 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080467159 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074657962 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073773625 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080305959 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073546562 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072028975 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092452161 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072679015 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072515684 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078733821 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078537972 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071775301 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07864511 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078369594 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078301645 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072662731 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072632031 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092954405 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074256642 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080641631 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074445424 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074025019 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074461631 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074597129 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078438826 seconds)
  done (took 3.422471523 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075146573 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073391482 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.070458617 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.070662133 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.070754673 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.070605917 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07088958 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071050319 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073459144 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071237063 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.073803964 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.073539428 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073198978 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.073102376 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073134632 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073343323 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07334488 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.071264439 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071169169 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071017572 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.073386665 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073139669 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073383763 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071072444 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070706576 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.073447478 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071348824 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071341069 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072793857 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071108785 seconds)
  done (took 3.428922405 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082021053 seconds)
    (2/2) benchmarking "in"...
    done (took 0.079422559 seconds)
  done (took 1.425229266 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.069854684 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087455171 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.069989701 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079324963 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076686789 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073684222 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080399358 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07592504 seconds)
  done (took 1.868698855 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08928062 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.082000237 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.072882192 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082538132 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.08160187 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089455656 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130424388 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.072273372 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078026731 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.070222609 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084142377 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070552326 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078459682 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072202501 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077239506 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079207905 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068569616 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075530836 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072367186 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068883542 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071748447 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080143616 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075051054 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066767843 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.073005244 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094450283 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082401849 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070403395 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075344974 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079406723 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077851374 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.066727359 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.072901719 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.072437756 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.070569714 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.081895079 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087953853 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076932911 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.083091181 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073460238 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080962348 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.067878873 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.077884708 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.080708128 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084744554 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.072972826 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.072645287 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06777712 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.071577043 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.076312522 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.067910626 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073650212 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.067573527 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080698442 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.077578133 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084136239 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.071993606 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075303252 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.076661366 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.076311766 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.080414435 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.075994817 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077654347 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.07237832 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084789897 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.078864633 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081300661 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.068268963 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.067247012 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.070681121 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083163885 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097599455 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.079259142 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.072907199 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072974931 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.070733565 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076935013 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073344652 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078824997 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.080469925 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.0728259 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077571439 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081681794 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074180325 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.076392134 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.079484587 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.071222392 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07545319 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.072270113 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089546953 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.075071976 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.071615042 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.072141864 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.084629777 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.078356014 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.072166608 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.072268374 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081272376 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.066935597 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.072804765 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073341679 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074479907 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.083014096 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076567683 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074426307 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.080260043 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.079093087 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074534148 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075775193 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.069551049 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.200224777 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.07431767 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.082615655 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.068255515 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07738902 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.075496128 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.073137815 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.082016759 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.070887508 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.072481283 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082490991 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.079555325 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070917476 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.070506861 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.076714454 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.072834054 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075051494 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.082200412 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.071423139 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.068166626 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.067647995 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.077236305 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.073312808 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07813653 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076082323 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076946788 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.067448524 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.07065289 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.076462274 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.082496979 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.073808507 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.074557445 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07982896 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.075531049 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.071716916 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.080460768 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07613437 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.072731675 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.078552461 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.074140193 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066420925 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072520502 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.074635233 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069607979 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075690833 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073094371 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.075808234 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.072665208 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071191482 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.079159125 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073155052 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.073196431 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074384692 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.071675427 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084287849 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075886581 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.0683977 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.070308562 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.080296208 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.07200762 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.072487711 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.073586953 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.076137741 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.072945916 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.070988676 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072319343 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.075827703 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081095622 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.075282886 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073468642 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.078805066 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086425715 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072325099 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076262649 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.072212677 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073243649 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.072833101 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.082965944 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.079690569 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076848781 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076505856 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.069767329 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078266988 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079947834 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.071218405 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.069090497 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.071757662 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074453416 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077816278 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074355716 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071836501 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069389375 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073289548 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073316262 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.075953726 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.07209617 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.073520191 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.078663959 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.071579515 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077939148 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072374349 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.082461201 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075681825 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.066194967 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072630985 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068856008 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07820738 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.066426591 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.070124104 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.071350548 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.071078488 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069934978 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.075373868 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.067016382 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.210918736 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083059116 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.075765437 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.074411751 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.072948833 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082037134 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.076154636 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077945776 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.078244679 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.079973663 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085574707 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.072994227 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.077912552 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.087031285 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.072241495 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.067151154 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079077168 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.071718036 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.071653691 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.071967244 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.071017622 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077135289 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079846739 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.080537082 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.067193114 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.076435972 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.071440172 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.073108157 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.067951208 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.078393705 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.076842073 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.074480636 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080100871 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071828323 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.072170741 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077153769 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.07046222 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071233045 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072753309 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075358292 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.0714371 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073500082 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.072458746 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.076123101 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.072640305 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.070425925 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.075394739 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.072197225 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.074006509 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078508066 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.07257666 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074256745 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.076039411 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.073238804 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07516608 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.074282709 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.073543465 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076941598 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074751241 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.074404851 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.076115049 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.068292127 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081702161 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.072537049 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081459603 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.074539813 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.069954428 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.078110419 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07654192 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.077575738 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.073043251 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.0741826 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07470483 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.071090264 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.076022589 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080527913 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070546989 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082262211 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078547533 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072906253 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.075028395 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072527845 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073488202 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071528396 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.073479064 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071230471 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072828696 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070673811 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076323084 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074619359 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072646776 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074043019 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071630774 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072837281 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071901598 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.066588483 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.071620197 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.07183125 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070864 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082014142 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.073160121 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.073676757 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.071532398 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071442639 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.070393061 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067790831 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076874346 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077311152 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070967082 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077834368 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.07133948 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07326867 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081614481 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.065558088 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.069200723 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068463281 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.07048624 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078887484 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070669379 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080639256 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072219467 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072562142 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.070140749 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.072535059 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.071148084 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06742669 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069971898 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077380522 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.072145477 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071407835 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.072343864 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.075393131 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072345353 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081314882 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.071471766 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07432829 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071836261 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.069406775 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.072068894 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.072350703 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.075397365 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071689197 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.070348113 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.069863717 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.071280802 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.07354642 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.074159105 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.07115618 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.074453875 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079505873 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071272994 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.075611859 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074223578 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066849279 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07549002 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.071414724 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.071004434 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.071989865 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07646113 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078371227 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07150489 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079735161 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069315984 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072257975 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069676195 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067667869 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069166457 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068468294 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068305814 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069324976 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068689396 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076756758 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067077372 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071981519 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069992512 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070470933 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074630233 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068945769 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071811843 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072579793 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070998684 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071425647 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077491907 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070524308 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07327914 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068409496 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071022063 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075380087 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06916356 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07577888 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069969505 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06891498 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070642276 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068204159 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067644045 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067568662 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067588568 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074270382 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068127913 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069273001 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068450213 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066618417 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069996485 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069933001 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076743839 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071530942 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072624302 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063847102 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065667655 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068702637 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067484694 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071179789 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071371164 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074606337 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071415098 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069840223 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067054783 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077890289 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074066791 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072094201 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067636468 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072992134 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067987464 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071586383 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070460209 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070016238 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068610904 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072774003 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071021798 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069097435 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074970298 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072633158 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.310184512 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.075792216 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.075530939 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.075472438 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.069038816 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.074369241 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.078001428 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079955895 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.077375923 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074621279 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085261829 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.073468402 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.075750595 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075688519 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073566648 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.079214587 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06909641 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.076131256 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073633345 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073247239 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.068471316 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.073841659 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.072019347 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07669741 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.07341007 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.068146799 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084859346 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.083191502 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.076631626 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07165561 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073041909 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.069612926 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.070240743 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.075913317 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075165861 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.078119648 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.08574403 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.074758779 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.074703802 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.069817974 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07413494 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078491018 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.078797579 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.072418681 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.069638538 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.075316141 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077849184 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079753851 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070764187 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.071628968 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076134111 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07492108 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069940275 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073812963 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068717035 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075968534 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083970813 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.0717452 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073552342 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.079771019 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08116935 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.072724376 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.068099991 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073488247 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.077825782 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.07577177 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.074122422 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.074657342 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089637876 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077895054 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.074134691 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.072453244 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.077187031 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.076960344 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.083314988 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074192352 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.073437061 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.078826497 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075371719 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078153011 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076252127 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079048613 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.075441937 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.075188725 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070694692 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07340027 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06936415 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071810783 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.07195682 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071111202 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075389295 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077258974 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.071613449 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082600153 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.081115054 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073763945 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.068961879 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.071775121 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.0732602 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.068737037 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.074125012 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.071671658 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.071611784 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.071861586 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.072501774 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.074757961 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078572287 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.074798794 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.072571628 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.072303129 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.067511102 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07677656 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07615781 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074460922 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.070298037 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.072546846 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.212532075 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.078988057 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075514117 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.072147397 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.075722485 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.076453566 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075395142 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06858905 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.081208027 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072060798 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.075728312 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.073286058 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073062658 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.074161945 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078097281 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076891495 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.074286105 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.076523754 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078015799 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.075185511 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.070383843 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.070768313 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.079707777 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.071051542 seconds)
  done (took 46.275895141 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108449185 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070706413 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069249125 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06868368 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079443107 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069989111 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069576402 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070338802 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070136718 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072205526 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069036765 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069144329 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076615891 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084604437 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079093248 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073734415 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068842755 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069752722 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068912134 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07026378 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076949267 seconds)
  done (took 2.928821675 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.080158031 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.084999244 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081617342 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089065555 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078042965 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076864885 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081893648 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07694929 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085294215 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079683358 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085024005 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076682069 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.079820321 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.0801846 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079800646 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07668807 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085047469 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078201372 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.077053519 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082125613 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07688348 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081826697 seconds)
  done (took 3.127894869 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.074658439 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.073043633 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.075342546 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.068096566 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.072394799 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.068153564 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.074755513 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.070507714 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.076136278 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072773515 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081916116 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.07318093 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.075469608 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068233865 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.074973697 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.070804237 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.114854453 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.075491364 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.072619272 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.073462266 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068462399 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.075403245 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.068800832 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.069141991 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.073142461 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.075575284 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.073374267 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.070931201 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.072671509 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.073271615 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.072801597 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.070712042 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07511812 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.074354863 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.073401209 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.073181644 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072145026 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.076045116 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.068721465 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.071160404 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.075727009 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.069304925 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.072761873 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07521599 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.071039273 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.070317774 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.076127345 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.073152793 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068226153 seconds)
  done (took 4.959953758 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084158085 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11521851 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.074482947 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09521503 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.086484267 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.079027349 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.077604484 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095745137 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.070183729 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.071155564 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087849494 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.085436307 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072227139 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.076787517 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.079504894 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072251977 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.073137766 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071352342 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.075737292 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071876299 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07553221 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.079413583 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08604779 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.084510266 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076000429 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.07145498 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071885958 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.076229925 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.083072243 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07463275 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.076230944 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077513322 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.086798927 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.077691908 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071991322 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.07445424 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.087313939 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.07260777 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.074806346 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.070867152 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.073291712 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074204736 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077296013 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085711117 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071258934 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074915109 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070544114 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067966616 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083773534 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.075301863 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079188392 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.085766455 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076306022 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.073044077 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076652046 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.086880399 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.072231899 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.070991486 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.074656296 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081022371 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068558405 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074167589 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082729425 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.072105765 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.077041473 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082368173 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075086183 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073879401 seconds)
  done (took 6.777310552 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082631705 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101221979 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086530632 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086836759 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080139341 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080741733 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080204285 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079935675 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080600795 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084964821 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081278705 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121005737 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084955579 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082797045 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080244514 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080842106 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.08115505 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080354244 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080460875 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080269749 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.080548074 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086641596 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080508463 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086934136 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083515193 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07618789 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080093793 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08023654 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086632282 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080609641 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083234734 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.080393749 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080437032 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086643267 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083324767 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079788819 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070042275 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080283585 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080479675 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082338487 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078529676 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089050859 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082392382 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.076376561 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080582251 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080466771 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087297391 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085665356 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085471194 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087308874 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.083643502 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08895134 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081577281 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080840377 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086943341 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089454469 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087023132 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087290437 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081077348 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.087257275 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087103349 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.090478376 seconds)
  done (took 6.569323062 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089105332 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080312317 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.090214348 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06903389 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073777372 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.080225783 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072186348 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.070197253 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079698741 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.079980591 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082293922 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079833397 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082105035 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08259846 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079738704 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082139549 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079285277 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079588482 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080975487 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079429104 seconds)
  done (took 2.975561363 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.083153907 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091067413 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.074885755 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079020954 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.076060568 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078805708 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.096207871 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076931141 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074473965 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076739511 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082315739 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082273968 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07424633 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078977106 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082278961 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07809251 seconds)
  done (took 2.654117976 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08982424 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.078113341 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084504076 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.072530783 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.07463093 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.068933774 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.072041239 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.067855987 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.069071708 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085624838 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.07214038 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.084169315 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.072508764 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.071128309 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.069369575 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.078229643 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.069225531 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.070143145 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.072374886 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08367165 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077259766 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.071000223 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.076893793 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.072627835 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075775951 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.076800721 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069973924 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.072771302 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.070038474 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.073142427 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.076341722 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076895136 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06980109 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.071243551 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.072356407 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.069942414 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072320977 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.072622961 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.078026955 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.071908997 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.07032836 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075105619 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.072463964 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071742942 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067339747 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071301282 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06883872 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075536111 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070296075 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.075808616 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.072696548 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.075165391 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.072205582 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077383897 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073699433 seconds)
  done (took 5.44980195 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088687276 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076797277 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06848804 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07074694 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077291812 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074516996 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076584303 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074344817 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075101097 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071213652 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074991794 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076089953 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075325645 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076961314 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075116966 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07636457 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068019034 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07417624 seconds)
  done (took 2.74749707 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079985093 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073116698 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.080952729 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07350505 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.073374389 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075185162 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06856573 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.071295095 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071369265 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073641177 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073912098 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.076016247 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071608578 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07594065 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074081959 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072573209 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.074578725 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070049181 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072000909 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067037294 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074129678 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069419336 seconds)
  done (took 3.00201865 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.101589591 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.088011171 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143234792 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084380124 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.092211796 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.077399369 seconds)
  done (took 1.976057648 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099997442 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105679633 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071197705 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073987811 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079972905 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074794252 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075159257 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075352232 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082284324 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080028719 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075348145 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08513685 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083584318 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08330841 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080330105 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080274516 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075119563 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075472981 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071852684 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087235171 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075395917 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082447729 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075906392 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075215435 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075426426 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082238923 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082489202 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080430095 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075119867 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08217699 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08042631 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075284448 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082581648 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08009658 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074676745 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082958143 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07520751 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086981006 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080046283 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081759528 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074752396 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080716649 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082374338 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079035605 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083300685 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075594966 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078942745 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075643928 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07558454 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090495597 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082101686 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081909297 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080235864 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0823638 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082063916 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088634783 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080229014 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081755806 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080701915 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080371309 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081690964 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080356432 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081656263 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080455559 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080207587 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081928759 seconds)
  done (took 6.696573451 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112625788 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074557113 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077938078 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081372203 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081829136 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075267758 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075418353 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075514088 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075692716 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072181029 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112729344 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07551923 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082076884 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081777181 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075645099 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075337834 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075580041 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082038108 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072472214 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088652557 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075421382 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081389524 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081537998 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08151195 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079915683 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080284934 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075540307 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075953406 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075104784 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075072287 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080279882 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075884411 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081404043 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073311618 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082690088 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075379734 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076400183 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079494674 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074963107 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080151835 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081448162 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087342245 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075463553 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075065013 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080560528 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075695822 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075165332 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072257187 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075205583 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074016579 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082637819 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082598693 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082533083 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083871893 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077722483 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077706733 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077383141 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077812055 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077666511 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081490784 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081829766 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075314879 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088259771 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075126626 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07541129 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081387064 seconds)
  done (took 6.650010133 seconds)
done (took 138.441794021 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.20229818 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17603837 seconds)
  done (took 1.757502184 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076403501 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104286772 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083403014 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135815065 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.073060453 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105517293 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104282791 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082763314 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071768949 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.072103664 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073676753 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076444519 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139220343 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072078506 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071679937 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074306163 seconds)
  done (took 2.815332741 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106749948 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.167494206 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109300336 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.073205266 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105518921 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079356919 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072640309 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.085193275 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078559401 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073909693 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078474962 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075311431 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070884151 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075153982 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075891988 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077345566 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071052988 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077409465 seconds)
  done (took 2.957967752 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104892077 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097428557 seconds)
  done (took 1.608877244 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.170390628 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.14130314 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209647929 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34172335 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.15781411 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148258891 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.148525666 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.147121244 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120776615 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141316888 seconds)
  done (took 3.126800242 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.108264428 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.157258623 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280435361 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123582196 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.079609349 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097330988 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12516098 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084158714 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084706748 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083898805 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083543575 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080581175 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104089277 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078044166 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.08034351 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080540277 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107493878 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.079658409 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.080496798 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.081992597 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108778363 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.074472191 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.080918495 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.081176594 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.082305205 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084172874 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073786169 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.07397712 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.082839215 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.082685959 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083988816 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097380629 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084140612 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110102354 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.078841266 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109655891 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.082510045 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07830802 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080577045 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077879145 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082396277 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082074139 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078813382 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081005567 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071639445 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081195361 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072453556 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071430286 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082625544 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072197897 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082279214 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080888896 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105975166 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072647536 seconds)
  done (took 6.338010901 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.115912253 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.11050318 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075952789 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115882041 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109045446 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074767012 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10966074 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103092766 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.112035659 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075837272 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073597905 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075382257 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083860312 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085630168 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120381612 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111586912 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077386153 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074856946 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112971279 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112565398 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074153349 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106142301 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101537528 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11109594 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072817994 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075200742 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073622812 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074989337 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080122489 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082026944 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073984799 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083416129 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087219336 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080984846 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072536217 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073756923 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073563933 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082401145 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082945977 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083365149 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080657877 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073161687 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073399956 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074739576 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076511358 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073501175 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081914287 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.085534703 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08395762 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076195158 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076084649 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074094489 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076690547 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08550047 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083393219 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.086697325 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083740556 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073841527 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074741305 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077960977 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084128528 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083100937 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082780929 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074513523 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082868948 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076422363 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084655582 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086418636 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07379933 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074498799 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073722426 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073549326 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074360824 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080819135 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.08110731 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075061371 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073410119 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073903587 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082973292 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081356609 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073660649 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080530635 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072782426 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073405983 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075174591 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07520408 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080722692 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082715682 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.075370583 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074431244 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073283772 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07298709 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.072545248 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079557769 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081703086 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081883721 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080974025 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074576111 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081389235 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080806877 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.208376809 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.085010868 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.074852521 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075522582 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075247377 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082242825 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.083875925 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085811119 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076401443 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07638825 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.083800196 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086379459 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.0766709 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.083602783 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086270591 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.084808858 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07579157 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085142604 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07433123 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08301759 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073775789 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082998153 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073512624 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08188705 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074007847 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072951639 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073830339 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081468969 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074842466 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073595812 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074944085 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073451828 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081442523 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084926504 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074615416 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080726628 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080753697 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074601909 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080988567 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073406477 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082799345 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073734215 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074570224 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072826977 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084617347 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074073781 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073110802 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073776942 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083234909 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07365615 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083314214 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080936728 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072953153 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084562394 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083235639 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080477484 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083919051 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074886084 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073611535 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073737147 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073420305 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080506144 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.0820377 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07509875 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073475967 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080465011 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082758212 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.073536136 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.083406905 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082885931 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081592302 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.074014407 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073915165 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083705947 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083855799 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081926006 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.08115332 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081370341 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07418836 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080861045 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081418377 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073513343 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086659189 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074135812 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085755649 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082279819 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080217894 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081809468 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.083236642 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.0827649 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083747688 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.085708098 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073091134 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073530052 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081425371 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073711771 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073458642 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080618035 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.075146624 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074504181 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08479921 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073192165 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2192355 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.076128902 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082538664 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073971242 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075161736 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087542038 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073957836 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075012665 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081564863 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076054401 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081424301 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083483725 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.0811211 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073543852 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074580769 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082288499 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081892008 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073519002 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073377303 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074825049 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080907876 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.083490585 seconds)
  done (took 19.737162532 seconds)
done (took 39.756343766 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.204316432 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152762057 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.167396593 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.121067884 seconds)
  done (took 2.131147945 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118199188 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105850648 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096824035 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.072763096 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102637078 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.072554695 seconds)
  done (took 2.006667053 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.286467569 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19742991 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177471124 seconds)
  done (took 2.092798666 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206698448 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.192263353 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.43560234 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.266222909 seconds)
  done (took 2.633139504 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145303924 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093015334 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.074470937 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.090954256 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133519555 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162082209 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.103734955 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.128530067 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.085342138 seconds)
  done (took 2.49809026 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151830606 seconds)
done (took 12.948402961 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.102165927 seconds)
    (2/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.232636653 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.131762461 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.115300473 seconds)
    (5/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.240260852 seconds)
    (6/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.080024954 seconds)
    (7/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.084048057 seconds)
    (8/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.078761194 seconds)
    (9/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.087353289 seconds)
    (10/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.087885247 seconds)
    (11/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075796268 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.175039034 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.103258221 seconds)
    (14/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.085137606 seconds)
    (15/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.131962892 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.084432354 seconds)
    (17/309) benchmarking ("sort", BigInt, false)...
    done (took 0.208322613 seconds)
    (18/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.193090445 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.081611528 seconds)
    (20/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.205296677 seconds)
    (21/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.312566259 seconds)
    (22/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.075027992 seconds)
    (23/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.131003227 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.198214579 seconds)
    (25/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.080786554 seconds)
    (26/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.189877387 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.21552038 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.08096967 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.22934798 seconds)
    (30/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074013156 seconds)
    (31/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.18052008 seconds)
    (32/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.242767257 seconds)
    (33/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.197281111 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.187789035 seconds)
    (35/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.190073669 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.080800372 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.108740684 seconds)
    (38/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.08240579 seconds)
    (39/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082252856 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.094988567 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.071749919 seconds)
    (42/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.080675021 seconds)
    (43/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.206370615 seconds)
    (44/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.067583057 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093173678 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078497248 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.232588378 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.0721347 seconds)
    (49/309) benchmarking ("sort", Float32, false)...
    done (took 0.140951296 seconds)
    (50/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.059659521 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.098725511 seconds)
    (52/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.197452376 seconds)
    (53/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.159253441 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 0.150480125 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.130454984 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.210599618 seconds)
    (57/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.159559632 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.073898571 seconds)
    (59/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.192460935 seconds)
    (60/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.057568943 seconds)
    (61/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.079444062 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.09233293 seconds)
    (63/309) benchmarking ("sort", Int64, false)...
    done (took 0.072632133 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.078168383 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.080002065 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071115313 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091159231 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079994826 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.080533608 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090839135 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131491812 seconds)
    (72/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.070485843 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.058127427 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06867761 seconds)
    (75/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.11862137 seconds)
    (76/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.181934319 seconds)
    (77/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.079621123 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091241353 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.056898756 seconds)
    (80/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.058618789 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080470022 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.077409429 seconds)
    (83/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.222879818 seconds)
    (84/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.198341546 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.096936745 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.101125488 seconds)
    (87/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.160104091 seconds)
    (88/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.085132674 seconds)
    (89/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.193676702 seconds)
    (90/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.106648842 seconds)
    (91/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.12171452 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.078483682 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.106415633 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.074517137 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.117066828 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081386969 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138258685 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.071339922 seconds)
    (99/309) benchmarking ("sort", Int8, false)...
    done (took 0.150695751 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.15131295 seconds)
    (101/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.122821183 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.072897825 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.096701636 seconds)
    (104/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.11816408 seconds)
    (105/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.061040169 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.1982451 seconds)
    (107/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.060965243 seconds)
    (108/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.089235527 seconds)
    (109/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.08299195 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093777687 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077353267 seconds)
    (112/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.070179758 seconds)
    (113/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.160409105 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.195882029 seconds)
    (115/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.079188036 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157644623 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.07205187 seconds)
    (118/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071356891 seconds)
    (119/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076358528 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096409797 seconds)
    (121/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.077860166 seconds)
    (122/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083991176 seconds)
    (123/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071844361 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100095538 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078662258 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.071219211 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.079453935 seconds)
    (128/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.058575927 seconds)
    (129/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078566576 seconds)
    (130/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08534258 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152649502 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096392764 seconds)
    (133/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084415182 seconds)
    (134/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.057586908 seconds)
    (135/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.059432112 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.080215359 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.078183832 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.071138023 seconds)
    (139/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.21917046 seconds)
    (140/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082414165 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071057359 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077652542 seconds)
    (143/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.071866746 seconds)
    (144/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.121903303 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078419776 seconds)
    (146/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093698318 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.058544968 seconds)
    (148/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.119200004 seconds)
    (149/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074540168 seconds)
    (150/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.071089356 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115448328 seconds)
    (152/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.19352256 seconds)
    (153/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070537986 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.107955018 seconds)
    (155/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.070500131 seconds)
    (156/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.059494989 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.095565472 seconds)
    (158/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.118673039 seconds)
    (159/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.083786424 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069617454 seconds)
    (161/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095325146 seconds)
    (162/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.056908277 seconds)
    (163/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08137414 seconds)
    (164/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.181430269 seconds)
    (165/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.158288751 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077046948 seconds)
    (167/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078862445 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072599391 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.068935468 seconds)
    (170/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085273331 seconds)
    (171/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071980706 seconds)
    (172/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.058383691 seconds)
    (173/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.118162268 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14900745 seconds)
    (175/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.058481294 seconds)
    (176/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068985123 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.070643799 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095545202 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122146076 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.113405067 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076396004 seconds)
    (182/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07995036 seconds)
    (183/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069541447 seconds)
    (184/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080404041 seconds)
    (185/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07844804 seconds)
    (186/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.057509267 seconds)
    (187/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.23339613 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.156882485 seconds)
    (189/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07769127 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.096088048 seconds)
    (191/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.163588958 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.058280923 seconds)
    (193/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15998007 seconds)
    (194/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071444787 seconds)
    (195/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08596934 seconds)
    (196/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.113263707 seconds)
    (197/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.059112887 seconds)
    (198/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.077857619 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095865628 seconds)
    (200/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.070488358 seconds)
    (201/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.16273712 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.057885164 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.057851673 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.165409457 seconds)
    (205/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072576183 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080808703 seconds)
    (207/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.080145916 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069962363 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.057710495 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070422856 seconds)
    (211/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.074796691 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130776767 seconds)
    (213/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073295222 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.077773685 seconds)
    (215/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07903378 seconds)
    (216/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096810655 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096918012 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.071450301 seconds)
    (219/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.057748963 seconds)
    (220/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070812417 seconds)
    (221/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.18174539 seconds)
    (222/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073957636 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077807471 seconds)
    (224/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.057268915 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.071164918 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.058192675 seconds)
    (227/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073250366 seconds)
    (228/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.058657883 seconds)
    (229/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.056940418 seconds)
    (230/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.073407814 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080075425 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078319863 seconds)
    (233/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07753695 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095428673 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14493928 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.073924813 seconds)
    (237/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.057614905 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078633878 seconds)
    (239/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.059721391 seconds)
    (240/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075634665 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183578116 seconds)
    (242/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.11773675 seconds)
    (243/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084284073 seconds)
    (244/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.071308716 seconds)
    (245/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.072806853 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.07144052 seconds)
    (247/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.069936978 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.071155967 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176988876 seconds)
    (250/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.068809219 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070865583 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.057579697 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.07203522 seconds)
    (254/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.059046003 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069559114 seconds)
    (256/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.057837311 seconds)
    (257/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.118070023 seconds)
    (258/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.058105003 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136921882 seconds)
    (260/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087347373 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.057545901 seconds)
    (262/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071531404 seconds)
    (263/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078439266 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135273375 seconds)
    (265/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.095230766 seconds)
    (266/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.080880789 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.058825841 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.113124626 seconds)
    (269/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124280271 seconds)
    (270/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.058584333 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078953623 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172150877 seconds)
    (273/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.153681421 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.122186501 seconds)
    (275/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081826674 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092680419 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.071247062 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076654001 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.057084585 seconds)
    (280/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.056936095 seconds)
    (281/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.059687618 seconds)
    (282/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.058012354 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070803995 seconds)
    (284/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079439531 seconds)
    (285/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.057660553 seconds)
    (286/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05720177 seconds)
    (287/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.057165376 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094672033 seconds)
    (289/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077918431 seconds)
    (290/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.058215221 seconds)
    (291/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.058153749 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097740569 seconds)
    (293/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.057685179 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.056786169 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.14202625 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07782496 seconds)
    (297/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.057742082 seconds)
    (298/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.057065453 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071722403 seconds)
    (300/309) benchmarking ("sort", Float64, false)...
    done (took 0.135282342 seconds)
    (301/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.056881224 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.105172219 seconds)
    (303/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.059167211 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077578901 seconds)
    (305/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.058342282 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.142395242 seconds)
    (307/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.217956076 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073812263 seconds)
    (309/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.095138066 seconds)
  done (took 32.92130286 seconds)
done (took 34.367521501 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090251818 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100754383 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.081031304 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097262504 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085855293 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.082778482 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078484466 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083231159 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085642592 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.087178284 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084009421 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.061523023 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080526939 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080852808 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080307546 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095905964 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085432395 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079285659 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.079642433 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070407194 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.079084547 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071813535 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073711479 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061422261 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.08444994 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07792337 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080915168 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080515815 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.07120344 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071475509 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075557239 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.079721612 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071298372 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085336147 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07998729 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.081467307 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.083315652 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.085172482 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.075327489 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.073625887 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.083157138 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.07329062 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.081172954 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.082241588 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.081112969 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.079382173 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.080661953 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083532132 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095247755 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074316224 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081055944 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.081676703 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082744048 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.078580491 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075632823 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078993231 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076876424 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095795783 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079619188 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073650882 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.080363817 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079798661 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.076943355 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079193739 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078734729 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081516623 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082974138 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076612693 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081126678 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077791679 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070574507 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078942387 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075852759 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.071297 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081785361 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.086266951 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069934621 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07771689 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.079528238 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079310082 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070393803 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073774502 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072617652 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.077825625 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073595116 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.06160715 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07567889 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078385748 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070592682 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079264362 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078024043 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078566514 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.073051521 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083343395 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070820346 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076768629 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.072203904 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071364855 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.07261608 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.076112616 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070662186 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073429717 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.081711962 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072427087 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077959132 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084329189 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070737893 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.078505013 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070228486 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070362586 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084624737 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080676553 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070717157 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073399825 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069486242 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077994508 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069703707 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.070609159 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070616026 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.071025244 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.077151052 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070862467 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073129063 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.078153467 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.223288057 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.071524763 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07601764 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073630769 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.071421978 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.077455969 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.071555449 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070984854 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.07290756 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.068755796 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073407506 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.071340921 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.078355021 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073771649 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.080225937 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072516087 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080174371 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.076439126 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.077420732 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07757736 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070057404 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.066360144 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073954479 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073542582 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072526903 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.07130591 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072330753 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071148253 seconds)
done (took 13.3964612 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074060043 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.136258563 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097108833 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098399445 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088475601 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.071881476 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079330713 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099131439 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073081892 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102170568 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092339361 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091992047 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116633833 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.071378532 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071274897 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.076124086 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072702087 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084496511 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100340019 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092393732 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119023101 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.073042742 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.098604219 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.096184191 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093845457 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100060003 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.074693308 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07787012 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.077434386 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.107885282 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.096155945 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.078110991 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.074787616 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102993951 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100733177 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088321566 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072087223 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089061296 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.074616215 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.073547699 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.075626127 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103506244 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.087565119 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.086776481 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075799256 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081714804 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072877883 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086223269 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091912554 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082352746 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088850581 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101536046 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073846324 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086960869 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069642267 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088124951 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080270896 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073515678 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071955176 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078986767 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071655301 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075558763 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084687678 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083544211 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075335075 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08755089 seconds)
  done (took 7.17829863 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.092703933 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.101465494 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.090888617 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.090594586 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070950745 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071849046 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072069841 seconds)
  done (took 2.122378472 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.074742426 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.094139232 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092896616 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092529732 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086079773 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095223112 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080508663 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.07230322 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096856914 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073410017 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092294853 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10239221 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.077450929 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.087246004 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096251899 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074362995 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.097089576 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.074688412 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077407853 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094911145 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077932543 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101601811 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079752355 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072784304 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084942502 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072315491 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116899222 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075508912 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074335983 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075386559 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072965537 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110806778 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084575701 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079217037 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073117261 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086804227 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085805209 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075400708 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084402333 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.083041393 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.0866077 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.074801044 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.074054592 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.0737977 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076212759 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081659727 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07425422 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.077840804 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074908326 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090740045 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071042573 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084612146 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074891423 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077503313 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073652001 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078342397 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082253102 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073424924 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091239303 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07393766 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088825486 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088393021 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.086477057 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088698373 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074185777 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085290047 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.086806299 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.077124852 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076583957 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.078020569 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087342769 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072417622 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074282094 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082682978 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074037675 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095495207 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.096306338 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073879992 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085525248 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072992425 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072539935 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072260726 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093536986 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077473413 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072609294 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07628126 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075756638 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.07519991 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071636695 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.076242864 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070722948 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.078587202 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075200979 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.075418303 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075105606 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087172475 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.075574018 seconds)
  done (took 9.432582576 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.077887769 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.075394733 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074734035 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073516406 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073019589 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.073330811 seconds)
  done (took 2.004206416 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097655545 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.076012535 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.087225036 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.078138341 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10805421 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.09164593 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091128666 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081594492 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087547987 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083777772 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090607194 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.093443618 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.098184798 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.079924124 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.093479006 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.079026582 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.094371824 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080743033 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083587665 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077320534 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090223869 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07723281 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079635653 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.088210393 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.083145817 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.079509742 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.086167229 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.086307771 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.085713667 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084949298 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.079971358 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.082800368 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076193847 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081624719 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090720681 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07569283 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076480645 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081652563 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077011266 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.08328135 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091705992 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077421411 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078908181 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.082094412 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081500564 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075353513 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.082080285 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.084075389 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090659794 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081839824 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081675971 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075970075 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080382606 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081484324 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075526588 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081804575 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081368073 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090757763 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.078266314 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076028548 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074816739 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080985113 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081222731 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080512396 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081757056 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081516978 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075600005 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077353839 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077292854 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076405804 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081667075 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073933491 seconds)
  done (took 7.49527016 seconds)
done (took 29.747322888 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541102289 seconds)
  done (took 2.043622113 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.615168109 seconds)
  done (took 2.154373904 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.538928679 seconds)
  done (took 8.079806988 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.382625821 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.476487708 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.723045414 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138093704 seconds)
  done (took 3.294466504 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.722796389 seconds)
  done (took 2.265095379 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.243197502 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228143073 seconds)
  done (took 2.017405275 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.383815878 seconds)
  done (took 1.914020712 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.130634852 seconds)
  done (took 2.66437608 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.247789545 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184390596 seconds)
  done (took 1.977064301 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.448607058 seconds)
  done (took 1.993459306 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.874059564 seconds)
  done (took 6.418376993 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226929376 seconds)
  done (took 1.804724936 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244795955 seconds)
  done (took 1.782402672 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.753764719 seconds)
  done (took 3.295857161 seconds)
done (took 43.249818657 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09141284 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090220944 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089628178 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085949855 seconds)
  done (took 1.877278227 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083952551 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078426255 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081633103 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077876569 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081420678 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077626974 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07969831 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080188272 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077892986 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078050217 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078085979 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.078003587 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080859768 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079491865 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076305039 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079948284 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081528613 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077452351 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080723724 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077788168 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076601553 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080294714 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080316496 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076969819 seconds)
  done (took 3.44627604 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.086370397 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.080073281 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079965015 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076738671 seconds)
  done (took 1.88265107 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.086369977 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095425676 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092310248 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083614373 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095287057 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090171615 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07436465 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07446072 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075549576 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083147155 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073273514 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099228746 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092590468 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083020573 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08539374 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070237038 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073765673 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091400271 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084023705 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084165143 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075573488 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08345082 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07358395 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093619168 seconds)
  done (took 3.568853047 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088546837 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105338567 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085185567 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09469742 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096794729 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070894736 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084433187 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097271783 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131022227 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.071507414 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076718743 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071090848 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.079717795 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.071023287 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085736117 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.115419858 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116574019 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074396738 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103119643 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.07132577 seconds)
  done (took 3.354551009 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080317592 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.076497424 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07514508 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070755151 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082525463 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077852274 seconds)
  done (took 2.023370446 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.076190043 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.074603706 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.073322591 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.073642733 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077477448 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.074347871 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.073851394 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.07535795 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.074221217 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072742807 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072099688 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.072014727 seconds)
  done (took 2.444031248 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.193600626 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.076879612 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074465187 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071256986 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076262769 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071833669 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086372882 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073015645 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096651509 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071848663 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072459566 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074355128 seconds)
  done (took 2.597751449 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202064523 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082800493 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232505802 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152978221 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111119841 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115244273 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114004608 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113374613 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.13905613 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101477251 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162994706 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162101765 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108928217 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138155151 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093514288 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.107082461 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15139709 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1645741 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109174763 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163321998 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143828868 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128489775 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145946222 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104005452 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107632984 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120484899 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076110706 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083695272 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165749333 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132024822 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141493175 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11383453 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094183726 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176899606 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164432794 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139800196 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149675531 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087788434 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105933387 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133173456 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192114412 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092549001 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159038374 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112185399 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083504268 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132166121 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118402998 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12013861 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105142133 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09231894 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140663404 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171352572 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.130444482 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088947588 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121295151 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111178956 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110329599 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112379427 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168364237 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152798259 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125341615 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074731525 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110790227 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143833201 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128568927 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105360406 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119575756 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093427499 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127771514 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147555316 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118975796 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135480828 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.114096438 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089087427 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118442326 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132297404 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122157982 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152245823 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121272687 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.0762943 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117616948 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09895228 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082872961 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144742676 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077891425 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167504169 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10084116 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106989739 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122479077 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10706422 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10524405 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142925161 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.39035518 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110512075 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.076192575 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114810104 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128436745 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149833572 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097308649 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116433594 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123507033 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.086702059 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140561609 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.084206153 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130119797 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.087241118 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130453317 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136709186 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.085665865 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124726344 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107965643 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.105735186 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132283201 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157239527 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092472656 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085352225 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163386947 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123403346 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104863422 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141560294 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154795988 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.106317793 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101768792 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146041865 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168082588 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093858296 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160383492 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107168648 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087434451 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092375027 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124985117 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113329964 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125571622 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085865032 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11923673 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162318237 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07936256 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099285046 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136013622 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083890205 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084962315 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107081055 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105567743 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099343267 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101133194 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10389506 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13534491 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274080835 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111761432 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124769679 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101946668 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161932342 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091822814 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106104783 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106885263 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074943265 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.131989434 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151970679 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082724815 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156316588 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121737426 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117989393 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120681031 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087363522 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135798043 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083273092 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075152791 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140788393 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113257566 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111132278 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148197674 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117082498 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124433699 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119364226 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130104928 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130114626 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129621075 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109729928 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092390396 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114897967 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127900369 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.079382256 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093518273 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084584159 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107005192 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097798561 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087378178 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140561699 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123296545 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115028676 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114402671 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099812379 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14558615 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080931332 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127526896 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.121411538 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098847828 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148804241 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147965577 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132499902 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101515229 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284400303 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076328909 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07947598 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090648096 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123141109 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087128588 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087490502 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115445285 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144808751 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127712245 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135265477 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123949391 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119842168 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151801561 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075285465 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.121875199 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141692348 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122719384 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.108085657 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094434665 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102264816 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139982897 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106935841 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174101429 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11582965 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126360359 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153869233 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105741099 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083675737 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105811094 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132371496 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105268044 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14012495 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101774379 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092679838 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110299701 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083371263 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100641988 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126874129 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118278356 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134678993 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115187765 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133357031 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082446358 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115675018 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12355277 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122207235 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.070010394 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118930494 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154818378 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098376654 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119136997 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296246945 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083855455 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138243649 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166913488 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143329641 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088585286 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108799186 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12142674 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125868611 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119788995 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137402816 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106407719 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13769787 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11512892 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.091373415 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090494553 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098495688 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10590092 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098040992 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103842083 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114367278 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099569059 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131654118 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106196131 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112874486 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120184533 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103462315 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096865991 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099785148 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171376097 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120176992 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166049603 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104021578 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.139646078 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157718332 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080007217 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08368602 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082743648 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137077975 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088545953 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132419159 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.114163113 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11820028 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12382521 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138897252 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099071805 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07392961 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111409209 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133522121 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124201176 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100954056 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.1038193 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158312905 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101003619 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082811609 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258144327 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117988799 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10667384 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163787226 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.067941915 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109020081 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081424593 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084420982 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124957454 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147026241 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08404825 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103117409 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121215752 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114040296 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125878256 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100513945 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11370918 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124617994 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143850048 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127125592 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092810845 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111684558 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126546273 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152236117 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104683432 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101369451 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169192571 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149233612 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158245942 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089815564 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116786032 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11610432 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111083013 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13804214 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090295967 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16180197 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088196959 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135092051 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104890817 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09135616 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128646919 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113312511 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092199017 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143794033 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118653785 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087434618 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081622088 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11645756 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119701011 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10553388 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079498961 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284856068 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.079483114 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133077947 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157011954 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08494859 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107359319 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098453402 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085072316 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106107637 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104016339 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090249707 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103820701 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164859969 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088826273 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144286414 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131692576 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112281739 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132681274 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104658536 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643286927 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081273529 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147779402 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116101315 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167410951 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102569562 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118976258 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112701343 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121310113 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141162259 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104422276 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181645751 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13106508 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11778794 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083279367 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10500676 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106374268 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090720295 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111373488 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115805894 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116058076 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095889863 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117358868 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124196523 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087018473 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099441105 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153123777 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11715213 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143029188 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136901693 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088079425 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118951022 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283793874 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084505755 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118919234 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148453433 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107961037 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103429477 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085305815 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.116803938 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155900381 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07837833 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154315223 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124955549 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111840639 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114733379 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109819823 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129842781 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106056728 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122206033 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094309918 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109553256 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114421433 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085094409 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081675665 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107846673 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11177457 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102043819 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099318614 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103809459 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148429819 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077730394 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100965356 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117558334 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141930862 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168215421 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092505504 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087153796 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120759094 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117588007 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114650011 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122862069 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083627158 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085913634 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083537203 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086855983 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10957505 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115423922 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116398195 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112804525 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159064586 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087940724 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228618818 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099170114 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107977609 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.076104069 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082559423 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099292135 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09939391 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255955381 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114710514 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155878886 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099303596 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093675716 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09461894 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.08047298 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087338027 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125473792 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109847426 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119350807 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103768409 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068901229 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108360189 seconds)
  done (took 59.454720505 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.114562033 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086942479 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101288829 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147726658 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126471307 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203919008 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.161037786 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193888157 seconds)
  done (took 2.813553078 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.076016382 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098722042 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107860453 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087470002 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072052612 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073538737 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226169033 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08574392 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071831677 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094718295 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082305761 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074290452 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.411586659 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071286869 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.073656874 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.068025482 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073005256 seconds)
  done (took 3.515693873 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.398667232 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.62311869 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.347476555 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.084711102 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.025799719 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.096131646 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.343988602 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138924265 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084303328 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533104332 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.410208733 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137322003 seconds)
  done (took 18.902500003 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.09068089 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.082399538 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094176877 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093439868 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082822584 seconds)
  done (took 2.115246136 seconds)
done (took 109.567074215 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.091357837 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.421913352 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060285116 seconds)
  done (took 2.181608578 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.094571299 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089762491 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089831371 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08753719 seconds)
  done (took 2.043766422 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.082324596 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.082946056 seconds)
  done (took 1.842007834 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.230077646 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170116897 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100746817 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.090311098 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.085644437 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084776719 seconds)
  done (took 1.944409661 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.079856208 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080839254 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077117113 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080406136 seconds)
  done (took 1.996076567 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.083625236 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.059902614 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060802458 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.063523581 seconds)
  done (took 1.947681302 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094785601 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088548649 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083698106 seconds)
  done (took 1.949141572 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107373996 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091768183 seconds)
  done (took 1.878190192 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.088409739 seconds)
  done (took 1.767930458 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095664676 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102754331 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136053614 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.118102873 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14136104 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118066774 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08923136 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090484867 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083851306 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091077324 seconds)
  done (took 2.74627081 seconds)
done (took 22.560329962 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.086887547 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373325322 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36766945 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094272174 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674175099 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361808517 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986408377 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098489373 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145442323 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073179765 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090334828 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654662987 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97662719 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.331603651 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964546341 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.335007335 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654822376 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074511545 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073926862 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074052666 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.971417396 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074250409 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074255192 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074690641 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654003852 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378132588 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074572542 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.33571578 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074185558 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07602016 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.377695958 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074182521 seconds)
  done (took 16.386527213 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079095137 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125015924 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078092964 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089939779 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075858048 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075231892 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.077138978 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074448255 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126050832 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073676526 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09087799 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074054891 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07817437 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074747929 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093099775 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074659606 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075428636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074821564 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076819803 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074213196 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092751763 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073993255 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074615025 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075134474 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07432215 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086166766 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074505584 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075057087 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074293657 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076723288 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077391652 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074896207 seconds)
  done (took 4.285964107 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124358442 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129708636 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079589324 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109337852 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116948192 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076318778 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148211816 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098911699 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132624351 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074454658 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090875561 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074743866 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107126254 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074879495 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093828305 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07486883 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075930766 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075628994 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07492861 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074878436 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092556635 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074295342 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074283719 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075075209 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07469431 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087708914 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074160143 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074623079 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07464228 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076027937 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077686213 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07473311 seconds)
  done (took 4.527983901 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.080451801 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.081031496 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08687116 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087990889 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074315787 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077438225 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.079073449 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.075223465 seconds)
  done (took 2.337655176 seconds)
done (took 29.224040601 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08696453 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074996483 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078540775 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.0938777 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.079798527 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083565276 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072388717 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.081757553 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079284988 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079457169 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080211948 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073409605 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07745085 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072729481 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079496694 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073494504 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08421303 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.078092219 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083910238 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084660356 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076184478 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079068522 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.081693661 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083752807 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084377555 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083814242 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082137868 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078244424 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073982257 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07660516 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082144822 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089334208 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073746077 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083567602 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073370182 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073297363 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.077324136 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073294711 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083647633 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081904025 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07491255 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.082127253 seconds)
  done (took 5.008870717 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.096080727 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097203128 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.090651612 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067862181 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073135512 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.071338973 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.095455173 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066350214 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066421447 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094186811 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063390637 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065577973 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06952195 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060826826 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066405095 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064382047 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.068174417 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061928905 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06666674 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065776493 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094764508 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061026827 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082894915 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069145688 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.063077923 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.069077514 seconds)
  done (took 3.612673765 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.08276014 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.091278819 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.097829986 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147755527 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.118221739 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.085465681 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.087112311 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.100597043 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.101918728 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.075043961 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.079099208 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100838369 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093070318 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.080965842 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.075225809 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.092632152 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.093212904 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.077065941 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.081129945 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10045083 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.093865134 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.093680291 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099402661 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.092157437 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.07495472 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077931784 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.079377086 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.088730872 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.078392271 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.084918922 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.078175136 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.078572319 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.077583567 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.087361169 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07799966 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.077498781 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.102249433 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086019419 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.086706644 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.076675667 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.083817485 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.076971824 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.099140564 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132044066 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.075279676 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.081527294 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.079659832 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.085805107 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.0751805 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100682344 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084481708 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072840159 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075729748 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.07230132 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.072891031 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075931356 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074664674 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075192755 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.0815753 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078545371 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097055585 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077995769 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088638031 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072613378 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081923116 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072701277 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073896885 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071962371 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097859335 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07486071 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113434502 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073849326 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073921568 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.083752475 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081049101 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079434454 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073240694 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088791346 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082928706 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076587024 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081018422 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076301344 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075267353 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102414067 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075877272 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07521033 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074096292 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078449743 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.076064891 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074253023 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085650331 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.072685331 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075806043 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089735159 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072779005 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074410141 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078858808 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076911028 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072692071 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084009827 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076953579 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073723709 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082982497 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073725201 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07551736 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084923142 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079738505 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.072328654 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077534076 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078396645 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073697459 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074906696 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074975547 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075624922 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081505397 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079757081 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077063223 seconds)
  done (took 11.431546448 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.170276865 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161237334 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.078854241 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153963619 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.085268359 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.086067843 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.154934755 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.101096856 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.076108338 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07721927 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07618423 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.116767503 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.111656836 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.124271123 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.086392086 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.075933088 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.097816582 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119371611 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15725093 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152222273 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.098078295 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081426241 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075424871 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074908179 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075173527 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083433367 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089949711 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082024781 seconds)
  done (took 4.663203668 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086574491 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.110201035 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.082356885 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.098864899 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.097827453 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.076526696 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.078113761 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07764259 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.093612324 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.085452707 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.074280388 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078375012 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07991149 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076615077 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074742096 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080260676 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079745884 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075087742 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077008318 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077898112 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083815432 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096869214 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076410436 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.074978806 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078215792 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072538079 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068068839 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08857656 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.074088079 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097819655 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071195444 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078492651 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086986399 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07441813 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073038555 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073379476 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07305292 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07331437 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07509178 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071910895 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071865268 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063580739 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.073116208 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083529528 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.086444567 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062648274 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077539446 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078569859 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078529894 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070843494 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.076749418 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076142978 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.076090741 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081299789 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077226978 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078451078 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074309389 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081708585 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081746003 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073099081 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070197742 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071892041 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077877563 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070173329 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.088285692 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078549683 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072225732 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073343583 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075012513 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086468538 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073018063 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078397123 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070756868 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075486358 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077905108 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075449341 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074718912 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071709237 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073615784 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073666955 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061454966 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073029821 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059148243 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07570034 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071452246 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071962059 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072992214 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07773081 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083869169 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074893206 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078950175 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074847685 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072271266 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075739355 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065760836 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075569026 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083789458 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08651132 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073574734 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071353867 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086461397 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077686118 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072352319 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063057911 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077990547 seconds)
  done (took 9.840062129 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.0989562 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.075293282 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087337601 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094010105 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091949547 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079611754 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.083683803 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074670568 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08919138 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079503055 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082787008 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073409251 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08407852 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.083046466 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075375645 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083341357 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077026192 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088739251 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08819112 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073740579 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081670528 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085494592 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094532288 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085830032 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084518036 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086019655 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094186044 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082969971 seconds)
  done (took 4.110974924 seconds)
done (took 40.351761529 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.804936445 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.03578895 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.776606466 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.104897663 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.85659964 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.978484383 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.8627503 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.774046703 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.036694 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.805081231 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.107541275 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.874244336 seconds)
done (took 65.850096163 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.85852929 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.919031907 seconds)
    (2/2) benchmarking "String"...
    done (took 2.007471051 seconds)
  done (took 5.622773655 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.012188257 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.363673821 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.015820906 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.770569177 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.774130293 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.087940595 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.560153415 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.289521861 seconds)
  done (took 30.561352159 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.940828078 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.000963318 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.462402747 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.499000701 seconds)
  done (took 15.650285573 seconds)
done (took 63.487771547 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.800672189 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.769262331 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.785231321 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.761132177 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.830938376 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.783691949 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.139807889 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.781145566 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.769585216 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.761675109 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.770873053 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.206361121 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.782848078 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.975195894 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.771783779 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.78207976 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.782411899 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.263655474 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.927299402 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.78713064 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.783361554 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.827286601 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.773196364 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.775732378 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.778114902 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.769041948 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.174399339 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.772184277 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.603049306 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.773853715 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.813967234 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.113565591 seconds)
  done (took 203.887195592 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.772583596 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.685049505 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.766515506 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.781446315 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.395568509 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.947713362 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.853602608 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.408217751 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.772073804 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.780343538 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.988974907 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.774657048 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.013883795 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.731415979 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.801325878 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.776007188 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.934469019 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.038638832 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.802541345 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.941071053 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.792715292 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.022650579 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.977413882 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.980747885 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.788215216 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.77163835 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.773824123 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.799323674 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.971651741 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.91662253 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.809017622 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.807456233 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.97984065 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.643467113 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.796444595 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.783736783 seconds)
  done (took 170.280620711 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.976573443 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.778818831 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.775653238 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.777377549 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.781564736 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.775195232 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.902387921 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.898508128 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.421055269 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.522732709 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.823975206 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.773502006 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.575258207 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.772114081 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.844111064 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.783969953 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.771742315 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.78891001 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.800204641 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.773122445 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.774469872 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.899661996 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.785399211 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.776238271 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.77972289 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.775198009 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.781339735 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.152709665 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.773426799 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.974342502 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.771118238 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.779248031 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.016796499 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.773432768 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.77329362 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.633708707 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.869655039 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.856205461 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.771952396 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.779118633 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.775491153 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.992377195 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.774084639 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.774629935 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.774597608 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.779966637 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.921303851 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.774487481 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.895817051 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.776751146 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.249220116 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.773083732 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.775812848 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.442279139 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.35910575 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.773487039 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.776865538 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.774450399 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.775043614 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.77378049 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.782252124 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.48992652 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.848035552 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.779995873 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.773709787 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.780536279 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.781453275 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.777103177 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.859718731 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.773546316 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.828215433 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.834622373 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.011942794 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.899693673 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.77845425 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.845934325 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.868229835 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.774026219 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.777381369 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.777186566 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.776533973 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.776055286 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.855871058 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.773235657 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.778170005 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.911688392 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.782858812 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.778395577 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.827489523 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.843740799 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.774255902 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.620729096 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.775836799 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.777196168 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.037857716 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.843008565 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.776740488 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.778512909 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.913613958 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.898007875 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.486949796 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.77631469 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.450978846 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.921259302 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.775200769 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.933616184 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.778669686 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.856779775 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.779561993 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.777556304 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.808261488 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.777340207 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.835137791 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.776144247 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.15145915 seconds)
  done (took 402.497710717 seconds)
done (took 780.395429566 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.396125804 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.357594819 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.454685165 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.366702829 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.3495842 seconds)
  done (took 13.629939927 seconds)
done (took 15.331987439 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.867714871 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.869723827 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.8000808 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.869929858 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.796895649 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.86768281 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.849368365 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.798884224 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.833811241 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.799893847 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.838499206 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.801330517 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.790099024 seconds)
  done (took 25.485881157 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.022867695 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.015896778 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.846210008 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.037547099 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.822534415 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.018290825 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.939884618 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.928927903 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.928556988 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.795601797 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.793521753 seconds)
  done (took 22.855288927 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.024729232 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.02645036 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.853579283 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.016213798 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.824314123 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.02286802 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.943764271 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.93022253 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.932132809 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.794657681 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.792996643 seconds)
  done (took 22.868905954 seconds)
done (took 72.912731345 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.789416248 seconds)
  done (took 3.494932543 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.815027705 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.987764043 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.792090097 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.790619505 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.787452139 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.785780107 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.791843973 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.789668078 seconds)
  done (took 16.246452219 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.787996314 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.788389979 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.788636363 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.785694543 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.784408164 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.78507324 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.784347696 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.788332312 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.788296146 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.786193919 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.788922961 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.785892974 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.78979927 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.789646321 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.785601703 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.789046164 seconds)
  done (took 30.306784385 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.786839439 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.78486339 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.785357899 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.785159587 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.785914262 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.787553646 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.786196589 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.786491843 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.786439576 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.788825668 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.787441303 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.785826148 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.785084718 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.783824124 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.78658957 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.784282455 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.784680106 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.788744363 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.791810191 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.786940634 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.788812538 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.786607727 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.788189553 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.787053082 seconds)
  done (took 44.589212941 seconds)
done (took 96.341266631 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.493034979 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.742823676 seconds)
  done (took 9.940689493 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.790290576 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.789095478 seconds)
  done (took 5.292142446 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.789621313 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.791715413 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.790733084 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.789219081 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.789155562 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.788572379 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.787842656 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.791443976 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.792415742 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.792189801 seconds)
  done (took 19.612544429 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.791405277 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.78830342 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.786971266 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.790139881 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.790671108 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.787547063 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.789718332 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.790511615 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.789493571 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.789547699 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.790827375 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.788330037 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.790025302 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.788911995 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.788135859 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.788748937 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.785978274 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.787062128 seconds)
  done (took 33.912290461 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.789197617 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.789647469 seconds)
  done (took 5.287647937 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.788805813 seconds)
    (2/7) benchmarking "second"...
    done (took 1.78793932 seconds)
    (3/7) benchmarking "month"...
    done (took 1.789895122 seconds)
    (4/7) benchmarking "year"...
    done (took 1.789363209 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.788420701 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.786371608 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.786864004 seconds)
  done (took 14.228444558 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.790818813 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.94018162 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.007550205 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.448201676 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.791913864 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.793437894 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.69681739 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.794608149 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.797182484 seconds)
  done (took 19.768761229 seconds)
done (took 109.749411412 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.653570554 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.784976805 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.006383581 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.840640876 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.833867473 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.126001606 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.802371576 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.052511405 seconds)
done (took 42.808569366 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.79288272 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.516882203 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.525660569 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.816390522 seconds)
  done (took 15.566534956 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.77896263 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.115334954 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.800562306 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.624939878 seconds)
  done (took 22.0336386 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.152313649 seconds)
    (2/2) benchmarking "read"...
    done (took 2.13111237 seconds)
  done (took 6.000965538 seconds)
done (took 52.104930748 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.790840423 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.793630183 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.789594137 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.794590451 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.79450084 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.790659312 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.788528489 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.79277178 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.793225433 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.792508688 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.789763191 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.790214693 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.792526322 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792518994 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798704697 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791797959 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794328063 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.79168441 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79003444 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791339299 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.792768741 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.789616744 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.788958282 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.789105927 seconds)
  done (took 44.713575595 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.794469428 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.792440902 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.795415281 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.796121459 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.791447658 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.793456548 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.794713471 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.791105361 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.79291686 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.792109861 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789533847 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.788921046 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.796617389 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.791509103 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794033342 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.792112618 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.794331881 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79134992 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79401262 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.789991717 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.793591242 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789899432 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.790149801 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793573679 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.791787735 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.793658154 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.796332006 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.794125524 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.793156926 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.793630133 seconds)
  done (took 55.4993424 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.800852215 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.800407826 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.791762105 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.79354075 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.792307312 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.794143841 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.795247426 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.796393819 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.796211557 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.797716164 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.795378241 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.793741462 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.796850857 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.794855938 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.796161475 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.796130696 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.79358968 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.794727756 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.795114682 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.797343545 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.795061825 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.795640656 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.795391756 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.797027844 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.795896355 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.795713519 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.793591895 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.79448814 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.794063545 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.792797776 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.797079535 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.797850669 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.798708436 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.796051047 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.796123199 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.798276574 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.801957529 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.804875237 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.79414799 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.794021534 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.796508023 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.795636519 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.79314509 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.797692782 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.798468704 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.797886052 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.799589727 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.798461523 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.797250007 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.797570909 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.797585171 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.796622826 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.794463812 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.795055992 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.79618561 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.799617127 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.798731539 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.798044541 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.798428328 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.799584362 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.798344257 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.798763125 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.796879851 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.797811582 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.798007565 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.797919884 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.798629804 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.798683419 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.799223233 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.801579331 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.799885002 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.799386156 seconds)
  done (took 131.087839058 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.800569546 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.794567764 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.794931025 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.795854484 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794787126 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.798496438 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.796279499 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800235349 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797842131 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.800645232 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799369612 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.796888726 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795583815 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.798498459 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797821818 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.79474347 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.797852263 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.794620753 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.798371041 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.80049203 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799785167 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.79746395 seconds)
  done (took 41.265010213 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.801108728 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.800221382 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.797222906 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.799138395 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.795898573 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.799230238 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.798832982 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.798553922 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799218292 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797556419 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798394644 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800088585 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.798955589 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799346463 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.798546133 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.797499857 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799153497 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.798016411 seconds)
  done (took 34.096861568 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.79921486 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.799729028 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.801749951 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.799470677 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.799180785 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.801037377 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799337097 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.800772327 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.800762539 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.79750395 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.80024103 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80100172 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.799743872 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798543643 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802175096 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.799591378 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.801282148 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801020365 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.80156201 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.797837682 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.79781367 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.800197292 seconds)
  done (took 41.319807766 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.801401562 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.800319859 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.798532869 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.799107051 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.80120764 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.802557546 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.802834552 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.802688713 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.801559307 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.801404755 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799129074 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.800391532 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.797553127 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.797915572 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.798647452 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79878458 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.802348278 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.799876562 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.804024393 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.799786328 seconds)
  done (took 37.730610156 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.801969067 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.802510663 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.801410709 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.801424106 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801563543 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.801377134 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801848847 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.804645317 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.803511827 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.802557942 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.803035574 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.803491623 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801575762 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.80300746 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.802086795 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802552599 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.801321376 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.803245201 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.802648697 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805283932 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.806615002 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.802729897 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.804826075 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.803366064 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.80400308 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.802628179 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.802953392 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.800796136 seconds)
  done (took 52.201290433 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802723032 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.802204454 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.801609074 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.802310438 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.80428407 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.803615074 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.802574365 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.802248316 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.80303742 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.802265875 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.803250427 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.802157329 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.802753536 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.80279302 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.80335663 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.805380881 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804223138 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.803102364 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.802706077 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803458628 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.803418458 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804575834 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.802833271 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.801390099 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800742127 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.803317246 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.802374915 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.805857566 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.805510559 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.8030922 seconds)
  done (took 55.816005005 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.824289082 seconds)
    (2/2) benchmarking "in"...
    done (took 1.823684054 seconds)
  done (took 5.371330237 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.801792365 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.8042243 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.803963257 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.802418344 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.802518379 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.807322408 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.807825537 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804177609 seconds)
  done (took 16.158042983 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.806471054 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.808056509 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.806628092 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.805362492 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.805381703 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.804967386 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.812398583 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.806518164 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.808248899 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.808066102 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.817443431 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.818169988 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.810007213 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.809193027 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.806566698 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.808180563 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.804718181 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.805643977 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.80423005 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.805017619 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.807553553 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.809777544 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.809549343 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.804865084 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.810947585 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.817815528 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.811193674 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.806375136 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.806079399 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.810142083 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.806107161 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.803813674 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.807416722 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.80909884 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.807373351 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.808701968 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.816907588 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.810127716 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.815073622 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.807271404 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.806219399 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.805373543 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.806956587 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.808998761 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.809676117 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.809490374 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.809523698 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.81082283 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.812598111 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.812468673 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.813792887 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.806661433 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.804934863 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.810569428 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.808707309 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.814971212 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.810108759 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.811008092 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.821936311 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.820864988 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.822428797 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.818085771 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.810129031 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.808801982 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.818147412 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.834554054 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.815541904 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.807085286 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.805949468 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.809465753 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.81915244 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.825092416 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.820547386 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.809144206 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.811622115 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.810159304 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.808102744 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.809751863 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.816215029 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.812651597 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.809557015 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.810665554 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.82039797 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.836415303 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.811794451 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.811008633 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.812334911 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.810682708 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.810990244 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.822004252 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.811346809 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.81074026 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.809492741 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.809732945 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.812920128 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.81167924 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.812335598 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.810894347 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.809686551 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.810147424 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.808191188 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.811203285 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.819247754 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.809790856 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.809104517 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.816091204 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.814161008 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.812426882 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.818394182 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.812425949 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.810811781 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.812023306 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.818746356 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.808640606 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8145465 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.820933147 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.811791581 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.811752557 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.813084701 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.812370078 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.824416837 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.843185346 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.814161334 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.813070414 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.818337794 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.825289521 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.810911402 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.81464832 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.811917554 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.809631648 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.810826452 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.815915023 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.813457894 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.813194031 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.81517962 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.814637507 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.812233039 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.811888991 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.811733856 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.813651642 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.813669638 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.813334095 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.815694423 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.816773183 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.814444729 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.815320791 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.821235254 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.814057085 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.813657439 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.813958597 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.810012105 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.814234067 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.813239245 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.812855211 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.81262407 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.813759676 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.81300611 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.813871941 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.81460237 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.814788127 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.813672046 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.812906603 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.818718704 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.813443084 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.817904658 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.813451563 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.812069336 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.817035749 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.817752587 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.816162711 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.814649376 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.812310377 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.818091443 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.82276505 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.8129849 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.814142187 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.817178879 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.812894837 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812695879 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.815759626 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.817111505 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.828707485 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.815557952 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.823247536 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.814313755 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.813936021 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.812924179 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.814332507 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.81260345 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.814207707 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.819200611 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.826167715 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.829780162 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.82523623 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.817303861 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.820271153 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.817334159 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.820734058 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.819784809 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.815515302 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.814172904 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.814954563 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.813578278 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.81610035 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.817692877 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.817273025 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.815359757 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.818064798 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.817248627 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.816183699 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.816606067 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.815717335 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.816115976 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.814784968 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.815756949 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.817570537 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.817256973 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.813959242 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.817066491 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.816970629 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.817418921 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.81661774 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.823238552 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.812710932 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.818722941 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.816314979 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.816324108 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.815274661 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.818333483 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.820923088 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.818756229 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.826254131 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.818338744 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.818912012 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.825001362 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.817757478 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.816056017 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.819237567 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.817736332 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.815336191 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.821177665 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.83010831 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.819394391 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.819561085 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.818765948 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.816686751 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.818008057 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.822967456 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.815656351 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.816362318 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.817385401 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.819281671 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.815216435 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.821542676 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.819993537 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.820136223 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.821171057 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.817540218 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.81891577 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.817934775 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.81640887 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.816090462 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.81686382 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.820116348 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.828404848 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.825552167 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.81952594 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.822398658 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.820707076 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.821873695 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.819666775 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.818215303 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.816919972 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.831688373 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.827175189 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824536105 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.823272611 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.821607584 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.828382306 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.82386684 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.825684912 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.823547467 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.821189219 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.81878211 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.819379644 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.817671969 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.82026895 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.81959818 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.822415489 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.823311111 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.826436869 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.821719879 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.822436524 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.82166567 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.820528478 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.82069921 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.818473132 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.82053087 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.822733597 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.822244461 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.820695379 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.824538863 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.830456408 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.822269262 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.823658599 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.82161369 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.820427247 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.82130986 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.822317004 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.820929228 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.82528878 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.831372656 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.825712944 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.836058913 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.826531056 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.83409356 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.823216525 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.82682247 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.831788633 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.81958855 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.822067733 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.822746327 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.822373113 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.828382551 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.823960233 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.825934547 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.82986531 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.823965718 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.824619809 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.823308154 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.824804997 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.823125517 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.821328271 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.830980493 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.823445482 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.826816955 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.823358849 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.822264096 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.822973098 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.824323131 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.822842736 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.827816542 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.82318122 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.824539308 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.821409454 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.82207118 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.823857703 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.822397613 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.824582016 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.823452101 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.826035842 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.832711001 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.827882725 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.829789177 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.82404527 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.833506075 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.82303796 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.83010464 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.825886289 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.82323825 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.824183378 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.825002264 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.827034191 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.825663062 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.828092246 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.825534078 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.829429097 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.830121824 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.82355852 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.825123868 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.824681113 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.825021323 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.823188826 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.836707112 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.85210376 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.82762061 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.832235493 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.823529231 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.827454103 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.830226902 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.825117086 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.82311969 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.828354461 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.839405122 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.834573865 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.829961998 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.82608191 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.824737122 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.828228365 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.828554522 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.827950745 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.827091841 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.824538054 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.827677323 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.827035807 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.830500541 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.82631951 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.828478983 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.828129282 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.828505467 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.837221898 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.827669259 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.828839189 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.827423421 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.824937169 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.82621055 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.826805533 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.826174024 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.82467081 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.827601978 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.830787282 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.835717355 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.837532451 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.830038005 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.828764258 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.82729434 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.826788165 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.828052637 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.82628508 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.824946482 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.825602675 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.829327231 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.82802703 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.828309965 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.826226807 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.829358028 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.83069857 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.82790048 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.829690428 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.834959482 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.828176474 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.822737731 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.826161272 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.827297002 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.827419212 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.830119638 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.837185784 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.833243448 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.842223311 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.838424638 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.831233634 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.82649234 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.832584452 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.835545991 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.826124539 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.829694908 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.828867092 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.830299804 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.829252319 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.833900654 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.830525976 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.834876025 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.828249995 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.827852113 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.838069519 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.830258427 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.829541906 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.830706577 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.834044014 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.829316502 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.826481602 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.830775043 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.830869573 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.837412584 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.832131915 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.830026668 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.829801802 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.827300303 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.830493426 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.834304315 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.831243471 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.830650083 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.82837675 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.830932278 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.829301509 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.828796069 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.827572226 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.82877862 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.82990711 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.831848912 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.838676838 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.827031002 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.834035036 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.831573748 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.832483998 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.830352464 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.828994726 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.830532593 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.827078965 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.831267407 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.827858652 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.827764445 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.834096352 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.831970546 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.834375362 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.833521126 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.834489132 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.835960083 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.844384148 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.840560456 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.828429611 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.829847825 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.830818058 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.833616178 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.828833168 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.830339792 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.832023249 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.834438539 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.832024233 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.833032301 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.832147918 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.834852675 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.846685419 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.831248112 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.829013257 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.830449302 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.834654304 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.832000748 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.830732365 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.833415318 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.835834644 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.835800693 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.841349645 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.832542434 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.837625721 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.831579119 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.831527055 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.836230701 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.833451135 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.840744999 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.836259994 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.832666762 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.831947781 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.840461852 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.850787675 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.83226169 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.843118341 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.864904311 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.830707917 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.832947703 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.831820338 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.830469799 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.832283846 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.83608692 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.833884185 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.8338599 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.833441889 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.832584754 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.836207381 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.838992318 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.834806266 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.832178209 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.833018658 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.832921632 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.83941647 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.832307822 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.83556415 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.835426404 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.837432794 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.832411706 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.831967714 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.834312992 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.845603544 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.844628944 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.833276377 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.83406101 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.831456463 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.838916965 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.838376716 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.846969522 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.844576636 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.833344524 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.834274689 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.834240588 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.833511187 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.830503288 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.834244017 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.836520608 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.836085261 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.832505771 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.849061831 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.842523351 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.840856653 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.834792863 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.834951227 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.8353262 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.834725451 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.835001334 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.833368936 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.836310337 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.837045262 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.840388511 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.837575152 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.837014039 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.841021918 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.846484516 seconds)
  done (took 1088.306981842 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.83376356 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.831329519 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.831907223 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.834004625 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.831959685 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.83595663 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835413473 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.835111008 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.83495211 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.834991892 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.833514597 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.834729355 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.83339246 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.832059343 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833871656 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.833983956 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.833791659 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.835037428 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.837519821 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.835419836 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.834751882 seconds)
  done (took 40.274663014 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.838473161 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.833895337 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.834240197 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.83964456 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831549429 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.834622908 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.832108616 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837051569 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.839716639 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833971874 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.838518548 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835478686 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.833143098 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.833264445 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832021481 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835710646 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.836104538 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.83181134 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.83389853 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.834520341 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.839064875 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.834436579 seconds)
  done (took 42.129017555 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.837942966 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.836056376 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.835570307 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.831930527 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.834038823 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.832986009 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.83377502 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.835712949 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.836432889 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.835905599 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.835247317 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.838874255 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.846489893 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.844050775 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.837422504 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.834960247 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.977829004 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.835286997 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.836938866 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.833736726 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.83485151 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.842604357 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.835347637 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.835692018 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.835423698 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.836589328 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.835833215 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.835098318 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.835743141 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.836433192 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.841336971 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.833615271 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.835028557 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.840650108 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.83579916 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.830112644 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.836508471 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.829294613 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.825989016 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.832848237 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.83725032 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.850455639 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.826845513 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.834697085 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.829335629 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.83393913 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.831095944 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.835492939 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.824125581 seconds)
  done (took 91.837783342 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.828777129 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.82680328 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.823400859 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.825985281 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.824959601 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.826480477 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.828215452 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.827782043 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.824824267 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.82468121 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.827442158 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.826265818 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.823759959 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.827217011 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.825281411 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.823637255 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.822932255 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.823938885 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.823773631 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.825477288 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.826151647 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.828972923 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.828672426 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.824185955 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.826530875 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.824028809 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.824778197 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.825765743 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.825218379 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.823946006 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.826950333 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.828056098 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.828884141 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.82760827 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.825225468 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.828724118 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.827771203 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.826563133 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.827019254 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.828321432 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.827757593 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.826140854 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.826221788 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.828756142 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.830062096 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.824759214 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.824540626 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.826014584 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.825256083 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.826632639 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.831931869 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.824039596 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.826769557 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.82424321 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.827266838 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.831338591 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.826099988 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.824422766 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.827576869 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.823578526 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.823867157 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.829020559 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.824800275 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.826892541 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.826387314 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.823597959 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.825662131 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.827780985 seconds)
  done (took 125.932438263 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.827614324 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.828339769 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.828419402 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.827810076 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.824309932 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.826296136 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.825527081 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.827724249 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.826693046 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.827027803 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.828505399 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.829372319 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.829020892 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.829516038 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.827207971 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.82871981 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.82668627 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.826176244 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.826021702 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.828050514 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.821451767 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.820535196 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.822651856 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.822837118 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.82625196 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.821059589 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.821187895 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.821937328 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820633459 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.820971715 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.821488669 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.81973231 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.821714738 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.821244465 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.822779995 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.825003889 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.819971184 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.821367004 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.820838068 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.822603469 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.820623064 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.822040888 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.819004198 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.819054825 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.82108857 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.82129143 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.822867101 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.823898202 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.822444684 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.821096727 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.820240923 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.820482693 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.821973327 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.821389238 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.819522258 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.818544475 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.819232915 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.820267756 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820628987 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.822478212 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.820390225 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.821224921 seconds)
  done (took 114.79154228 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.822380477 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.82132471 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.818984703 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.817757306 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.823323679 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.819305693 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.819724133 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.821556606 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.822606222 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.821148642 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822824455 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.819784261 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821630887 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821512889 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.820993718 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818761472 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.8174534 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.817864442 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820371951 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.817898096 seconds)
  done (took 38.147255036 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.821399226 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.824921955 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.817938028 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.817485276 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.820887393 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.816909399 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.820705678 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817414532 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814105189 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817835564 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.818420821 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.819409278 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818093876 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.814485516 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.819779502 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.815499694 seconds)
  done (took 30.836163174 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.81418701 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.822696408 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.821246431 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.819510844 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.819685588 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.816605395 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.824095628 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.819298724 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.821225395 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.820928011 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.821540024 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.820382441 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.821376519 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.818869549 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.814318429 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.81632045 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.815729255 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.816274742 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.821167303 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.817887804 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.81425379 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.819393945 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.819717752 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.822904971 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.814259015 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.813708491 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.810009119 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.811956585 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.816089265 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.815116804 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.815023931 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.818094234 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.817498717 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.81758248 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.820992651 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.81771095 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.81805429 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.816771798 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.814937786 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.815312653 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.813112852 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.812346802 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.818503354 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.817503916 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.81516296 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.819890883 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.81807935 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.815971986 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.809212345 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.817410363 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.820846995 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.816428358 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.81509675 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.81440784 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.819466726 seconds)
  done (took 101.695418143 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.820467552 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.819319531 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.813894948 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.819012638 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.818941297 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.816931692 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.812740914 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.812258038 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811350774 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.81316954 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.811628299 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.817728636 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813323207 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.819167222 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.814028952 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819273755 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.81393357 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.813614314 seconds)
  done (took 34.416567795 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.813044048 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.81209848 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.815920955 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.809794943 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.811091884 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.817037329 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.814354749 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.819960133 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816417932 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.81133515 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812158613 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.807785529 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808401509 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.810151102 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.811292237 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803609997 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.812260749 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.812695994 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.808588131 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.810345712 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.814138666 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.810551398 seconds)
  done (took 41.593601466 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.812451073 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.809642114 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.827851023 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.832656443 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.832120469 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.846973323 seconds)
  done (took 12.690037139 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812286676 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813246796 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.808518351 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811608525 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812739788 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809342219 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81286983 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807471186 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80849871 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809799651 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808420454 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812262818 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81244363 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808023008 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810322154 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81137254 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808690232 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813884147 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80609287 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806975498 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807808727 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80939356 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809968421 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806084961 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812098932 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812062373 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812063867 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810531749 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811963076 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812755501 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807660232 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805818563 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807794077 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808415252 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808589807 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813060552 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808917443 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814539077 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813475488 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811192553 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.813891421 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810389652 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813666661 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807994496 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810900655 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808153072 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807255554 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80769509 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808632165 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810136963 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814504552 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807668964 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812256686 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811101814 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809675875 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810453201 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809472463 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805626132 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806686063 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809890215 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812092966 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813801922 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810472501 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810485833 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812232771 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809630705 seconds)
  done (took 121.205476064 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813903066 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.805613443 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808271836 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805119399 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807095843 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816770991 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810099018 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807373224 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809811166 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812114933 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813691841 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814105195 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809390308 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807276092 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808360963 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805760979 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808706765 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810972407 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809701903 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812667844 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810865372 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812093495 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809306877 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809200523 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809181742 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810535304 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8101184 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811861398 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808853318 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807065027 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811894471 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812365512 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811687952 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.81177709 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804348077 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810448624 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807664157 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80822681 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809882988 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806095699 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804341639 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812221965 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806277155 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807820281 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809549483 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809913823 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805829881 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805222532 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805212777 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805825489 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805298582 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80640905 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807437263 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805562876 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810710299 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811732456 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808604214 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809495742 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809247648 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810816574 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807425623 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801858514 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809480212 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805109248 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807248399 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806128125 seconds)
  done (took 121.11549952 seconds)
done (took 2521.9451221 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.869858125 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.810772127 seconds)
  done (took 15.410647669 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.967873925 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.923416517 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.811119494 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.847414733 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.804941306 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.827136698 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.822876787 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.807334067 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.806026257 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.80936695 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.809654125 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.996489803 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.800478861 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.804514535 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.806522273 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.903012019 seconds)
  done (took 51.278364176 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.811891831 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.817690779 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.827023284 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.817500236 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.812061103 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.828598795 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.845785122 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.815110267 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.842555455 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.822172241 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.884751676 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.827449495 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.819618947 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.860768419 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.83514699 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.831470707 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.907531556 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.889505688 seconds)
  done (took 34.824790988 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.891681518 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.81209589 seconds)
  done (took 10.439893294 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.820033859 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.842874704 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.885818892 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.809630226 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.818865488 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.817835591 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.848912029 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.838955295 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.845408889 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.826576381 seconds)
  done (took 70.093818204 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.824042242 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.819740114 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.818024377 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.812698937 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.810889012 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.818170682 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.820129951 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.817728793 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.474591273 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.847805783 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.824972672 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.823341562 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.820081708 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.824108591 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.815007697 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.843937651 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.925158273 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.818866969 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.816576687 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.824470212 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.817940358 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.875923003 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.833171088 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.820472837 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.848880723 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.485171611 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.827008871 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.82381792 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.921859701 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.81670435 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.81755071 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.819774484 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.817720676 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.222366186 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.080003807 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.819768403 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.831845803 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.823286615 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.818083381 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.922965587 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.819140183 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.824038906 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.573089651 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.065831211 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.923631649 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.861563916 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.126219409 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.832097357 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.818756618 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.848815686 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.820358327 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.820134299 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.835553148 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.315604508 seconds)
  done (took 129.468623557 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.821133802 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.163097409 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.983580197 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.816137142 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103754286 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029321749 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.819276702 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.860610759 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.811747972 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.05016814 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.074626544 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.921016016 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.817291006 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.813852882 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.81114314 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.811638123 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.976576937 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.887365442 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.822206256 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.81376191 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.844851526 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.06456603 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.942212736 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.815998481 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.843889318 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.034419347 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.941460809 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.925290967 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.606428161 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.816428083 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.875282141 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.81352026 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.819658695 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.813438906 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.972756036 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.913484497 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.896179587 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.819075953 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.817140594 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.814955199 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.48771608 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.019306828 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.917020702 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.956376809 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.012946292 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.023510163 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.603399878 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.81276581 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.569810527 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.982952142 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.049813367 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.058677094 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.940814646 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.81952289 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.348441566 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.819632061 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.816005913 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.065389481 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.959829721 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.914968134 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.817455908 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.814966645 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.810422836 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.06962327 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.817857721 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.911490257 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.819620179 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.809406165 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.915078366 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.917172771 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.955283327 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.034006148 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.849169784 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.694443324 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.356864194 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.067301892 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.88089704 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062653947 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.819352894 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.816192199 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.895247 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.656957448 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.071116087 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.072502457 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.070940085 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.850264539 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.541180788 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.817524102 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.044089601 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.035313636 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.077134576 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.051273911 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.059276674 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.132902455 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.816147646 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.812460038 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.039949232 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.949760677 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.817900187 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.160710029 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.047909749 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.359082124 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.837858619 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.127750885 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.947824449 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.819337716 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.459145895 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.817414681 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.044779488 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.860406934 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.817992558 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.820550976 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.039945495 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.807855181 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.817548067 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.478116066 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.881375592 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.814467166 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.052859913 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.817249123 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088931097 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.816786817 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.058840575 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.884075837 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.850063928 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.050700349 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.054540581 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.820187046 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.064426309 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.064559953 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.930573699 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.041954865 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.526372183 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.819080634 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.107757123 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.8160084 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.817298851 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.993674892 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.817248287 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.964314291 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.813733797 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.118435667 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.843947179 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.054233309 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.820088884 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.078532278 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.850904465 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.871505794 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.820182715 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.952462648 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.821698141 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.647593347 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.975758052 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.814790662 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.817485217 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.61454371 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.816329072 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.970842545 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.055766287 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.254074915 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.894424744 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.492215948 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.82131656 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.900845772 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.840231029 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.219653257 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.821256696 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.069575842 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.819093766 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.816151465 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.81953678 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.061633458 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.001533828 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.820701548 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.817990254 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.729180595 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.818911185 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.817809217 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.001397633 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.201176515 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.81752371 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.023783643 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.819242969 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.948417794 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.821879215 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.899661006 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.159385464 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.815133718 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.819829379 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.819505239 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.819868186 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.821101407 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.086165135 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.846504031 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.34143216 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.959111055 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.094884133 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.130338073 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.074231587 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.863872377 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.821699344 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.076550483 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.822784374 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.881313228 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.817929167 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.845352226 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051883292 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.820232777 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.030299684 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.10062957 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.669497864 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.872240681 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.821234678 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.818366383 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.817816653 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.972080146 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907747564 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.821686295 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.822831509 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.938165093 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.941784507 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.033643732 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.824221591 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.021781291 seconds)
  done (took 892.322546757 seconds)
done (took 1205.567533387 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.820686581 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.819508347 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.819042587 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.815303616 seconds)
  done (took 29.014879174 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.824925304 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.839144095 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.820399002 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.818496059 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.820852683 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.817618348 seconds)
  done (took 12.678092129 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.822902426 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.812117777 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.813993076 seconds)
  done (took 21.182247352 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.889613561 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.206944953 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.921521375 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.241600144 seconds)
  done (took 10.000564245 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.822470597 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.818188962 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.823199497 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.821194386 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.823104838 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.82945111 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.822573399 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.822534122 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.822972076 seconds)
  done (took 18.149015727 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.219914375 seconds)
done (took 96.988080283 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.849516525 seconds)
    (2/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.807371062 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.493049302 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.749052618 seconds)
    (5/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.208766978 seconds)
    (6/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.899922605 seconds)
    (7/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.830046863 seconds)
    (8/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.882857287 seconds)
    (9/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.948238615 seconds)
    (10/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.990238966 seconds)
    (11/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.917696123 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.808492031 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.89056972 seconds)
    (14/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.892165934 seconds)
    (15/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.217207757 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.832638003 seconds)
    (17/309) benchmarking ("sort", BigInt, false)...
    done (took 6.814670346 seconds)
    (18/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.947631814 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.091003383 seconds)
    (20/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.026638206 seconds)
    (21/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.81538558 seconds)
    (22/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.941025275 seconds)
    (23/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.887431247 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.81603074 seconds)
    (25/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.980125542 seconds)
    (26/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.815600469 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.988261864 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.844538593 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.032117668 seconds)
    (30/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.965098948 seconds)
    (31/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.91116958 seconds)
    (32/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.320551805 seconds)
    (33/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.000761084 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.818592087 seconds)
    (35/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.994910247 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.904652875 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.864088619 seconds)
    (38/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.018168156 seconds)
    (39/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.832546198 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.950367223 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.452658661 seconds)
    (42/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.81423037 seconds)
    (43/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.870578083 seconds)
    (44/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.365826514 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.116126598 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.990623569 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.223887593 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.925466527 seconds)
    (49/309) benchmarking ("sort", Float32, false)...
    done (took 5.564460687 seconds)
    (50/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.113118497 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.750637382 seconds)
    (52/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.39197327 seconds)
    (53/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.921233879 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 2.036367584 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.9454281 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.810246343 seconds)
    (57/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.962153837 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.914228247 seconds)
    (59/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.372667123 seconds)
    (60/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.891684242 seconds)
    (61/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.844647445 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.135335599 seconds)
    (63/309) benchmarking ("sort", Int64, false)...
    done (took 5.496673787 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.059140451 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.8362177 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.971537854 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.768155164 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.847133423 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.814115684 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 3.671271496 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.852926974 seconds)
    (72/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.817756185 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.05783563 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.91386556 seconds)
    (75/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.067021069 seconds)
    (76/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.131226725 seconds)
    (77/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.819623339 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 3.475544521 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.116027453 seconds)
    (80/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.303892567 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.838661327 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.000692931 seconds)
    (83/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.924284505 seconds)
    (84/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.115818803 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.857206066 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.64245411 seconds)
    (87/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.106731352 seconds)
    (88/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.834391982 seconds)
    (89/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.208977391 seconds)
    (90/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.612398268 seconds)
    (91/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.054561516 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.033927429 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.800733523 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.812914192 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.015917951 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.902637258 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.920452654 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.161320185 seconds)
    (99/309) benchmarking ("sort", Int8, false)...
    done (took 4.685517561 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.8187809 seconds)
    (101/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.863082155 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.169078701 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.768172868 seconds)
    (104/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.008697152 seconds)
    (105/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.112116929 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.735250944 seconds)
    (107/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.235233046 seconds)
    (108/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.816148072 seconds)
    (109/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.383862682 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.138794288 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.840760455 seconds)
    (112/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.148905778 seconds)
    (113/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.06701354 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.056249419 seconds)
    (115/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.981063653 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.06032427 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.820838279 seconds)
    (118/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.896507559 seconds)
    (119/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 3.670068815 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.642309662 seconds)
    (121/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.207947883 seconds)
    (122/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.52357797 seconds)
    (123/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.907243719 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.951259854 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.033300548 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.081132897 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.847687911 seconds)
    (128/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.288871721 seconds)
    (129/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.850465606 seconds)
    (130/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.719479295 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.821879061 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.487765835 seconds)
    (133/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.341163071 seconds)
    (134/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.121251199 seconds)
    (135/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.813362168 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.276496971 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.059708259 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.506832151 seconds)
    (139/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.256475536 seconds)
    (140/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.825212115 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.051406854 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.063601135 seconds)
    (143/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.82335152 seconds)
    (144/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.050753158 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.853771218 seconds)
    (146/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.830272943 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.251494723 seconds)
    (148/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.024923995 seconds)
    (149/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.844982241 seconds)
    (150/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.819893974 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.921012947 seconds)
    (152/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.488828579 seconds)
    (153/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.206390986 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.939324814 seconds)
    (155/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.754514328 seconds)
    (156/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.816698381 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.823151627 seconds)
    (158/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.07914619 seconds)
    (159/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.832738597 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.841396177 seconds)
    (161/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.818965488 seconds)
    (162/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.20446957 seconds)
    (163/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.921921316 seconds)
    (164/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.203010494 seconds)
    (165/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.070638874 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.846302688 seconds)
    (167/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.846820472 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.975164931 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.371108146 seconds)
    (170/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.647251056 seconds)
    (171/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.984478218 seconds)
    (172/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.814900069 seconds)
    (173/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.405811534 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.825180759 seconds)
    (175/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.125048712 seconds)
    (176/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.900123597 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.146778861 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.944183489 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.818154451 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.846940577 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.898264176 seconds)
    (182/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.978206035 seconds)
    (183/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.903648364 seconds)
    (184/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.825001331 seconds)
    (185/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.946801063 seconds)
    (186/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.928911802 seconds)
    (187/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.851839887 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.824978154 seconds)
    (189/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.964024692 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.981010691 seconds)
    (191/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.013296527 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.746087237 seconds)
    (193/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.010658198 seconds)
    (194/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.071333426 seconds)
    (195/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.406296697 seconds)
    (196/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.99529216 seconds)
    (197/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.937407208 seconds)
    (198/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.072047622 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.165663809 seconds)
    (200/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.820206289 seconds)
    (201/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 3.167101526 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.067014005 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.074700155 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.033803237 seconds)
    (205/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.823744484 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 3.07068444 seconds)
    (207/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.805320792 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.920653237 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.933216224 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.91564497 seconds)
    (211/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.890186669 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.945652592 seconds)
    (213/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.904486697 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.891356972 seconds)
    (215/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.081304851 seconds)
    (216/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.851533654 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.471699599 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.223275924 seconds)
    (219/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.148859356 seconds)
    (220/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.189207937 seconds)
    (221/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.822327325 seconds)
    (222/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.88778999 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.067951284 seconds)
    (224/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.260611155 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.143209086 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.819689629 seconds)
    (227/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.214270063 seconds)
    (228/309) benchmarking ("map", abs, Int64, false)...
    done (took 3.199922237 seconds)
    (229/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.938121995 seconds)
    (230/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.970564071 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.572336187 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.027314665 seconds)
    (233/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.963508577 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.531577502 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.832685028 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.965546123 seconds)
    (237/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.979371964 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.853951738 seconds)
    (239/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.922613781 seconds)
    (240/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.915560003 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.826002883 seconds)
    (242/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.96093503 seconds)
    (243/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.340283617 seconds)
    (244/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.83344957 seconds)
    (245/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.174391237 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.134601309 seconds)
    (247/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.170818822 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.251994337 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.837735629 seconds)
    (250/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.995537744 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.214468022 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.086243673 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.841441213 seconds)
    (254/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.352428993 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.988850037 seconds)
    (256/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.834919125 seconds)
    (257/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.144165638 seconds)
    (258/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.936352109 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.983224263 seconds)
    (260/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.766550342 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.221577391 seconds)
    (262/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.841026665 seconds)
    (263/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 3.067161583 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.005608286 seconds)
    (265/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.854748118 seconds)
    (266/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.847133923 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.213374568 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.964493216 seconds)
    (269/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.837167926 seconds)
    (270/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.946383758 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.185316548 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.976869142 seconds)
    (273/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.988601516 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.867827875 seconds)
    (275/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.846240978 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.788767553 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.242880477 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.860782893 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.952265862 seconds)
    (280/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.960933857 seconds)
    (281/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.837796196 seconds)
    (282/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.703937644 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.202136089 seconds)
    (284/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.8545005 seconds)
    (285/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.482940006 seconds)
    (286/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.285310194 seconds)
    (287/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.042469617 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.841914083 seconds)
    (289/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.032810451 seconds)
    (290/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.834757841 seconds)
    (291/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.49489372 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.920123681 seconds)
    (293/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.922080391 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.231066265 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.84447753 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.605994924 seconds)
    (297/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.93761224 seconds)
    (298/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.925466396 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.841971215 seconds)
    (300/309) benchmarking ("sort", Float64, false)...
    done (took 5.757731119 seconds)
    (301/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.993044891 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.873593484 seconds)
    (303/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.74409251 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.871704104 seconds)
    (305/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.116638424 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.844049965 seconds)
    (307/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.833108017 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.090952358 seconds)
    (309/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.858384173 seconds)
  done (took 995.320841423 seconds)
done (took 997.121656639 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.873815818 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.867761507 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.852814507 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.870906431 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.961410551 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.882801941 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.860267504 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.852994755 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.897232099 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.901924201 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.850721726 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.878998834 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.852742953 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.85362164 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.851579889 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.866724167 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.168494398 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.884930865 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.867483509 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.861017282 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.867907819 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.850440822 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.902044277 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.87896014 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.857404977 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.854530684 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.860707021 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.871131623 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.963311956 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.852879785 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.854928774 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.862797136 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.168570456 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.88274425 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.848517343 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.873195083 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.865383234 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.861985334 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.85717994 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.883099415 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.254555791 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.889384239 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.854319979 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.853718829 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.854315991 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.857316091 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.853813392 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.862122224 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.867840371 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.86733234 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.250791068 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.908435179 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.855365101 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.853759005 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.863905932 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.852079513 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.857494554 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869117083 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.872959857 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.870210254 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.151530664 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.892549533 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.855657222 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.872976953 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.860340032 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.286560271 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.889967649 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.857918969 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.25827011 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.901419377 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.284144564 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.903845388 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.85361863 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.868482281 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.885759447 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.170240337 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.879490453 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.853612696 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.862932911 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.851772178 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.865919786 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.868156293 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.861359393 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.858447721 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.869102522 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.883275116 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.863712856 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.855534175 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.863175796 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.875418975 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.86225186 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.866408257 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.859930586 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.851943008 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.86745504 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.858975714 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.857045787 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.856634199 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.859424434 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.864711249 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.254016525 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.91510916 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.855544529 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.857502558 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.861073689 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.870945641 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.256663774 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.900511517 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.879288656 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.905233096 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.860794011 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.155829425 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.891247909 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.874968382 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.868256394 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.863879965 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.854815337 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.156940116 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.286666408 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.918665061 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.862684766 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.853397445 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.873335532 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.860865437 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.855909596 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.177670307 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.89280211 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.871842976 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.98230267 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.869889939 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.892093314 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.855201901 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.862358007 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.89072891 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.87406484 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.888682482 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.863298728 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.875694552 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.875887238 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.857064406 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.872259342 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.87332525 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.863091052 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.865901529 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.853264142 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.89031906 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.871259563 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.871617159 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.881012336 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.980485253 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.858817637 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.156928175 seconds)
done (took 291.784190385 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.930492772 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.847006865 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.950164472 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.856455801 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.939356472 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.942000331 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.854256286 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.853775568 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.853571631 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.225410681 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.853413222 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.863301287 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.852577835 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.856739225 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.939778993 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.858130895 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.855157507 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.190459035 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.859809859 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.927168724 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.850692797 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.856239072 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.859269703 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.240381072 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.858711849 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.849186778 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.928172199 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.857369068 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.20148501 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.855847517 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.854449636 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.200619233 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.947786772 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.875127518 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.868012294 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.865086309 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.938169078 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.861146317 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.936491011 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.93667915 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.953974175 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.897168239 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.860161359 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.853650925 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.860627135 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.857814306 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.855571786 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.885644172 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.853354526 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.857424336 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.193737045 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.869093511 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.85827029 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.856209439 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.855797439 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.890674356 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.856241631 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.858760581 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.948626739 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.85796149 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.922097786 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.242355699 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.22955137 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.859369008 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.860716869 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.85572372 seconds)
  done (took 183.4709528 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.92294837 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.938198807 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.925415462 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.861477403 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.908399555 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.925630331 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.864503905 seconds)
  done (took 15.118941957 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.864893953 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.859720975 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.909817225 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.909327907 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.860907161 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.01402009 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.861480688 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.871502971 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.858709598 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.912286122 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.860826813 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.860357001 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.866931242 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.852426038 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.909358035 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.871330907 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.97609345 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.863203159 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.86255165 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.00854364 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.858258616 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.866292852 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.892775734 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.869777752 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.861027584 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.866281217 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.427629919 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.862217229 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.859677465 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.861694491 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.859225283 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.900738138 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.866196152 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.857431794 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.858063387 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.976936673 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.862693726 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.859516762 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.862601913 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.8625645 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.860261373 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.860700055 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.861414273 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.859402579 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.861684873 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.884077474 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.86279889 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.862855638 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.86386514 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.863034335 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.893369958 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.860482344 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.858393951 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.85849501 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.913511133 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.867802849 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.861544389 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.859744814 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.862549261 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.862230009 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.011730265 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.9120276 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.862943434 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.91222203 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.861963317 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.863643552 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.86146067 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.862548665 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.958561395 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.864768659 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.91405073 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.859895718 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.020059855 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.885817693 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.862795835 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.865442014 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.864368231 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.860507981 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.861595275 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.868665482 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.859860172 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.864048531 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.867650126 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.861371283 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.85949744 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.973810714 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.966762305 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.860354111 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.874416945 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.87046704 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.860643003 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.897696428 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.862734475 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.86016635 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.919447707 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.978079264 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.915232512 seconds)
  done (took 204.948224041 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.866557222 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.872488881 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.863635956 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.879219831 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.86316169 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.863623956 seconds)
  done (took 12.985285919 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.866167663 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.863351743 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.86257513 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.861592251 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.861627118 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.864806748 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.864129267 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.866349692 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.868354418 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.865504572 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.865854705 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.868677384 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.865137576 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.864327969 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.86385636 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.864348421 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.863416375 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.860177403 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.863367324 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.865892024 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.008718619 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.866183191 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.865636647 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.867171028 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.86893274 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.86591853 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.872900817 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.863678977 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.863627078 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.872658591 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.868186015 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.867667545 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.866292527 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.871670231 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.869612164 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.865942591 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.871396628 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.869791744 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.863796913 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.865833892 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.868545793 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.865013828 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.86815535 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.869695029 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.870301689 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.872790118 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.874486848 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.875065003 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.86690088 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.868598578 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.870147638 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.865669772 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.867417504 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.870403168 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.869692702 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.873306469 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.875672838 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.869203107 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.868663357 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.868794959 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.868894042 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.868678184 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.868742864 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.873027916 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.874159412 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.870567848 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.870585055 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.871775209 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.868505436 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.868883311 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.870677574 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.865359034 seconds)
  done (took 137.405480056 seconds)
done (took 555.719845284 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.029027823 seconds)
  done (took 8.808411318 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.877557171 seconds)
  done (took 8.6973187 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.409345339 seconds)
  done (took 10.191259985 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.868095929 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.875202567 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.867133721 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.861314906 seconds)
  done (took 29.272440777 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.958688687 seconds)
  done (took 8.739206262 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.884031427 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.857884887 seconds)
  done (took 15.544379462 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.863335734 seconds)
  done (took 8.644787515 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.946186096 seconds)
  done (took 8.750168522 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.877569101 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.897547512 seconds)
  done (took 15.570762196 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.85574387 seconds)
  done (took 8.63631729 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.531329573 seconds)
  done (took 11.406420034 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.88698595 seconds)
  done (took 8.767399895 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.940463759 seconds)
  done (took 8.721642054 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.122041462 seconds)
  done (took 9.904165362 seconds)
done (took 163.435145899 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.880104314 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.863740718 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.862085758 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.861195418 seconds)
  done (took 29.247022129 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.900530784 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.90138688 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.902096067 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.910496507 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.904048179 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.900049337 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.894345342 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.894894427 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.911583688 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.906605108 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.905558135 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.90421668 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.901466104 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.894843414 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.904236455 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.90383381 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.911636267 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.902009384 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.894768681 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.905110202 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.869980597 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.912575133 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.903602286 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.86972041 seconds)
  done (took 47.392350598 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.064260639 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.935564981 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.018982714 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.919428584 seconds)
  done (took 9.718892478 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.922617632 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.921790633 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.932436901 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.97369689 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.004967754 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.933055004 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.894346367 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.888892655 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.87582512 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.921102322 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.99784576 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.916476739 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.007911926 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.869084818 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.047591035 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.871028837 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.869290778 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.922020355 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.972785321 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.985448365 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.869074421 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.921168138 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.923531391 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.917438546 seconds)
  done (took 48.14060037 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.868182796 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.877325061 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.877261309 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.867840852 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.868421452 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.868083781 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.8772963 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.869570314 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.888501744 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.869153549 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.869650159 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.870644464 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.869152898 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.869112817 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.86900066 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.881189545 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.882241282 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.869870544 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.874239381 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.874895011 seconds)
  done (took 39.244820059 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.86490941 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.716999338 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.220003326 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.11973509 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.86572607 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.868449258 seconds)
  done (took 31.438199198 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.889323501 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.873843403 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.87087563 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.927990665 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.012576866 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.874407573 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.875081535 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.884451137 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.917149591 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.938613354 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.890752385 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.904250329 seconds)
  done (took 24.644477939 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.867025049 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.876276847 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.867682781 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.888243458 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.883002886 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.875088396 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.882950765 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.864931705 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.88345224 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.892654644 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.877158689 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.884806548 seconds)
  done (took 44.331931432 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965823056 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.75591899 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.503042475 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.576970847 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.39955397 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.075209439 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.395958925 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.037194686 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.865951587 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14013596 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.505839689 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117194721 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.119369582 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868079885 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.933178079 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.347954127 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171144864 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092589569 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891088703 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.644916876 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989466278 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.331459988 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.74410016 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.004347358 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.076187039 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.996172547 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.129840266 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.821665328 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007168973 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90863307 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877512008 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.867840111 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144044434 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082024035 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99761951 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876116782 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.521999491 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.586386398 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.880141112 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.591397482 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.621180195 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.007445217 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878456775 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87009855 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.800783866 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.293219671 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14513708 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.87592437 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.570496661 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.871273588 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877338971 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960714002 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.873603152 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.689592227 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821242519 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.144698947 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.866889016 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874990777 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.439001536 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.000758339 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410803551 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.907113364 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.967867913 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.604948754 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.350489965 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.031709351 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.877809253 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.873690651 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803042199 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.648337866 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000390676 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.013108994 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.889515396 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.521450537 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17019517 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.599034473 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.96256627 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156490298 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.635264171 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.907798494 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09597079 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.826192309 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803218152 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.708779421 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.806087774 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13050584 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904408732 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.530009849 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905900502 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.040019384 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.878314263 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891197353 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88121017 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.095318493 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.762105744 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873007373 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.472301087 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157893384 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892369148 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.046916237 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803137006 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.874527918 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126256238 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.080163866 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.018789685 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.46161891 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038329349 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872300151 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.955314422 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.710593786 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.983389132 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.156890544 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944309227 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.011439374 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005485649 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.827777152 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167891827 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896036984 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.042994454 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.559967986 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141247134 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.19983477 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.12219246 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955571517 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.873987716 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.876896428 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.667344907 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.50059376 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.097358754 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.883951726 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276880517 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.984459699 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.872910174 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808705433 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.494302176 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.552487943 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.992529969 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.096024281 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.732389423 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.251084555 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807858658 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.018335497 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.984896645 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.093952106 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.544223318 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.958281255 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134562532 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290755862 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.114120566 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988576555 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895760142 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979548716 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897971869 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.214310723 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.236818906 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.87960368 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.879434296 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.679084212 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.948478778 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886917338 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.884199424 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.730728646 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169074746 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.913768708 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.879601077 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.814110659 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.891938568 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96051772 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.883212388 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.885260026 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.401462244 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.624950174 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.886868306 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.559439914 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110899748 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888245549 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.619079335 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072781513 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.965960973 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.160287568 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950536333 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.810635498 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.582349626 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.582387142 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879199761 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812708861 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.881758656 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889699618 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889773937 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.077434941 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.168263243 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933755496 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.667139583 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.003084199 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89044338 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.885191101 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880408786 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.401380183 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.057609084 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41383625 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.992585401 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014881778 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.891673473 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.811182377 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.88314854 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.883018236 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.879859222 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.843256103 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931423877 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.628400748 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223977687 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135217448 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.535124313 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897534707 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.693634011 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.017231627 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.900206459 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.519103411 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868822305 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.982520703 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927414635 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.889659144 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.617273893 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.652021275 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.526055045 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199294114 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.2223214 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356515023 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.274928611 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.202119558 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.054868715 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114807436 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.410738648 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.942475736 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.060482535 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823336435 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963967808 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.551277578 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247950966 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896112775 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11216224 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.284253262 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.575472781 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049035028 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.090735446 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916544608 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.708678682 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.911107002 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.414956666 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037195181 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.548090806 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109215274 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053744044 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.535250913 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.999472959 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.883218137 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.341577892 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964863739 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.591930799 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.24426153 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.311528079 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.678130675 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259805497 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.885507913 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.328050626 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254568043 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.132117313 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.072654541 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817056378 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.895426072 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.894971744 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.894200368 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.862604441 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.788204398 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.158663368 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896131898 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119143372 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.065936726 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.268286344 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.799783162 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.886931316 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885153033 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176867026 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.574142855 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126346785 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.228798233 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.455866624 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890132989 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.819339595 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819388536 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.587199903 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.894611655 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.861351234 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107541553 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.997346141 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.83618 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287651867 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195729221 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136686927 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.899811675 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.178025863 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172205466 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.619311744 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911385172 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.984789642 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.509040822 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.605338892 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.109169267 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.121106456 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.690046882 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.113854313 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.529793867 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.866069852 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.885150531 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098132781 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.106198549 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.580003404 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144770168 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.608004235 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.893605473 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232074308 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951233949 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.579421736 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.101798988 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.979597388 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892446024 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965608832 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893814956 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.895351538 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.896492519 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93096206 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.591244722 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.029197214 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.899831969 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977580576 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.053343525 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.47492065 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.893689303 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177463298 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270964974 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.240816678 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957072846 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.885686934 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893176177 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81902914 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023339162 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.3326303 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161166792 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.014544602 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.026262343 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909795611 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.516784786 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.179566874 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198746834 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159772348 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.780874976 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887633632 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.980586847 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.110241626 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898482952 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.09582745 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111988284 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20223397 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355760234 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.047626014 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.159812903 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158854356 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.26028156 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.887811502 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.476678198 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.900906635 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.370518641 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.925205019 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.578114796 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181151299 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898046084 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111378258 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.909060777 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.088930898 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.34304886 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.699811765 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.261679159 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.881680058 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.948417554 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182124478 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.307754742 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212923508 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96771333 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898132349 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.587236674 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029680803 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.841802815 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.154156228 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.889137132 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100578191 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.600536831 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.903021348 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185856864 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211722394 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.887785797 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.867684303 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952359763 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.897078925 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.114547499 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154654756 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140295688 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899618573 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.900434624 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.706995119 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18395983 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958902009 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823590069 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.893074896 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988400854 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.135979291 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909914467 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.408524881 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.592595149 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187927783 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.808749796 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912966453 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.308398937 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351398861 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244551849 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.420594102 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117683714 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.449056395 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.761768067 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.262136863 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.89473881 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.314248233 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.268417158 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.896537137 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405239381 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000923792 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.177953522 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224459493 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.897273961 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739186618 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.943645799 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115492533 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.480212862 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830483726 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.899568884 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.964601807 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895189893 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.019016153 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899665065 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.911058468 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790732852 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.729554648 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383870216 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.895139173 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.023884485 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.553523627 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.465253518 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995617991 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050929848 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898356949 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.681544463 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.186831593 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.147598873 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.415293928 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.972894994 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.89842382 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897054853 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.823192378 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.090423212 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.087494243 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188421846 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.244569265 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.002299528 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.898593781 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.109118954 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104372632 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.583097743 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055325804 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289677442 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004877945 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.833008557 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.608398603 seconds)
  done (took 1686.609512816 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.924085604 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.932752857 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.982615458 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.93357638 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.921201631 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.938248738 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.962315609 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.919637624 seconds)
  done (took 57.32685778 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.89213118 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.075970746 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.900687824 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.89268447 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.97931582 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.894343164 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.102337987 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.902284446 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.933712114 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.90170692 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.895633052 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.890997324 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.823046926 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.921178231 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.895944936 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.897843524 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.904615951 seconds)
  done (took 75.582456429 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.897787691 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.287164133 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.940334007 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.917727525 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.94760443 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.901537216 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.13017149 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.904371389 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.895762225 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.067467457 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.234946303 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.908598996 seconds)
  done (took 90.846947502 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.911036807 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.902476747 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.901512193 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.901673595 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.901580334 seconds)
  done (took 11.340559548 seconds)
done (took 2197.740617306 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.138046727 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.093530818 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.135479727 seconds)
  done (took 6.042112697 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.042587395 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.092110894 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.21258857 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.21741451 seconds)
  done (took 10.382774445 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.186708188 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.266627527 seconds)
  done (took 6.268521713 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.225196441 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.917000526 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.275845037 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.897170674 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.897899388 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.89981077 seconds)
  done (took 22.515485757 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.903707836 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.903994241 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.902535876 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.904305894 seconds)
  done (took 9.4310953 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.892400002 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.605286509 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.891204157 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.907939769 seconds)
  done (took 21.111969247 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.648552821 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.024444693 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.643711171 seconds)
  done (took 9.133178806 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.439962767 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.133232913 seconds)
  done (took 9.388727056 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.058591567 seconds)
  done (took 3.87447032 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.928722442 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.171158751 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.390692276 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.406388657 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.481293238 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.73501087 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.240596632 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.133295209 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.339171323 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.357652524 seconds)
  done (took 25.000628077 seconds)
done (took 138.518449106 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.252633909 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.929825698 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.101950243 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.25717176 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.135911384 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.099649519 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.117669583 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.26745986 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.042778987 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.06857325 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.353890225 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.129961386 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.060309722 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.916306806 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.071420686 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.915480702 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.126462973 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.299807507 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.94978366 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.164711664 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.12684214 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.913365571 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.101187663 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.926738547 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.129419272 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.050603404 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.454652681 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.921631909 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.080349425 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.467253419 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.051492115 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.305432329 seconds)
  done (took 169.606731513 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.900181739 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.898651034 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.899057069 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.899074897 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.496235949 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.901683078 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.900462726 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.898174042 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.368183799 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.351430256 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.899341832 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.478392279 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.900934489 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.899222641 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.900193444 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.898949915 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.523651317 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.899975336 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.89847081 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.899364685 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.899522308 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.344989166 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.901596154 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.358006935 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.515388574 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.900186546 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.900695947 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.901712502 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.898795948 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.898653551 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.90144268 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.899198342 seconds)
  done (took 210.853836884 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.851407531 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.901677719 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.899812404 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.902138229 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.909806147 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.899427429 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.902639927 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.901524956 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.5111282 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.494884044 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.902900354 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.901648488 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.900063218 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.901541703 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.901505053 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.900049655 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.916723035 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.885934934 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.900746788 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.904644221 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.902776469 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.491277333 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.900796359 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.509021416 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.916915694 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.90081438 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.901075671 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.901474557 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.900493994 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.902193695 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.901941325 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.901714612 seconds)
  done (took 221.042361495 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.160429545 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.911779549 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.910669662 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.839358931 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.910350335 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.908840543 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.902290617 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.16292089 seconds)
  done (took 19.531200045 seconds)
done (took 622.85703531 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.368818921 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.219166651 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.089979743 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.932140767 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.201813488 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.96444365 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.927552202 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.993660265 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.559810155 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.002972636 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.602608121 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.950757226 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.684668923 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.956840785 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.046209822 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.985812344 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.513783571 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.609516004 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.105292019 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.022708391 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.099269185 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.859616964 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.009723565 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.589610533 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.703560783 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.906271101 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.988651415 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.521527525 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.941542963 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.091515043 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.68193402 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.25306009 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.942494312 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.924479891 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.981201172 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.964114 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.200424038 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.941202176 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.053539356 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.655835576 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.001863244 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.462698102 seconds)
  done (took 104.335099234 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.91146051 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.907062451 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.905984431 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.910817958 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.908636995 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.909962457 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.909369764 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.908619963 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.909135491 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.907748594 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.907015684 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.907934818 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.907270347 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.908414346 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.909454223 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.90883489 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.910002192 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.911220872 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.909889804 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.907612237 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.908471988 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.908047296 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.911341036 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.908556533 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.909061224 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.908726089 seconds)
  done (took 51.464489148 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.914429354 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.064349326 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.156503774 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.934166547 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.912360152 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.914876258 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.92923048 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.916303089 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.915143606 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.913120062 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.020671525 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.919986817 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.931282106 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.159249729 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.932250255 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.913595948 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.914398137 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.912077118 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.07034041 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.928267527 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.93147662 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.918800663 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.933858313 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.925967795 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.914833368 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.915356293 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.917693317 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.361303345 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.921620945 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.018447805 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.958891257 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.937167642 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.295049486 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.158663866 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.970478353 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.925750105 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.915491514 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.023451751 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.918497894 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.912166637 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.931844419 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.916802653 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.148568182 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.395686132 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.928905987 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.915109734 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.370444149 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.03125934 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.953981483 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.924187 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.15177455 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.931512736 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.915728265 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.914480549 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.950860073 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.921025877 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.916150959 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.211032232 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.926324684 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.93309371 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.918956588 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.914623914 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.075099212 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.92207115 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.066533106 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.923748133 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.922883748 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.916363948 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.155385485 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.934109407 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.395491008 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.929335195 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.913995345 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.02047242 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.067383582 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.389557772 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.927262598 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.07630862 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.317938388 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.940420646 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.922609793 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.348140917 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.945366919 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.922359194 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.919248315 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.919852344 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.917532104 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.961907112 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.934334158 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.334655945 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.405097404 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.234925436 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.943560184 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.929401733 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.916211398 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.213040591 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.923317749 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.915329308 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.153875718 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.407900361 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.930158181 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.925271772 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.386776247 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.932231587 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.935940318 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.922961236 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.153341695 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.931125854 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.960907028 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.918000763 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.92308405 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.918161692 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.936021362 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.92226545 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.917148559 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.387355283 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.042789063 seconds)
  done (took 237.106306447 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.912608226 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.916262729 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.910560229 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.913811543 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.912473298 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.917321652 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.911377599 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.909596047 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.917767774 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.911567493 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.911508071 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.91433022 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.917326115 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.989178719 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.919375758 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.917353335 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.519900561 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.912096096 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.912593893 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.913789109 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.568329786 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.918329701 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.912522924 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.912965005 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.915024935 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.915149217 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.9542261 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.915378486 seconds)
  done (took 168.802974863 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.919261945 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.035114162 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.935159774 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.947075327 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.925991999 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.915873112 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.94487997 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.934755809 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.924381251 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.918096448 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.917622361 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.981253843 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.930977284 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.016411879 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.949190941 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.948671816 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.021353469 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.926155595 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.919409676 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.919008081 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.950922225 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.92278088 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.982580851 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.050043739 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.936938803 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.036051015 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.931475443 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.920418052 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.918088201 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.038356717 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.935990564 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.981379847 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.95215756 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.936969421 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.039032097 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.035458 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.023793485 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.946941026 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.921585711 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.919616259 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.920737673 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.917387265 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.03828334 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.938878807 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.921007436 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.037180785 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.938033906 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.921382538 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.929771138 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.918364412 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.931992805 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.937561253 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.987109082 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.054263065 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.955524023 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.948152733 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.946476388 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.220635859 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.930551741 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.018826145 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.920374851 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.037876553 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.94208759 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.919181835 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.925280332 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.928793574 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.952960678 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.951921349 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.024852503 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.925367083 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.021368307 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.954860513 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.926499449 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.920073905 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.925242028 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.039983423 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.038822502 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.95672943 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.959117483 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.95058517 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.924376599 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.921112248 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.918849561 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.938072733 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.924027217 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.040149419 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.038990502 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.928248935 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.925095324 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.923912843 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.923218422 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.946779742 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.044215006 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.955798559 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.023664261 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.987463355 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.997345089 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.937169564 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.936135747 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.926302991 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.986554 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.937067674 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.93307696 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.268244884 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.992366535 seconds)
  done (took 208.058945979 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.372952542 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.972604428 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.978227358 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.255336064 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.274722418 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.987262161 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.971123299 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.968217616 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.991846839 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.158812923 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.04209769 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.992405059 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.957233385 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.943811238 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.972067933 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.990789307 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.981943721 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.291030581 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.087437222 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.139117479 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.950497252 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.275672097 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.249447624 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.379423067 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.008534277 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.323439171 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.622879489 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.122682951 seconds)
  done (took 63.103121218 seconds)
done (took 834.692835412 seconds)
SAVING RESULT...
DONE!
