cset: moving following pidspec: 8550
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.991589971 seconds)
loading group "string"... done (took 0.541156481 seconds)
loading group "linalg"... done (took 8.864486429 seconds)
loading group "parallel"... done (took 0.16796835 seconds)
loading group "find"... done (took 1.420330606 seconds)
loading group "tuple"... done (took 2.092245229 seconds)
loading group "dates"... done (took 1.375917692 seconds)
loading group "micro"... done (took 0.217948325 seconds)
loading group "io"... done (took 0.63186871 seconds)
loading group "scalar"... done (took 42.557658998 seconds)
loading group "sparse"... done (took 13.178091929 seconds)
loading group "broadcast"... done (took 1.068852502 seconds)
loading group "union"... done (took 14.478688953 seconds)
loading group "simd"... done (took 4.985677541 seconds)
loading group "random"... done (took 10.058477825 seconds)
loading group "problem"... done (took 2.189302132 seconds)
loading group "array"... done (took 25.640147771 seconds)
loading group "misc"... done (took 1.087201851 seconds)
loading group "sort"... done (took 3.655655796 seconds)
loading group "collection"... done (took 21.620526403 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.65063451 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.136719395 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149514573 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.197509017 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20988501 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14718509 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.165454664 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.562772081 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.019370313 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.212695165 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.145385466 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.548667466 seconds)
done (took 5.870711175 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.255653512 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.438589826 seconds)
    (2/2) benchmarking "String"...
    done (took 0.128582472 seconds)
  done (took 1.241693781 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076954927 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.178187805 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095298553 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.110440217 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110988318 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110688895 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.110302795 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.095537493 seconds)
  done (took 1.487876387 seconds)
done (took 3.74569973 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.482951459 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.845981218 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.492106511 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.129597866 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.161805757 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.149696192 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.319295212 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.165724161 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.120203906 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.113252773 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170980345 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.347244781 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.486808317 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.940724881 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.11025898 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127824937 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.083250154 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.703404994 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081489607 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.134640874 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.536782043 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.112269217 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.123567224 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.142148445 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.204251223 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116747905 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.179533714 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.111384754 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.670448611 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105673974 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185403775 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.100598694 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162599417 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.25128135 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.096681118 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092570148 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681573571 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.192686633 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.113682261 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.095501685 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67134375 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08058029 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.192088515 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107512208 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.114071629 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.194002508 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115506837 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.07971961 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.102346337 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.101220127 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159733477 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.464482656 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107717208 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.146765816 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110724044 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.679670185 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096915645 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156765836 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.141449232 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098581071 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.097499337 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.11253837 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154973287 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.111903547 seconds)
  done (took 19.556996239 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11687569 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139999619 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095296873 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139740981 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140286277 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096942075 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083030403 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095615341 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125405442 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.186143954 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136963316 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.126506623 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092197076 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079958315 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117129612 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249325299 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120530754 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106033758 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.097623481 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090971546 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.14056797 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111796822 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092883646 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110199914 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170205625 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206568472 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.122199177 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123204838 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.078540459 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114331079 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142728914 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.161983641 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077574025 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095761652 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.183589355 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121051155 seconds)
  done (took 5.179273336 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.198404025 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.11717389 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.191712686 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.17869358 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147423006 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.18228203 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117817018 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252172788 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.259154518 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.186559677 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130051272 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095835299 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095264773 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080737955 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09490672 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.710127009 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.184058667 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.153862682 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.124683267 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0887009 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100038959 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.378012142 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101260026 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081327417 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102845206 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072749325 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.175672768 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104542528 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.264324864 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118780256 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088727157 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134576292 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.211575778 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116518308 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.165837008 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142810545 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105277183 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08167887 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.10330085 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.213635566 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.109982257 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076574539 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.126585919 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134282809 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13369718 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099276235 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.093447465 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.242057107 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082293686 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120431842 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.102163997 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083581437 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199276757 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.109886128 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097109343 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.353573605 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099062958 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105211182 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097682674 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.312853766 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133541787 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082408454 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095263431 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085879055 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095708446 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.403121631 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089690596 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.155445661 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095590895 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157481494 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100200064 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105965206 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084907042 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102677142 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101857856 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098379697 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07820071 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098315819 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07848372 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102641695 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113785907 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084325015 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096803348 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147418676 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114859797 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120151844 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109332859 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100145291 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095551409 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111857091 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098030095 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082334489 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.145858108 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104660712 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114158116 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099814294 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127141278 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097053921 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.209719161 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080780548 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09825416 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108886536 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100735269 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129569972 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.119513169 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079140027 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102322441 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095088596 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081332144 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159665973 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080506832 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096438903 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084628248 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111201414 seconds)
  done (took 24.095140286 seconds)
done (took 49.503959898 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.449155919 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094603642 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.113815433 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112539103 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.111235773 seconds)
  done (took 1.629510075 seconds)
done (took 2.350552631 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.352248789 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.1763747 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.120440181 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.179466031 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.104287998 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.186009351 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165403273 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.117723707 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.196065343 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100932686 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.176092325 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100304379 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104839064 seconds)
  done (took 2.831204062 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093526094 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119213234 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081143389 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110446094 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075214085 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109463954 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091289458 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.13035045 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091531297 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102430648 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075708295 seconds)
  done (took 1.800071207 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090366473 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114489624 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081280995 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106407417 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075348921 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106000204 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090057629 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115956126 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089466945 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103117856 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075452535 seconds)
  done (took 1.773102471 seconds)
done (took 7.117772762 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.056649441 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.517136751 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118843538 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165221359 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.340162947 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.213275141 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.529407866 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132037037 seconds)
  done (took 11.983088734 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.129493875 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097688712 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099419053 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.080837888 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099230508 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.079237678 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094603252 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.083567352 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097081492 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.081845906 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095341782 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083379954 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.098019948 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.082961511 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096353296 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.080923879 seconds)
  done (took 2.264341329 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116633888 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115029401 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103107924 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107948392 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084043399 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101731018 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.086187501 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101582413 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099200806 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.084038408 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.106798813 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.088789998 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104163716 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098718526 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.087415136 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107174151 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08262535 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102995595 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.103804114 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.086774709 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106615932 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.084523943 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104831696 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106236806 seconds)
  done (took 3.20361665 seconds)
done (took 18.175671668 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.168723746 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084786739 seconds)
  done (took 0.97994158 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.101186369 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.118010821 seconds)
  done (took 0.951282054 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105539355 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09640294 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.1352146 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114319179 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0823754 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096942264 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.130707716 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081772436 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097366919 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082231602 seconds)
  done (took 1.754878814 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084500287 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10202847 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.08916561 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.11845973 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109137337 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083369486 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102830504 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084417249 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103669279 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079690589 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105022906 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116916151 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087175071 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117645664 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103561599 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086562195 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106636768 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.10146321 seconds)
  done (took 2.515878507 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081400942 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082582928 seconds)
  done (took 0.896930834 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08323872 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095925672 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082677575 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099757142 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079539609 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095825712 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079623451 seconds)
  done (took 1.351759615 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.681746188 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.241690124 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337744365 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.115190714 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.135342246 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.386341101 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.135840433 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112980191 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.214808415 seconds)
  done (took 3.13827016 seconds)
done (took 12.31934733 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091597605 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.188750607 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.529447224 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118952772 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.079386282 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.15896403 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.258796092 seconds)
done (took 2.168359762 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354886711 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.123757851 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089015283 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078939351 seconds)
  done (took 1.381268574 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078915923 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102650595 seconds)
  done (took 0.923989395 seconds)
done (took 3.049387907 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.110925323 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097014596 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077407362 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.09560211 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.075780979 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097004156 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.075975874 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.092056504 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.077852761 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.077664308 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096014316 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.078333708 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095359659 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078061538 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092369376 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076003196 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095103781 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.075707973 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093193771 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075726358 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079191773 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095571623 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.07552578 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.092920512 seconds)
  done (took 2.852494439 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098459132 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097070868 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084480013 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.102292229 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100405436 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084093233 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101074404 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.078922553 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.1016079 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081690424 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099312 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.099779281 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.080963174 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.100028155 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08132585 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100257052 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084869577 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096022662 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081579915 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09990776 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101496505 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078972033 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100440095 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084788461 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100305091 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082792488 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.098823066 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096896199 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085416242 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099667583 seconds)
  done (took 3.527545243 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086989261 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.075367446 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093667324 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105518948 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077238447 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079677693 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.093474723 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076897722 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09551145 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.077272494 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.096359347 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.076030771 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094536864 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077477029 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.095417941 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083285121 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113120223 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076968514 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09448489 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077054923 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09953334 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07670691 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097364775 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.075905373 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093531494 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076969178 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.076960375 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.093019791 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.076643262 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093636411 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082195691 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100274135 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.076232829 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.1074537 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084066108 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093714667 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084854112 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093628057 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077319427 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094271895 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076205076 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094394843 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076773804 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105156504 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079997867 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09497548 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076395906 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095510991 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077217673 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.080127106 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.093267493 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.076695682 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096121671 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078714082 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099749946 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076650396 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095049726 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077188279 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095939552 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076243144 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094717394 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075997647 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100558174 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07753298 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.118619536 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088567783 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094129297 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078814707 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098318702 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084249628 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096387097 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.09567035 seconds)
  done (took 7.072582397 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08201415 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105448648 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07869036 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095908203 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07515879 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095439235 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084579762 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094576305 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078683991 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113008267 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077572742 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096259997 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078241778 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098917849 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077080146 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096222638 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086926312 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092434562 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078001442 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098681424 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07893136 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101500853 seconds)
  done (took 2.714316015 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.223022612 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104163207 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143916793 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114363862 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096918592 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111155538 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101437095 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085311599 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101755348 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087744881 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105311652 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102137117 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097313571 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104337443 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105197594 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088162156 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101424271 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105538521 seconds)
  done (took 2.72778622 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095773113 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098001986 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105005515 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098181741 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080292851 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100658661 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103948385 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.096691432 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.099945252 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080078117 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.108527171 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082040722 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099883715 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079848448 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100474031 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097699967 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.082405046 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096960019 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090702003 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103698467 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086526401 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107481056 seconds)
  done (took 2.844174421 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096440255 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100561796 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.111088558 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101977218 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093910908 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078319432 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10487896 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080067422 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105991404 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.082076846 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097662872 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078327686 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105147536 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080126085 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103487053 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080579032 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100147586 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080015853 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099341051 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075887698 seconds)
  done (took 2.613169575 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123443208 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114741475 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114323333 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107795595 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114503939 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096909909 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124336008 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114413477 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096467613 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126277331 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115061068 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097114175 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125003922 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121290688 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096321988 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124766431 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126172272 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107084286 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115096417 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114416292 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109991459 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114768171 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125543125 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096712985 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117008643 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097589175 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114993458 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120870625 seconds)
  done (took 3.931618617 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080745018 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078982849 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095557042 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077264282 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095491768 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077360256 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095448809 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078285792 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09773084 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077059786 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079325452 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097836451 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079824773 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097894589 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080957668 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097892397 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079413255 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095142047 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07775519 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095114027 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.07930463 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079206367 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097868844 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076845449 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094663142 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.079866976 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094770632 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077529807 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097887551 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077170985 seconds)
  done (took 3.348897633 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088979856 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104642011 seconds)
  done (took 0.955630062 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078366413 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115003815 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077172947 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101579171 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086187181 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098766134 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090675114 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103802838 seconds)
  done (took 1.512165631 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.1045464 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.118578024 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085920903 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110940873 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09933291 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.117367844 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166484001 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104469885 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088055203 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099607635 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.100014242 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.098973697 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091509368 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104456727 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090870392 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113825736 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.07862086 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108753697 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.089127409 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101229452 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08714161 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115448367 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109670811 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.089157159 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102251833 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092590049 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112671054 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.110754968 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085912293 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111034373 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087972062 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092604707 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.086337503 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104645578 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078748134 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.116242993 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097745928 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105459564 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10881131 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086637561 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108379201 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076544796 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.109592497 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087891551 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112191831 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085950148 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104239321 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076531317 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099606826 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084820938 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094109465 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084801259 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093618914 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091088214 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107787854 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117897391 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083499683 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103322317 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085805234 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102482686 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088126255 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103247583 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091737977 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102613396 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109040186 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090453331 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107099038 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078082966 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093139715 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079064019 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108343445 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105985322 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111538298 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086146646 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105535254 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078870943 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104977107 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105502717 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089289686 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111186728 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085495847 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10709669 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091591412 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102482431 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084779755 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10571068 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082608837 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10303539 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081858685 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120789684 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101718144 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078645525 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099828888 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092539699 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.103923493 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.085410948 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.100071708 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09064757 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093978358 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085911839 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105164807 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088619522 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112058515 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105336369 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087264719 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108734048 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092158666 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105158654 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08499052 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09658986 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086577081 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101412077 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090441047 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093033155 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087840449 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.10320438 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086696433 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110469696 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08281228 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103973703 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110517639 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093106598 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101507746 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078366112 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104281689 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085857202 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109000529 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092834581 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102182962 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077069055 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095396205 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090041539 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103772825 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087723182 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105403121 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086162729 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094357624 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079482682 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.113086166 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110595967 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08410998 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106256113 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091167012 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.105868974 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084455302 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109975962 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084139299 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099606791 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109331136 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085828102 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094905435 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09097703 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104086289 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083712289 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10525403 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089846783 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104785525 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086981015 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102409636 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085818116 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105801118 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082124407 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10468388 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084159877 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111956898 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085881397 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095848206 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.078833241 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.107070859 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082478899 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103574218 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082572264 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105257843 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086991338 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099268129 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085186219 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104021455 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116892039 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094158156 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106370559 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088973158 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111757932 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085506232 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106572761 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.086090867 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10510776 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086954615 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.108797786 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107579082 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087004484 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104356671 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07812825 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106659345 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09174865 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100242288 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080020245 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100961838 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086501313 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111500853 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086493368 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105363626 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083760049 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10836608 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091121119 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104174509 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085641269 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100473398 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086342953 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110062184 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.087480066 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106279729 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112165763 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087244431 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096351449 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091037086 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102365125 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090625832 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095371877 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082799089 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100481636 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.087696149 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102921278 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085050432 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094363336 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091606715 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110988703 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08716299 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.101418193 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086765572 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114776064 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085417489 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108748576 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.0870493 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107707119 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118389839 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082451777 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104997549 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094809435 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105696141 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076430362 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108576732 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.08386383 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099204394 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08608688 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102359587 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087148961 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108142993 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.088007971 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095142072 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086347363 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10375211 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082745136 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096445133 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09261356 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10578864 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104772585 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095937944 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107042887 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087494756 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107591014 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086175716 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10712526 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.090827946 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106589681 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087042744 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104155934 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083025307 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105690595 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081670216 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099146156 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085678039 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105660646 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.106038225 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088493825 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104280667 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092235509 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105667642 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087351621 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123495606 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102869519 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083287483 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107232777 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089463943 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104795749 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086749337 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096479305 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093353408 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104852926 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092943995 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104941969 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078794621 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105979437 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086434804 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108361747 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088141091 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107234244 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103677391 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.08654719 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104838949 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095766837 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102307475 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094028381 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107514091 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089524569 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105018835 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087331764 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104824098 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082308806 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105645706 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.107272933 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087542217 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104441262 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08873041 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105251482 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.08593398 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104074485 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087880846 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.1068243 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089190914 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095527861 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083157767 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101364177 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087404592 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110164453 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.088154473 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104819892 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084730414 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107955551 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085541191 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097846289 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09189789 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109160095 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088878477 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116111663 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101354669 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087851564 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117430441 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077305698 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.103598096 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080833385 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102419267 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093532354 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.107115709 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093412219 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107114091 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083399193 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098498781 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088113503 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103825174 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077558549 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099969153 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090100936 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104036889 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085523728 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106890515 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089795757 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106819906 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090948897 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10477601 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086398147 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106755477 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079869609 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103657616 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08304466 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106211622 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106874536 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084009429 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079292944 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.106369866 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105579229 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087904417 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104915639 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085400129 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111659798 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087226969 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105721713 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093050246 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096091706 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.088161012 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.105798964 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.0873708 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102168396 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088666132 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107659048 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08937262 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111886871 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087112637 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108907365 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086900592 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101484865 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086162213 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.108586668 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.088019675 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103285672 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.088730618 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113276466 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099274966 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087956342 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107464121 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085589316 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107805686 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089282757 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.10616535 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091426194 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106341997 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087455385 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110038889 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087206256 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107429718 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088528155 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105003009 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110562703 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083442615 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113877195 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088989047 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107613431 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085898594 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.102836829 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086927265 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105766611 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086770077 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.11153791 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088450549 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102771055 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083041302 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099909271 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087729369 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111590436 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113279988 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087958172 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106611927 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.07856749 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09871176 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089310746 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102479122 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086226121 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108375222 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091433521 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107077696 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084649287 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104864239 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092525518 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11162631 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089498859 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.104102628 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10870513 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.089415878 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10624683 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086048534 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105589753 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089560596 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.1085676 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086621559 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102529635 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097300625 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112484867 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088942426 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105826511 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.109027953 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.087343278 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098175748 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089434651 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106672689 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091383286 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106648066 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087630047 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1170465 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083090876 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105638109 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092214044 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105621187 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111813463 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079065855 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.107166749 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089452768 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108382962 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078726474 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102319145 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08434056 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106993813 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083815481 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09814044 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098234612 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111622251 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088249236 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106343617 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086158421 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09865889 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078479934 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102673801 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089940573 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10556554 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096325827 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103983866 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083645488 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098361823 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08731231 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108141351 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090229084 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100602757 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079112547 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103333814 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087818217 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114314851 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10519754 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088257137 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108370286 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088050835 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100239799 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092581558 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099245856 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089131942 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117660787 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088788871 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109814636 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091165308 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11388503 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107545767 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079422605 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.108491507 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088987962 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107784066 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08914535 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.110075196 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102894247 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109570208 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083283563 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.106029771 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087317442 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103591689 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114974017 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090301864 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108653956 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090003373 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105107083 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091985185 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115106731 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090831374 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108258853 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107545108 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087224396 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10623421 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085884617 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105446367 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.0906797 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107876055 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087283702 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110256027 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084246531 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117696336 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095370504 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109060139 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079711712 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103587097 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084998648 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098452947 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089760212 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101625275 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.086257477 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104168612 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087192352 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109812532 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090252326 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107467748 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089077884 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107298616 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077494382 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111506683 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088193824 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11039299 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.082331071 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.108141945 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089113741 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112797916 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112232257 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086444987 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107287296 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08742713 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110125611 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079221465 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110166229 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087431405 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.106608736 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.085552523 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107958053 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089999652 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108863215 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08977748 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110440066 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08831746 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.111723981 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090294307 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101133568 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081188327 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.110616521 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082267741 seconds)
  done (took 58.722943614 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151186547 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086150122 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098574409 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079400742 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124104074 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080289823 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098701717 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080201096 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100302303 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112720292 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079762762 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098147863 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10268163 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126982122 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12378564 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113452469 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079688391 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100367235 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079194343 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100022565 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120268507 seconds)
  done (took 2.948487693 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104081862 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117474533 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115558791 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099943881 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111529372 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116620471 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115606246 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097722697 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120753245 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111039391 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.099739909 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118967136 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.111357357 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112029846 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092432902 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114653563 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12078607 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090951144 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117660515 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.116168457 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095525801 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115765449 seconds)
  done (took 3.224024379 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093203029 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.086517392 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.113595503 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.081520146 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.107665919 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.081907262 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.112214048 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.082839957 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112613921 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.107562882 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.084821779 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.10711595 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.093317737 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.100916385 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.086334738 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.083377043 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112654167 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.106912397 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089632794 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.081775847 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.129270612 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101831772 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.082773125 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.104811637 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.096809879 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.109146462 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.088516208 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106965646 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08529934 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107042183 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.084933303 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.109502287 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091474456 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.104869118 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.084689012 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106214102 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087170685 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101737477 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.084466777 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.110690204 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.082798505 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.108954346 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.094171322 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.104926624 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.083935396 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.109706817 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087098523 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.102302916 seconds)
  done (took 5.490202956 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.121679509 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158142986 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092708739 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.156473887 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126463783 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.123949238 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092444663 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14840157 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105157777 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087078118 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126289266 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122562161 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088095019 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.117586334 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108143924 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089280257 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111592525 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.092784512 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.116029448 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.113216024 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.098214652 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111582224 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121772502 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100648567 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113197482 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107118007 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087955267 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11627057 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119114294 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.094631991 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113964737 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.096647601 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.129464271 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115568058 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090382277 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111340446 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123912172 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089548193 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111876874 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104843095 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091004816 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.116650947 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092336124 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124840142 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108992084 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.089815246 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110983884 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.090551343 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.12619936 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.113934972 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.098076318 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123794654 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112188773 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089182815 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114823638 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125308462 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088785232 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107205068 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111111395 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100142068 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10798622 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.097947374 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.127167231 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.112524721 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117069395 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102234236 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110148573 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11270505 seconds)
  done (took 8.439659914 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095205922 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.132348369 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12470947 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103734853 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114088256 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11234571 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093596773 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.112607258 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093158859 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120458171 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113054277 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.163652576 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086864932 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118486715 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113324315 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093281083 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11274216 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092812072 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114474534 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113909278 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093249589 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124610948 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112908914 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.105072054 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127372015 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106588975 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093066743 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114512185 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123546112 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113256771 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107313422 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114092324 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113396431 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104560878 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126425668 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.113411712 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084171195 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113404936 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.113727139 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094161193 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106211932 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103642312 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114880944 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106406481 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093572382 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113633603 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.124593879 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127232724 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.100000602 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120154721 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114164496 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104788963 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113926505 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113419842 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105774028 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.132261116 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123975409 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125316971 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093624125 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125464547 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124650982 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133677347 seconds)
  done (took 7.764164959 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085557082 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084209797 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.102818983 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082420581 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105371621 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083613003 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105612772 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085322869 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104698998 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.085474984 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105179319 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08319226 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082263758 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105112951 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083120244 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103178785 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083484132 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102621411 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085477287 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102223162 seconds)
  done (took 2.684633866 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093994256 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125145039 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085926529 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11409695 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086858864 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11459458 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106788313 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088821632 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10636004 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088678941 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118396447 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117872619 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086251507 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112728348 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098056883 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113430901 seconds)
  done (took 2.480018773 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.106924158 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119229421 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.132019936 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090662935 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103587703 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.093714541 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105643469 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.081387505 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101650797 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.094436892 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.111902476 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.095378807 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106363134 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083907398 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106471515 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090780162 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102484165 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.109225125 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086652144 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.130207698 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09025051 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108360175 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.086560242 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108237951 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090380244 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113876952 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.112950889 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.083656253 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.104314099 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.086115124 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108503175 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.09377546 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103049412 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.090406894 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104698316 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082859196 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106521915 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085649593 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113111428 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105003067 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085115491 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108408341 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086197208 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106926975 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082213993 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106045555 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.082188768 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.1120436 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.087771484 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.108949572 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.085627941 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.114186737 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.092982587 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118040905 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.117017948 seconds)
  done (took 6.353503024 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10020102 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11042688 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090410446 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10384489 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089010347 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114338317 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08986953 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108669059 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087890062 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.103830122 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087877502 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109992958 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087469473 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111783299 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108374904 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090921054 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101417551 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.087774063 seconds)
  done (took 2.613694943 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092445464 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105757894 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093813634 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106798128 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086140651 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10860156 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081607773 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104101483 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084664943 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10566145 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086834815 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.108062895 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084611888 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.107429047 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086112427 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104977187 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.088606281 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083372535 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106595585 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080837591 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10949882 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083854275 seconds)
  done (took 2.934749342 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.103814078 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.139110562 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.099201511 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.149493819 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.111286382 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.089784751 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12146708 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.110163983 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.10888703 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.110261829 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.089382445 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.110391992 seconds)
  done (took 2.17816737 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112326879 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144378093 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083028028 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110287798 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119546033 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091478641 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11103902 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090689231 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123848744 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12369394 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111675754 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103645874 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123406823 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122099076 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119930412 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09852481 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111635264 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111948783 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087626076 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133285378 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110911533 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103792773 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111793322 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11222438 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0914433 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121218822 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123463802 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104240344 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112356659 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12332692 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119197161 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091809817 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123071282 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126255833 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088421821 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124028101 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111446092 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132585217 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099055029 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122201353 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108254625 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099601986 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123061193 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119185672 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102804292 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112661727 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118822551 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091513532 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11201664 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139264412 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119548997 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101552971 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120739707 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123108644 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123884565 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139713438 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124890942 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101871654 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119324162 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123896984 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122371813 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098638738 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122781335 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125590644 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119735495 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103142397 seconds)
  done (took 8.339661018 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126064733 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10574524 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111356961 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10456756 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124260821 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111738472 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091219666 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111548805 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1118135 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088554077 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158975074 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111804024 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122906518 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101442738 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112083001 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090385852 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112358775 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121709428 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087589039 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139133012 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112809714 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122546713 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123590314 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103094242 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124946743 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119175723 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111693139 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092603075 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111561521 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091575626 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119026055 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111293232 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10166084 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106866474 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122949024 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091198983 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112373805 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118624143 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092494295 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120589812 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122518095 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133701327 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091566332 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112210874 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125136993 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091352191 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111941728 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08725888 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112923175 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108155097 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105398584 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12561853 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125605642 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122821551 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112092496 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092307613 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111605006 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091622299 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112743515 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119958826 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102987502 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112502802 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140348633 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111737344 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092243621 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124498536 seconds)
  done (took 8.199405475 seconds)
done (took 157.212539371 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.104713136 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.143948176 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101855171 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171023266 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085970799 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142597349 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119068847 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.123953441 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.085672764 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.108526133 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.086330838 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110683086 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.15209482 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108652678 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086173208 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110424477 seconds)
  done (took 2.678479494 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.182082759 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.290234827 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105769576 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113989515 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09221252 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111460079 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.112091329 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09334549 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108128625 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.0997592 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110227477 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089635272 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.120818878 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.089374978 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109286924 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.109172885 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.099948194 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.109535957 seconds)
  done (took 2.992740368 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117924352 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153718043 seconds)
  done (took 1.118003148 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123106798 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187600945 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311944929 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.164474065 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.116374803 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130220276 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.165386852 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127005943 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196741347 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13007705 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.130529682 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094099119 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138706032 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.120065654 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096822392 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.113917606 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119694638 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11676458 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115349718 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095713116 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137996588 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.094712645 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.119193913 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115996358 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186495039 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.129201433 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.095024648 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.114553247 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.094733359 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114939034 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.099202011 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130266795 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12837326 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.169766247 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.120334366 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.186262987 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.101853281 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11389873 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095923483 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.11316598 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096885268 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119680591 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129533882 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093930769 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.115980149 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.122062767 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.334685213 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.114900345 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101364886 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.123755569 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.121971195 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.0994455 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.190847686 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.123517707 seconds)
  done (took 7.987941148 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.854173534 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.13256614 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114404675 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.959655977 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120958432 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129792404 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.828130509 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138019808 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.241941971 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.851832414 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131709048 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126935445 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.214891448 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.281051237 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.150722016 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.342106289 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.706134419 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128513382 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.11891273 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.179447163 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098901507 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141728043 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133212376 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.424404192 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.092412814 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114030997 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118382303 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103372121 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166960179 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.114265066 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116703088 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.187030338 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.270792026 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20961638 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092028899 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113555787 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089037203 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.197827334 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278892601 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.201704655 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.176607178 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109988462 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090015625 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126274097 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13341908 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087654807 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.191621505 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181631344 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.179349068 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11689687 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125196513 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100869479 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129161483 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167442986 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.111311924 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.3445044 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.349360737 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09121147 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122394757 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.131462633 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.250998908 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113708432 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231804359 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118040657 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220797383 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113068244 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80381151 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.196367514 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090623414 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123136628 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120148974 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097178649 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124975024 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172863211 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.382646841 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128182365 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095831999 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112218652 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.210411373 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.112881633 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090413771 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.192112053 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093208481 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121733248 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106381106 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126614035 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.176713733 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.277192938 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125522393 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099925067 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117974297 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103587939 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.114491937 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.219493917 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225031026 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163916613 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23968092 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103431445 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.193173536 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172485554 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124634984 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177872545 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121112394 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130607182 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105433719 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220901236 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147039841 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.113111416 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097148717 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120323258 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151101198 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094151919 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120951063 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.175313125 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.476027781 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.172524376 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087621619 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117621485 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122216011 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169969479 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097671206 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270336459 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12314415 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.175765364 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121268584 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08842308 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122006235 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.170696028 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128032529 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122565377 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10464256 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122168083 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.256651712 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227464514 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129544015 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219373751 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18155634 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123274709 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180057411 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122376221 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.175671134 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123460694 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124982095 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092939631 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817775854 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126580687 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098657583 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118937588 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.19670279 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112986681 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093184109 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.090384011 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110362371 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813833196 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09428529 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.111159113 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.092999827 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122699536 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099510955 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120190335 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118323434 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16914618 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239339153 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126172985 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09959654 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.11280323 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.168262743 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09204919 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.115029709 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.090359038 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.114498573 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122408883 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095814043 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113966641 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.180952267 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163658861 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226105137 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.535602724 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091596681 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.11371272 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236770692 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091111924 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.314082113 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120695747 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.21130123 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.197212031 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088392668 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.342955712 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.196910967 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197160903 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095565045 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177250412 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110598418 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097111311 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.191401497 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091651776 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120896561 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164578535 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130709006 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127898075 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.134732166 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114678959 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234785135 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.11057863 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.176304966 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115472342 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103260815 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.315938648 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113807962 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112845255 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.191412742 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095800887 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.114131303 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.600697122 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114689583 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102066393 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123388026 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229249217 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.172311444 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122513181 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121726043 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103980921 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.191817087 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.216872756 seconds)
  done (took 45.12042279 seconds)
done (took 60.73968781 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305789719 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269786604 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.309265757 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.222584651 seconds)
  done (took 2.054732479 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.18122211 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157194167 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.150647556 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.08960001 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.158004865 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.111372108 seconds)
  done (took 1.716023818 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.489893944 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.403833834 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.346720371 seconds)
  done (took 2.111725984 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.263555832 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.283657239 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.364027491 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.414725385 seconds)
  done (took 2.303475209 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207583353 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.128439652 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.102427809 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.141819225 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.174648336 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.180576826 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.146287916 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.155479313 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131964913 seconds)
  done (took 2.290618518 seconds)
done (took 11.352713577 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.165300117 seconds)
    (2/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.279888488 seconds)
    (3/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.186929346 seconds)
    (4/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.281723064 seconds)
    (5/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.238931941 seconds)
    (6/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.11941318 seconds)
    (7/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.253547579 seconds)
    (8/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.260911195 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.133258893 seconds)
    (10/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.111939399 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.125617799 seconds)
    (12/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.130234386 seconds)
    (13/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.133646035 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118015463 seconds)
    (15/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.226513992 seconds)
    (16/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.188205039 seconds)
    (17/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.145517543 seconds)
    (18/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.103673656 seconds)
    (19/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.143972578 seconds)
    (20/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.102954863 seconds)
    (21/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.246874348 seconds)
    (22/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095830668 seconds)
    (23/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.118489652 seconds)
    (24/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.163656252 seconds)
    (25/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.115812429 seconds)
    (26/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.127988998 seconds)
    (27/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.119187145 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.122081101 seconds)
    (29/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.26938752 seconds)
    (30/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.118121223 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.226630944 seconds)
    (32/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119000337 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.102537439 seconds)
    (34/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.212204405 seconds)
    (35/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.226739774 seconds)
    (36/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.129042806 seconds)
    (37/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.186627783 seconds)
    (38/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.248618949 seconds)
    (39/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.128486932 seconds)
    (40/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.206592837 seconds)
    (41/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.223169455 seconds)
    (42/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.118618277 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.123414295 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.126070676 seconds)
    (45/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.096027873 seconds)
    (46/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.128374436 seconds)
    (47/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111706159 seconds)
    (48/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.100298933 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.14383291 seconds)
    (50/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.101562752 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114100058 seconds)
    (52/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.120120706 seconds)
    (53/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.13349361 seconds)
    (54/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.212016049 seconds)
    (55/286) benchmarking ("sort", Int8, false)...
    done (took 0.197990782 seconds)
    (56/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.117684648 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.11185191 seconds)
    (58/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.115863874 seconds)
    (59/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.171049541 seconds)
    (60/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.15402017 seconds)
    (61/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.171018367 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.118755038 seconds)
    (63/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.196919831 seconds)
    (64/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.099544049 seconds)
    (65/286) benchmarking ("sort", Int64, false)...
    done (took 0.111526943 seconds)
    (66/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.143517601 seconds)
    (67/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.233704542 seconds)
    (68/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.207854918 seconds)
    (69/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.110827702 seconds)
    (70/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095175494 seconds)
    (71/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.15377845 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.095663206 seconds)
    (73/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.124444367 seconds)
    (74/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.176989169 seconds)
    (75/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.104420445 seconds)
    (76/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.12021172 seconds)
    (77/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.231019471 seconds)
    (78/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.101300713 seconds)
    (79/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.18769398 seconds)
    (80/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.206648765 seconds)
    (81/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.195555187 seconds)
    (82/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.119683931 seconds)
    (83/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.191293735 seconds)
    (84/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.094193273 seconds)
    (85/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.100379766 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.123626785 seconds)
    (87/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126721306 seconds)
    (88/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.129162936 seconds)
    (89/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.130348891 seconds)
    (90/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.11996004 seconds)
    (91/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.227391722 seconds)
    (92/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.169585058 seconds)
    (93/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.199779449 seconds)
    (94/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.13567637 seconds)
    (95/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.129413547 seconds)
    (96/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09580833 seconds)
    (97/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.208099773 seconds)
    (98/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.123760931 seconds)
    (99/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.142214088 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.09758518 seconds)
    (101/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.144351882 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.097467663 seconds)
    (103/286) benchmarking ("sort", Int8, true)...
    done (took 0.22215899 seconds)
    (104/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138068849 seconds)
    (105/286) benchmarking ("sort", Bool, false)...
    done (took 0.190981037 seconds)
    (106/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.167164242 seconds)
    (107/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.078119866 seconds)
    (108/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.125915192 seconds)
    (109/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.143833182 seconds)
    (110/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.140070625 seconds)
    (111/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.206822307 seconds)
    (112/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.203163813 seconds)
    (113/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.100821605 seconds)
    (114/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098464123 seconds)
    (115/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.117586579 seconds)
    (116/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.10384871 seconds)
    (117/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.100561583 seconds)
    (118/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.120512129 seconds)
    (119/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.113507736 seconds)
    (120/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.077661729 seconds)
    (121/286) benchmarking ("sort", Float64, false)...
    done (took 0.176314163 seconds)
    (122/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.148056552 seconds)
    (123/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.103210732 seconds)
    (124/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.121415617 seconds)
    (125/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.085844505 seconds)
    (126/286) benchmarking ("sort", BigInt, true)...
    done (took 0.253892039 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.148382203 seconds)
    (128/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.100602288 seconds)
    (129/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.14265264 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.149723969 seconds)
    (131/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.11884587 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09057024 seconds)
    (133/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.19371635 seconds)
    (134/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095296454 seconds)
    (135/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.119002171 seconds)
    (136/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.166763541 seconds)
    (137/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.105344085 seconds)
    (138/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.100993535 seconds)
    (139/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.097493995 seconds)
    (140/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.100170228 seconds)
    (141/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.078664311 seconds)
    (142/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.191852702 seconds)
    (143/286) benchmarking ("sort", Float32, true)...
    done (took 0.235576197 seconds)
    (144/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.076526675 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128130413 seconds)
    (146/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.136014396 seconds)
    (147/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.19532055 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.098366581 seconds)
    (149/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.120161403 seconds)
    (150/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.131584419 seconds)
    (151/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.115187756 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.10128673 seconds)
    (153/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.123484631 seconds)
    (154/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.097312415 seconds)
    (155/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.12636335 seconds)
    (156/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.091645846 seconds)
    (157/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.20496081 seconds)
    (158/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.101319187 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.097057753 seconds)
    (160/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.206043384 seconds)
    (161/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.101173356 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.078922851 seconds)
    (163/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.100851095 seconds)
    (164/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091110064 seconds)
    (165/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.100153898 seconds)
    (166/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.094718893 seconds)
    (167/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.076794897 seconds)
    (168/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.130004275 seconds)
    (169/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.099698058 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.095184319 seconds)
    (171/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.156657696 seconds)
    (172/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.10554749 seconds)
    (173/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.113406202 seconds)
    (174/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.078255218 seconds)
    (175/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.195970862 seconds)
    (176/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.252772858 seconds)
    (177/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.101140694 seconds)
    (178/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.077676517 seconds)
    (179/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.119614885 seconds)
    (180/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.096600612 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.127764182 seconds)
    (182/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.102023509 seconds)
    (183/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.119834889 seconds)
    (184/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.086301015 seconds)
    (185/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123768998 seconds)
    (186/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09586737 seconds)
    (187/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.10169444 seconds)
    (188/286) benchmarking ("sort", Float64, true)...
    done (took 0.235932828 seconds)
    (189/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.077905265 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.121032823 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 0.227655974 seconds)
    (192/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102941082 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.118197776 seconds)
    (194/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.090916841 seconds)
    (195/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.117430438 seconds)
    (196/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.093392959 seconds)
    (197/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.167414312 seconds)
    (198/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.086145438 seconds)
    (199/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.102472737 seconds)
    (200/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.078341233 seconds)
    (201/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.125038297 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.10488486 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.13004728 seconds)
    (204/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.078025026 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.121596675 seconds)
    (206/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.101914444 seconds)
    (207/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.091426046 seconds)
    (208/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.077666897 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.121747961 seconds)
    (210/286) benchmarking ("sort", BigInt, false)...
    done (took 0.231943056 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.129964448 seconds)
    (212/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.144311378 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093724453 seconds)
    (214/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.119857734 seconds)
    (215/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.102492987 seconds)
    (216/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.100636824 seconds)
    (217/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.078833608 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.117186154 seconds)
    (219/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085553071 seconds)
    (220/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.144003585 seconds)
    (221/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096656603 seconds)
    (222/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.108364947 seconds)
    (223/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.098357362 seconds)
    (224/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.114424959 seconds)
    (225/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.078430098 seconds)
    (226/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.131128986 seconds)
    (227/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.095766547 seconds)
    (228/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.118538317 seconds)
    (229/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.078078175 seconds)
    (230/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.12758485 seconds)
    (231/286) benchmarking ("sort", Float32, false)...
    done (took 0.179438094 seconds)
    (232/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.078406317 seconds)
    (233/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.077743089 seconds)
    (234/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.120621665 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.114408573 seconds)
    (236/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.171023413 seconds)
    (237/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.116861068 seconds)
    (238/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.077852901 seconds)
    (239/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.156082396 seconds)
    (240/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.118346659 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.097248534 seconds)
    (242/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117107818 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096092877 seconds)
    (244/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.118778018 seconds)
    (245/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.112943715 seconds)
    (246/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.108247264 seconds)
    (247/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.130663314 seconds)
    (248/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.103356783 seconds)
    (249/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09706494 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.129817954 seconds)
    (251/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078429359 seconds)
    (252/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117719491 seconds)
    (253/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.078108484 seconds)
    (254/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.102123692 seconds)
    (255/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.111144755 seconds)
    (256/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.10100498 seconds)
    (257/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079057349 seconds)
    (258/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119037443 seconds)
    (259/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.117765302 seconds)
    (260/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.118293877 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.124200197 seconds)
    (262/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091206273 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.120573969 seconds)
    (264/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.09868962 seconds)
    (265/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.115640564 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.092625466 seconds)
    (267/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.119784247 seconds)
    (268/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.079066718 seconds)
    (269/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.101438102 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.09237062 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.122077533 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.105807025 seconds)
    (273/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.102403952 seconds)
    (274/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.078607957 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117432914 seconds)
    (276/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094114574 seconds)
    (277/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.11025869 seconds)
    (278/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.078932253 seconds)
    (279/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124703154 seconds)
    (280/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.079122878 seconds)
    (281/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.14842726 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.097701029 seconds)
    (283/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.102421061 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09415468 seconds)
    (285/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.102242641 seconds)
    (286/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112307442 seconds)
  done (took 38.592432505 seconds)
done (took 39.472164618 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103513034 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.156763521 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.102314419 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.144577058 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.127693086 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.107573535 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.125364371 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.102748751 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.128757059 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.129577058 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.10552433 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.10917298 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10187069 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.126167753 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103273723 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146298571 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.128686694 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.098568774 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117784614 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.094769947 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118417952 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.095787934 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.120614511 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.085216502 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.126980689 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123617291 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097583742 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.125417431 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.095422241 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.116519965 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092931188 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.122128973 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.09254178 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.145057152 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097373959 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11832729 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102508764 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.125180605 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.097465577 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11943547 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.12212432 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.095557722 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.121464277 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.099322896 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118475762 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094611447 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117296824 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.10527272 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14660075 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095007934 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.124137607 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.102199529 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.128406051 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.122474931 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093621554 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118127913 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095824187 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145389586 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.094543021 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119352418 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.099248751 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.12565945 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.093669264 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.119515164 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118156322 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101672293 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124567875 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094868437 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124776609 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.097735819 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.11398585 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095173941 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.117099415 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.09224579 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.125811679 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.101954875 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.113599632 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.095546066 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.122126495 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096934054 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.119009652 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093174804 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.120764487 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095176236 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116811149 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.085940398 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.116382671 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097995961 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.119314058 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.118108162 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.098248956 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.120975888 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.097487532 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124733665 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.095607754 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.120085541 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.095519474 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120148204 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.097071756 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.1175543 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.090502175 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118030064 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.099581011 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.11632283 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095742736 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127809991 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.116944232 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.097760552 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.118430922 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.095203039 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.130764381 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102196399 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.119844466 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096340142 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.115491806 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.09811422 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117358185 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09232636 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.117096914 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.09511792 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.12007368 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.119624635 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094541938 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.122108712 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.106479672 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.115018218 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.094821424 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117743265 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.095769 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.122493741 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.096073231 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.116528179 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.095006778 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.114197219 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094407692 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.116544381 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098555066 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117351919 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095070521 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119441942 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094771682 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.121265637 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096650666 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120304842 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.118641328 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.088353735 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096833266 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117809729 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.096832658 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.120514688 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.118807581 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.090859388 seconds)
done (took 17.730189701 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.101906865 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.189259608 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152076351 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.154786625 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.152379289 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112202827 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.129993099 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.15088064 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.127189895 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124834012 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.149439212 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.141615996 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.155295815 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.103839672 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.136835976 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.125704071 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.100794337 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136550891 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.160820473 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.122033424 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.15162792 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.127452509 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146841302 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.12225428 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.125613969 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.146179652 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.128924461 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.102537984 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.128424723 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.118412448 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.143403548 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129420087 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.104468224 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.138759167 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.109204771 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.123774024 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.136816822 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09835943 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.126415812 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.127267051 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113940967 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.137038287 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.122091324 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.109704254 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.126735775 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.105728555 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.126408316 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124136618 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.102813398 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120746965 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10729961 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.14694657 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.125205527 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104216474 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.127576425 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126412599 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104700364 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.131174051 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.129068356 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.10547986 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.126226644 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.1045709 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.133208944 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143603951 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.125695737 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105013553 seconds)
  done (took 9.325861796 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.117222449 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.156807433 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135690187 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109316697 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.131426747 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.115464871 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091604391 seconds)
  done (took 1.799490627 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09353511 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.147139967 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126663441 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.150663351 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13852932 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.128878004 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136079675 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.117745308 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.11593471 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.128488282 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.145560053 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148260238 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11797845 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.128898133 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.127689862 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.117575978 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.152188183 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092877059 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124886827 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.126142949 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122934088 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114751566 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.131577407 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11855272 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115883503 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.119629495 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.186148574 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.105155948 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117513953 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.099193764 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123944194 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.189726833 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140340269 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.10423799 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115846611 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12159205 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.140469962 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122639764 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.118843126 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.123280648 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.139179544 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.100461965 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.125162656 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.099365179 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.124910396 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.107881007 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12933798 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.126625352 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099305327 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.146485209 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.103860351 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.14068293 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.119682485 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.097470338 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.128632224 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099526916 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132020761 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.098161887 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.146053036 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125478868 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.119582284 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145186904 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.140035362 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.120173163 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135495997 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140456058 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.114825421 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.123678334 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101860582 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125729396 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.1446704 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.097280663 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.129674288 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.108834666 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127787654 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120340277 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.14502946 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122365838 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.106579859 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.12336575 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.096990684 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.119308669 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.110396094 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122194274 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095706456 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136168074 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.130238531 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.099852002 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.122377056 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.140655184 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.098730422 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.129197847 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.105272585 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.12322796 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134578055 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121910641 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.129338029 seconds)
  done (took 12.945864778 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.097808906 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.094194335 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.125483793 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120100661 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095153463 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.120142956 seconds)
  done (took 1.60593035 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.127026233 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122931355 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.110234585 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.127177861 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162534809 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.117438005 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.144001556 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128698192 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.114376981 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134392466 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.142863029 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.120356073 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.149542492 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101408392 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.143542769 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.126881399 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.119202167 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123272312 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.109017351 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123558092 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.134739897 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.102347709 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123332976 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.116763061 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.127984867 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.102343551 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126634395 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.134407043 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.109428248 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.130235543 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.10200591 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.127493809 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.12710184 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.103897957 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.143104438 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.101758231 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123102491 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.128290044 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102067843 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.129833034 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.119772729 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122977821 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.108101464 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.13034994 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.129400201 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.102641138 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.128822056 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100548482 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.143483817 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.128994244 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.104150368 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.126277448 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.102629003 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.129416516 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103035322 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129836292 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.128691784 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.11953293 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126645437 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.102265651 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.12484616 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.103180641 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.13041472 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.127004621 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.102064297 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.128852034 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.101524398 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122623393 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098199248 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.127501387 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.10346311 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.124590371 seconds)
  done (took 9.683764315 seconds)
done (took 36.295161795 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.691649946 seconds)
  done (took 1.632955842 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.879713861 seconds)
  done (took 1.830068473 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.845179208 seconds)
  done (took 18.831441838 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.543501755 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.640018366 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.985608259 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.169669942 seconds)
  done (took 3.295658047 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.982219277 seconds)
  done (took 1.96092952 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.317578009 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.267603106 seconds)
  done (took 1.546549028 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.858409164 seconds)
  done (took 1.819086278 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.579576494 seconds)
  done (took 2.544011608 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.35630754 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.205305792 seconds)
  done (took 1.536730192 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.593760832 seconds)
  done (took 1.564335363 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.678711589 seconds)
  done (took 15.648205446 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.242879798 seconds)
  done (took 1.228064795 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.311025624 seconds)
  done (took 1.285579083 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.666945777 seconds)
  done (took 4.640701566 seconds)
done (took 60.324118649 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.108074234 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132843433 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108580261 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.130574443 seconds)
  done (took 1.444491663 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.113626802 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128451981 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106051294 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.128358988 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.110479317 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.128495899 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.127118184 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.109747245 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.127845646 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.104452613 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128278397 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101423326 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.131735227 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125814545 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.101271465 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.129634479 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.106172126 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.128376507 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.102293023 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.129431857 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12625403 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.104502454 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.131338368 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.103770998 seconds)
  done (took 3.809352172 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.109294421 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.123788216 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101593948 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122899703 seconds)
  done (took 1.441162623 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.113739935 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142249231 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.115557518 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.134798226 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.14205101 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116158718 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124238388 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097581793 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.126876361 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.10834659 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.12661878 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.144380882 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.116980585 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119201956 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.111317616 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.119285967 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.09501279 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.143304312 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.134854072 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.110338547 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.123965589 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.108761388 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.13225293 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138612202 seconds)
  done (took 3.925386885 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.215661157 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.112232572 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.148567234 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.105342881 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.178707701 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.151385175 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.123068871 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.124224636 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.124288678 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.111577984 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.128429909 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.178824661 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.108927661 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.128220402 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.125574188 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.105554478 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.135680514 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.13651378 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.100838289 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.137118929 seconds)
  done (took 3.662695785 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.108846527 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.123349352 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095017721 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.123594758 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.105728876 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.126084375 seconds)
  done (took 1.665948188 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09880256 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.09231359 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.119703547 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.093200407 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.123597532 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093580754 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.117915534 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.09368143 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.118303806 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.093282898 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.117874836 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092275652 seconds)
  done (took 2.237681671 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.553776922 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.099152015 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127987966 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.123092113 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.103643458 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.122738351 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.112670508 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.123783979 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.180443466 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.097713172 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.14013487 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.177707437 seconds)
  done (took 2.953016987 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218915867 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103306356 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28132786 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.428852921 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163804157 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171943193 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.356496316 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173287101 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.192178302 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117949453 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239585447 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163854544 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13408298 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185693639 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146780812 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.191323653 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181596994 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232463413 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128707665 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247609793 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17226146 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174529363 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197678755 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158729725 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118216999 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165713002 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.124150863 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133625088 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180159364 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177577228 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180297783 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15563189 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144132541 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208674772 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222625539 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215898515 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.365591723 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140394938 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199892038 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.201312734 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285481605 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147695541 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202513449 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16235304 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138123345 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186813637 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16418123 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.186587186 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137642883 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121316169 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218560281 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183907579 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.188431243 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143697357 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.351842456 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151099955 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.151728325 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190553467 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196701602 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233190434 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17425882 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.103542956 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253898916 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198784143 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188896793 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151929496 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.176012125 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130676072 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184617251 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213112059 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18572098 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175170028 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.226669565 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140544951 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170981691 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185980065 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160026915 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187002029 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140429327 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.128809324 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156596055 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115457656 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134743003 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192510146 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102637627 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247146251 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114807709 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.323965015 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218216881 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166985439 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169088286 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172498285 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175373188 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153906876 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.098257187 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154156188 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.179778109 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163936918 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1393378 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164146659 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125572505 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.13289366 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158596773 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.103995886 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165588666 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.141761971 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173962132 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171445873 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.135710337 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170586198 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128950843 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.165902764 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176749277 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228492188 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113359653 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139046819 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211892312 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165049012 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143814455 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193148989 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204276834 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.181260285 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144549277 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177104313 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20437267 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150201586 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205285856 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149858458 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112681481 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.15797195 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1656912 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164095628 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162604307 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135922462 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.131231262 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237158533 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.106695161 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144213684 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181184467 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132545951 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107927937 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151971763 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142671305 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.120967769 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.156984807 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.147158306 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163302346 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166539729 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160393651 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166820704 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121680727 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229730426 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139466977 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.139570452 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155166988 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123873528 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.187212281 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201285998 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136830065 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194647715 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.176246324 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268825522 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171937712 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110087492 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188095096 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137643332 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.098499431 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17310441 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167083472 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169177913 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.228852972 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24168354 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.172579424 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160613654 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156232816 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173593262 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.191296872 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164023724 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.1532318 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170875907 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176127968 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12813262 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.103320068 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134254065 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146908415 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111265394 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139447448 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189167621 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171905364 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.256822548 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168805702 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118497808 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.225906581 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105678247 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171609471 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179586038 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1459209 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201209614 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198562295 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173465535 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151502556 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178931928 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.12704057 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10445788 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140251765 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17399991 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139291924 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113806504 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151998536 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199242016 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181656748 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157900436 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274334505 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174230103 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208322648 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.129978002 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170756514 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187372895 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164580658 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.167789927 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139151375 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.168050924 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19543867 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150955405 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201151121 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169606857 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175983514 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23557807 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.136370141 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138776535 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156658923 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175855598 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146941636 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177871679 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12569035 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142131841 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161601792 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.142650376 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104844068 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214297451 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122139735 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216443245 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.173742945 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183314916 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104276406 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152324395 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168688614 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153386077 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.096163392 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17639068 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233751537 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152556085 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166595702 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192981479 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108881326 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.391725878 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206260066 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191964369 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144860295 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151087556 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16883527 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177730892 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17205793 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190328146 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15097955 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18867801 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165285532 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.123031384 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143223093 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154704582 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157697005 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13049334 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.141417769 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160734697 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.149536305 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19116355 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152325758 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166996031 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173472668 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126119152 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.163133485 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148034964 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218241645 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166492046 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186320918 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.164107568 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.183513126 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195865726 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131848959 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107342324 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134483652 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190251527 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138948126 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137940555 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.255326499 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278674449 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166561223 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17782711 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116191968 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.132562751 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167880472 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157036631 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266130121 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122223409 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.145046067 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206780528 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.158824651 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137935177 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171217161 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.340634426 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152270458 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195013589 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.127778696 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.32636114 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132495399 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112576854 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178738561 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178539649 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139022408 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.166176262 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168832125 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153880095 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178060849 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145862473 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.260923826 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220687455 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178058584 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182282384 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151182063 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165798091 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170971272 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194067264 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151116351 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123371631 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1720313 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200639863 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.232556439 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.111297561 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171005549 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170352327 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168729532 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210879229 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113384499 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195872759 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138582315 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173297971 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147686411 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102222666 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165927746 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.253067555 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113102748 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220121979 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137554386 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139964455 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132902108 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159452214 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137230707 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150920082 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.136801857 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18629186 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.134462645 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141220088 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188424407 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139077383 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161641556 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152612632 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109063767 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150148578 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152305353 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112957047 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.180816821 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199255685 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138955822 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194573275 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179932793 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172090404 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167013482 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152742476 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.671284962 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106764008 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198752801 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154997734 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195205225 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157159958 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174811644 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170319426 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156523351 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176904631 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156491069 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.202380661 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201923612 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.163631299 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111085279 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152429024 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153040271 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.108842795 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159310282 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171021625 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149227881 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.115257204 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.162813061 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154841184 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.152716924 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145503276 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201934118 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126436207 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220279737 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192399745 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11638937 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173971129 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211823871 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107774348 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.169031026 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178523469 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150624364 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159014917 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136859715 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.114170083 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187667844 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.131750796 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168903472 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167847919 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142708204 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170617683 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.141447139 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16749764 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150180884 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1683259 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105868063 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.163010216 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164962471 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137879363 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106268731 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164121162 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165834077 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166422682 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132698579 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.152202806 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199974886 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.133706398 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111425122 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360926477 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165580869 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202240746 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.161335942 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141939173 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122538867 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164009854 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.160537348 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168619521 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134629719 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111140448 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138593744 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188637469 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.172252485 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167878563 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195115974 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168118447 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197126481 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.11445319 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.273258535 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146851449 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16205792 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.110410798 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.136042633 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147623411 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114376367 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151395947 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.260462226 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188502084 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.131171241 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.152884965 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134776563 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.105511562 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140640334 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17865845 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162862236 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165469778 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122230748 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.125019618 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151901983 seconds)
  done (took 82.110923479 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.182833552 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149361441 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.157429529 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203152772 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174600327 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263999593 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.213909225 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.235620244 seconds)
  done (took 2.658782751 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.112241292 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.142635763 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.148803762 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131784649 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.098172831 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.377680135 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.142973603 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.103564628 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159337515 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.141478248 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.12376469 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.597546318 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.129310058 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.129725767 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.118183498 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.097032516 seconds)
  done (took 3.823912833 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.431336268 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.553886241 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.07203406 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.255712073 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236474884 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.184703086 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.760862963 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.17443064 seconds)
  done (took 12.747933425 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.137719938 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147963264 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.147578001 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.174735616 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.159124456 seconds)
  done (took 1.853649569 seconds)
done (took 125.302292536 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.107795527 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131721766 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103061219 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.133791513 seconds)
  done (took 1.542606263 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.120500851 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.087050461 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.117648636 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085194318 seconds)
  done (took 1.489743093 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.44190947 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.117034512 seconds)
  done (took 1.676051096 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.136118095 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.15224473 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.119483761 seconds)
  done (took 1.496588654 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114779552 seconds)
  done (took 1.199743911 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.117262742 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.139801248 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.121215776 seconds)
  done (took 1.463398985 seconds)
done (took 9.946235063 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122745981 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.441644861 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391856689 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145038782 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.730176783 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386476432 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.08473564 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165799417 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173279009 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097316022 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145344472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676521709 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.036730494 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.346405326 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.022620254 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.373433915 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681254838 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126911863 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.10475275 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127169533 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.034098393 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124728606 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098873454 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127528658 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67803181 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.430458967 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097505169 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.387945376 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096224896 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132077435 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.414316457 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097619936 seconds)
  done (took 17.171275812 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.106953307 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.190648605 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.105388693 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127531708 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.10245566 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128411777 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.134508652 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.111731457 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188669776 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125741278 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117557401 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125794176 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102467518 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127095475 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119344248 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12608373 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099877021 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129036563 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104351904 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.129495238 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144686285 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098425731 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12740659 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100323068 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124371867 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112131741 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124964395 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.110957437 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126231844 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10270908 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131735623 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097755187 seconds)
  done (took 4.99662409 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.152971246 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.198922662 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135184788 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133607038 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.180958071 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128507665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.212823417 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166293834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.19143226 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098436119 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146299812 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098528848 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.164932057 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098341144 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150084122 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097140237 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.130256592 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127682863 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.105869746 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128052912 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119437001 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125573063 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100279404 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.129405564 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098003511 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141125443 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097851859 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140718371 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125016142 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104031406 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131402309 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098960097 seconds)
  done (took 5.352283612 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.112640974 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.134828097 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.1161554 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143749333 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100242518 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134233255 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.106902483 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.129858198 seconds)
  done (took 2.074202997 seconds)
done (took 30.681502744 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.122333966 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.131062244 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.113146174 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13978546 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.108769246 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.163512116 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.097304409 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.138842168 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.111633664 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.134962179 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.114738027 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.127620514 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099915937 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.124793899 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.11241069 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.131882024 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.114649283 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.136372204 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.12060163 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.142541328 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099236896 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.13953778 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.107540677 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.14849128 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.147273478 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.119618345 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.143033929 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.1041113 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.127540462 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099258134 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.144481315 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.124494818 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130398445 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.11480708 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.133339522 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.102409964 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.128102069 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.100311593 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.142737088 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108547957 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.133529652 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.109244106 seconds)
  done (took 6.276680042 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.132608219 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.172485944 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.096092748 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.124794165 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.095699642 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.166944977 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.163230747 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.095049145 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.125153786 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.122810727 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.154800811 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.124697901 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.096803287 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.095647494 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.125125839 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.096209941 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.152270792 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.152200379 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.130568121 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.159581319 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.175242926 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.130527757 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.163782429 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.152745051 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.140936623 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.165020255 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.148999095 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.16334013 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.127791201 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.123486624 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.130327833 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.161222403 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.09547169 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.124905308 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.167892346 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.135344638 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.15506547 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.169453334 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.129803591 seconds)
  done (took 6.445926405 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.114354679 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145948426 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139125957 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.267969034 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.141065615 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.146230502 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.144448154 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.119351253 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.160584215 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.099674913 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.141188075 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.131740686 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146096012 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.142195447 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105355606 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.143058303 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.118679232 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.130684143 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.107971305 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.148298255 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.117303127 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.142020677 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.146336322 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.109516338 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.128437308 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108812378 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.136929594 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.115553893 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.137265991 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.109695218 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132642135 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.13144194 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.101928023 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.139111296 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103660695 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.134421266 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.121364716 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.141240529 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.116273267 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.166170648 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.138795589 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.103731207 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.152352394 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.18057744 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.103058391 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.135890197 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.110355061 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.141451452 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.100026199 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149277369 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.11683038 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.130990269 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.144975768 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.099622191 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.129192191 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109214401 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.13121836 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.103117818 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.140727685 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.104202897 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.149264359 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.110716582 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140048273 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.13359196 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10846598 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.127408271 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.099626448 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.133088954 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.125556742 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136899645 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164795224 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102912621 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.13316107 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.110324248 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.138071886 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110634563 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.128420644 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109964167 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140178252 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.106473513 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.138952179 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.101501393 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.133380069 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.147040247 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.114949273 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.135866527 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.104751605 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.134802179 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102812251 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.133278836 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147138389 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.10170219 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.132557697 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11332019 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.130697967 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.102612703 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.135266277 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.104401227 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.128058002 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123554596 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.135054341 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.099511047 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.150979434 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.131149617 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.104446453 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.137774641 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.114219804 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.129065988 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.105248893 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.135329996 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099321053 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.137844019 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.10291991 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.129879376 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.112866827 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.145734698 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.106597881 seconds)
  done (took 16.025194288 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.254700253 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.228415715 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.202209779 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.313841286 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.152588145 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.156351855 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.225969339 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.149419404 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.130603334 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16991763 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.186497021 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.197102505 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.185866077 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.195411833 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.187949931 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.098883362 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.164472597 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.183346114 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.228553869 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.312102851 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.166624669 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.113074285 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.171425219 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.169869121 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.148640492 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.145837312 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.123728039 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.150544921 seconds)
  done (took 6.23552849 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.122999601 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.170277202 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.137063032 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.12922989 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.156985686 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.130900514 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.105341666 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.099789006 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.146318789 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.145999774 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.100867991 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.137106179 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.10573353 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.140168519 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.099442754 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.139205268 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.108577137 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.139365299 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.132181467 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.104303882 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.148175739 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.117509041 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.137745166 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.105116754 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.146983505 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.136737084 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.101233627 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.151426385 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.140372622 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.128454373 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.130062361 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10846224 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.14586038 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.098494234 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.138135576 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.131855608 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.102678683 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100640193 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.133834269 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.096684544 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.129372468 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.090534333 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.137082532 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.14431425 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.108770905 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.131133699 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.106072993 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.135330975 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101572226 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.126335943 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.102469352 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.132416779 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.10423034 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.147756142 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.102739834 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.131867338 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.104423971 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.130824577 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.110364415 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.133132072 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.097779649 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.13477652 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.107532518 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.13550463 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.109313909 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.137625707 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.105582528 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.132276817 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.104712443 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13732825 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.102005033 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.143515064 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096774561 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.134344424 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.110242436 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.143167456 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.134238768 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.105797515 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.13675324 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098970134 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.120279152 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098754903 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.085861609 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.134815407 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.098583212 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.13554552 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.1019731 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.136449488 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.147440623 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.109583815 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.138095602 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.099897201 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.13622944 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.103570625 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.127579154 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.103930041 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.148231196 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.150854338 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098622571 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.127805494 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.121646696 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.132245018 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097559916 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.118468763 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.110759014 seconds)
  done (took 13.983504141 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135411062 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.169383102 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100624629 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.150089415 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.166372021 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.129485061 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.146833717 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.109017932 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.132133212 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.12106266 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.139104918 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108913092 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.139071364 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.146575066 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.129512427 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.14503737 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100858223 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.146584242 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104633863 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.173289038 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.150889625 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.127315897 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.162355151 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.142516225 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.106047878 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.155691383 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.132391812 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.147735976 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.112484155 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.163635987 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.144514247 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.132251919 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.165868896 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.136202642 seconds)
  done (took 5.808210285 seconds)
done (took 55.86481892 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.214827584 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.440135449 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.192643483 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.196352863 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.254134135 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.220382925 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.210970526 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.390085729 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.970627942 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.180491971 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.194995491 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.1935535 seconds)
done (took 27.773894967 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.310979112 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.780623249 seconds)
    (2/2) benchmarking "String"...
    done (took 1.507859049 seconds)
  done (took 4.405242964 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.195611991 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.194725356 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.438418358 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.196788632 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.211045055 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.211158425 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.197306996 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.205820267 seconds)
  done (took 15.769636549 seconds)
done (took 25.795399384 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.25882491 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.396633942 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.446939964 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.207881637 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.194523209 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.208942082 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.191029435 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.228629602 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.196555021 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.207197522 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.191574364 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.489741236 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.214796491 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.579189781 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.193266065 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.209166155 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.208399704 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.45415054 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.195289066 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.254556291 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.178549669 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.201973127 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.207644809 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.216629951 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.205716796 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.192072134 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.205690644 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.192461518 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.397100005 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.210209525 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.239689903 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.19631497 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.206209679 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.206446467 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.304328447 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.228349503 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.388254183 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.206171503 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.186258002 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.204567337 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.392345635 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.62117421 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.197926466 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.19482897 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.204488958 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.282683074 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.181966555 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.965765648 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.197511512 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.206624176 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.242624667 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.590776213 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.199648485 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.207990723 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.2112688 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.439920544 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.198001941 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.243569687 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.239219226 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.209060243 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.195906056 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.203755587 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.258020143 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.204157294 seconds)
  done (took 143.309637442 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.199165306 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.198876221 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.199078063 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.216479313 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.199781129 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.200130669 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.198678058 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.199070416 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.200262186 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.203669933 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.200740798 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.199454466 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.199698117 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.177216881 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.204029698 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.22252578 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.204752157 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.200766332 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.220052475 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.202248602 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.208137953 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.198571876 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.21824261 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.201104387 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.207948973 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.270639492 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.218688982 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.199863546 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.196098269 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.200804937 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.19994638 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.206025523 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.829861686 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.055476624 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.218794316 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.229875833 seconds)
  done (took 80.029636619 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.200543794 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.201894625 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203203041 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.235889274 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.201259471 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.783354725 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788885572 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.937590387 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.606675635 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.561763023 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.475116362 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.198469355 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29745743 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.214317742 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.199540622 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.216267272 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.230314863 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199785465 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202138184 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.796475353 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.217781355 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.257447465 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.378173407 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.215832295 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237443994 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.601557651 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200100125 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.236412491 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.541237598 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.249699856 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20268751 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.57810567 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.677729507 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319280912 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.200831589 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206657418 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238526682 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.204653935 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.203955998 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.490347918 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200380225 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.204934476 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.206694093 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.874934992 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.202011847 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.793147263 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20053951 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.169893277 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.203241233 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206430385 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.244193415 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.221087784 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.861627455 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.219278089 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.20658383 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.209104841 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.206531423 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203417959 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.244352571 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.220829619 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.31583846 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.204657714 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.208246696 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235114042 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.205515431 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.406300227 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217421003 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.665641386 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.282174563 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.420535349 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.795685772 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207439791 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307673328 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322511735 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.204096252 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.208088104 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209356719 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.20619868 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.318540265 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.20201167 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.628976849 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.382811892 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.219610003 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.650808518 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.305330888 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.202227769 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.606558883 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.203142219 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.206302575 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.970333014 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302793442 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.204412651 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.207431247 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207113366 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.635205852 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797440229 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.465696443 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.203436163 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.534852224 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.203689302 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.206609245 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.642264368 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.773910215 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.895138122 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.206210454 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322561553 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.383939464 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.222949966 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.207771166 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.657191713 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.208950025 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.268330437 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.203299387 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.610384557 seconds)
  done (took 366.526794976 seconds)
done (took 590.981697952 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.968875827 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.857405261 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.999448239 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.889388758 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.852800213 seconds)
  done (took 10.6953635 seconds)
done (took 11.822140826 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.407511711 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.403913888 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266816397 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.402425476 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23964787 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.42744326 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.387346557 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.230843268 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.316399371 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.292453827 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.317625838 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260268816 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243073991 seconds)
  done (took 18.324444 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.485086386 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.207567491 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.291355047 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.470007288 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248106233 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.488734476 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.512198006 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.21031527 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.348466031 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224367688 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224488694 seconds)
  done (took 17.840374826 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.48330652 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.207301098 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275984004 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.473387626 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247751863 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.482679202 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.543935744 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.209481696 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.368041114 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226422453 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225829401 seconds)
  done (took 17.873511835 seconds)
done (took 55.164706587 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.250787983 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.380014265 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.238922817 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.225160725 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.221644995 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.220107491 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.225426352 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.220281211 seconds)
  done (took 11.113661647 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.222064935 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.216522259 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.221873801 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.21901598 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.22054149 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.217659304 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.216805606 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.220798783 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.216945185 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.219205805 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.217232645 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.21887353 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.218775619 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.219866081 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.216919173 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.217999111 seconds)
  done (took 20.63306544 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.222034149 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.22044185 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.217440238 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.219183233 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.218329618 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.217610142 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.218026481 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.216581137 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.217267531 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.220136801 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.219416186 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.218916337 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.218291549 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.220963738 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.220397138 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.220805308 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.2192178 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.221451549 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.224483279 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.220505438 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.22067011 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.219502411 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.21918273 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.220683997 seconds)
  done (took 30.404450857 seconds)
done (took 63.279223233 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.222698086 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.215389748 seconds)
  done (took 5.569401399 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.279965874 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.285728691 seconds)
  done (took 3.699228219 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.223756657 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.218756271 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.220258575 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.22002776 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.220853088 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.219720057 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.220024007 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.217904835 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.219699232 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.220302731 seconds)
  done (took 13.333656033 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.223744619 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.220190454 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.219030973 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.22090348 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.220249233 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.216421076 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.219694712 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.219816781 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.218926681 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.21513635 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.217701468 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.217115109 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.218186871 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.21525002 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.222301809 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.217311587 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.215538866 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.216993419 seconds)
  done (took 23.066804205 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.230289991 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.238431718 seconds)
  done (took 3.60121687 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.358518455 seconds)
    (2/7) benchmarking "second"...
    done (took 1.257520986 seconds)
    (3/7) benchmarking "month"...
    done (took 1.332934017 seconds)
    (4/7) benchmarking "year"...
    done (took 1.324557826 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.257993552 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.236973736 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.258653299 seconds)
  done (took 10.160047324 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.22163687 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.413784462 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.517719524 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.775722514 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.219654418 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.222945252 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.070455877 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.221003492 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.226492965 seconds)
  done (took 14.023692449 seconds)
done (took 74.585367941 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.211632153 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.26746487 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.214939685 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.227295512 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.555700604 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.234329398 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.213321219 seconds)
done (took 16.057260657 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.197861314 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.198322408 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.200683838 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.211990292 seconds)
  done (took 9.941163875 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.22533004 seconds)
    (2/2) benchmarking "read"...
    done (took 1.563206335 seconds)
  done (took 4.923703389 seconds)
done (took 15.996637249 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.215426209 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222302297 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.222266686 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.21752608 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.216631483 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.2211604 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.217311465 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.215478555 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.220355491 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.220390439 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.21899631 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.222445076 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.222042765 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219594968 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216612958 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21928154 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21920415 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.217717207 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217454836 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216482736 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.220811677 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219392253 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.217267503 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.218946817 seconds)
  done (took 30.387832035 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.220283574 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.217598412 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.224997797 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.224053859 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.22013718 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.223744529 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.225286594 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.222386784 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.223129549 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.222984405 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220108977 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.216848331 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.220552062 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.218587665 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220260879 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.218846091 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.224703015 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220161405 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221000114 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.223011161 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.222629348 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217990315 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.219324031 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222992238 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.220815624 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217804405 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.221462372 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.21989457 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222679014 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.220811786 seconds)
  done (took 37.771760225 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.227541246 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.23207858 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.220687208 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.223330813 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.224474369 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.223112576 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.221081783 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.222492196 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.221028814 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.223695701 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.223202296 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.225880746 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.226778738 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.222544548 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.223177803 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.223527473 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.224253213 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.224581342 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.222684488 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.222697188 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.2235224 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.224892055 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.223431069 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.226434287 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.224318708 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.227631029 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.224304388 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.225509622 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.225594223 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.222634346 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.2253722 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225953264 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.224317662 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.224136291 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.22787385 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.224826428 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.229962202 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.233902736 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.224719723 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.225115274 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.227209223 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.225743167 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.226710051 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.226292983 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.225603025 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.225490699 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.225524488 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.226284657 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.229186534 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.225061584 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.225656074 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.226031121 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.227326767 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.227286479 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.227493718 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.224691979 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.227343788 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.226759938 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.227155185 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.227145885 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.227141036 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.228788125 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.225538614 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.227523829 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.225684272 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.227590054 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.227738666 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.228655921 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.227703299 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.22826889 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.228473732 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.228827158 seconds)
  done (took 89.391941417 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.230815345 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.226768083 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.224803618 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225416035 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224140499 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.22804053 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.225834047 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229025526 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225292204 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.228846462 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227732882 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.227865224 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226471808 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.229766614 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22847608 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.227847204 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.232441279 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226189692 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.229340561 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.230055068 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228872478 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.227865119 seconds)
  done (took 28.151557445 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229514762 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232011903 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.226763251 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231364832 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229158927 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23134262 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22908969 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231119677 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230556138 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.728397176 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228947396 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23094632 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.22831671 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227560009 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22879387 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229335012 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230579458 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230630251 seconds)
  done (took 23.775982858 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.229960771 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.22696664 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.231326359 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228011115 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.227902744 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.231837971 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229655981 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.231639883 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.23234012 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.227610392 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.23214799 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231427162 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.232778739 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231533861 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233230241 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229522962 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.232071886 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229395701 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232620803 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230755681 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229135996 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231529699 seconds)
  done (took 28.21555181 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231205483 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.232245806 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.230264303 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.229945906 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.230125133 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.233252463 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.232861042 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.229350047 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.23278516 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.235101983 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229185076 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.231065311 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.231810313 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.230001264 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.230301876 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23016924 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233360264 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.230930531 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233345719 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.23134663 seconds)
  done (took 25.770346225 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23428373 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236545154 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237400083 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236472258 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235092005 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.236129758 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235142091 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.236622956 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235685117 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.236616139 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.235341396 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.237263394 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236239759 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.236021761 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236848311 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236528498 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235540383 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234617676 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.236205775 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237621097 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.235981092 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237758136 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.239070136 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.237898524 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.23732376 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236985183 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237310298 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.237093413 seconds)
  done (took 35.764822545 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2368612 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235194481 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.233026033 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.234923647 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.23361339 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.23474551 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.23345318 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.234241232 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237925443 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236119943 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.238843166 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.237799651 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23826748 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.237882047 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236982437 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.235407786 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23886757 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.234611379 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236509109 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236799049 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.236494668 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236805865 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.236229296 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235413016 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234951148 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.237624479 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232513432 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.237348047 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238391535 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235802152 seconds)
  done (took 38.230382914 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.279795177 seconds)
    (2/2) benchmarking "in"...
    done (took 1.28354112 seconds)
  done (took 3.71106164 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.237040492 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236972139 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.237762797 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.236384933 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23494786 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238170648 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.239339738 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235722792 seconds)
  done (took 11.044048985 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.23741787 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.24007899 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.238965988 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.238084419 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.238933831 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.236804945 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246335275 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.260009139 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.240400276 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.240980975 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.248443404 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.247331839 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.242247759 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239454027 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.239641576 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240406113 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.235897453 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.240419889 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.241196617 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.241577199 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238319572 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243141127 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240949374 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.237983585 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.241369549 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.251526903 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.242349354 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.240299375 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239191224 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.241030597 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.237448246 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.235939239 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.24044587 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.241041428 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.241587906 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.239988754 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249162916 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257318068 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.245299284 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241538478 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241813034 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.236428362 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.239741581 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.24012196 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241941265 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.239306188 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.241467929 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.239272018 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.240358645 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.242835858 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.247416917 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239688905 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.238142685 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244051921 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.24247512 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247126955 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.258742727 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.244810091 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.254313913 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.25133161 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.254641628 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.26230749 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244419109 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.240739317 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253365291 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.266346361 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249171468 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.259368875 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.239576972 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.241944155 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.24816455 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252674261 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.265929082 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.243010362 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243106323 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.244465828 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243563371 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244332982 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249579052 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.261536797 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.243851697 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245194542 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253052145 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26943402 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.245798082 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.244562117 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.246331352 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.24389993 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.24879836 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256909238 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.263308219 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.244767722 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.242204815 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.242894303 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.243328052 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.244025521 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.244722714 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243930338 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.243244676 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.245567695 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245701758 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247215106 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.25647128 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243433202 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244509444 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.251581437 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.243987992 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248438074 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.25242853 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.245392901 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247310385 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.247710672 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.252015462 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.24232238 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247247999 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.255576491 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.246517427 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.246683459 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.246628397 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.246716076 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25727053 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.274917802 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.245474957 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.248156946 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.251817975 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.260725309 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246890015 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.248081714 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.245883977 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.24342085 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.245007272 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.249134998 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.245018853 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.246130049 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24756022 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247211997 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.243433364 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.246008076 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.24523043 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.246740451 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.247856089 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.245675105 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.244860635 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.248696165 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.247250634 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.246844097 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.253224866 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.24466998 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.247247627 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.244845824 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.245605819 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248007088 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.248276643 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.250232643 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.246429171 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249069393 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.24671673 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.24731214 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24636087 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.249576803 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248045819 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.248913842 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253195811 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.248020553 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.249009442 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.245792603 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.244012573 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.24795763 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.249730983 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.245683111 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.249479618 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.248827088 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.252259279 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.258970597 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.251810595 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.250097136 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.251901819 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249727012 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251022252 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250826375 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.253971552 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.259387703 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.247937338 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.255053492 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.249413879 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24882467 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.249291243 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.248766799 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.249466046 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250454349 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.251008777 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.259451188 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262327876 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274348117 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.250845568 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.254475702 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.250285754 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.256424911 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.25296946 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.250527709 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.250714028 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251234438 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249637415 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252292907 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.252974008 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.250566519 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.251290829 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.252376742 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.252551633 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.250728944 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251474276 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.250022723 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25071523 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.248025354 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251686848 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251671959 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.250596827 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.249365276 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.250242126 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.250940783 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.252892239 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.252030845 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.257222993 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.249909694 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250815062 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252893793 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.251169955 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.251829903 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.252457656 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252910892 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.252105967 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259979429 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.268893614 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.253345636 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257698324 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.270485833 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.251828301 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.25459764 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.25489991 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.251380037 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.255196424 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.264300773 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.252323449 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.254496446 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.252549602 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252916681 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253423853 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.258209127 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.250635326 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.25312351 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.25496276 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.255052572 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.251974492 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.253852541 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.253207418 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.255288188 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25442085 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254209356 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.25540432 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252696991 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.254930115 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.255405981 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.254454414 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254577343 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.261886031 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.25746915 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.253931377 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.253199648 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.254785252 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.258200328 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.252275798 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.254405742 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.257324015 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265568737 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.28000063 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263812674 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.275080167 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.256793729 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.260878934 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.275168036 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.261730356 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256686126 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256655534 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.257025869 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.256111411 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.255222813 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258080277 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.258277052 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257696865 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.256679876 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.262926715 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.258456641 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.256696565 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.258162008 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.255954747 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.258617445 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.257068983 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.256844121 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.258817566 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258658837 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.256795996 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.259290719 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26322435 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276433472 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.259288954 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.257986839 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.256905762 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.256438806 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.259411196 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.257181256 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.261452072 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.271112196 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.261772247 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.271853952 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.261170164 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26905945 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.257903218 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.264392347 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.270796746 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.256884 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.257838689 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.258550528 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.258035057 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266425172 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.277110013 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.261364465 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.263533132 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259206336 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.261963009 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.26131708 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.260188362 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261119436 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.259011786 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266958477 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.280697845 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.264546296 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260500321 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.255479604 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.260207182 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.260866297 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.259085209 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265515264 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.261122609 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.260834542 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.260208778 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.25921571 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.26196042 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.259744897 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.26249896 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.256951014 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.261321128 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26581128 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.27981953 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265595079 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.261569702 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.2671897 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259216423 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266273796 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.279778318 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.261838497 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.261949825 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.26224825 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.263737843 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.258152944 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.262134509 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.261218322 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.261728445 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.266750562 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.263720213 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.263740419 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.262888935 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.260540958 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.259474512 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27170176 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285257388 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.25990018 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268746893 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.257954863 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.261719899 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.26697758 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.261426776 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.259620471 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.265633576 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272212616 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271653091 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.259404496 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.261878656 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263315809 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262852109 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.263835408 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.262873907 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.262628612 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262763133 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.262514002 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.263296802 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264026216 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.261859152 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.262541841 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262734966 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.262609934 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.271264904 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.264178933 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.264801756 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263471134 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.264821765 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.262803593 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.261747333 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.263110041 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264998276 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265012479 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.265299131 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268597931 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.273083142 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.267521922 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.264999833 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.265278198 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.264008304 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.264178031 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267062386 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.264358714 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266165749 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.265645782 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.265034526 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265746473 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.26666219 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.267088538 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.267623389 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267619909 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270535277 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.276360807 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268191318 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.265164866 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.267474907 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265725993 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.261900111 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.265460066 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.275785383 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267767463 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.276961421 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.273465915 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.272073567 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.266467227 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269542815 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.276006843 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.268478083 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.267275176 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.265056283 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.267231614 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.266182928 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.272580472 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267869311 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.273376347 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.268276375 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.266941912 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277469779 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.289459781 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269111977 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.268705062 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.272915193 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.2688971 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.26647439 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269168192 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.266410215 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271593934 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.286468336 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267635009 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269746192 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.269329136 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.269927677 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275694182 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269171435 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.268088063 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.264654704 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.267597833 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269080612 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268610214 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.266408178 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.267704222 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.269091791 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.272388458 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.276692597 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.267611583 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269062563 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.270785126 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.269335318 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271152349 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270146132 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.266320231 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.26683164 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.269617966 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270167764 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.268664399 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.27049718 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.269835752 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.271669969 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.274418258 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27030126 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271220848 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.282153763 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.277058532 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.2694984 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.270901144 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.269195622 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.269821021 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272535066 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.272353723 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268732399 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.271744353 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.27141526 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27208104 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.271159599 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.272866428 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28758269 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.292186494 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273112168 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.27117338 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274951325 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.272739547 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.268622513 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.271336154 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.276003584 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.273180914 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.281446906 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.272496893 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279155811 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289975063 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.274009427 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.278802675 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.275456714 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.279865814 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.277964455 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273415565 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.274434523 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.277008675 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.290138784 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272716767 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283504668 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.306932574 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.291572121 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.275194436 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.273882504 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274783866 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.275312759 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.274537924 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.273211453 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.274339576 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27512319 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.275252167 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.27475314 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279684031 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.274441734 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.276480797 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.27377389 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.271805113 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.276256238 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.271068543 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.272978546 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.275526129 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.275177883 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.275857509 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.275098308 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.273953144 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286905185 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.29868951 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.27750717 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.277507348 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.274536711 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.277030123 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.278113571 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290248075 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.285366668 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.275531815 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.273927635 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.280107214 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275101454 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.275754137 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.27660827 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.274561183 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.275862034 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.274163061 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.287967722 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301863832 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.278642596 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.276216677 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277332063 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.280123039 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277565833 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27838046 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277207052 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.274897916 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.279069257 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281885495 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.277419959 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.275694568 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.280196546 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.28732471 seconds)
  done (took 752.079968659 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.276513134 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273408965 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275741619 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273545102 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275996438 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276879551 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275675194 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.277209197 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276507992 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275343543 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.276788975 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276617913 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274676851 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27683636 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275771812 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274474772 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276006456 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276330353 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275709151 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275995781 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277500792 seconds)
  done (took 27.978000473 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.281080703 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.275341905 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276633857 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278438193 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278958636 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.281311991 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.277053233 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280687492 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.279923373 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278616476 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.281252209 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280758317 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.277921001 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.28033888 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277777127 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278200162 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.281721878 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278830596 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.281697581 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278857811 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282174584 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.279350876 seconds)
  done (took 29.333050175 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.285364158 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.281909681 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.280861558 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.279081013 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.281995779 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.277294549 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.280275828 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.282234724 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.280883305 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.28058385 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.280946161 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.282959489 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.29062176 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.289475582 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.282861966 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.28245119 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.282565568 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.280695812 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.280450641 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.279367444 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.284664296 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.2982704 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.276100738 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.278339183 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.282515842 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.282404823 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.281693067 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.281691835 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.28428514 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.289453832 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.281801034 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.281271631 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.281993899 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.281265182 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.280938024 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.290159407 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.281455058 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.280048254 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.284022639 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.291389968 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.306448604 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.282659329 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.289751402 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.300607799 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.280637207 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.285185463 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.292983216 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.281770269 seconds)
  done (took 62.82462185 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.889287866 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.90022787 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.903493312 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.914765746 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.95430467 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.932375675 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.900966111 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.943356555 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.932853871 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.914225018 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.905924955 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.889458117 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.887615067 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.91867753 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.935326538 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.939006397 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.921678645 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.937985024 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.925537994 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.954797505 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.899088104 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.89494615 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.920212091 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.884721017 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.930427435 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.956453353 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.955094402 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.909746101 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.897553219 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.956926541 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.952492171 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.904953568 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.932538392 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.921509948 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.952655275 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.892112191 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.889552801 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.890011158 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.88814963 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.885159355 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.930830556 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.895280895 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.903522431 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.88687977 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.903251579 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.929920833 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.906355058 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.914211438 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.886591753 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.890743907 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.895878345 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.886500243 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.892441457 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.907605326 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.900994038 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.895767576 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.895302957 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.907408448 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.890609932 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.89674378 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.893779292 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.889722576 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.89738061 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.903424373 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.895794265 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.981939725 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.890474745 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.90809466 seconds)
  done (took 131.185065546 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286352686 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.287063578 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284890427 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288088909 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28689145 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.287647723 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287128354 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.287958839 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.287090581 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289447709 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.285508654 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288749653 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.285905938 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.2878043 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.288538038 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285723586 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287118581 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289077538 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288048143 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286752091 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.28529495 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.288908553 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.286723458 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.287082215 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288922338 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.285658269 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.286929717 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287956883 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290326544 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.288819005 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.289141679 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.287229321 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.287728817 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.288922237 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.288248471 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.288680162 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287610981 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288330061 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.288117792 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.289935698 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.288926652 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288555437 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.288312399 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.288534781 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287873185 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.289263718 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.290223809 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.291695442 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.290025268 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.288554563 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.28937762 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292138486 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291064306 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290866758 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.290237449 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.289099421 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290617559 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289792777 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291001119 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.292214574 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290457183 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.290927849 seconds)
  done (took 81.079220167 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293144095 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291608819 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.288290833 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.286849297 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290669279 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.289118402 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.291759193 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.291254226 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.292104919 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.291558958 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293297205 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28931675 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290724849 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293118388 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.288822025 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29009671 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290098748 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.290684885 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29285618 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.290114365 seconds)
  done (took 27.014625207 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.290822719 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293041926 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.289675899 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293421214 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.294190384 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.290713216 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.293997738 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294328233 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289669551 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294051626 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292295564 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.294239229 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291029931 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.292056251 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294900197 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.292952116 seconds)
  done (took 21.8792804 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.292817296 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.294077782 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.294586987 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.294407257 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.293778148 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.292032697 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.294218961 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.294112192 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.291543257 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.295129007 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.294916488 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.295079047 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.294381843 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.295928878 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.293094185 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.294516492 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.292581448 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.290426414 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.295453064 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.296328631 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.293051073 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.29293382 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.294726319 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.295559788 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.296500039 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.295408301 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.29313581 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.29500236 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.295082469 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.29806554 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.294110535 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.292883656 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.292459007 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.292609921 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.297430421 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.295520613 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.298758278 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.2977328 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.298313431 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.294892983 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.297870354 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.295176618 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.295668818 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.298895143 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.29513002 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.295528924 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.291506979 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.293752452 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.294442393 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.293182715 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.297682722 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.296822098 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.299535103 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.296464722 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.296988984 seconds)
  done (took 72.422328254 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298190892 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.299201833 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.294495147 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297316246 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.299021638 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.297037853 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.298390103 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.296993161 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296950735 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.301182512 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296941348 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298349582 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296258435 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298684383 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.295759483 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298487097 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.29604087 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.296975776 seconds)
  done (took 24.557765813 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.29894471 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.297540949 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.298836124 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.299145035 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.297182852 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.302155265 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29928422 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.301587618 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299970957 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.295667456 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299801025 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.299799286 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302801266 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.301278137 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.298362321 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297422918 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.301837694 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300646054 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.296675254 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297292895 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.300866496 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299981982 seconds)
  done (took 29.792396811 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.299211787 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.29976017 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.298891445 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.318587936 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.320821786 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.298550867 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.299112736 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.298297128 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.325058581 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.354928468 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.349114779 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.31972148 seconds)
  done (took 16.987705021 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301333963 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300178334 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300293504 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301151469 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301463571 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299936475 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298893638 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29679148 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301731357 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30089652 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299441715 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30180605 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300881287 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299102128 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303775836 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303933895 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299973916 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299383725 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299156631 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303624794 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300178737 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304644063 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302384328 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301602591 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300730158 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300101713 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304610383 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300217575 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303610788 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303397121 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303928774 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300129999 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303540167 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302024295 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303340654 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303560803 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302434412 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305291732 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305036746 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300572335 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303884631 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304238805 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301744713 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301495965 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304625917 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302608564 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301514363 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3005795 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303258833 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304409725 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30436182 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301404918 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30518454 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303716203 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30324342 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305787251 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302944989 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302825005 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305803758 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304394038 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303940302 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306692305 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301942813 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302846764 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305517907 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301183794 seconds)
  done (took 87.16359971 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303795442 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301397974 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303719297 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304410921 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305846952 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306761245 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302965799 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303582414 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305643456 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304082183 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30633578 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304085831 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305199106 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305884731 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303455226 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305373316 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305073117 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306101237 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304819406 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308610221 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305188715 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305555582 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304310394 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304858609 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305863931 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307636958 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307576272 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306518939 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305956963 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305188387 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306546972 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305698901 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306022029 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307380632 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308479052 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305825024 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30672205 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306764988 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305436686 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308769488 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308340983 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310791036 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308177327 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30602594 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308964119 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307322387 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307529398 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306187378 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307441745 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308517179 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310369626 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307860119 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305087957 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310084934 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306461876 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307420483 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30684392 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306527935 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308419489 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309807731 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306675946 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306418518 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309317823 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306544817 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309087136 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306662244 seconds)
  done (took 87.436832846 seconds)
done (took 1805.080239718 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.475347548 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.422932017 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.308147048 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.317260316 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.305562981 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.334349477 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.314663777 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.306283907 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.309507791 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.306149796 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.310501374 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.497303235 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.30386609 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.305332861 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.309994453 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.406086052 seconds)
  done (took 26.747501335 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.339735651 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.317660049 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.436526183 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.326626333 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.339952963 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.509995559 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.369728552 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.315212768 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.499225706 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.354833053 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.306971148 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.351863771 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.315226196 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.319244021 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.331502629 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.512100198 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.577389632 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.309549358 seconds)
  done (took 29.047484052 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.801158358 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.350485219 seconds)
  done (took 5.367090384 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.335593514 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.315929364 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.317082045 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.315451395 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.307320148 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.324494087 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.314592836 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.311529769 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.308307493 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.449503064 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.319129025 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.328121074 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.334265109 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.31652197 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.312676373 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.355197584 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.480316417 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.313265524 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.312283496 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.319684491 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.313185507 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.408833976 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.356560258 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.315399407 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.448979911 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.314453271 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.321158215 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.323270549 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.442783791 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.312462203 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.314346758 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.318090114 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.316621927 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.258040265 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.765617345 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.306130048 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.340086997 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.323086131 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.312621542 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.456481819 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.318607803 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.324335047 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.307506368 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.748620885 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.450245461 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.439070529 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.325435936 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.318681379 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.316110029 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.379760875 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.31453501 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.318959101 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.359768667 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.130245893 seconds)
  done (took 84.237685801 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.317187708 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.30803686 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.491756706 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.332745681 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.306215609 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.305062382 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.306817446 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.616567747 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.322172093 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.310362964 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.608519938 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.89562664 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.327567656 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.350875729 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.195552661 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.371159957 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.307234131 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.325712764 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.30725488 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.31020307 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878168142 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314222566 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.333098848 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.403684047 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.347836349 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.855901444 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.309504211 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.317676458 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.309048883 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.307216896 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.854426002 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.33641726 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.365353772 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.311438097 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.596331965 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.710478384 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.670757155 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.31112389 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.358900579 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.309593578 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.335290488 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.837974718 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.69017419 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.308735403 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.309323848 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.84351145 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.310545097 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.322425403 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.318064579 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.565523517 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.314899632 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.315127144 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.330603055 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.315596143 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.311652021 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.433789164 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.408320622 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.853542284 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311538653 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.315256947 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.35465804 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.312220877 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.317636279 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.312941334 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.323965819 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.69368331 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.509002693 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.31551305 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.696549736 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.848834953 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.327129673 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.920120798 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.327423421 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.319478582 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.505797758 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.314826482 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.311831577 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.860040839 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.314001731 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.31189045 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.676724985 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.310676259 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.621602709 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.333106644 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.311888616 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.890589076 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.319148538 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.402886971 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.314616882 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.312601584 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.328513114 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.320415832 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.627621902 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.353963106 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.317147685 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.314204378 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.349320205 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314104479 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.314663998 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.316063142 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.919806272 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.334458907 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.319409494 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.317310599 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317536115 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.316014739 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.314722802 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.317043938 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.585329611 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.316411581 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.319813108 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.318897494 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.315098337 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.317013632 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.420316228 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.318990043 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.644856194 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.316038022 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.330686855 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.315547453 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319749753 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.325498471 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315491786 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.317510775 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.206573393 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.582107359 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.340677218 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.329426297 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.318980324 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.317729501 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.316834179 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.337397246 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.372894905 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.324114949 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100624628 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.331816509 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.321940046 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.318057324 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.32987102 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.319392872 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.319851946 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.31995322 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.621363924 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.609512796 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.525173991 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.316610816 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.319030533 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.100169781 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.354490551 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.501399376 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.343126788 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.320763921 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.573372639 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.549599917 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.32003181 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.321175404 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.318181663 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.582374033 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.32013249 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.63119021 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.886769068 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.331809523 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.32854631 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.101351743 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.05758857 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.321976484 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.322039793 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.619725688 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.336133852 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.318726487 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.321569527 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.320926432 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.332241033 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.339968353 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.324671028 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.321104539 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.322120091 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.645021958 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.515866245 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.343955496 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.328852734 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.85372569 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.325613991 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329024111 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.32717525 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.323057714 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.32181694 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.395112952 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.325137043 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.335510753 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.324813745 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.324367371 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.86682577 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.319026888 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.324398464 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.514918579 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036490165 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.335097339 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.321872961 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.333815811 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.209659852 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.873959856 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.376054342 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.654018243 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.320244899 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.361171378 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.323499717 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.39133073 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.875338067 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.324528697 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.338920342 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.998539637 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.336316308 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.744898304 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.320134376 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.323906164 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.948848478 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.338676969 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.321984469 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.32030096 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.340741017 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.618248257 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.323867114 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.33491436 seconds)
  done (took 495.734815902 seconds)
done (took 642.345810091 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.324507308 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.320173925 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.309858747 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.324349681 seconds)
  done (took 10.509330041 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.333899896 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.331905114 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.331654177 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.331138923 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.336749671 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.329593151 seconds)
  done (took 9.228297357 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.326298765 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.322969977 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.325841838 seconds)
  done (took 8.209448973 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.554524095 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.348849367 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.679560295 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.343884024 seconds)
  done (took 9.160738422 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.333691431 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.331821228 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.332522311 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.333864945 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.333525811 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.335145565 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.333294398 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.335487674 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.336227144 seconds)
  done (took 13.239339627 seconds)
done (took 51.574804388 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.326183669 seconds)
    (2/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.987024495 seconds)
    (3/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.349882534 seconds)
    (4/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.421790675 seconds)
    (5/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.507110611 seconds)
    (6/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.367059967 seconds)
    (7/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.224759894 seconds)
    (8/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.392454449 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.365549764 seconds)
    (10/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.332505512 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.342733487 seconds)
    (12/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.343750334 seconds)
    (13/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.351768387 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.340694087 seconds)
    (15/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.408206993 seconds)
    (16/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.346213127 seconds)
    (17/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.384694996 seconds)
    (18/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.325588131 seconds)
    (19/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.524022849 seconds)
    (20/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.359715718 seconds)
    (21/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.487652726 seconds)
    (22/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.358313465 seconds)
    (23/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.340893314 seconds)
    (24/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.451308461 seconds)
    (25/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.571994896 seconds)
    (26/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.38257909 seconds)
    (27/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.342455545 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.384505952 seconds)
    (29/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.04427208 seconds)
    (30/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.541670963 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 1.751842786 seconds)
    (32/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.344506522 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.338974429 seconds)
    (34/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.482643563 seconds)
    (35/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.463510096 seconds)
    (36/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.362658098 seconds)
    (37/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.324665763 seconds)
    (38/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.007907636 seconds)
    (39/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.329902461 seconds)
    (40/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.370324475 seconds)
    (41/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.545942109 seconds)
    (42/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.552882784 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.353337975 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.362159144 seconds)
    (45/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.345186003 seconds)
    (46/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.345049568 seconds)
    (47/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.336473178 seconds)
    (48/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.977824227 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.389768996 seconds)
    (50/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.350557681 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.342605724 seconds)
    (52/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.321546801 seconds)
    (53/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.548962848 seconds)
    (54/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.159142256 seconds)
    (55/286) benchmarking ("sort", Int8, false)...
    done (took 1.464092289 seconds)
    (56/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.34194099 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.432183311 seconds)
    (58/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.352862041 seconds)
    (59/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.036918362 seconds)
    (60/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.3919428 seconds)
    (61/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.454235642 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.39932495 seconds)
    (63/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.335290704 seconds)
    (64/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.35236753 seconds)
    (65/286) benchmarking ("sort", Int64, false)...
    done (took 1.502736696 seconds)
    (66/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.476528947 seconds)
    (67/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.485579099 seconds)
    (68/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.98790378 seconds)
    (69/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.475273322 seconds)
    (70/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.345004241 seconds)
    (71/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.346624003 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.38480001 seconds)
    (73/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.391886521 seconds)
    (74/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.218851529 seconds)
    (75/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.365501438 seconds)
    (76/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.347459337 seconds)
    (77/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.422460958 seconds)
    (78/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.440588234 seconds)
    (79/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.512598246 seconds)
    (80/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.335001685 seconds)
    (81/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.088218316 seconds)
    (82/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.349755133 seconds)
    (83/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.455619913 seconds)
    (84/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.3996586 seconds)
    (85/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.039116417 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.402405293 seconds)
    (87/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.354880463 seconds)
    (88/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.339823285 seconds)
    (89/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.332004559 seconds)
    (90/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.423328607 seconds)
    (91/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.378078277 seconds)
    (92/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.317885878 seconds)
    (93/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.480376668 seconds)
    (94/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.35428703 seconds)
    (95/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.345294063 seconds)
    (96/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.348832641 seconds)
    (97/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.434115451 seconds)
    (98/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.416983651 seconds)
    (99/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.356251761 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.381900277 seconds)
    (101/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.44024007 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.409853614 seconds)
    (103/286) benchmarking ("sort", Int8, true)...
    done (took 1.681228701 seconds)
    (104/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.342133304 seconds)
    (105/286) benchmarking ("sort", Bool, false)...
    done (took 1.365368808 seconds)
    (106/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.383501821 seconds)
    (107/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.985679434 seconds)
    (108/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.342532165 seconds)
    (109/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.363239494 seconds)
    (110/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.381261149 seconds)
    (111/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.465418215 seconds)
    (112/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.094626541 seconds)
    (113/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.536995895 seconds)
    (114/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.446982247 seconds)
    (115/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.403122208 seconds)
    (116/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.363361301 seconds)
    (117/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.38908703 seconds)
    (118/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.563541533 seconds)
    (119/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.432204888 seconds)
    (120/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.536465113 seconds)
    (121/286) benchmarking ("sort", Float64, false)...
    done (took 1.552322006 seconds)
    (122/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.738104111 seconds)
    (123/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.350264835 seconds)
    (124/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.417020744 seconds)
    (125/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.383264115 seconds)
    (126/286) benchmarking ("sort", BigInt, true)...
    done (took 2.338809447 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.448442682 seconds)
    (128/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.469155397 seconds)
    (129/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.433893093 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.508204972 seconds)
    (131/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.349465884 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.430075461 seconds)
    (133/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.041270819 seconds)
    (134/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.35086245 seconds)
    (135/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.355815603 seconds)
    (136/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.377552444 seconds)
    (137/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.382653855 seconds)
    (138/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.433942297 seconds)
    (139/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.41186303 seconds)
    (140/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.996071852 seconds)
    (141/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.240730624 seconds)
    (142/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.486510648 seconds)
    (143/286) benchmarking ("sort", Float32, true)...
    done (took 1.941642185 seconds)
    (144/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.354088115 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.344771593 seconds)
    (146/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.346365727 seconds)
    (147/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.489085935 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.354003279 seconds)
    (149/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.349334581 seconds)
    (150/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.410306977 seconds)
    (151/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.393743515 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.539627999 seconds)
    (153/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.405938925 seconds)
    (154/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.422192391 seconds)
    (155/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.380372252 seconds)
    (156/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.404161582 seconds)
    (157/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.553957677 seconds)
    (158/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.0997927 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.43746376 seconds)
    (160/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.325488789 seconds)
    (161/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.440575527 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.325407316 seconds)
    (163/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.469446635 seconds)
    (164/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.427455786 seconds)
    (165/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.326241455 seconds)
    (166/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.373070516 seconds)
    (167/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.152678784 seconds)
    (168/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.366660742 seconds)
    (169/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.357884568 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.3519416 seconds)
    (171/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.412867498 seconds)
    (172/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.362068538 seconds)
    (173/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.39819534 seconds)
    (174/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.334973084 seconds)
    (175/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.328090594 seconds)
    (176/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.335484891 seconds)
    (177/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.50868767 seconds)
    (178/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.192265296 seconds)
    (179/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.351478979 seconds)
    (180/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.697064201 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.366147753 seconds)
    (182/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.350080688 seconds)
    (183/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.494175844 seconds)
    (184/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.486626177 seconds)
    (185/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.440569097 seconds)
    (186/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.354771601 seconds)
    (187/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.523792605 seconds)
    (188/286) benchmarking ("sort", Float64, true)...
    done (took 1.983176669 seconds)
    (189/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.124842053 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.465787787 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 1.544441347 seconds)
    (192/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.560593504 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.353643444 seconds)
    (194/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.496460632 seconds)
    (195/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.365688412 seconds)
    (196/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.327050934 seconds)
    (197/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.386237937 seconds)
    (198/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.489585929 seconds)
    (199/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.427604587 seconds)
    (200/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.472805096 seconds)
    (201/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.368651293 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.362841408 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.435947084 seconds)
    (204/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.327470721 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.520171285 seconds)
    (206/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.020773361 seconds)
    (207/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.35963445 seconds)
    (208/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.114518577 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.471608392 seconds)
    (210/286) benchmarking ("sort", BigInt, false)...
    done (took 2.339593636 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.44995716 seconds)
    (212/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.365271961 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.350066956 seconds)
    (214/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.350502809 seconds)
    (215/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.341158126 seconds)
    (216/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.215584522 seconds)
    (217/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.343798833 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.377782529 seconds)
    (219/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.533891664 seconds)
    (220/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.382552056 seconds)
    (221/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.354284088 seconds)
    (222/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.609120833 seconds)
    (223/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.342740797 seconds)
    (224/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.444201216 seconds)
    (225/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.503548844 seconds)
    (226/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.373425749 seconds)
    (227/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.356259612 seconds)
    (228/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.356240739 seconds)
    (229/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.458552067 seconds)
    (230/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.358357369 seconds)
    (231/286) benchmarking ("sort", Float32, false)...
    done (took 1.50648156 seconds)
    (232/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.444213443 seconds)
    (233/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.702844103 seconds)
    (234/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.37910928 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.384669272 seconds)
    (236/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.10872893 seconds)
    (237/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.362504027 seconds)
    (238/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.432412794 seconds)
    (239/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.36523018 seconds)
    (240/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.355475285 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.403519152 seconds)
    (242/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.360411655 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.357348456 seconds)
    (244/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.359443856 seconds)
    (245/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.679165399 seconds)
    (246/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.395458042 seconds)
    (247/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.420828624 seconds)
    (248/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.338069801 seconds)
    (249/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.360477789 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.385502609 seconds)
    (251/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.366375937 seconds)
    (252/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.36016465 seconds)
    (253/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.429297126 seconds)
    (254/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.003065965 seconds)
    (255/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.485767284 seconds)
    (256/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.42680842 seconds)
    (257/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.354744562 seconds)
    (258/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.376407682 seconds)
    (259/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.348489792 seconds)
    (260/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.360774472 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.364903835 seconds)
    (262/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.432130147 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.473420912 seconds)
    (264/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.344861574 seconds)
    (265/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.446714104 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.365615423 seconds)
    (267/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.359787166 seconds)
    (268/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.107848991 seconds)
    (269/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.439855855 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.387752001 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.528276876 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.527653386 seconds)
    (273/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.579675158 seconds)
    (274/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.487481163 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.370472909 seconds)
    (276/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.354371821 seconds)
    (277/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.504923629 seconds)
    (278/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.400075012 seconds)
    (279/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.549434406 seconds)
    (280/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.335060092 seconds)
    (281/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.42817043 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.461326137 seconds)
    (283/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.427449785 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.358078109 seconds)
    (285/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.42901134 seconds)
    (286/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.365289632 seconds)
  done (took 473.609684425 seconds)
done (took 474.841310479 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.394259316 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400527727 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.355094455 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.389239363 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.467540754 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.530839938 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.364918291 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.396628619 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.405012371 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.406175246 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.36197862 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.532325749 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.356734963 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.357129151 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.3565507 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400907083 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.361724451 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.357598713 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.3734025 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.395591706 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.373477417 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.36260989 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.405127898 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.530682638 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.360950821 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.358807009 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.360828026 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.378815227 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.470455171 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.360689498 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.361406859 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.369085161 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.361791213 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.364345461 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.351309393 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.37884964 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.36842242 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.367570385 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.392441759 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.469547557 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.362463717 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.366073615 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.359658812 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.356698753 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.357097652 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.396748661 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.360960379 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.416446796 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402059834 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402277297 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.349026221 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.369328223 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.365600046 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.360685068 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.366601773 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.363217247 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.414655569 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.403374336 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.378889575 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.405015174 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.350094432 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.361817461 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.397135863 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.377053724 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.367309763 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.345080834 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.355698572 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.400203721 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.350655101 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.359144185 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.34735648 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.365745118 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.351972432 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.367275129 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.3876113 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.347420988 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.351201932 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.353878067 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.363032998 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.353411556 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.400184299 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.398638094 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.402991497 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.355802712 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39485684 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.531674053 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.363431813 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.356561788 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.385464717 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.372389868 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.361460621 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.365812416 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.390299258 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.353999439 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.399588058 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.411063822 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.363211187 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.363888414 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.403084684 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.366067081 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.348048962 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400863902 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.351959111 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.349627323 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.354318984 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.475392858 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.347894561 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.353343358 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.384369676 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.401367336 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.416191409 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.340777105 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.365507745 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.401202141 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.363410315 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.414834661 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.354386974 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.342911258 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.345624306 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.478487164 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.356696963 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.361665823 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.399965486 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.413675071 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.357416402 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.348938235 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.354766561 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397551241 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.476799641 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.365072194 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.466953059 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.354909595 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.358211767 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.386955156 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.399778419 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.385731835 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.415162296 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.399631075 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.372007275 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.355293607 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.367798872 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.367024562 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.356261169 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.413790155 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.352731915 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.389474654 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397994685 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397973073 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.389101468 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.476192481 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.359200339 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.345062023 seconds)
done (took 227.447311251 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.431699177 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.352490242 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.4596917 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.354284937 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.455137676 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.458638754 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.352056253 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.352296527 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.350367991 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.733093912 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.353167626 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.352484055 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.352976505 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.351812155 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.436028269 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.355557028 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.353113321 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.702545305 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.353772505 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.436212815 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.355735346 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.353212253 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.355939655 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.744266984 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.354753044 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.349292917 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.426507384 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.355251366 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.703435168 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.350152845 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.35243746 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.70712419 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.445210886 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.374062561 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.365523259 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.363763569 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.460120173 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.379853741 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.437717452 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.445624684 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.464104571 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.395670205 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.349611038 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.355268111 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.358925648 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.358063985 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.354980255 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.384660478 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.35595409 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.354450917 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.700715243 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.368218645 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.365056471 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.35616375 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.35527023 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.376388033 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.355780599 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.356821152 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.461333833 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.358843071 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.420223582 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.740638215 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.746764791 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.358431594 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.353236427 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.356523175 seconds)
  done (took 106.050332283 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.42401228 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.437018492 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.473251604 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.378610617 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.408773717 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.478319966 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.376448789 seconds)
  done (took 11.235886554 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.363533983 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.358311981 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.40700224 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.407167058 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.35871286 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.570820406 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357993784 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.370312611 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.356410176 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.435043189 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.358128902 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.359981561 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.364297637 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.355817714 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.406912778 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.370342152 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.473122959 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.359567758 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.357680905 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.512474418 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.356641443 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.364403715 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.432875131 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.371740351 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.359880122 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.364409501 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.306789981 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.360378971 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357673976 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.359983621 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35668471 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.468495896 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.361641607 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.357394247 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356753803 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.52041789 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.360993542 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35771427 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.36127851 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.359999836 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.360479752 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.36052897 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.361898485 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.359859893 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.361564786 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.383684195 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.360828916 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.36130128 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.360437627 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.363026775 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.440250892 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.363413552 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.358430765 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.357844632 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.43635512 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.368339596 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.361788876 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.358342382 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.361120021 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.358289728 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.51305549 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.408972288 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.361975131 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.407333808 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.361545965 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.364228422 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.360142705 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.362204072 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.453273566 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.362730977 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.408862738 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.3594325 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.581645122 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.386528936 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.363965127 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.36413488 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.365218922 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.362591483 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.358275004 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.367504176 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.359220826 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.362949145 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.367955945 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361807293 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359188786 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.54392721 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.518658483 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.360559346 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.375797272 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.369309898 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.360974645 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.438623125 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.362843698 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.360602386 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.413001831 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.477390725 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.441267111 seconds)
  done (took 140.76945954 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.36863883 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.370627506 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.366556929 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.387254762 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.364014122 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.36380538 seconds)
  done (took 9.484208868 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.365310495 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.365704054 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.364058753 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.363942795 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.364663266 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.3634861 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.364204851 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364190784 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.369735146 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.365966417 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.365000723 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.365459325 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.364625448 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.365226013 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.365373782 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.365313704 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.365537132 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.362494863 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.365292699 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366095911 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.363348975 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.365743538 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365446154 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.366300921 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.369674652 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.366160304 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.373058199 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.366108856 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.365752515 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.369238041 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.388014638 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.366067121 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.368264126 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.372576701 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.371775971 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.36655704 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371569986 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.367449821 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.364485842 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.367469302 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.367178413 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36689726 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.367718711 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.367603719 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.368577993 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.37262915 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.373766325 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.376029323 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.370765702 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.369161574 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.366960734 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.368365279 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.366541832 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.368051391 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.369516604 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.392896963 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.373387764 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.369177255 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.3672641 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.367830576 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.369569335 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.367852699 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.368811042 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.372774332 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.366389707 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.368845156 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.369846454 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.373647955 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369396289 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.369408027 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.369966752 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.367266074 seconds)
  done (took 100.789798034 seconds)
done (took 369.58364362 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.365574748 seconds)
  done (took 3.637091967 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.560273312 seconds)
  done (took 3.833919207 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.028583322 seconds)
  done (took 25.30779375 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.452908827 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.37128537 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.377221655 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.364385107 seconds)
  done (took 10.837442887 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.70416173 seconds)
  done (took 3.973476394 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.362393452 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.361928099 seconds)
  done (took 5.996474222 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.715953519 seconds)
  done (took 3.98598207 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.828060133 seconds)
  done (took 4.107476543 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.3749373 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.378427251 seconds)
  done (took 6.032226991 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.364555615 seconds)
  done (took 3.635589046 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.034572855 seconds)
  done (took 18.307193101 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.370894256 seconds)
  done (took 3.646536327 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.409918702 seconds)
  done (took 3.681207056 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.350941345 seconds)
  done (took 6.620867534 seconds)
done (took 104.869928645 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.361940317 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.362237303 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.363245977 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.36221317 seconds)
  done (took 10.720273327 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.404684676 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.405666878 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.405699301 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.414960073 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.407616366 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.403858871 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.396329358 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.398059836 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.415327485 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.40794188 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.406882491 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.406100783 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.404272638 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.397171268 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.406807113 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.406876068 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.415854796 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.406460146 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.397257853 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.409323151 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.372783986 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.415235754 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.408908426 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.37243146 seconds)
  done (took 34.958424596 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.890326855 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.446758689 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.526340189 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.424955458 seconds)
  done (took 7.561134157 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.432654212 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.443079785 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.455640762 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.491475085 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.515131399 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.449895681 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.401170503 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.39568442 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.381879996 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.443236494 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.501391804 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.434735484 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.540514779 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.372511232 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.570804436 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.372941964 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.373537621 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.451421986 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.490131455 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.507573182 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.372946366 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.433318473 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.45678631 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.436313362 seconds)
  done (took 35.997694095 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.37386442 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.38830673 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.37331486 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.372947723 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.382357539 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.373101492 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.37442803 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.376361985 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.373390084 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.947196562 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.39806516 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.38535794 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.914370725 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.39842385 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.379835253 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.374671536 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.909809107 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.958033108 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.397487564 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.381306342 seconds)
  done (took 31.108430469 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.366539554 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.367716927 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.719082868 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.623578409 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.368279903 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.366853131 seconds)
  done (took 14.087446759 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.452245544 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.633510792 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.379983011 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.769937745 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.848748789 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.376370457 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.376611186 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.651595497 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.004620507 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.987246151 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.442974204 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.453353456 seconds)
  done (took 20.655758565 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.37993868 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.372583573 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.382643172 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.388967974 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.437145074 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.401360155 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.382936732 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.368748076 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.441973682 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.462049979 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.401932032 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.439630019 seconds)
  done (took 22.137327929 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466393386 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372269677 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.379303663 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519141235 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371473922 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.221604355 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.479629139 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.166226542 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.402218804 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646674095 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377848922 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470713171 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.629888346 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37261738 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378307176 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.373382693 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610158569 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914630211 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379329693 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372714111 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40840669 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385404798 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375769407 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.615036429 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378680512 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373161557 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.634788316 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373473231 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68738433 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38861378 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384676358 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372998893 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64862363 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084749911 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499079417 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.611005705 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384393929 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375390017 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.383210639 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.396100178 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376129312 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397787219 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385874147 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374374901 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37531978 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383750283 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168450785 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.404908408 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.373821286 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37463802 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669275498 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474695813 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.379692893 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376065702 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443745398 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380548955 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.377697167 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.372814702 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98234325 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382396292 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386616414 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.379056114 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376141004 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380137147 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053438762 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.38253764 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.378759531 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381288032 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374991342 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377570506 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393328357 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376870184 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.401713232 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377287006 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192557539 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386907582 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379913136 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990419129 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384084669 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.401848681 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611055759 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377016214 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376760479 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.375924798 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378333083 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176204678 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391481482 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.361909978 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.381342909 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.198646684 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.644982695 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402608498 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408890859 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.601770825 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.362407211 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378309085 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.379568875 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381020792 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401747454 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.15558376 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399519498 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.383982139 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637969286 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.589534414 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384130004 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.366360608 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927261483 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403609364 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.41836931 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381139545 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.622333759 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.024117571 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398412903 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377996605 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401587236 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38023788 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217083833 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400909059 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.482179451 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389102966 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682753272 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.274398176 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385916837 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447949211 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382885049 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379569443 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385283983 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383307186 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378712037 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.607121407 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40587966 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.394206948 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.379579937 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379040635 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.381791447 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394859656 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.383481266 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605963364 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398049721 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6601721 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381137559 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380693178 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38127111 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.605384037 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.383670693 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.718161297 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645522273 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380255611 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385201015 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395354072 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399813294 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485391656 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402776845 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.381240693 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642822395 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.385672644 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.386702996 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389239791 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384331883 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386928401 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.389363723 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381776232 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027027329 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357249589 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389279323 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.277474752 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.39859729 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4522737 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.389864383 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.623206196 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.390107329 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39549754 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.389478707 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.385771264 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614956997 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396567028 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.388902849 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459754856 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.899550122 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044739887 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399233293 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.385352933 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.382420358 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.381230939 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384408705 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385295449 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385268656 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.624765301 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.405911848 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38902612 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.027105051 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387648127 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391941729 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.391595149 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399212086 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.392643705 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386556111 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.386254748 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396640316 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387733456 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.398051803 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530007878 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.401214292 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386447737 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.904188601 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391855692 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38757466 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385623292 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422195637 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394151029 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273904498 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673824558 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401392565 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68270657 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395592738 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.40414593 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.387039511 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397018551 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389445913 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.389349871 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396775696 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.399793966 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395102618 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389029087 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965063269 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215940748 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980437163 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404978621 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.394250114 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387930301 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.215558442 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4140273 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387885227 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64463153 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.184591394 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409703222 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907234791 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.422686844 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228080335 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689079007 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623701842 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40111408 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.401420575 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688371944 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608084092 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424127808 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389787679 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390640593 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.373725636 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99165861 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411839049 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468508516 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176194413 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424953544 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391281821 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.499020707 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.398015556 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853619253 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414907032 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391079247 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392483989 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389030358 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297750406 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419520578 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391685226 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076298112 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394124015 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.957217716 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418524969 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.635554915 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.408729682 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.396413991 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.388603504 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.397671016 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.648939337 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689690439 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393867828 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391623312 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0065171 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.265579902 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.398841858 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392816988 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236155676 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398849824 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715054716 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.394733864 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.389261535 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393612021 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393919768 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392662788 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.390955343 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399101835 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364412911 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940755255 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.401886899 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39958467 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415875805 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393603369 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.651231836 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.407035595 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.036031344 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626622759 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401083598 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439426157 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.398870757 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408538716 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.381131923 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394864624 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394834514 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528973837 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.622677926 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406841012 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.384952387 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.495299334 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612556149 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395878828 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410005544 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667508729 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.396355003 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.40324297 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22109262 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429129799 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39518857 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420847345 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408688744 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.396391642 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471021621 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641571005 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.412545952 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.406435585 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856293413 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421648285 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416041379 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.410905404 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492984182 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397428451 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.414674039 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.169503651 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04421735 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230430591 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.048496239 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.69876927 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399698935 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406325993 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396913171 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558978515 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397126011 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672560075 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397429161 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.398690962 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420523796 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396333127 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424939168 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610960123 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674274438 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398081073 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412510698 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397894488 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.396944943 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409541343 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.609189561 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949622725 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021725653 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406908979 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403950672 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182633335 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695025969 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399204463 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398979115 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398088143 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.409533149 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.404695084 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.410731787 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400851478 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544457358 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697580347 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131290188 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.437133935 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.431007249 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.17323087 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414443914 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.658741452 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40346996 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.646866804 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053774664 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.169021129 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669939451 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471433452 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646081245 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.405345142 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563098921 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.396751321 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40047039 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399040815 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401067084 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.399142378 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.412812978 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051660689 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6715074 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.405127121 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.399579781 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436947833 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.413367485 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.626618841 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.217750146 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630919313 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413305646 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407253132 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401457762 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051416821 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702805695 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403818696 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.406105898 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666890313 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404393217 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425581315 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.919628158 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.401067047 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010309595 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.380061113 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424405612 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402303368 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.176504084 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055145563 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.405377233 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953365607 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407995788 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4037747 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682137287 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.409288694 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407611679 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678929138 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.406067521 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408167522 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64708434 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.053189691 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247076567 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.421080597 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40681763 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.427115162 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404197295 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527193522 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410155939 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405656908 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.882144394 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.431840049 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40602638 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418313919 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.408882754 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416758696 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.408429703 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405554813 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.412334776 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.402817071 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.397090211 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.42234686 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.422325669 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019090519 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429183234 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.07842214 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.738254738 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.66621583 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408192488 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.394233825 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.411008893 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40673493 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40494655 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40667015 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.454248052 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023285528 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.419064694 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.421971938 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.410577814 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.62378779 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619151656 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40655881 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653781357 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408640626 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427453993 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.391391871 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406859254 seconds)
  done (took 992.880175013 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.456087169 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.418599989 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.455481413 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.447520745 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.427884107 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.530222212 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.503880982 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.434228504 seconds)
  done (took 20.985037895 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.404494025 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.414360789 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.419817279 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.416407646 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.417147391 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.925266024 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.433725477 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.416339335 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.417754138 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.410688088 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.41650876 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.391353087 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.417790677 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.415130867 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.409556782 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.419218918 seconds)
  done (took 33.463794529 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.619005074 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.656845752 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.841550535 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.464455389 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.449007491 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.424661222 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.761104017 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.442719126 seconds)
  done (took 27.968723839 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.418112181 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.416961984 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.418311184 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.419039158 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.417897702 seconds)
  done (took 8.400670183 seconds)
done (took 1262.195793341 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.411805787 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.414824482 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.411190114 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.41502745 seconds)
  done (took 6.963994152 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.392596443 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.396649315 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.398417929 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.41204501 seconds)
  done (took 9.91184852 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.198066859 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.100242344 seconds)
  done (took 5.609572695 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.934897108 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.918929453 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.908416115 seconds)
  done (took 7.075918471 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.719835897 seconds)
  done (took 3.033201235 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.3608172 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.283400851 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.097770836 seconds)
  done (took 8.055458899 seconds)
done (took 41.958204738 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.425508616 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.663527145 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.581189902 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.412456663 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.597228408 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.574716962 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.253102995 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.423780841 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.411133336 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.445134935 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.411171359 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.580015256 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.166787255 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.664478636 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.165616592 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.663610436 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.666676126 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.42633466 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.415990149 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.425117506 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.255819192 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.423336848 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.413669014 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.416755071 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.584794842 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.561995627 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.427057541 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.663399622 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.418861099 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.426238158 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.565260006 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.412078702 seconds)
  done (took 84.258308247 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.412622546 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.413763517 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.412750597 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.433245597 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.418755658 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.413682289 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.434825868 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.432479943 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.41967935 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.413349846 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.419923432 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.418404044 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.420164244 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.427975443 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.425662609 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.426856875 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.413817529 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.41434667 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.424185221 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.413675454 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.415436749 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.434947043 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.433373794 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.413974244 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.43213639 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.415208422 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.438844243 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.421977876 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.415936237 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.439551509 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.416055065 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.433172955 seconds)
  done (took 78.837719395 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.424447639 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.41866721 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.414786601 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.413080804 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.423490057 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.415455481 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.414369191 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.415562103 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.415557125 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.415501961 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.415582753 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.421474 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.414083263 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.415171779 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.434558749 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.41705453 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.416340518 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.431832283 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.433426875 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.415161357 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.418505065 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.41768048 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.433131499 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.418779349 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.41605574 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.431805047 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.415567771 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.416901334 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.4370963 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.417630333 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.434396327 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.41675409 seconds)
  done (took 78.779663696 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.698727546 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.424276376 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.424529051 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.418527724 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.426384287 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.425887543 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.419517766 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.700684691 seconds)
  done (took 15.25749395 seconds)
done (took 258.444202956 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.417399223 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.435677484 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.654206254 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.445242812 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.417480462 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.445002725 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.445290906 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.663667203 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.426277849 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.683585751 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.452482288 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.441719037 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.431520037 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.443976694 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.716021556 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.581233965 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.395501081 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.418481001 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.802321795 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.450743149 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.700126729 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.428300304 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.710275472 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.407108854 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.440807855 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.430965444 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.417891351 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.380248375 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.46574528 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.786963076 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.428216995 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.417860599 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.5131582 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.535205614 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.647466293 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.588645715 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.420368147 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.511790596 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.658006231 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.426213078 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.434538203 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.214803443 seconds)
  done (took 85.45486632 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.426659625 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.543411107 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.428218466 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.428174154 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.427885216 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.548506953 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.52292898 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.42716127 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.430048814 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.426916146 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.427503952 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.429145676 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.42836362 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.429555948 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.429853225 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.430413801 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.428069941 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.429703247 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.42969533 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.473083194 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.550552026 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.454907666 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.42293508 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.428956517 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.531029116 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.565606672 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.428242757 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.420445571 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.472320229 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.429044144 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.432443075 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.474093528 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.429966857 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.431070293 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.544663757 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.531219418 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.453804881 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.428329919 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.54433789 seconds)
  done (took 58.243990484 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.432075164 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.692872373 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.897066019 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.427654653 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.429218744 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.435810597 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.519263931 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.433723817 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.435513404 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.435899168 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.59212764 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.435541973 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.468183868 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.916206594 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.434730845 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.433661744 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.431821853 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.431504922 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.69940505 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.441645362 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.544832566 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.435544869 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.520614986 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.443255427 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.457094907 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.435100316 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.438722373 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.028677967 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.437750614 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.595749587 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.328899168 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.522080229 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.996615679 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.942096984 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.335242849 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.439745975 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.435251917 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.603285183 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.438933374 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.434038438 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.523389189 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.439876861 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.908741619 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.113587825 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.453813872 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.434702278 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.04906769 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.601246354 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.71904649 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.448434842 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.945101422 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.440818039 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.436834978 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.437287378 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.714455096 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.442485369 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.434127191 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.080384669 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.463517896 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.522128346 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.439338514 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.434852771 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.701468907 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.435894799 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.696896177 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.437688457 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.443364005 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.459500408 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.912906894 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.445467742 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.127312034 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.459177129 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.436404749 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.597222653 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.699458724 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.088352416 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.458929355 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.707841605 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.00477219 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.521838333 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.4414194 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.020903859 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.526304619 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.443546947 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.439680341 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.440413936 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.437406119 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.487008208 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.521836626 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.07777565 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.134609322 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.105638762 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.550558572 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.444191851 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.43978995 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.081165551 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.463567958 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.438110988 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.908686402 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.131633148 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.458985645 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.447403268 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.139710592 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.461776809 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.525375602 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.444711324 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.925832162 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.445008525 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.484817267 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.439382088 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.445609378 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.464697779 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.525025019 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.443299086 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.438950239 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.117755982 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.629501791 seconds)
  done (took 190.058249874 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.433426634 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.452676334 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.43090669 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.451321704 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.43195824 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.441579398 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.433008475 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.433482339 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.439022709 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.431223318 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.433254502 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.432674909 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.433599513 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.441456714 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.44673708 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.443187046 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.434659419 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.435551133 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.434581059 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.435507776 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.433102218 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.43365589 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.433053524 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.434228181 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.435313389 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.436432035 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.440783877 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.437117794 seconds)
  done (took 65.567143921 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.441693946 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.06609808 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.442732369 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.587620744 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.466954329 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.438268683 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.585512786 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.50528999 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.441718233 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.438505147 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.438723761 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.776638352 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.443868833 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.015416523 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.657009146 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.604912154 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.035170937 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.466352386 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.441438699 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.439549584 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.588899778 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.454101536 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.779595782 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.094740318 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.448585649 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.091950846 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.437119497 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.443230026 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.441320451 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.092209854 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.466045742 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.790239204 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.532201713 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.509233962 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.094677116 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.003802502 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.022218192 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.612491485 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.442420434 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.440573791 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.443577769 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.435152007 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.094302231 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.449227579 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.443728427 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.086266336 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.468423847 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.446003701 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.450141438 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.441934971 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.508720624 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.510429603 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.793091765 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.169505152 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.533953626 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.457559878 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.590606695 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.79132864 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.452952038 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.005424971 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.45568399 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.097136393 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.471922452 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.433600754 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.447785131 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.450537638 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.612175817 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.590398483 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.007002836 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.471778694 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.012414613 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.634596098 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.443743491 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.444079486 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.446794779 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.099440551 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.019330471 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.634207047 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.594789774 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.663625723 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.435289281 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.445547269 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.434700762 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.531324336 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.444647302 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.09745299 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.027620432 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.471028873 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.447852152 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.448897542 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.448968517 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.64392082 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.116044518 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.537964877 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.006673696 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.818466734 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.799966296 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.45401667 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.513620798 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.464737158 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.863201771 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.453480161 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.510014764 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.864978031 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.791957152 seconds)
  done (took 173.534754862 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.707397516 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.473371368 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.549819399 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.610372673 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.084139212 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.062544399 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.446044376 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.575410974 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.564408393 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.726902591 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.442473307 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.540229225 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.678837439 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.529197384 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.191948765 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.528187708 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.550447921 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.597011231 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.596006958 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.442947554 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.139748113 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.776113328 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.653130874 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.46777946 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.564605951 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.263458734 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.061268029 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.03055038 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.634459646 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.452804481 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.026436921 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.448213899 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.443164675 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.167083393 seconds)
  done (took 67.36950577 seconds)
done (took 641.546287467 seconds)
SAVING RESULT...
DONE!
