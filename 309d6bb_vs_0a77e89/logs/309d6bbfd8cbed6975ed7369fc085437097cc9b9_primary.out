cset: moving following pidspec: 4894
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.995394469 seconds)
loading group "string"... done (took 0.541870497 seconds)
loading group "linalg"... done (took 8.832396374 seconds)
loading group "parallel"... done (took 0.171002868 seconds)
loading group "find"... done (took 1.446187989 seconds)
loading group "tuple"... done (took 2.081106754 seconds)
loading group "dates"... done (took 1.369575101 seconds)
loading group "micro"... done (took 0.217011606 seconds)
loading group "io"... done (took 0.683262719 seconds)
loading group "scalar"... done (took 42.153042815 seconds)
loading group "sparse"... done (took 13.223393535 seconds)
loading group "broadcast"... done (took 1.072513372 seconds)
loading group "union"... done (took 14.466970476 seconds)
loading group "simd"... done (took 4.967816722 seconds)
loading group "random"... done (took 10.045581793 seconds)
loading group "problem"... done (took 2.198443829 seconds)
loading group "array"... done (took 25.575315396 seconds)
loading group "misc"... done (took 1.084683958 seconds)
loading group "sort"... done (took 3.64780682 seconds)
loading group "collection"... done (took 21.630013525 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.648029284 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137347843 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150430953 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.196530896 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207602331 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.147344065 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.1650256 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.561317245 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.992952217 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211783522 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.1439831 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.547884578 seconds)
done (took 5.836317417 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.303674949 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.436755245 seconds)
    (2/2) benchmarking "String"...
    done (took 0.128807322 seconds)
  done (took 1.238177515 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076590059 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.178215243 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093665123 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.111401661 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111461879 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110323732 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.110011432 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.094835502 seconds)
  done (took 1.48354161 seconds)
done (took 3.781179676 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.482357591 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.84801468 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.508570909 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.132567121 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.160575271 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.150918286 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.314902079 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.16577711 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.12323911 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.112789193 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175056895 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.359763782 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.486679341 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.957545819 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.111068403 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127381743 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.083948788 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.699713763 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080967901 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.138819049 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.532275638 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.112664122 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.122906224 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.141122449 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.204771875 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.117316421 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178154653 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.111074128 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.662528931 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102286236 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.184918839 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099709662 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161118258 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.25141858 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.096870436 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092943676 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672815898 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.18972815 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.11388647 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.096045702 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672483533 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081280129 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.192458291 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107620501 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.113972076 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191421382 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.11580913 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080217279 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.103282595 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.102388466 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.158542857 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.479174256 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107890449 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.146757287 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.109780097 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.684560538 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097108112 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156872518 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.144301381 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098760693 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.097615614 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.112134748 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156539695 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.110880949 seconds)
  done (took 19.602863008 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117523235 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.140401232 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094375499 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140192271 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139619569 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098292077 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083212883 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095167251 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126034686 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.185905666 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137400403 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.126464303 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092211274 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07890395 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118036563 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250000533 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12192193 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105752291 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.097955333 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090067544 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140664797 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112322986 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.09312182 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110391422 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171008261 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207736378 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.121573611 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123585784 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.078848997 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114214127 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143759065 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.163702552 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076119617 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094326764 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.184256016 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120684977 seconds)
  done (took 5.185200775 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.198160963 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116785155 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.192088527 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.177886907 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148165331 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183013956 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118121295 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252036892 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.181347944 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1859098 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129714798 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096025293 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094644569 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080674671 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094372222 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.695606968 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.17986336 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150334341 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.124400853 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087614424 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097966423 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.374192763 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100347765 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080796427 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103400347 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.071309025 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.192572311 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085650692 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.261649571 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.11862593 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088376207 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134171277 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214248397 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.117009478 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140798964 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102645126 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08126244 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.236285073 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09185879 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095671191 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107171569 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134327383 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133326244 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099612753 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110494146 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225128596 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099994842 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11815827 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.087902533 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199738617 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.146547981 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.080217313 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.37202132 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.10005757 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106786435 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080093286 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.311673252 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131840896 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098568564 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078449598 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102938452 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.1298477 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078117106 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.758631042 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107408594 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.287703127 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096142197 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156600321 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100054647 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105038359 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086138744 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102291014 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101717961 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097678876 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078038461 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097423742 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078116151 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101410529 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113443445 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082545649 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101362922 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078645738 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.099455733 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147526784 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116264451 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119803747 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109352045 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101096833 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095407759 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112455994 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097972783 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081961181 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.146721946 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104760344 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.1145461 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082319396 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144051617 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100434945 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096931076 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.187911158 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09544659 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123405672 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.084838028 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129318183 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.118479744 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097606849 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083579523 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095824761 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079718535 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16297564 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082455159 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09636821 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083374116 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110905028 seconds)
  done (took 24.461254315 seconds)
done (took 49.923505769 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.440460398 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094316577 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.112528889 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.11168995 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.1104252 seconds)
  done (took 1.620341174 seconds)
done (took 2.344273275 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.351691907 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175927615 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.119932465 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.177950305 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.103784749 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.186481838 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165509745 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11817559 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.195196259 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100726791 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.174926916 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101002006 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104031369 seconds)
  done (took 2.828806389 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093341643 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119031628 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080531235 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109959735 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073811205 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109799659 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09107039 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.129448567 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091536984 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102341912 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074319117 seconds)
  done (took 1.796899491 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089944668 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112954613 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080157888 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106507473 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074864154 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105788548 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0891926 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116378979 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088809418 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103442 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074846891 seconds)
  done (took 1.768174214 seconds)
done (took 7.110696292 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.03904688 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.452206096 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119064387 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.16524646 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.341185735 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.21049092 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.529175406 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132065981 seconds)
  done (took 11.892815402 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.128387799 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098553823 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096201339 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083598674 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.09925073 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.081821755 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095246107 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.082928486 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.098841873 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081476156 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.096161059 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07959236 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.098702412 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.079081755 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09694514 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.080338484 seconds)
  done (took 2.258937497 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116821235 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115359288 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103245117 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108470258 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084257368 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102369439 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.085716545 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.102133701 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099191503 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.084297111 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.108066138 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.089138399 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105382499 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.099011218 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.086179366 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10809529 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.083164284 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102778398 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10398833 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.086529489 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107174966 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.084088901 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104580585 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106199585 seconds)
  done (took 3.20774151 seconds)
done (took 18.084998425 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.168827257 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084644476 seconds)
  done (took 0.97913407 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.100406148 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.118212716 seconds)
  done (took 0.951578224 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.106139038 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096421888 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134751365 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114261072 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081034281 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096848745 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.129669892 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081752834 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097990525 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080738276 seconds)
  done (took 1.752813601 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08459276 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101194513 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088138226 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.118569459 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108880474 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081999973 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.10288791 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084105771 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103784 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079160829 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105138498 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116193656 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08742038 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118606283 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103415681 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.087185651 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107245059 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102944043 seconds)
  done (took 2.515345491 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080637172 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082843931 seconds)
  done (took 0.895241707 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082989561 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09561129 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083076883 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099776718 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078705486 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.096817701 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078485679 seconds)
  done (took 1.349176983 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.680588897 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.240322019 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33650318 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.115066252 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.135023951 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.387281004 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.135787819 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.113305484 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.094745074 seconds)
  done (took 3.014386237 seconds)
done (took 12.187423156 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092431397 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.189692819 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.650777741 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118855636 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078763324 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.15976349 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.259025533 seconds)
done (took 2.288393235 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.355569401 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.124248926 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089647514 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07951485 seconds)
  done (took 1.381274096 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079530894 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103505799 seconds)
  done (took 0.924480914 seconds)
done (took 3.049310605 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078153106 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077848303 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.093200071 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.128865842 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.077933375 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.094514148 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075453593 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096594917 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.077667755 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.078056921 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094682248 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.078504073 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095903945 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.077679691 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095965233 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075703275 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092923226 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077530571 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093492486 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075899294 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075793775 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095304472 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.075250346 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.092983605 seconds)
  done (took 2.851364489 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099072612 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09740298 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.08407082 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101648152 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100636235 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.083762359 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102438631 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079134468 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.101619107 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.080799959 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098844477 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.100803661 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.081141002 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.100464325 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080597423 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100594355 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084705907 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096609743 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081555378 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100318846 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10236956 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079417609 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100705381 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083948285 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099684453 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082903947 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.098266541 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096292087 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085405464 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100313267 seconds)
  done (took 3.527079973 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087225463 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07667995 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094161919 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105360017 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076346935 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080311242 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.094156347 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076980526 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095277537 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.076562085 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.096024396 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.076698047 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094336931 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077642202 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096458687 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082777676 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113054603 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076196867 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094952192 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076717064 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.10050805 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076238461 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097868736 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076498367 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093912626 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076560449 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.077401016 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.094624049 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.077187095 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093378477 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082662715 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100951268 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.075282295 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106838329 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083109676 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094239377 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084394176 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094207018 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07693331 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094683967 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076128312 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094150462 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.075765932 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105426271 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080166805 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09532017 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076044011 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078131947 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.094191502 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.079576288 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.093482708 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.077117254 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095973912 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.077906591 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099141481 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076569616 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095928284 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.075122325 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095356706 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.075875265 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093775539 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07595738 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101047755 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.076982437 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11856712 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088072046 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094188493 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.077839639 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098686996 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084119777 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096472621 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095440382 seconds)
  done (took 7.067835242 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081527143 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105516384 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078517763 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096566174 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074650406 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095358241 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083583341 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09531332 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078472465 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113590683 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076496686 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09648312 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078562096 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099100456 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077254107 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096669204 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087002836 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092699855 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.076971805 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09771752 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077076173 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101214354 seconds)
  done (took 2.711250308 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.221651536 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103229314 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142828911 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114447905 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0963551 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110359863 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101842842 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08457596 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102260903 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087142973 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105239967 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102449547 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095633175 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102969245 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104827921 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087612917 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10151167 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105767577 seconds)
  done (took 2.720815655 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094986122 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098344806 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104878634 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097880124 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08091289 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100929003 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104471174 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.0960525 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.100501278 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080582815 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.108976324 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082733176 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.1010769 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080624863 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101162441 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097934607 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.082292474 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098693802 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090533343 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104870305 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085971828 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108532056 seconds)
  done (took 2.853335867 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096778292 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101022718 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110041221 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101575354 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094351671 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078595507 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10611 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080117096 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107819067 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.082029556 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099472422 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07811804 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105532676 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080629165 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104237126 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080389523 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10042277 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080777179 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100408511 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076781239 seconds)
  done (took 2.620158355 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122752473 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11443334 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09694226 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126350916 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115169004 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096642944 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124743247 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11541364 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096984752 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127535706 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115150217 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.096888147 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126341402 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122055537 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097070483 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12632941 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125609494 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107932024 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115453117 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114691053 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110255087 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114844682 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126763523 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097446881 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.118140801 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098125388 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116212816 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122363928 seconds)
  done (took 3.945439466 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080569103 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080056032 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095972795 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077717506 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095982739 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077085149 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.09647414 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.077600029 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098123208 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077337737 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080157072 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097674782 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079950369 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09770545 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079837437 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098108826 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079964168 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096055213 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078216886 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096014103 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080129829 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080035411 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097624347 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077335281 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094840554 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.080033969 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095852879 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076928363 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097869868 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077290013 seconds)
  done (took 3.355977143 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088298414 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104533015 seconds)
  done (took 0.952719532 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077823846 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115421502 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077405821 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101887437 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085836433 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099935209 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089581117 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103100678 seconds)
  done (took 1.510789279 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.104271165 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.118792528 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086132213 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110394193 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.099603655 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.117443497 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166105369 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104707569 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08796343 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099982574 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098885434 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.099878947 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090277516 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104704008 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089480431 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114235497 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.078687022 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108362469 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088301275 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101334006 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085815179 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114885883 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110482947 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.088175105 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10232461 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092206046 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113475051 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.111222379 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085750316 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111015704 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087667786 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093561113 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.086814708 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104459543 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079111728 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.116483936 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099062803 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105405919 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109237764 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086466121 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108929936 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.075719894 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.110425195 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087574716 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112451051 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086102463 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104708434 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076789022 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099439271 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084509442 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093963294 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085073075 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093736883 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090303099 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107641559 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117494858 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084053599 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104763528 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085632048 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102899868 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088841842 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104159034 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092314145 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.103142163 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108625314 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090167734 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108264624 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076076344 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093934027 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.078627361 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109035691 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106588002 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110908617 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086738704 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105382008 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079353932 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105592919 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105390439 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08955986 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110653193 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086633966 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107208833 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091613149 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102408885 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084891288 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105869324 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083567018 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102102887 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082080251 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12104859 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.102186565 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078852996 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.100297624 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092210417 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104653105 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084954637 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.101070993 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090918541 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09324619 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086842576 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105231225 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087999106 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11115039 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105721381 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086788906 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109519828 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09277718 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104838519 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084685218 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096975128 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086786734 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101657614 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089554461 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094024236 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086236507 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104207828 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086916668 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110071577 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083240707 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104085985 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11031829 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09221389 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101764716 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077045354 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103835914 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085468361 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108894837 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093235026 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102222117 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076767069 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095414355 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090241696 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104291742 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087972373 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105297116 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086424251 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093551878 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.07911558 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.113046093 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110598983 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083954244 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106805145 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091372567 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106873419 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084108725 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110576476 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084282371 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099112111 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108790715 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085566149 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094970119 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091387789 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104350263 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083742573 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105413508 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090198231 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104350411 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.087390198 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102616132 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.086235183 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105914339 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081603493 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105169282 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083986584 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112293946 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085781031 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096431366 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.078904921 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.106672112 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082300633 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103377254 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08146248 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104569553 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087088409 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098205559 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08414422 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103071722 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116966836 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094343598 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106135829 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088768524 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111967225 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085936442 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106763759 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085783778 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105431882 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086810121 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109255589 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107655655 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086469699 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104106736 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077765076 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106765176 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091869089 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100183462 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078890736 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100262162 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086246479 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.11230132 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086764717 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105234007 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083735169 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108348891 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090751181 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104124565 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085670949 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100092839 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.08551558 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110246473 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.087397302 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106667554 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112202047 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086878299 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096555322 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090689994 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103110401 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090781175 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096002871 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082436689 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102058352 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.088058539 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103068449 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085467997 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095400024 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092205967 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111754827 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087945224 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.101917737 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086560408 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114797573 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085765875 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10876438 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086735689 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108569383 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120563504 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083344957 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106131405 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095593894 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104797432 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076022974 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108511473 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085411536 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.10038557 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085016018 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.103129537 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088023264 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106907865 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.087736194 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095225311 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086636991 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103881611 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083411815 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096639941 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091684125 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105418812 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10522951 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09623817 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106660908 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087329721 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106790998 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.0864996 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106441526 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.090651157 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106028865 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088087501 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104578654 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082690174 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105834177 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08231258 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098988222 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085210207 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105806957 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.106408896 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088649866 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104576298 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091537439 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10565656 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087841445 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123413633 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102545201 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082444086 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106810224 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089295825 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104277003 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086566498 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096571454 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092192196 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104635889 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092709124 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103309537 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078931115 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105390165 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086185976 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106768909 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087250488 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106996476 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103717634 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086582925 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105309996 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095718919 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101735089 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094200912 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107910914 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089028678 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104998642 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086867953 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103717219 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082465598 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105425889 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.108092618 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.088006172 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.105100046 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08911937 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106326771 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085302486 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104274804 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088173017 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.107044222 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088792029 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095032131 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082924388 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102235256 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086686651 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110020251 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.087692383 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104322284 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085975902 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107176602 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085432801 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097720211 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090967151 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108698132 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088468681 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114536473 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102242074 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087567647 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117207517 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076366898 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.103811585 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081378832 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103266537 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092947323 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.107295444 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093773482 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107085154 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08311845 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098933646 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087917448 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.104032704 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077313245 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100383362 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090819818 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10359501 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084849214 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106902125 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089110177 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107898231 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090987599 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104763357 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086417792 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106110659 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079968117 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102997652 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083437309 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105701142 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108261784 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083392709 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080037044 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.106104341 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105807608 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087685814 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.106019453 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086224312 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112735086 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087080787 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107010449 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09218274 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096766953 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.088045528 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.106195 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.087414794 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102101674 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088662646 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107912598 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089937533 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112111424 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087323558 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108239014 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08781001 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100958948 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086977791 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106406587 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.088058182 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102785327 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.089102587 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112986326 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100686754 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087895355 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107134601 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085031018 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107957409 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088658741 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107294557 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091354814 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107185263 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087931178 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110190323 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087998259 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107408158 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08852726 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105762627 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111582606 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083575793 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113654883 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088869161 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10806638 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086044536 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10322686 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086926506 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10632223 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08639867 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112223928 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088997146 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102963102 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083228689 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100641371 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086856673 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112177585 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112856186 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087436648 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109408194 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078090193 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099033292 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089783661 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103928572 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086290973 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109507418 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092619384 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107927513 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085827176 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.106397219 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093034973 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111918142 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090162353 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.104505502 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110143093 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.089609819 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107386184 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086821563 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.107369336 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090071908 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109679745 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087346845 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.104220218 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097851703 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112223189 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089518061 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106336873 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.1099902 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.088276046 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098564327 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089723484 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107201792 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091484767 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.108397135 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088460389 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118646536 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083804395 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10733974 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092732681 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107069652 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112845137 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079749455 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10899762 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090731401 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110221287 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080309244 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103704127 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085255765 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.108717063 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084402548 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099104621 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099327345 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113664944 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08960441 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106669881 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087199619 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099940319 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079950516 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104250524 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091030394 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107303747 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096323596 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103331659 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083880197 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099484757 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088878591 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10878953 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090934362 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101169187 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080364009 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.105002459 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089289023 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115790002 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106320305 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088370699 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109550619 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089314968 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101701928 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093804322 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099851371 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090529509 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119733779 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.09012445 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110750672 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092086911 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114895063 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.109948295 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080679449 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.109355705 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089761555 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.109856169 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.091014021 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.110345878 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104081975 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109803262 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084462997 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.107159834 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088913682 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104167766 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116028371 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091132302 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.1091596 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094006347 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.109203629 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091568008 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115461762 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091546619 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108683453 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.109010553 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086983903 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108028337 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08722474 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.106310978 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.091223461 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.110117063 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089175502 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111289997 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085093434 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118949817 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095809772 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110945614 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081192168 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.10513313 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085995864 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100225676 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.090689173 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101836465 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.0867368 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105744851 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087460059 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.111228909 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09050571 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107962633 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.090444038 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107646376 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078765611 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111205036 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089784301 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110105991 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.083276524 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.108410868 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090960337 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113066363 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112561013 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086908422 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.109384756 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088595632 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111747733 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080771506 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111818435 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087583659 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.10826644 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.085267416 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1082863 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.091056471 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110646378 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09057637 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11183124 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089732126 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.113470162 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092279509 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102989004 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.082135087 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.111756545 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082806994 seconds)
  done (took 58.906207974 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150936932 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086676479 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099717385 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079946461 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126234671 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0807532 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099143036 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081810463 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100193756 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113486376 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079567012 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098784064 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.101036529 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126995788 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123977442 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113897257 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080422548 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100520923 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080483091 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100426533 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119970116 seconds)
  done (took 2.955907019 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104638562 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118115315 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117136897 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100446687 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112036793 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117382605 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116433227 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099017209 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.121670178 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112730974 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102121755 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118452051 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.112411197 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112433445 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093233482 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115645697 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122836972 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090881982 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11875573 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.116857107 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095525899 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117093305 seconds)
  done (took 3.241575157 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093393697 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.087855537 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.114456795 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.082143252 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.108662864 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.082428023 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11344278 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.085366783 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.113243039 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.108523839 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.086946864 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.108973308 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.093131272 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.10202373 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.086913694 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.084189251 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113163865 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.108219777 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089416053 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.081902785 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128442621 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101691679 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.083124761 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.105990493 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.097494374 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.109862152 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.087626708 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107634794 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.085578027 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.108237514 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.084007686 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.110240253 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091393838 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.105511244 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.085184459 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.108156688 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088328585 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.102048133 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.084844801 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.111785089 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.083538786 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.108718583 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.094880838 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.105670951 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.084067945 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.109514829 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087654278 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.102889603 seconds)
  done (took 5.518394279 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.122929571 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158179674 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.093673976 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.155764659 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127089106 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.12465838 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092936193 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148762454 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106698863 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086996573 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125914891 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123577597 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088809852 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.118770405 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108850708 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08869364 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.113041027 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093738052 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.115860191 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.113068761 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.097792106 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112149936 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122401841 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100869266 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113940466 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107958039 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088325461 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.117871451 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119706122 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.095730149 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.114256264 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.097725728 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.130149202 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.116907302 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092110333 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.113027218 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124863216 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089356149 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.113068368 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106668343 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.0916238 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.117914593 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092661499 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.126862085 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109871846 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.09107463 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111528128 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.091209029 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.126111865 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.115149085 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.098714522 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122763694 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114076444 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089149151 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115377453 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126352307 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088168896 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.108620224 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.112640397 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100592023 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.109078311 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.098506241 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.127676184 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.113619364 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117436714 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101742708 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110754695 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112773233 seconds)
  done (took 8.48782007 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095754428 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.1338742 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125053071 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106230175 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113752395 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113784523 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09435215 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113964656 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093457293 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122394561 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113827412 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.164679665 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087867292 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119559316 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114040302 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093968129 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114159991 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094182755 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11517644 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113898886 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094548628 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12573017 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.114260819 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104627504 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12744276 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10757576 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093275105 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114640196 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124100045 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114511748 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106292173 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.11506052 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114326706 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104859438 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126449514 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.113305138 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08447522 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113887122 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.114159519 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094969957 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107507557 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104237985 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115597933 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107681733 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093610311 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114176017 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125721749 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125871761 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099923983 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120758633 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114111802 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1048783 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114906795 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114178785 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10489629 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.133637815 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12433169 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124474758 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094161437 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125257059 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125771115 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13352206 seconds)
  done (took 7.803242969 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085875443 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084653469 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.104760242 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083023898 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106407849 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083732005 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105900704 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084997094 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105629447 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.085343596 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105503804 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083235935 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082981168 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105351101 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083396677 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103226031 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083093516 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103640801 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085775221 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103442537 seconds)
  done (took 2.693938021 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094635611 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127164209 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086014245 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113622869 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087631186 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.114368139 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108281373 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088648035 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107349915 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089876583 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118946992 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118302623 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086993864 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113118533 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097837688 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114804514 seconds)
  done (took 2.492409576 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.106619437 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119683141 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.132546079 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090836152 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105764444 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.093569487 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106204249 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.081967127 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102284019 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.095244231 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112889968 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.096719031 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107441617 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084418799 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107451092 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091790182 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103105563 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.110380819 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085944435 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.132178256 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.091041689 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.109316683 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.086656889 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108512716 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090752149 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112716466 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.114084178 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.083399773 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.105561696 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.097362759 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.116821247 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.094510444 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102792101 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.090798821 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.1067589 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082838215 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106714312 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086314265 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112890175 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106270007 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084033915 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108816855 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086391749 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107780552 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082371815 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108146038 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081970234 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.114299203 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.087839159 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.110228192 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.085262502 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.115432247 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.093218398 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119198651 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116669834 seconds)
  done (took 6.405894929 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100788666 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111046593 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090370326 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104292236 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089854628 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114770849 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090375286 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108873114 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087874752 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.104261384 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087893888 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111809611 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08730366 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111482949 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109024992 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090416392 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101686198 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088530788 seconds)
  done (took 2.621243248 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092210612 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107344137 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093877839 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107512003 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086198041 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109514316 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082312265 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105274716 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085005795 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10664375 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086165378 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.108896028 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08485214 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.10915861 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086964696 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106943693 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.088654015 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084213229 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106793846 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081608104 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109700519 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083329616 seconds)
  done (took 2.949233035 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.104545452 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.140582229 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.123156771 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.129218475 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.1123223 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.090053046 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.121549376 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.111297924 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.10900206 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.110357103 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.089485762 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.111388014 seconds)
  done (took 2.190550383 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113649888 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147136756 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084018598 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11084279 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119726657 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092195372 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111868927 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091783603 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124918448 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124582078 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112319317 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103099942 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124095679 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122987681 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120332492 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099464027 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113025361 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112426378 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087250896 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133801394 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11245552 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10432582 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112738682 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111991171 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091255405 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122321661 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123971042 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10398814 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11248114 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124006688 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120909692 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091994312 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125019482 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125906398 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089092631 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124446976 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112333117 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133070902 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099828481 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123542881 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109998486 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099597668 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124819155 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118751103 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103315242 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11263751 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120172225 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091623455 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114271621 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141151533 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120401253 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102576019 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121446745 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124671618 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125389589 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141004936 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125618383 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102960969 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119994307 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125207462 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123739044 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099477467 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123938528 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125219004 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121318304 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101516703 seconds)
  done (took 8.393531097 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12847943 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106386169 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11234392 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104742584 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123927505 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112704828 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092189629 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113859731 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1123343 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088690952 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160831717 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112500087 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123328287 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104081518 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113335067 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091850902 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113943701 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123485772 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08803666 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139959361 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113985069 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122895051 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123252518 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102444789 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125760924 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119778785 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112338694 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093111968 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113093093 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091647698 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120072056 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113347033 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102320125 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107140998 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122361083 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091232758 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113222974 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119638035 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092810975 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120534446 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124512077 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134861524 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092546585 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113769765 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126602988 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092149495 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112912012 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087996638 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113778265 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109499087 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104854976 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125751114 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125337266 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123518385 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112810918 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092169757 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11354718 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092203326 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113546128 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121057206 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10297788 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113625337 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140512904 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113498675 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091971582 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124416423 seconds)
  done (took 8.25382379 seconds)
done (took 157.76818717 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.104592739 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.144688706 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100767857 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.1713754 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086647798 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.143241785 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120848416 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.124893987 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.085930032 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.109438427 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.086315682 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112111251 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152446125 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109508612 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086729497 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111220352 seconds)
  done (took 2.690713445 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183469287 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.293594901 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107243941 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.115274472 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093047179 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111372678 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.114081831 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.093692975 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110164668 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.100480081 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111164321 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090457733 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122351795 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.089489455 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11010561 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.110647809 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.100300687 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.11057557 seconds)
  done (took 3.014632662 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119890382 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.200305169 seconds)
  done (took 1.166966062 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.124307636 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.188632708 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315939086 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165371689 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117299121 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130880775 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.165868666 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128894466 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197284452 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132089581 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.130452841 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09490787 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139995089 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.120808662 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098219086 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11556289 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120616503 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117534347 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116562651 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096176313 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140577724 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.09489856 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.121145332 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.117322309 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18688705 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.129031274 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.095373374 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.116922448 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.095842701 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116829556 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.100897956 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130885321 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.13017995 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.171333348 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122981316 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.188499607 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103236271 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114785608 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095920536 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.11461736 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096976178 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120054281 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131336393 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093904317 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.117255656 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.123836764 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.095786798 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.116214269 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101786431 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.124523421 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.424188703 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107665673 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.191010215 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.124547168 seconds)
  done (took 8.125123252 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.872735771 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141368618 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115889627 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.980059229 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129732301 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130525445 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.846965937 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147684108 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.242415969 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.876129923 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135924706 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128204124 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.213688206 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.282383323 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.155819996 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.341826536 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.724812854 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.129993665 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.121600266 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157444487 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122126071 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144487307 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134393021 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.424639437 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.093121 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114916601 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120963048 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105392123 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167674548 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.116100808 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11652985 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189032353 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.271881023 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208564015 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092616794 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114589392 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091451841 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.199056802 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278164002 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.20127885 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177408222 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110579462 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091547046 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127334911 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135680675 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089103107 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.193261637 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181764591 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.181018444 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118673553 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126058193 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101372001 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126675977 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168391322 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.11229173 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.350048608 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.346076769 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092695263 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122163582 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110096677 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272290253 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114607768 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231858111 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118263735 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221896525 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113281457 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80503908 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.195410304 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091399232 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.1236689 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120724849 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09868789 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125635896 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173159151 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.382717535 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129194834 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096402895 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113210904 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222636872 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.113959067 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092011442 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.170833435 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11742582 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122033935 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108523837 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128398491 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.178235514 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.278409848 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105892387 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123987713 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119837371 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104139507 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116356603 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.221449045 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.2242926 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164850444 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.245402767 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105277975 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.195122499 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.173216723 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127061094 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.178237663 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122073151 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111058468 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128170955 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.2215638 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148660337 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091779552 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120485404 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121900878 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151674255 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095976994 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12175283 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.175979553 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.474412676 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.174951528 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088163024 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.119639163 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122297861 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170829679 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099002444 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268913825 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124157104 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.175095166 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122774204 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089082888 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123188523 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.172660293 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129997655 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123266865 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105085103 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123983863 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258314426 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228972887 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130605143 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219235993 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182200856 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124694315 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.181815616 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124285742 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.175080447 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125007008 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126503788 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093942304 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821721367 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128695996 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100005032 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120991761 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.19793864 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090959675 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.117506333 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09130769 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112060433 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817414642 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096044763 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.111104502 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.094081944 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124536333 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100188657 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121056597 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119646055 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17004695 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240300295 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104512678 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122618918 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.113845636 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.168448268 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093057186 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.115197574 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091977282 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.115581729 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12372193 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097385236 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.116325125 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.181821529 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16596226 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227991572 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.536355927 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09312111 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.114713726 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235473876 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092998299 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.313663057 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122308601 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.211043848 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.19795935 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089965492 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.343206594 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.199699451 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197957209 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096262803 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.178359607 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112274774 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098986054 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.19127232 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092227334 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122651972 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.166063016 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13244407 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129723067 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.140735775 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114581791 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235554782 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111915376 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.177750063 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11635084 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104860599 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320625001 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1147854 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113357529 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.192661675 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096527007 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115061869 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.600558359 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114844753 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102286287 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125438937 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23014383 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.172778681 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121969335 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122433214 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106380613 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.192367823 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.220970707 seconds)
  done (took 45.505061648 seconds)
done (took 61.346674325 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309106667 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276479216 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.311215309 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.225490883 seconds)
  done (took 2.075984305 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.183374302 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.158086964 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.152892342 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.090090684 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.16005986 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.11262601 seconds)
  done (took 1.730103894 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.49439542 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.406107474 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.348587969 seconds)
  done (took 2.120629668 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.267798418 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.285688509 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.367970723 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.415918475 seconds)
  done (took 2.317920757 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.21039273 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131266836 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.104149982 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.143672493 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.175087351 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.180035895 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147073386 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.156891833 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.133835461 seconds)
  done (took 2.304330152 seconds)
done (took 11.429399373 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.182994988 seconds)
    (2/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.169344495 seconds)
    (3/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.196454554 seconds)
    (4/286) benchmarking ("sort", BigInt, false)...
    done (took 0.233376617 seconds)
    (5/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.14486839 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.134591871 seconds)
    (7/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.300939162 seconds)
    (8/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.280294152 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102915003 seconds)
    (10/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.250525384 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119041645 seconds)
    (12/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.239161059 seconds)
    (13/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.279229934 seconds)
    (14/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.187911954 seconds)
    (15/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.215701448 seconds)
    (16/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.130055277 seconds)
    (17/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.143741402 seconds)
    (18/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.10395553 seconds)
    (19/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.235540632 seconds)
    (20/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.234848379 seconds)
    (21/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.197885714 seconds)
    (22/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.193585565 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.182731635 seconds)
    (24/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.101680595 seconds)
    (25/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11988249 seconds)
    (26/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.247978889 seconds)
    (27/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.166881491 seconds)
    (28/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.105151656 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.164621598 seconds)
    (30/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.120109146 seconds)
    (31/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.158080543 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.252115423 seconds)
    (33/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.215454886 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.104071778 seconds)
    (35/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.185742314 seconds)
    (36/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.242117339 seconds)
    (37/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.180058132 seconds)
    (38/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.196661417 seconds)
    (39/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.167503938 seconds)
    (40/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.122594395 seconds)
    (41/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.249984096 seconds)
    (42/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.196262237 seconds)
    (43/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.103798822 seconds)
    (44/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.141805312 seconds)
    (45/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.144476735 seconds)
    (46/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.130143363 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099580585 seconds)
    (48/286) benchmarking ("sort", BigInt, true)...
    done (took 0.254457528 seconds)
    (49/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.145187085 seconds)
    (50/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.100207808 seconds)
    (51/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112807981 seconds)
    (52/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.100738279 seconds)
    (53/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.109361021 seconds)
    (54/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139204146 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11672657 seconds)
    (56/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.142160447 seconds)
    (57/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.100560389 seconds)
    (58/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.103133447 seconds)
    (59/286) benchmarking ("sort", Int8, true)...
    done (took 0.249291519 seconds)
    (60/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107273991 seconds)
    (61/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.199102748 seconds)
    (62/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.122810292 seconds)
    (63/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.239999041 seconds)
    (64/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115250502 seconds)
    (65/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.101381114 seconds)
    (66/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086783746 seconds)
    (67/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.191415154 seconds)
    (68/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.228242236 seconds)
    (69/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.129662809 seconds)
    (70/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.078268566 seconds)
    (71/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.077193742 seconds)
    (72/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132203989 seconds)
    (73/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096099777 seconds)
    (74/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.20534684 seconds)
    (75/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.130779798 seconds)
    (76/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.219794656 seconds)
    (77/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.234788024 seconds)
    (78/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134287991 seconds)
    (79/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136945638 seconds)
    (80/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.193775597 seconds)
    (81/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.112316156 seconds)
    (82/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.078542375 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 0.11336521 seconds)
    (84/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.100144902 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.129793068 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096841078 seconds)
    (87/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.119048009 seconds)
    (88/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100642203 seconds)
    (89/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.102826706 seconds)
    (90/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.08863774 seconds)
    (91/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.198346107 seconds)
    (92/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.116149851 seconds)
    (93/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.107548236 seconds)
    (94/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.226294217 seconds)
    (95/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.20628852 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.120510193 seconds)
    (97/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.103887681 seconds)
    (98/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11940644 seconds)
    (99/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.104775263 seconds)
    (100/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.20175462 seconds)
    (101/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119424553 seconds)
    (102/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.207047835 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121687101 seconds)
    (104/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.11918674 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.149434407 seconds)
    (106/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096511062 seconds)
    (107/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.102031229 seconds)
    (108/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.144206283 seconds)
    (109/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.101765544 seconds)
    (110/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.211821637 seconds)
    (111/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.141248405 seconds)
    (112/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.167036951 seconds)
    (113/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.126281526 seconds)
    (114/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096750269 seconds)
    (115/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.125407134 seconds)
    (116/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086400023 seconds)
    (117/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.137113279 seconds)
    (118/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.094776332 seconds)
    (119/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.108267852 seconds)
    (120/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.103736091 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 0.193285213 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.127337917 seconds)
    (123/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.092910111 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.146138829 seconds)
    (125/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.158068513 seconds)
    (126/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.149419332 seconds)
    (127/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097113256 seconds)
    (128/286) benchmarking ("sort", Float32, true)...
    done (took 0.236805321 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.121841346 seconds)
    (130/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.079350489 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.128315692 seconds)
    (132/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.20920368 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107287869 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114420741 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.102534383 seconds)
    (136/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.130013137 seconds)
    (137/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.124335554 seconds)
    (138/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096924621 seconds)
    (139/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.101529286 seconds)
    (140/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078999872 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09043602 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.121271075 seconds)
    (143/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.128242862 seconds)
    (144/286) benchmarking ("sort", Float64, false)...
    done (took 0.155022731 seconds)
    (145/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127189756 seconds)
    (146/286) benchmarking ("sort", Float64, true)...
    done (took 0.237128753 seconds)
    (147/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.15544989 seconds)
    (148/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.154002101 seconds)
    (149/286) benchmarking ("sort", Int8, false)...
    done (took 0.20048968 seconds)
    (150/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.186490925 seconds)
    (151/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.107854392 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.121556502 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.105048564 seconds)
    (154/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.101475628 seconds)
    (155/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.151747592 seconds)
    (156/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.118198818 seconds)
    (157/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.102707788 seconds)
    (158/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097742383 seconds)
    (159/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.192564196 seconds)
    (160/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.12201987 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.107756238 seconds)
    (162/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.101757122 seconds)
    (163/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.078065622 seconds)
    (164/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.176966642 seconds)
    (165/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091706686 seconds)
    (166/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.116800481 seconds)
    (167/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.095554873 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.122324698 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.097217981 seconds)
    (170/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.204488142 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.119875648 seconds)
    (172/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.078166961 seconds)
    (173/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.126918416 seconds)
    (174/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.078326738 seconds)
    (175/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.129990324 seconds)
    (176/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.145230994 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.105616002 seconds)
    (178/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.2054027 seconds)
    (179/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.078837432 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.122595746 seconds)
    (181/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.078565277 seconds)
    (182/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.165936878 seconds)
    (183/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.161663301 seconds)
    (184/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.079636401 seconds)
    (185/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.102179401 seconds)
    (186/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.079438368 seconds)
    (187/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.102735332 seconds)
    (188/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.078409127 seconds)
    (189/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.122404636 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 0.228735644 seconds)
    (191/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097027804 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.119263898 seconds)
    (193/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.121445713 seconds)
    (194/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.122197603 seconds)
    (195/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079264301 seconds)
    (196/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.102439275 seconds)
    (197/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099294517 seconds)
    (198/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.128461292 seconds)
    (199/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.08726028 seconds)
    (200/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.124413326 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.121576306 seconds)
    (202/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079489163 seconds)
    (203/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.121687141 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.10827646 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.128733169 seconds)
    (206/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079263216 seconds)
    (207/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.101159849 seconds)
    (208/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.092511988 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.121619535 seconds)
    (210/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.079230501 seconds)
    (211/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.103383717 seconds)
    (212/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.079158651 seconds)
    (213/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.121524124 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093994566 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.121354722 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.094622917 seconds)
    (217/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120560656 seconds)
    (218/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.098829844 seconds)
    (219/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.12200905 seconds)
    (220/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.095835874 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.121981923 seconds)
    (222/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.126021944 seconds)
    (223/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10409879 seconds)
    (224/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119714975 seconds)
    (225/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.078977335 seconds)
    (226/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.255622935 seconds)
    (227/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088418558 seconds)
    (228/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.119301751 seconds)
    (229/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079457726 seconds)
    (230/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.103554652 seconds)
    (231/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.096359748 seconds)
    (232/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.137777819 seconds)
    (233/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.119255963 seconds)
    (234/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096090222 seconds)
    (235/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.086939189 seconds)
    (236/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.121089886 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.121646148 seconds)
    (238/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.097010859 seconds)
    (239/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.126454181 seconds)
    (240/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094826971 seconds)
    (241/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121945 seconds)
    (242/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092427515 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.115863731 seconds)
    (244/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.099055401 seconds)
    (245/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.101951292 seconds)
    (246/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.095327619 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.120501132 seconds)
    (248/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.123535508 seconds)
    (249/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.149435777 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.130022796 seconds)
    (251/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.087201843 seconds)
    (252/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.145101641 seconds)
    (253/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.107571625 seconds)
    (254/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.103180243 seconds)
    (255/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.121640464 seconds)
    (256/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.102571726 seconds)
    (257/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.093346169 seconds)
    (258/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119068195 seconds)
    (259/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.078635172 seconds)
    (260/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.103131761 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.101038833 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.115692724 seconds)
    (263/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.079621132 seconds)
    (264/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.104127655 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.093080347 seconds)
    (266/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.120534038 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.098719989 seconds)
    (268/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120436999 seconds)
    (269/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.079570083 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.130072017 seconds)
    (271/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119981666 seconds)
    (272/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079495254 seconds)
    (273/286) benchmarking ("sort", Float32, false)...
    done (took 0.181817841 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.096930115 seconds)
    (275/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.103489046 seconds)
    (276/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092399435 seconds)
    (277/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.104416946 seconds)
    (278/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.092471726 seconds)
    (279/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125614219 seconds)
    (280/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.122307269 seconds)
    (281/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.102539168 seconds)
    (282/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.079105325 seconds)
    (283/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.103026605 seconds)
    (284/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.092147767 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.118732133 seconds)
    (286/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.095542658 seconds)
  done (took 38.932722204 seconds)
done (took 39.812705676 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104875504 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15740909 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.104039686 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.145625458 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.128653672 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.107833296 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.125451125 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.10272683 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.129493262 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.131479433 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.106335356 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.110608171 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103113214 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.126987921 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.104823155 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.14672371 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.130691821 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.098842493 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119168022 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.095150624 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118941127 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.095573919 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.121433975 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.086314502 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.127590131 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.125355489 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098378137 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.127312043 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.09631683 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.116950597 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094463713 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.12380147 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093959442 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.14719456 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.098212647 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118968529 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.104142994 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.125875216 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.097204597 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.12145197 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.123904613 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.096001899 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.122313187 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.099830469 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11915959 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094292309 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117919691 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.105997288 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.147045029 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095685242 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.125090787 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.10235596 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.129023991 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.12369883 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094697029 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118803115 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.096823394 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14720704 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.094997023 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119740071 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.099768866 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.126119901 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.094188946 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.119754007 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.11961159 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102302912 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125939208 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094695623 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.125799046 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.098543227 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.115820411 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095320955 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.118186305 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.092537191 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.1252948 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.102692173 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.114280981 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.095969846 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.123166406 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09793375 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.119451572 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093953818 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.121263068 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096651615 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11710278 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086585602 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.116954071 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097988498 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.118349688 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.118876837 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.098267022 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.122615052 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.098168262 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126253673 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.095599483 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.121035455 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.096188896 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120417132 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.099027945 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.117926376 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.091059689 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118322905 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.100198756 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.117458094 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095986757 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.128648908 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.117950133 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.098226221 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.11935802 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.095017467 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.13189032 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101911733 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.120601124 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097009716 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.116416147 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.099159534 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117421247 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.093433546 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.117116114 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.096138769 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.120660125 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.120365375 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093999286 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.122517319 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104807482 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.115864605 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.094670015 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118691238 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.096810547 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.123296754 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.096126899 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.117122324 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.095517609 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.114029491 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095464635 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.117441411 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.100266125 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118026493 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096070074 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.12034288 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095657695 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.121721082 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.097347392 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.123090166 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.117646829 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.088558484 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097771371 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118500553 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.097619537 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.122193652 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.12111987 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.091116197 seconds)
done (took 17.848196898 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.102227927 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.190301802 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153537428 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.156562305 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.154544074 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112734382 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.131154859 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151573169 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.12857551 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125816852 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.150565221 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.142934023 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.15680061 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.103590455 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.138533543 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.126760005 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.102138297 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.137172477 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.162438268 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.123374501 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153257694 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.12774342 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149241349 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.12407385 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.127100018 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.156592669 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.105683326 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.127490437 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.12993211 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.110653849 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.142702353 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.131018609 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.104543522 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13851838 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.109007963 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.126083454 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.137193391 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.098658845 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.127800766 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.127894757 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115058814 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.138294897 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.122996508 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.109679307 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.12735353 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.106573527 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.126993111 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125818914 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103067145 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.121869653 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107708246 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.146981778 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.126040216 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.105713964 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.127855906 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126799997 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105807596 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.130957375 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.129857797 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.1070876 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.126916331 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.105683232 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.132730685 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144717333 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.127189796 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104638445 seconds)
  done (took 9.391485367 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.118510817 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.160494174 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.136636951 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110348582 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.132171204 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.116608616 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092246389 seconds)
  done (took 1.814596497 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093459278 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.148553792 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126629146 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.15174208 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.140044389 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.129122672 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136481954 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.1185157 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.117160817 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.128074096 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.146415911 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147782522 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118961066 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.130773811 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.128106938 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.117648974 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.154289548 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093244817 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.12591532 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.127375422 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124284159 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.116004909 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.13202695 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.119281987 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114978961 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.120527316 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.187175254 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.105156825 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118667864 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.099840163 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124121461 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.190696971 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.141331983 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.104666418 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117152272 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121995812 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.141340623 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123958604 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.118406911 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.123969579 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.140225409 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.10068896 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.126310749 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.099380056 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.126419061 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.108901013 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.130132974 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.127896808 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.100934322 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147181935 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.104638173 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.141011963 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.120871364 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.097292586 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.12937729 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100135482 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.133250669 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.098470399 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.147263161 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126856384 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.12034274 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145852734 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.140901635 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.121030653 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137991904 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141356367 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.116062952 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.125162869 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101990057 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126804516 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.14581768 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.097935688 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.129557143 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.10903869 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127433175 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.121795158 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.146490211 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123842498 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.106448339 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.123635473 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.097077805 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.120432321 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.110580288 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124198668 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097328329 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136858672 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.132010969 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.099252154 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.123438334 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.141329535 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.098948354 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.131236238 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.105663095 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.122961782 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135241287 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122772143 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.130329059 seconds)
  done (took 13.023117267 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095788474 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.095449873 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.125390836 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.121147914 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095244275 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.12110811 seconds)
  done (took 1.608761149 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.125928789 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.123502794 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.11015749 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.128334368 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.163357418 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.11846411 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.14552169 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129916183 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.114776818 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134798001 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.143347563 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.120455146 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.151165495 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.102083162 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.144797125 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.128274084 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.120068144 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123679645 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.109505318 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124206867 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136407523 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.10230609 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124466248 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.117628081 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.1280666 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.102793034 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126646332 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.135482524 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.109550205 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.129861071 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.101575799 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.127966375 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.127469659 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.105058192 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.144941081 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.10234418 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12382239 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.129959324 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102918497 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.130656338 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.120931738 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12480266 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.10864553 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.130797869 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.129928774 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.10225609 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.129671615 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100921392 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.144535473 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.129081206 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.104587956 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.128062073 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.102423762 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.130595594 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.10267693 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12961811 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.129110495 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.119392272 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.128306161 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.102842356 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.124639737 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.103531515 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.130601221 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.127671724 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.101643931 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.129628803 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.101943264 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124332157 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09939011 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.127096181 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.105011397 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.125152208 seconds)
  done (took 9.728128741 seconds)
done (took 36.506160711 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.693671587 seconds)
  done (took 1.6466687 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.929629254 seconds)
  done (took 1.886315763 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.311814276 seconds)
  done (took 19.299342069 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.545818407 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.639026693 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.988508976 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17030836 seconds)
  done (took 3.2959448 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.974168986 seconds)
  done (took 1.949469989 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.317297445 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.270521329 seconds)
  done (took 1.549005586 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.890790435 seconds)
  done (took 1.861952535 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.58539936 seconds)
  done (took 2.552715522 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.355050162 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.205262732 seconds)
  done (took 1.539042977 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.594969331 seconds)
  done (took 1.567238629 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.833296944 seconds)
  done (took 15.808637474 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239725681 seconds)
  done (took 1.221250189 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.308743993 seconds)
  done (took 1.281580487 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.7662469 seconds)
  done (took 4.744129732 seconds)
done (took 61.16658875 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105012424 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134991216 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109554719 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.130919257 seconds)
  done (took 1.449879097 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.110250661 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.129129506 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106966324 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12821486 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.110830848 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.130357318 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.127077888 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.109266031 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.129086399 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.104420295 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128807676 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.102582376 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.132150844 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.126605838 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100766192 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.130312511 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.106751003 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.130277108 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.102454451 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.130290901 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.127752933 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.104759875 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.132188407 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.103725895 seconds)
  done (took 3.823852112 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105297615 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.124672287 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101642421 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.123716098 seconds)
  done (took 1.440891603 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.110309301 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143323277 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.116059607 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.136691955 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142822944 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116086878 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.125999899 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.099295489 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.127284414 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.109264751 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.126934507 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.145487999 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.116441673 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119475055 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.111281376 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.119472646 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.095743279 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.144782139 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.135365903 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.111907373 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.125188049 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.109748674 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.13369428 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139252125 seconds)
  done (took 3.942379858 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.213659045 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.112124678 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.149516158 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.106229843 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.179837131 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.151215922 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.123914621 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.124873981 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.125324692 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.111799456 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.130065587 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.179978184 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.109614632 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.129990643 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.126994145 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.106025229 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.136153178 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.135743887 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.101150267 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.138388051 seconds)
  done (took 3.6751075 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.106322322 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124266191 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095649464 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.124290854 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.106370289 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.126975739 seconds)
  done (took 1.669488935 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09554042 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.093799826 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.119817503 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.093776114 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.125498223 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094763995 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.118694871 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.094107328 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.119533625 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.094688078 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.120121981 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.09298071 seconds)
  done (took 2.24887223 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.552013544 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.099244578 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.129984421 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.124597338 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.10464756 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.123615631 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.114287444 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.1247605 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.181156129 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.098410896 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.141906211 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.178733703 seconds)
  done (took 2.963641106 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217499676 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104611204 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28354813 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.437482869 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164469216 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174061219 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.35753431 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175660617 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.194515783 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117757293 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240020361 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166079085 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134857883 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187523517 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147979631 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.193059551 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184904029 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235949059 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130077681 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250754919 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173680179 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176365079 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200190813 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160719935 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118559033 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166853251 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.126266941 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136022678 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181872947 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178093418 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181770225 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156004148 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14600614 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210861491 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22175311 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215587081 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.369309136 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141108865 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201312421 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.201820362 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28631578 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149215018 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20413457 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1632614 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140092527 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188905583 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165627894 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.188371109 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139737518 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121422645 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219531485 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184732106 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.188937074 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146523482 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.349621148 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151805945 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.153138467 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192357696 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197731835 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233961672 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174295111 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.103472458 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.255235303 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198905919 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189019181 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.154094508 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.175789202 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132368642 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185947838 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213559668 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186410561 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176405334 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.227756962 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141187527 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172502649 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187993102 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161051013 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187322056 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140055584 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12986578 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157080567 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143902152 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109101976 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193486989 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102770594 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24990947 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115826781 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.337462128 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218707195 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166399571 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168928821 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172455219 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175854362 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154790481 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.098515583 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154297686 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.179865658 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164713034 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140683655 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165203845 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126348384 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.134364634 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160568141 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.103072708 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167409007 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.141909726 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175776177 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172927815 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.13641041 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171996004 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130456638 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.16667212 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17743286 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231061887 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112982055 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140354353 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212709498 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166196484 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144505045 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193995268 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204742195 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.181778113 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14556083 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179096524 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20515154 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151057308 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207687723 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150169768 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113023106 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.158543324 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166759083 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164826896 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162903115 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136345725 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.130923078 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239289543 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.106194211 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144522357 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183257557 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134285196 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108281925 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152754398 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143377663 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.121130784 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.157200373 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146827609 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163643662 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166700924 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162108189 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166542995 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149849724 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203043672 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139797695 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.140268555 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155948287 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.125776882 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.187911567 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203523591 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137223884 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194394208 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.176048459 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267701441 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172708432 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110065399 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188368517 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137994119 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.098938997 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20260564 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1403935 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169390619 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.230126981 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243040477 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.173647713 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160906543 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156825057 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173927934 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.192391197 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16510376 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.153477657 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172587532 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175869535 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.130478306 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.103155612 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135030487 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147095437 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110420507 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141095774 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190010536 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171649206 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.258610322 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169143522 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118678623 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.229475533 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105402377 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173059188 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180861395 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147264535 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201774836 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198515065 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176861719 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151992621 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17889793 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.128777858 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104249624 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140646797 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173813969 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139865633 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113840329 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152543901 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199878502 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182323975 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158287286 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274048099 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174567513 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208847165 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.130252519 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172018886 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188218211 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165314863 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.170783978 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13928678 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.169020049 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196835442 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152419299 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202003724 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17056913 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176562328 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237278712 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.135924763 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138300314 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157948412 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1768801 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14800806 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180297382 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125288075 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144635267 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162329836 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.145457346 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105335382 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216010846 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123257718 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217414665 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.173692497 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183360021 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133917808 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123635831 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168903645 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153124944 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.096442069 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206501176 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205841541 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152012939 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167730587 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192525683 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138007529 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.360126481 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207848878 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222138546 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116863939 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151710273 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170151808 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178276941 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172294042 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192373128 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152188567 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188184417 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165946794 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.122789534 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142642821 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15638936 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158193315 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.158522448 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.112528091 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.161642261 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.151599804 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192787168 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152842462 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167283184 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174079032 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127654575 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.164478741 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14860902 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220400745 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166972505 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187001057 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.164818345 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.183643059 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19594388 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133169143 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106938267 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13495476 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19217587 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139922329 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13863218 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.259740363 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285898926 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167311911 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178653058 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117570932 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.131813197 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168119347 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156580554 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269054762 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123170533 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.145323141 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20867432 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.159547893 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13921667 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172206017 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.347166863 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151988251 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195932942 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.12847976 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.325039654 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133414916 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113140603 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178932211 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178350919 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139902585 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.19097774 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146390724 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152867956 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178693437 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146852271 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.260812682 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221898817 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178323851 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182359731 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.15220448 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167422448 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172465948 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194634403 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151820852 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.152292096 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142777349 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229965249 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.204304628 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.111171328 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172283855 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171377573 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168738275 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21089476 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112853809 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196439524 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140391455 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174467389 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148358774 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102767663 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164993836 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.25325934 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113024499 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220455039 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164952623 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111507345 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134286311 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161652561 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165727049 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123570447 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.13782641 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187555551 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.136082235 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171267215 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160602193 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139679057 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162912493 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153979012 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109448988 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150860515 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152357034 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114220657 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.180259783 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199666672 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.140357857 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195153319 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180671533 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17330136 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167948232 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152721106 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.669391099 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106557478 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199104543 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15485968 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195247077 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157745514 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175616532 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170452599 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158172808 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1778861 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158270506 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230265503 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1747137 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166201418 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110498736 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15337036 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153873284 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.109709643 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159604333 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171520265 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148500914 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.115981928 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165436201 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155039405 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.154406 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146502558 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202895268 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1261276 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221217931 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19292948 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117760084 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175345823 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213989531 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108773129 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.168947958 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179635097 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151150505 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15983351 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.138384158 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.114045635 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18822096 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.132626514 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169975989 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168101506 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141589409 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171672708 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.141849838 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169587008 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150867991 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169117705 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105461725 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.163390912 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165635461 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139205195 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106560135 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164063239 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167388632 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.168292131 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134460052 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.152694006 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199581494 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.134037369 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112504116 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364107495 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166859803 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202891013 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.160368468 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143555244 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122253376 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163571932 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161396229 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168449392 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13622798 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110944066 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139253951 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.191276232 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.173298756 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166886407 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195520058 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168578829 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197994568 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.11461691 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276492624 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146686365 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164442676 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11096262 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.137214484 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148464421 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113970171 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153955926 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.262309721 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188059216 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160982556 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.124407718 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13550043 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.106016506 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141603628 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180604744 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163060764 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167506668 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150687817 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.097714933 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15309454 seconds)
  done (took 82.529423066 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.218715675 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.172324777 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.174936204 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.246305437 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193670354 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.281049876 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.236105554 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251483142 seconds)
  done (took 2.850315525 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.108567659 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.144824653 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.149373782 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.132479231 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.098161558 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.380593112 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143843938 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.105017488 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159245107 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.142578385 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.125152071 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.60131983 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.130244735 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.130587075 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.118363506 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.098493961 seconds)
  done (took 3.842290088 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.471675671 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.561646958 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.205609221 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.25925614 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238299676 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.184521096 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.777381807 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.173805989 seconds)
  done (took 12.952803031 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.131909623 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.148480313 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.146877113 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.175440449 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.160025258 seconds)
  done (took 1.841702599 seconds)
done (took 126.20194939 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102481778 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132635263 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103579547 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.134125636 seconds)
  done (took 1.536895749 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.115615164 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.086753587 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.118718819 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085565876 seconds)
  done (took 1.47901836 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.439640683 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.118471458 seconds)
  done (took 1.669196457 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.13131873 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.153997827 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.121593417 seconds)
  done (took 1.490568217 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111527322 seconds)
  done (took 1.193493327 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.113952086 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.140355754 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.122609319 seconds)
  done (took 1.459048865 seconds)
done (took 9.902813879 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117969082 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.443388695 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.39181932 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146784752 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.731026548 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386486338 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.094250761 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166232858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176300959 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097768103 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145959666 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677847952 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.046101549 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.353750247 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.031662037 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.379351982 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.683921088 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12843095 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.105235443 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128381968 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.041255936 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125677906 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099403555 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128885677 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.680239033 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.432076142 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097926318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.393949761 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097719211 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134070076 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.416304778 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098745334 seconds)
  done (took 17.249402237 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10120443 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.19145674 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.106559892 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128896238 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.102411888 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.130593443 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.136602037 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.112104198 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190039939 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126842003 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117898431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126712557 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103475042 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128150488 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.120993696 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12672402 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.100258708 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130613978 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.10523186 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130739595 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.146390351 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098542038 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12894252 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101338486 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126414247 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1122485 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12753318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.110940862 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126992633 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103406857 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.133275071 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099245367 seconds)
  done (took 5.020425544 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149871151 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.200988033 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136355269 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134541257 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182841378 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.129698513 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.215587347 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.167553205 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.193386883 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098642637 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.147324537 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09897348 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.165719482 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.099444258 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150634479 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097611971 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.131562249 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129207912 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.105729918 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128107492 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118861355 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126800853 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.1000406 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130090793 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099351509 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141848652 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099118241 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141621017 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125834893 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104544197 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.133690897 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099524513 seconds)
  done (took 5.377136201 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.10777513 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135991009 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.116755006 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.145670522 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.10161918 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.136047209 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.108106432 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.1305449 seconds)
  done (took 2.077766903 seconds)
done (took 30.807328883 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117417024 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13306745 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.11345463 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.141894117 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.109711313 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.164168199 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09785127 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.139030455 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.111605105 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.136823147 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.115053111 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.128612775 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.101017153 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.126483008 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.112858906 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.132630871 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.115580304 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.137114574 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.120052818 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.143833106 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099866004 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.139794442 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.109669831 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.150098613 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.148820456 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.120632147 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.144732271 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.104864815 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128457895 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100450873 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.146570294 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.125000041 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.132493393 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.115463258 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.134154477 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.103543551 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.130260063 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.100724792 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.143984679 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.110662012 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.136691856 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.139006609 seconds)
  done (took 6.346891798 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.127717033 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.172977942 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.097194193 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.126565609 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.097264936 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.169027955 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.164267807 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.097324464 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.126834987 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.124209914 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.155505954 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.12538332 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.097868499 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.096656923 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.126850042 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.096311421 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.153455784 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.153413977 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.130496041 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.160626674 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.17463284 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.131660023 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.16392703 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.153944018 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.141822193 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.166726936 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.15093734 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.165053059 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.12863121 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.125327596 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.131364195 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.163192901 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.096516572 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.126391399 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.170426805 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.13590723 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.157569301 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.17112018 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.131427326 seconds)
  done (took 6.479293757 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.109091339 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.148343271 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.131604091 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.273140183 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.142216802 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.148760761 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.115103755 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.149035992 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.160952397 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.099796073 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.141640801 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.132540685 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146589595 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.112201201 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.137034803 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.144379987 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.119436721 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.13102591 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.108668014 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.149575453 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.119059985 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.143616058 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.11726104 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.141048374 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.099647345 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140044596 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.138702974 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.116006592 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.139743843 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.111258576 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.133644841 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103830171 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.132405785 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.111276558 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.135217473 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.136207996 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.1224764 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.141851244 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.115974827 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.165343719 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.141099012 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.104141592 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.154359856 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.181981268 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.104686703 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.136712691 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.111379718 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.14229827 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.101259932 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.150027097 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116424076 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.132653618 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.145680499 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.100119129 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.129863782 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109956366 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.132380463 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.103460919 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.141180495 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.105285659 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.150607873 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.111428192 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140780042 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.10499026 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.140487322 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.129236618 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.100812199 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.134454881 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.126635493 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137908376 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.137478564 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.133233797 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.135465712 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.112216871 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.138755299 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112076255 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.129910936 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109648085 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141269459 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.108059167 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.14172659 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102926952 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.134614875 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.11873366 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.145246828 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.137641346 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.106572759 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.136992158 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.103623021 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.134051447 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.118582144 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.133371726 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.104454153 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.145622252 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.131911062 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.104324091 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.1355712 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.106144477 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.128350114 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125696487 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.135841308 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.100280008 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.152701775 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.102562239 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.136324029 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.109295485 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.144788508 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.129853444 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.105135641 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.136255161 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.10012189 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.138319834 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.10435352 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.129702098 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.114289816 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.146992116 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.107271972 seconds)
  done (took 16.144707324 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.251769181 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.231355407 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204168213 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.316600991 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.153486311 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.158401125 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.22839268 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.151547587 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.132332335 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.17143561 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.195855577 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.198504929 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.187751825 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.198404924 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.190710029 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.131364039 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.136006265 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.185373832 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.2305896 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.313543444 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.167426248 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.145954823 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.172602957 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.140698393 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.150357542 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.14797984 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.157596718 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.123738612 seconds)
  done (took 6.295781378 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.116825073 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.171894815 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.13848113 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.130389325 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.157785287 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.131889017 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.106266302 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.101464852 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.146927905 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.147611532 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.101431749 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.138083359 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.107195271 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.141335324 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.099994215 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.14106333 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.110011509 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.140089793 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.132959659 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.105537194 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.149783739 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.117464013 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.138573846 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.106546333 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.148003299 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.137807475 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.10125167 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.152266703 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.141327754 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.130201656 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.128954708 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.109017199 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.147208217 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.099304884 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.139618235 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.132958426 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.102661774 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101711999 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.135711294 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097234029 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.130354315 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.090381484 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.137196335 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.145953119 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.107861963 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.132438235 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.106162831 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.136081919 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101464162 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12763223 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.103409235 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.134016421 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.105241024 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.149115866 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.103944926 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.132032387 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.105562551 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.131259788 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.109671905 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.133261271 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.098295082 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.135451848 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.107855021 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.135606005 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.109660368 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.139225828 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.105115534 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.133421356 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.105833285 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.139389683 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.103285887 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.143933347 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.097873977 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.13487563 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.111271542 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.144134791 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.13493865 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.106211541 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.138687705 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099890686 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.121000052 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.100207608 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.088234631 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.136015351 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09967189 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.136816531 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.103020034 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13677001 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.147436007 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.109948487 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.139596952 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.101591876 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.137583593 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.104597495 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.128456705 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.104947065 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.150062408 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.151723668 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098954916 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.129328123 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.122660707 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.133903023 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09812105 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.119292663 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.110911116 seconds)
  done (took 14.068778405 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128944473 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.170316592 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.102035503 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.150847129 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.167312596 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.130625949 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.147609379 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.109289592 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.132578655 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.121557119 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.139610956 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.109606215 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.139058743 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.147760514 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.130568684 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.145121961 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101654643 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.147336208 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.105737014 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.173767654 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.151576592 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.12797016 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.164644942 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.143368821 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.105932161 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.156628613 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.132992143 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.147261263 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.113866459 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.164930492 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.145487727 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.132846583 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.166239965 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.136534058 seconds)
  done (took 5.822965153 seconds)
done (took 56.24730786 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.207040689 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.434799866 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.19030104 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.189215116 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.221816576 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.236601972 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.191288709 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.384273416 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.91996932 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.178690909 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.189255708 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.189373654 seconds)
done (took 27.650039434 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.421760604 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.794861168 seconds)
    (2/2) benchmarking "String"...
    done (took 1.505171354 seconds)
  done (took 4.434260711 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.189719746 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.189566226 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.435020996 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.19044089 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.206653148 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.208485957 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.191095786 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.192872564 seconds)
  done (took 15.731263005 seconds)
done (took 25.892879329 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.239685115 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.493351487 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.453264837 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.210603716 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.192207892 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.191438155 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.191251251 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.264317563 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.193830741 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.195938458 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.208666623 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.490633027 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.215408286 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.603611345 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.191910337 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.191418102 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.209220947 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.516608254 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.192777413 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.25694066 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.177520694 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.198360285 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.20704678 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.219345679 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.207111432 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.199686182 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.205787761 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.193443018 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.437878438 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.214660881 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.241207409 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.195324948 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.207831762 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.214105244 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.308766236 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.225924935 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.468507531 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.204882719 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.181078955 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.199258421 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.443042103 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.615045608 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.207369963 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.209170945 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.213438455 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.216766947 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.182707083 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.038051581 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.200711231 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.195725437 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.228088727 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.577805407 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.20656876 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.212107995 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.196034344 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.492282708 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.205032359 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.272277413 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.235860432 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.211330791 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.203698924 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.2072509 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.233503693 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.199077374 seconds)
  done (took 143.732672471 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.194533251 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.195580109 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.195636127 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.218280899 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.20061522 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.197778634 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.196779607 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.196533844 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.195108132 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.200704537 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.200039879 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.197382487 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.200244106 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.171146875 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.201519501 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.222559368 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.200507839 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.197942492 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.215685785 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.197905163 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.20719554 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.200862938 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.217276948 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.20004693 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.215416653 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.285738847 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.224284585 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.214710544 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.198269 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.197210058 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.209802552 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.208471785 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.861270312 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.053583697 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.211582839 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.241616388 seconds)
  done (took 80.066132565 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.197414863 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.198298491 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197946918 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.232083781 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.197511796 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.791997113 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.815243775 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.955687305 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.401272158 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.736979731 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.501435237 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.199294696 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296784726 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.213519367 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.199812787 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.214610562 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.22571348 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199834081 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198983225 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.817378282 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.215010704 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.190826231 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.401636074 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.217655052 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234166852 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.596873564 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198321432 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232955111 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.538677137 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.252107312 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199015905 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.64370439 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.024398308 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316803137 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.204301267 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234382433 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.200520144 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.487684576 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199949609 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.200698395 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.202246116 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.89017805 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.20034451 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.794728827 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200104446 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.197306761 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.200915183 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201339084 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.563870383 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.952758974 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.221407436 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.20032311 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.203986873 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.201174619 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.2005539 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.235489922 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.642216958 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.321937204 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.208528451 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.204564954 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235930668 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.2026014 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.201405998 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.67415828 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201724537 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.719270774 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.265171982 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.313309152 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.822589499 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206051518 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301128101 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324162094 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.201705811 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.202050909 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201849479 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.202212012 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.313621498 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.202237063 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.648959768 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.202354607 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.38405829 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.221619171 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.201570523 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.756272042 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.307076365 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.203138642 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.654488027 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.205569262 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.201991474 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.993789537 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302069085 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.202026777 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.203510989 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203007559 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.650146752 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.203787166 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.516484292 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.828930472 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.206880601 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.020691112 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.20537791 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.661070437 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.797313865 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.965668737 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.208435065 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319122992 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.386187667 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.222878486 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.204063452 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.757644459 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.206505221 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.262884337 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.209880371 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.605105637 seconds)
  done (took 368.876582752 seconds)
done (took 593.79046437 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.931361314 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.870949939 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.008369243 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.904400255 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.862334414 seconds)
  done (took 10.705788916 seconds)
done (took 11.832273089 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.404696019 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.403175221 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268787288 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.406430085 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239287787 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.422485595 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.387014108 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.22589397 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.315161935 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.290843603 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.313451421 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.259769506 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.242042021 seconds)
  done (took 18.308871071 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.480787634 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.207396044 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286162744 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.453357261 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246176151 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.473951114 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.512130321 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.206533171 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.331718197 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.218672951 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218736695 seconds)
  done (took 17.768264416 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.479695106 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.205677881 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275626109 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.45616058 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247315445 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.483794839 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.567232436 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.20749959 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.346522497 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221524375 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219012183 seconds)
  done (took 17.840446276 seconds)
done (took 55.043379484 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.247623296 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.378083894 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.234532558 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.219967876 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.217447193 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.217814006 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.222993263 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.216210149 seconds)
  done (took 11.087729862 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21552705 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.213334521 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.21202317 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.215814295 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.214681717 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.214926613 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.212087171 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.215741677 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.21406745 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.215346323 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.214132 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.213475097 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.216375175 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.213002672 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.213201849 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.213890298 seconds)
  done (took 20.560602363 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.214299631 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.211929305 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.21336927 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.212683183 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.213275246 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.212990286 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.213564594 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.212908156 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.211676214 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.212876732 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.214663044 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.213998437 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.214656857 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.213964943 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.214154007 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.214079923 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.21366343 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.213680223 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.219171979 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.214415887 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.21408177 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.213682138 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.214258728 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.214338391 seconds)
  done (took 30.267489646 seconds)
done (took 63.046009366 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.209315883 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.218117181 seconds)
  done (took 5.563188785 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.277086668 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.28065343 seconds)
  done (took 3.693319338 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.217775438 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.218808858 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.218406891 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.217349363 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.217922852 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.217916369 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.219143237 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.218360556 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.217518379 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.217511045 seconds)
  done (took 13.31496602 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.217487579 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.217805737 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.215849978 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.21987926 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.219014439 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.21741441 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.217867541 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.218609192 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.218716141 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.21581479 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.21947324 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.215642302 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.219113342 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.21708264 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.218343689 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.216443224 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.217001085 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.216361839 seconds)
  done (took 23.054042721 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.233044376 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.240049537 seconds)
  done (took 3.608482857 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.35701348 seconds)
    (2/7) benchmarking "second"...
    done (took 1.258864066 seconds)
    (3/7) benchmarking "month"...
    done (took 1.333234374 seconds)
    (4/7) benchmarking "year"...
    done (took 1.323702138 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.258285 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.238969656 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.260073198 seconds)
  done (took 10.167248864 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.22034167 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.42413718 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.53424002 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.760925527 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.221200608 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.225205362 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.045216533 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.22389394 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.227168242 seconds)
  done (took 14.019801399 seconds)
done (took 74.55314252 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.212229823 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.280415891 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.226176675 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.226313955 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.512795552 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.259912728 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.217007916 seconds)
done (took 16.070614326 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.204753871 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.215082109 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.209161611 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.216496693 seconds)
  done (took 9.983043784 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.22108153 seconds)
    (2/2) benchmarking "read"...
    done (took 1.564372398 seconds)
  done (took 4.924292749 seconds)
done (took 16.043410533 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222453716 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.220733164 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.217695625 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.217720917 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.222537926 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.218902917 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.219014806 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.2215635 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.22111512 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.220814461 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.218049852 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.22061069 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.22365791 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.22088991 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222265964 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219433544 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21923199 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22239256 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.218692888 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218566544 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220041867 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222588711 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.220329511 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.219809577 seconds)
  done (took 30.42823459 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.222812846 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.220928121 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.2222721 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.22312552 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.220668365 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.222822896 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.223678964 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.22089642 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.223087609 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.223489397 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220757989 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.221207597 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.22317967 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.220356922 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223908756 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.220628823 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.222733573 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220313119 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223822367 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.223115842 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.225383254 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22209644 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221262372 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224725312 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.221949672 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220379637 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.224650761 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.222720932 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223836981 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.222109984 seconds)
  done (took 37.812729394 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.229857494 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.230717356 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.224815357 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.225831632 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.223389722 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.222384331 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.224523992 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.224504225 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.224822835 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.223311887 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.225184452 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.222911793 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.223636095 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.224792802 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.224284007 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.22327973 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.225363746 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.22491487 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.225068287 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.225027612 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.22517012 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.225054654 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.226005182 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.22571592 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.225651685 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.224118083 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.225518407 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.226029579 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.226490264 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.227327831 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.227881522 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.226616328 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.227651482 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.226922544 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.22506028 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.22602751 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.23099141 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234431961 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.226534907 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.226125976 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.225112927 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.227239363 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.226462443 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.225436073 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.226682053 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.227363318 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.226148505 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.227907188 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.226065625 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.226372358 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.227748749 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.227334196 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.226818005 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.226921042 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.228693398 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.228069801 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.227284954 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.227901205 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.22801711 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.227538592 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.228576965 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.227979708 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.229083641 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.22924478 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.230561557 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.228544466 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.228151015 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.2274036 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.229990701 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.229532207 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.230492407 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.22906405 seconds)
  done (took 89.46748378 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.229395276 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.226669105 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.226559783 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226891087 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225599376 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.229063308 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.225762156 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22912479 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225752168 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.23018415 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229703972 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.227540845 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225993201 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.229983226 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229663246 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.226306378 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.229782113 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226995386 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.229460788 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.231120877 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229047873 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.226928656 seconds)
  done (took 28.163051491 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229489781 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231191805 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.228112795 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231900628 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231135063 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.231253712 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230139769 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231709422 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231075813 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227122367 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229566161 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231174672 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.229674111 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228382737 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227631325 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229669023 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760169614 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23007366 seconds)
  done (took 23.817211061 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.229709223 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.229313863 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.230674269 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229067203 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.227554896 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.232440276 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227869405 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.231393946 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.231455979 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.228416365 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.231936365 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231425411 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.232250916 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229448171 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232979215 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229235041 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.232801661 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228644914 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231195483 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229414308 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230841619 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23364684 seconds)
  done (took 28.219292473 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232888406 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.231720588 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.230773215 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.23031458 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.229882273 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.232135591 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.233754542 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.229448845 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.233026596 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.233776218 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231221126 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.233656654 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.23299787 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.230680726 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.232430867 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23123049 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233048585 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.23101408 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233504847 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.230959562 seconds)
  done (took 25.787735498 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.236037339 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23754113 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.236741746 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236631163 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236718529 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.236774842 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236778429 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.236440863 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236461118 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.23822121 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.237352098 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.237665284 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236311298 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.237243078 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.237704684 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237306118 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236126024 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238657572 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.237882893 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238265346 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.23823513 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237564143 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237899881 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.237254268 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.237775589 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237830209 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238871867 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.237843871 seconds)
  done (took 35.796806923 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236611568 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.236318255 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.233679413 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.233632787 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.23294953 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.233328818 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.233679782 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.23342296 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236308112 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233765244 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.235641951 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.23753389 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236803852 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.235177771 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236908393 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.236787754 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235957188 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.235062735 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233445353 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234737114 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.239044211 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236843094 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.237746654 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234980906 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23450872 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.237264852 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233933272 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.23534501 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236995451 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235918491 seconds)
  done (took 38.217521648 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.282680956 seconds)
    (2/2) benchmarking "in"...
    done (took 1.276055015 seconds)
  done (took 3.712994399 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.23535498 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238653994 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.238687355 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.236304438 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.236979995 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.239691747 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.239547431 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236671786 seconds)
  done (took 11.055697753 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.238985619 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.239908022 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.239311245 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.239530416 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.240098886 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.239942697 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248641819 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.261829739 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.240789697 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.242395519 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.248795119 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.249264809 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.243292674 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24079868 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.241893011 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242220956 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.239919383 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.241134483 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.242163267 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.239935884 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240512894 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243729146 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243175282 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.238919039 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.243318202 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.251710332 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.245013554 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.240419615 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.241913758 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.245886819 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240899098 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.237971017 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.240971066 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.242333159 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.241339966 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.24241311 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251926864 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2637244 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.248145675 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242026619 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242747196 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.239608075 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.241961644 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.245178539 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243636383 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.24350198 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.242898111 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.239369716 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.242887948 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.24588108 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.247610659 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241443612 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.239344819 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24471621 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.24517672 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248833548 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.264445349 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.246675675 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.253948882 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.254770917 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.257158071 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.269481641 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245078243 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.243723233 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255006786 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.268025067 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250294696 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.262062479 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.240948596 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.243977158 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.25082718 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257428493 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.273350449 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.244156478 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246261502 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.24499715 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244575845 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245449662 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252375642 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.269826534 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.245812795 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246387308 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257390826 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271239824 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.245707769 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.244601805 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.245984285 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.246396988 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.247606677 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255725231 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.265847057 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.245288162 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.245673346 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.246116965 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.247744545 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.247564512 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.244935218 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246679436 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.243518999 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.247439593 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245719333 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252107494 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.256489228 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24750896 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247723318 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.254185829 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.246047919 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248030538 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.252391763 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.247663409 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247175006 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.251111207 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.254409628 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.24518705 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252077156 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.257257256 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.247644427 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.248387358 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.247983043 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.249082018 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258730899 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.275668177 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.247530876 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.247264534 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.254024976 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.259696983 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24802795 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.250970366 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.248089056 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.244808696 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.245954855 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.250536942 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.247884545 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.24900509 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248654312 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249391986 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.246125103 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.24934416 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.250434728 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.250149107 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.249738563 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.249686699 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.25031718 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.250293589 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.249003686 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.250648739 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.255174317 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.249673561 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.249723945 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.248812735 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.247191172 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248962184 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.250330039 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.249452245 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.24951895 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250694791 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.250350137 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.250673121 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250691062 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.24985597 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249935284 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.252143137 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255399789 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.25147321 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.254676238 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.251614735 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.247582112 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.251390082 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.250594661 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.251148233 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.251872278 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.250145634 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.255379788 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.260402218 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.25225614 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.252867238 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.254356525 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252249754 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252264103 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252452127 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.255205858 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.260891171 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.251383268 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.257868701 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.251819456 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252976562 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.25253449 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.252899603 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.251756784 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253051736 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.25617153 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.259871547 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264164581 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279366692 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.253006311 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.255834712 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.25351878 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.256853858 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.256742783 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.253314574 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.251885059 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25275995 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253746503 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25291966 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.254017314 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.253590754 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.25233649 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.253427328 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.254030039 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.253830056 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254374528 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.253841689 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254212513 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.250463775 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254171722 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255039522 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.252912725 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.250938052 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.253269259 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.255478682 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.254458 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.255142437 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.260686032 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.252503755 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256973307 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257385416 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.256311463 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.255334697 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.255656723 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257906558 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.256210668 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262069626 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.277265985 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.257274503 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262878243 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.277686575 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.256295674 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.259746683 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.257442975 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.253489175 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.261638504 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.265437722 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.254180569 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.256671112 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.25674236 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256805813 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256482442 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.261845724 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.254024357 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.256518583 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.257169649 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.258492722 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.253790775 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.256839928 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.256405221 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.255816999 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257846813 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256382181 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.256781534 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258833493 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.258759454 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.257347784 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.25845721 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261786815 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.265891248 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.263532628 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.255993396 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.25873957 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.25917957 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.261810198 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.258505096 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.258332753 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.257986814 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269728993 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.284316933 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263238691 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.279027545 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.257513551 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262792185 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.279956503 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.263253522 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257610634 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259010036 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.258218526 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.257580211 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.255926994 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258858749 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.258668636 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258437203 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.26017605 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.264344625 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.258355093 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.258886874 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.25893202 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.25844549 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.257925289 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.257769433 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.258148001 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.260281041 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259741795 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.259073069 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.25798362 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266432271 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281438361 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.26039929 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.260911097 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.260458773 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.26025976 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.260749489 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.261132551 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.26417704 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.268536598 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.26395956 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.270300931 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.262393715 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270018966 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.2605219 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.265727519 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.270337208 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.259868849 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.260066215 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.260771165 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.261576461 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268187756 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.283197046 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.264272111 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.26552704 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262034975 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.262781607 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.262412645 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.262756995 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261812509 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.262697986 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272456349 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.286421419 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.266807415 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264199476 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.259317565 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.26334012 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.261590462 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.263285895 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265337629 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.263309875 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.263659731 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.263984785 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.263081456 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.262341553 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.264579718 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.264095469 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.259615396 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.263030611 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270411303 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.285733261 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269312858 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.263258141 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.269744162 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263085516 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270717597 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.285108902 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.263389948 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.264296576 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.26307327 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.264621284 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.264443423 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.263822475 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.262848946 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.266190089 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.268103608 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.264447171 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.265370981 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.264937669 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.264171062 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.264706555 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274971666 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288850729 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.265690698 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268089049 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.261180511 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.264440139 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.269687563 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.263899779 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.263867073 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.268368948 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278174585 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275270648 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.267463706 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.264815432 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265627326 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265426815 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.264648083 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.264554706 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.265793121 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.264432252 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.267550842 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.265864428 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268446758 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.265655958 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.265440179 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268161038 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.268087349 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.27773657 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.265980036 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.266996977 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267014308 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.268643816 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.266174562 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.267080453 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.265776748 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268297489 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26670738 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.268391813 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275653197 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.275627959 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.268430188 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.267414213 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.267264778 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.267207318 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.268455825 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267876927 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.267922929 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267994105 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.268901831 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.267138614 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.268729826 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.265998131 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.266728555 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.267904385 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267415644 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272384989 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.276563921 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267498705 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.264918827 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.267945042 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268345339 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.267685655 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.268211252 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.274106119 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272193818 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.280575071 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.279254307 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.274288553 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.269050096 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272113013 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.277569166 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.267778212 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.268667938 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.269743173 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.270307775 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.270376342 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.274079986 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269484145 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.275658679 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.270148478 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.269324661 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277248855 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.292855494 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270226841 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.271592234 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.274813002 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.270878502 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.267005099 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269467927 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.269467562 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277309499 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.292797453 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270967817 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27197157 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.2719082 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.272326488 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275672681 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271949245 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.272465355 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.267530741 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.272252642 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272565396 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.271831772 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.26765526 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.271733449 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.273429625 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.273713421 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.278886755 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.268694833 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273661099 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.272128172 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.272927064 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272554308 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273710614 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.270727688 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.268905213 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.272178239 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272229802 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.273274347 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.274981306 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.272474294 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.274148792 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.27455363 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273941599 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.277561079 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.285134201 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.281087734 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.269125281 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.272822968 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.273037287 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.276223303 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272885844 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.273448006 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27299917 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.274260447 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.270952103 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273524606 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.27370154 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.277526633 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291005207 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.297485983 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273930304 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.272498733 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27533191 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.272541907 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.270200007 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.272717375 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.275510883 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.27658454 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.283057553 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.27435797 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28081841 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.294775119 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.275196575 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.27858101 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.277821922 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.283023432 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.276932446 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.275598195 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.274377724 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.280799544 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.29105435 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274666803 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285491208 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.306105456 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.2954955 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.275848723 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.274976722 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27491794 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.276002638 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.277133482 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.275800938 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.27475918 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276254681 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.274223522 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.275681003 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281957168 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.277196796 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.277456477 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.275929215 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.277271845 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.276392514 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.272949905 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.276291842 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.276706615 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.277298693 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.27716583 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.277239744 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.276596009 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289653193 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.305475704 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.276925098 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.27679788 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.274040539 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.280070489 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.280705746 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289375431 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.28541605 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.277757043 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.276401319 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.278276603 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276278645 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.275129502 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.277580332 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.276989672 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277381604 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.273072241 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.290345077 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.304877684 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.282330633 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.277888418 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277213379 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.278599659 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278326354 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278909535 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279387391 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.280100182 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.28150141 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283728028 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.277964202 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.27787236 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.281705326 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.287560274 seconds)
  done (took 753.512791196 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275986612 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276159064 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275664889 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276685917 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275665472 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275475762 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275611187 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276757235 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.274958593 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274924319 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.276630542 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275517527 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275568954 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275871509 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277472195 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276173033 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274959575 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.277276258 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277430303 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27746943 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275734007 seconds)
  done (took 27.987667195 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.279727759 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.277007945 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277305325 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279936433 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277586135 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.281177979 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.277118961 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281004614 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280780095 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277730658 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.281350894 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281075452 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.277011764 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.277679339 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278678699 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279127831 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.281247498 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278160861 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.280641985 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278780291 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281398839 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.279268136 seconds)
  done (took 29.335579313 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.281919089 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.283634945 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.283870637 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.28089079 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.280992159 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.279714229 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.28230747 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.282576068 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.282613529 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.284794523 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.281608677 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.284187658 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.292176494 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.288941949 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.284033301 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.282403788 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.28249515 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.283020434 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.283432767 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.280377602 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.289389222 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.302209103 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.280223424 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.282694351 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.284230286 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.283294929 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.282937754 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.285030129 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.285856958 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.288848815 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.284682956 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.282894335 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.284310193 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.284893491 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.285986889 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.289593749 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.285089953 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.281108114 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.282705736 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.295002939 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.306371499 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.285340217 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.290746711 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.305950593 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.283987726 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.288562501 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.294191615 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.281484991 seconds)
  done (took 62.917794228 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.907310328 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.939214632 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.913694062 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.993723414 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.955330878 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.971409685 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.973003534 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.950240408 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.961210821 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.934911579 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.920074156 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.911351869 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.931384361 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.935487089 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.919747306 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.945097477 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.927948458 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.957191926 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.973058775 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.987546844 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.934053946 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.947992313 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.988769319 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.97685889 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.93300765 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.999395219 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.94953425 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.946563346 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.983199842 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.003878068 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.972051717 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.964174936 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.972131675 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.911808469 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.930271146 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.932865355 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.978203687 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.981693671 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.949595012 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.983311717 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.949281462 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.990225338 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.940319153 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.9676292 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.946710647 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.970492872 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.92651515 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.982762394 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.944013781 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.927426575 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.914383421 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.916282804 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.934054447 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.963378488 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.940820558 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.91730072 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.985421632 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.008388185 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.001053912 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.951116817 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.96405796 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.986765505 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.990141813 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.004588584 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.987583116 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.98388503 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.986292235 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.014187958 seconds)
  done (took 134.339930084 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290448541 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.290017644 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290423071 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291623081 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.292333807 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.291294508 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.29202416 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.291504885 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291722701 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29095173 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291874729 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291629634 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.291042434 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.290774004 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.290729419 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291496363 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.292666945 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291959101 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292310765 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29079071 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.291186431 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.291702244 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.292243708 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291795621 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292854712 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292604287 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292619887 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292593831 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291291885 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.29223279 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292457273 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.293061351 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.292632085 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292331789 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.293387185 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.293173114 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291399738 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292928942 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.294195362 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.293535073 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293082441 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293305011 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293466376 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.292366109 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.2943816 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293766114 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.293455408 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.293398468 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.293169277 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293654605 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.293256481 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293752504 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2944133 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.293557075 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293646616 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.293320368 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293752901 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.294276265 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294478763 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.294308939 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294889256 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.294508001 seconds)
  done (took 81.342365703 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293739678 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.293663749 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.290896536 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.290785753 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.294444194 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.291671479 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.293717021 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.294756062 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.294394022 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.29585182 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29632024 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292690345 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293521016 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296293584 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.293356834 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294609697 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293464699 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.294238077 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295567766 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293050207 seconds)
  done (took 27.081304276 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.292379488 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29563074 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.292859004 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293466487 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.294558902 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293158084 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.295098811 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296045381 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290591445 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296293554 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297050322 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295877672 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29299675 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.294707673 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295321869 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293967659 seconds)
  done (took 21.91454818 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.294306437 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.296178354 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.296675907 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.29723611 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.293077566 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.292912568 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.296644765 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.29420198 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.294119097 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.297669915 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.297698567 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.297234018 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.2965005 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.298580725 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.294531741 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.296996962 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.295503529 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.295574215 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.296453824 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.2975044 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.295840859 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.294352336 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.298240918 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.297108283 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.296304469 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.296226608 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.295479493 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.295421703 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.294278231 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.298842991 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.296296356 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.29632629 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.295737475 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.295957231 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.299100493 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.29620601 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.29961319 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.29877248 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.299149643 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.297334825 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.29946651 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.297014181 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.299910451 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.299236555 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.296268222 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.299820386 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.296854227 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.297914486 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.296576664 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.297421715 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.298583945 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.301884296 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.299954092 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.300760513 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.300020198 seconds)
  done (took 72.544706212 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.299668128 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.30104487 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.298526967 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.300533949 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.300820281 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.298821166 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.298782291 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.297996383 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298932264 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.30096894 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297589157 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.301601698 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.298683668 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302279658 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297549706 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.3018601 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.298217055 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.299630316 seconds)
  done (took 24.603651993 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.29830602 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.298031922 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.302741611 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.298403638 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.298947768 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.301715425 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2985434 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.301296095 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301430061 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.299171975 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298938021 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.302736588 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301055712 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.302839257 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.300053141 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299883908 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.301461897 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302312083 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.299748006 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.299853676 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.303943997 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302751012 seconds)
  done (took 29.824439281 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.301927322 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.302439246 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.301757919 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.319184819 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.324160541 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.303204201 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.302112518 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.302674809 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.325242481 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.360063129 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.355300428 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.326190365 seconds)
  done (took 17.036034947 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302263943 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304133025 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298839623 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303754181 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303718986 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301097432 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301080519 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300458142 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303826829 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301265588 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301316016 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304209722 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304129164 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301968719 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30329341 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305096809 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301316255 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301196809 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301201011 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306876931 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303420722 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306104687 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302779647 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302623605 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303668751 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30201027 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304388293 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301716075 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30190768 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304665368 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305816949 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302790658 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30458815 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303628183 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30614233 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306094389 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303698477 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306253737 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306395918 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303364381 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306379144 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304252786 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306586991 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304045468 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305290464 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303744935 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304489209 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303321473 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304349111 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306394784 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305953819 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302606294 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30617179 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306579089 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305923159 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306141307 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303897226 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302947588 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306864437 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304232338 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305333633 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306009896 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304297607 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303439535 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306428233 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304708314 seconds)
  done (took 87.276657134 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303099431 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304451989 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30449121 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304961904 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303695028 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304008382 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305381014 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304557243 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304559164 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304456433 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308247052 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305155264 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305136801 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304826142 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30473738 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305206201 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305800377 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305063476 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306198985 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308439692 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306089768 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305476223 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305398661 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306006642 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306300452 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308289537 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305930579 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306492787 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306306608 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304965353 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306373536 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305805187 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30665833 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306460159 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306842287 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306390494 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307914971 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306633798 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306051352 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308831129 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306595936 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310278764 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306243767 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307405629 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308102449 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307489781 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306780022 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305954875 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30796919 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307950407 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308607251 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307593087 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307596633 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30663185 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307590548 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307061001 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307948112 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308196802 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308528565 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309645251 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308454339 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309004533 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30987068 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30740288 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307396897 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308598848 seconds)
  done (took 87.454019951 seconds)
done (took 1810.786327354 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.476995254 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.431541504 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.312162417 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.325899988 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.31203015 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.335102792 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.323070917 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.311367535 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.311801668 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.311472679 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.311458001 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.499063412 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.305967592 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.311415071 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.311300064 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.410095698 seconds)
  done (took 26.820881359 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.342189572 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.318902749 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.445097671 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.336592979 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.341733831 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.528961783 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.377312857 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.31928353 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.513329868 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.366513282 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.308890566 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.342810091 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.317986149 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.307589105 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.338778865 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.527035562 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.60763985 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.329951733 seconds)
  done (took 29.191368447 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.847180427 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.338678345 seconds)
  done (took 5.403430182 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.340158651 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.316815244 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.319143727 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.315788587 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.30808605 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.328552645 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.316039684 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.313784097 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.316449783 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.462781818 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.323194631 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.330063536 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.341340681 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.317954977 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.314224096 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.359189893 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.488403061 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.314944006 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.313794642 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.323473337 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.318211888 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.410951893 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.368067211 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.319106544 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.464290296 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.322723549 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.320195388 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.326195015 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.447074366 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.317981744 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.318095867 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.318221363 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.321379205 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.312334975 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.794468589 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.310074302 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.349148346 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.328708078 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.315717297 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.472121725 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.320668819 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.32779338 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.311993861 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.774663027 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.467571641 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.45390962 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.334785764 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.321635589 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.322536045 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.392737994 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.322807113 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.321827054 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.366622196 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.166907403 seconds)
  done (took 84.657862727 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.316478221 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.31105381 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495927362 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.334808592 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.321475645 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.313058078 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.312011626 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.642260693 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.330061888 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314727971 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.62494221 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.934137275 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.339351763 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.384331298 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.175710442 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.377685091 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.314793956 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.332213537 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.315639895 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.315298233 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894579619 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313891898 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.336570732 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.4071241 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.356218421 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.873576718 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.323567976 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.32531675 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.31726372 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.313288887 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.886468304 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.341963434 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.376530287 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.314053879 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.605960441 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.740109203 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.697294712 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.318944409 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.365125047 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.317608001 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.340192457 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.860296958 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.717801701 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.315257098 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.314131341 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.871941835 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.315233769 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.32713566 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.316341034 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.570815572 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.316474522 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.315428437 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.342836143 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.316031098 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.315270459 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.426648247 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.427065194 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.877820701 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.316835915 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.315633364 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.35907893 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.318368092 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.325574741 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.319423154 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.34112878 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.737845004 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.531379637 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.322955302 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.720844065 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.90061937 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.341235517 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.956968336 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.340925752 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.346448253 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.514932414 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.317336457 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.316711469 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.893605084 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.324867955 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.317020154 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.703096551 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.319300402 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.63036034 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.350631694 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.319403863 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.908536085 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.321371506 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.321066277 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.318315299 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.319395354 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.318484435 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.321010325 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.63469245 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.349348568 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.318667048 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.318640761 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.333670004 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.326584481 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.319462686 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.317822752 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.956129703 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.35331866 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.317518805 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.31928755 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318166816 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.338566955 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.317819634 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.320670934 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.590773439 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.324982914 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.32206913 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.318916126 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.319755024 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.328322076 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.414840121 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.327728101 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.673913534 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.32414019 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.319996985 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.34150898 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319564246 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.394013758 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318925364 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.323392307 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.227367044 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.584936379 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.342878106 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.319944241 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319872839 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.321721147 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.320144964 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.339371838 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.358546984 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.321879867 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.139681099 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.349650021 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.325681743 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.320228424 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.332202176 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.32035834 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.342290112 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.32144874 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.627457233 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.618595396 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.537529751 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.324549313 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.322009078 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.135078415 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.353537321 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.506123571 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.344262601 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.321931193 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.574308505 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.543472164 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.32318278 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.321859648 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.322504917 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.58805357 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.321219841 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.643946264 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.921778509 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.342621814 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.325402805 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.137671929 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.074068638 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.326952647 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.325174557 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.631449308 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.344499075 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.322231998 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.32101471 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.322975254 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.3225282 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.344570987 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.325527226 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.323246379 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.32344757 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.647884519 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.521000871 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.34404299 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.328303583 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.901066568 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.341045994 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324839429 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.347799343 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.327800494 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.324557172 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.386631673 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.329435045 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.333390366 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.326003011 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.329278701 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.916595496 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.328095151 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.325604001 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.521413808 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.081263289 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.348770221 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.325903728 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.343956377 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.234429115 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.921504514 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.363632943 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.69864487 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.329474809 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.367453767 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.325768543 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.398602013 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.920694491 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.330607437 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.345679856 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.048224432 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.349990198 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.74571728 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.326517125 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.327784554 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.002735062 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.350005955 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.327825399 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.326291635 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.352205643 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.628010578 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.326315284 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.354073778 seconds)
  done (took 497.886951998 seconds)
done (took 645.176366171 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.326646987 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.336505213 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.311689196 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.330672189 seconds)
  done (took 10.54415832 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.336152674 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.334008891 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.335622425 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.333974981 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.33555135 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.336759153 seconds)
  done (took 9.252009699 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.329107377 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.33363494 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.328255796 seconds)
  done (took 8.230706476 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.565781987 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.362025091 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.709704324 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.357849096 seconds)
  done (took 9.235312745 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.335064414 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.33638065 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.336718462 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.336665089 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.338084922 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.337961804 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.338610963 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.33728259 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.339434279 seconds)
  done (took 13.275340313 seconds)
done (took 51.774047193 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.667790312 seconds)
    (2/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.330649276 seconds)
    (3/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.40936887 seconds)
    (4/286) benchmarking ("sort", BigInt, false)...
    done (took 2.330266923 seconds)
    (5/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.345468091 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.369982985 seconds)
    (7/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.32177189 seconds)
    (8/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.320300347 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.361403464 seconds)
    (10/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.045868293 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.345161334 seconds)
    (12/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.444483639 seconds)
    (13/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.463322338 seconds)
    (14/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.437297645 seconds)
    (15/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.471980835 seconds)
    (16/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.40719576 seconds)
    (17/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.548661666 seconds)
    (18/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.344816524 seconds)
    (19/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.486469917 seconds)
    (20/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.488504336 seconds)
    (21/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.161518838 seconds)
    (22/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.450126499 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.386091648 seconds)
    (24/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.354488093 seconds)
    (25/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.341054197 seconds)
    (26/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.467946616 seconds)
    (27/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.317843355 seconds)
    (28/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.436724927 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.511906334 seconds)
    (30/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.493035688 seconds)
    (31/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.333599601 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 1.779069818 seconds)
    (33/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.097795222 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.363234879 seconds)
    (35/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.332105185 seconds)
    (36/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.992905565 seconds)
    (37/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.533579703 seconds)
    (38/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.102026631 seconds)
    (39/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.456112344 seconds)
    (40/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.476666619 seconds)
    (41/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.435565683 seconds)
    (42/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.32029673 seconds)
    (43/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.477025203 seconds)
    (44/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.392152572 seconds)
    (45/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.356479299 seconds)
    (46/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.336132042 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.35679899 seconds)
    (48/286) benchmarking ("sort", BigInt, true)...
    done (took 2.332756712 seconds)
    (49/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.364087305 seconds)
    (50/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.38931467 seconds)
    (51/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.347829988 seconds)
    (52/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.046990855 seconds)
    (53/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.35122107 seconds)
    (54/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.339879891 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.343528913 seconds)
    (56/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.33901126 seconds)
    (57/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.055517736 seconds)
    (58/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.35139826 seconds)
    (59/286) benchmarking ("sort", Int8, true)...
    done (took 1.684394492 seconds)
    (60/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.461512359 seconds)
    (61/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.512559058 seconds)
    (62/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.438105815 seconds)
    (63/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.000773711 seconds)
    (64/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.342476945 seconds)
    (65/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.180563381 seconds)
    (66/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.504039266 seconds)
    (67/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.319468685 seconds)
    (68/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.330612543 seconds)
    (69/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.374891343 seconds)
    (70/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.097609388 seconds)
    (71/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.429199702 seconds)
    (72/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.578994001 seconds)
    (73/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.34937755 seconds)
    (74/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.468556836 seconds)
    (75/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.557533314 seconds)
    (76/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.987130303 seconds)
    (77/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.423623278 seconds)
    (78/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.349829708 seconds)
    (79/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.441091062 seconds)
    (80/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.473661667 seconds)
    (81/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.340304471 seconds)
    (82/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.489282235 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 1.568044333 seconds)
    (84/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.356238415 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.464750973 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.394079085 seconds)
    (87/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.345996254 seconds)
    (88/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.420595057 seconds)
    (89/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.322058622 seconds)
    (90/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.426299061 seconds)
    (91/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.356823373 seconds)
    (92/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.326428138 seconds)
    (93/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.348254631 seconds)
    (94/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.711126737 seconds)
    (95/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.990487314 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.39116127 seconds)
    (97/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.356319789 seconds)
    (98/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.379497068 seconds)
    (99/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.345112086 seconds)
    (100/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.419801948 seconds)
    (101/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.373663449 seconds)
    (102/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.527722827 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.380020108 seconds)
    (104/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.344666155 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.461365235 seconds)
    (106/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.35088589 seconds)
    (107/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.445030971 seconds)
    (108/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.442286771 seconds)
    (109/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.418733449 seconds)
    (110/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.527237951 seconds)
    (111/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.40694233 seconds)
    (112/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.500219498 seconds)
    (113/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.388485589 seconds)
    (114/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.347663494 seconds)
    (115/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.347645164 seconds)
    (116/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.632908929 seconds)
    (117/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.348275287 seconds)
    (118/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.360759514 seconds)
    (119/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.390257803 seconds)
    (120/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.378840803 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 1.38179478 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.344402017 seconds)
    (123/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.341541213 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.367999711 seconds)
    (125/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.411636066 seconds)
    (126/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.360868625 seconds)
    (127/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.442340898 seconds)
    (128/286) benchmarking ("sort", Float32, true)...
    done (took 1.933488315 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.438775225 seconds)
    (130/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.322587097 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.367302742 seconds)
    (132/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.262870466 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.475662292 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.379466084 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.351336635 seconds)
    (136/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.370925738 seconds)
    (137/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.35901215 seconds)
    (138/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.35316463 seconds)
    (139/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.544268238 seconds)
    (140/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.527585314 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.459705724 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.352818669 seconds)
    (143/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.340144818 seconds)
    (144/286) benchmarking ("sort", Float64, false)...
    done (took 1.551080045 seconds)
    (145/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.449209124 seconds)
    (146/286) benchmarking ("sort", Float64, true)...
    done (took 1.949660049 seconds)
    (147/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.340578653 seconds)
    (148/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.342636425 seconds)
    (149/286) benchmarking ("sort", Int8, false)...
    done (took 1.53988343 seconds)
    (150/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.326143839 seconds)
    (151/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.374160411 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.391846028 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.348270357 seconds)
    (154/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.369642592 seconds)
    (155/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.359909791 seconds)
    (156/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.578604679 seconds)
    (157/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.425097674 seconds)
    (158/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.353239249 seconds)
    (159/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.00128167 seconds)
    (160/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.357354265 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.422498352 seconds)
    (162/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.481392226 seconds)
    (163/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.422805027 seconds)
    (164/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.233700482 seconds)
    (165/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.455068566 seconds)
    (166/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.329635585 seconds)
    (167/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.399866747 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.522791346 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.452348351 seconds)
    (170/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.422905422 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.357577586 seconds)
    (172/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.417001317 seconds)
    (173/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.366934568 seconds)
    (174/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.409389682 seconds)
    (175/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.361004037 seconds)
    (176/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.365398842 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.349208986 seconds)
    (178/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.116406454 seconds)
    (179/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.132441756 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.481695731 seconds)
    (181/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.062078208 seconds)
    (182/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.406468965 seconds)
    (183/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.344634006 seconds)
    (184/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.40644223 seconds)
    (185/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.34688523 seconds)
    (186/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.291738653 seconds)
    (187/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.44803555 seconds)
    (188/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.495968299 seconds)
    (189/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.454156481 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 1.574178924 seconds)
    (191/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.356942947 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.353814772 seconds)
    (193/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.562794507 seconds)
    (194/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.409308356 seconds)
    (195/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.536293298 seconds)
    (196/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.468726465 seconds)
    (197/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.372487877 seconds)
    (198/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.362093759 seconds)
    (199/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.126073416 seconds)
    (200/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.383645834 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.400139761 seconds)
    (202/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.442624001 seconds)
    (203/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.367829633 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.443280594 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.367017706 seconds)
    (206/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.330335407 seconds)
    (207/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.367402073 seconds)
    (208/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.365294631 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.529997929 seconds)
    (210/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.496678268 seconds)
    (211/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.463055719 seconds)
    (212/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.375780874 seconds)
    (213/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.360040838 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.354331285 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.421769906 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.356490393 seconds)
    (217/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.358774436 seconds)
    (218/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.360708349 seconds)
    (219/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.345263003 seconds)
    (220/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.423898736 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.455061297 seconds)
    (222/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.356841062 seconds)
    (223/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.570084622 seconds)
    (224/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.365091549 seconds)
    (225/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.335263827 seconds)
    (226/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.351082785 seconds)
    (227/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.36078479 seconds)
    (228/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.357709274 seconds)
    (229/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.555464864 seconds)
    (230/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.47788153 seconds)
    (231/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.376481053 seconds)
    (232/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.74059713 seconds)
    (233/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.349242044 seconds)
    (234/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.351533939 seconds)
    (235/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.514949819 seconds)
    (236/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.354998047 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.420698257 seconds)
    (238/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.361840169 seconds)
    (239/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.572919876 seconds)
    (240/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.361635408 seconds)
    (241/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.362179599 seconds)
    (242/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.446198502 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.3888409 seconds)
    (244/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.344842907 seconds)
    (245/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.42910735 seconds)
    (246/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.358682494 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.359536097 seconds)
    (248/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.372615836 seconds)
    (249/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.345925201 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.468715218 seconds)
    (251/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.506559965 seconds)
    (252/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.475997572 seconds)
    (253/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.360702842 seconds)
    (254/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.393623879 seconds)
    (255/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.372657692 seconds)
    (256/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.546462208 seconds)
    (257/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.36626609 seconds)
    (258/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.517033312 seconds)
    (259/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.42662752 seconds)
    (260/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.591277409 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.365931749 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.367235721 seconds)
    (263/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.389933562 seconds)
    (264/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.999214963 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.373054909 seconds)
    (266/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.357340114 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.461900752 seconds)
    (268/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.360876782 seconds)
    (269/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.438052091 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.52670075 seconds)
    (271/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.348552272 seconds)
    (272/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.800881266 seconds)
    (273/286) benchmarking ("sort", Float32, false)...
    done (took 1.524929043 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.379873004 seconds)
    (275/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.005051928 seconds)
    (276/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.413954926 seconds)
    (277/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.509265605 seconds)
    (278/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.536903222 seconds)
    (279/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.561790402 seconds)
    (280/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.37601136 seconds)
    (281/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.125723313 seconds)
    (282/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.138792397 seconds)
    (283/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.020725744 seconds)
    (284/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.442556964 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.376649904 seconds)
    (286/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.370562588 seconds)
  done (took 475.304562797 seconds)
done (took 476.541889767 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.39223624 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.403265256 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.35946982 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.391586523 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.472637314 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.533453376 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.370092028 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.397974663 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.406063252 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.408748396 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.365433044 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.533943774 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.361567937 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.360807742 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.359338246 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.401847959 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.357103285 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.363272568 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.376017808 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.394782879 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.377050935 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.366708023 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.409787488 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.534574091 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.364163607 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.364165054 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.362868323 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.381076261 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.472911207 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.363405383 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.363634125 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.372770313 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.35211071 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.369178391 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.354392223 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.381768016 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.372987798 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.370734995 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.39745737 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.473058901 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.36125545 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.368456536 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.364587939 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.362138494 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.362526762 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.401372862 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.363522229 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.42047982 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402959767 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.407633022 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.352027266 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.376331997 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.372677616 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.365019215 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.373666335 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.361894506 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.420716848 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.408069403 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.38294788 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.408993419 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.353409128 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.37177451 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.403173693 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.379537704 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.371707022 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.355271251 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.360528884 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.403536869 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.363363236 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.36762441 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.352074705 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.372248238 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.365610788 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.378235618 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.397084095 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.35454378 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.362353984 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.362469713 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.370853652 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.362838549 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.410895984 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.406066692 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.414166217 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.363872373 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40524672 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.539698308 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.37551567 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.366059278 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.398853083 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.38437641 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.372781925 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.375556342 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.398727556 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.365370998 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.411759535 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.421794658 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.374188361 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.374511765 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.414873219 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.375572239 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.366850173 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.414040958 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.362246335 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.362613624 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.364319579 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.488177118 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.365714271 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.369641336 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.399210422 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.413163397 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.42456246 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.356711219 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.378300668 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.411405992 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.375417962 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.426017213 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.367122757 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.36710977 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.364142071 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.488278796 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.368688813 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.374894036 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.41202123 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.427694539 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.368926208 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.370756509 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.369234617 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.411835479 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.4901261 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.378475033 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.479917991 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.366197628 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.371063792 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.399277577 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.413322915 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.399623395 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.427252803 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.413234421 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.384306639 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.369030581 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.379498145 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.377595507 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.369754492 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.427494748 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.366795713 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.399838834 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.411352547 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.410951191 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.400484897 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.48931289 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.373614074 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.355926109 seconds)
done (took 228.696719285 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.429296292 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.367755635 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.467459372 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.367641983 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.46949417 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.47174467 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.364186164 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.364791502 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.364429395 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.742560552 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.365241256 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.364918374 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.367355771 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.363826438 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.449903691 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.36765243 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.364855903 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.713867638 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.369077097 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.438495308 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.36905715 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.366611198 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.368066259 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.756049472 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.368870609 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.363741169 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.437250917 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.369719812 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.715536528 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.363195121 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.366713071 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.721748609 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.459420205 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.386723091 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.379087592 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.373531776 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.472894319 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.392179064 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.45141473 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.450820181 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.47091621 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.408473995 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.364999169 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.367975831 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.370666057 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.370382112 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.366591504 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.396807332 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.369634898 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.36635084 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.709774192 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.38055389 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.367750415 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.368240257 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.367025602 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.399706713 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.366544358 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.372159975 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.461932931 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.372441963 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.434317618 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.752413084 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.75661717 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.370504834 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.368217821 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.367860335 seconds)
  done (took 106.846076339 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.438003784 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.446270236 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.49197414 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.392165782 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.424225819 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.496415719 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.39256522 seconds)
  done (took 11.353919273 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.377360249 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.374278522 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.422641169 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.421030962 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.372975763 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.584674423 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.373486461 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.383617126 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.369610372 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.449922314 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.373062119 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.373520925 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.378760184 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.367932538 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.420600421 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.383971505 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.487219497 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.372937222 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.37426073 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.526317607 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370292385 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.378990552 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.446386779 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.386351627 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.375919011 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.380314177 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.327576976 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.373278281 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371280394 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.373043818 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370330651 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.484283648 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.375629496 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.371979198 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371944084 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.533584033 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.373859901 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371436354 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.373581415 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.374721365 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.374489712 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.374792484 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.373950983 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.371242633 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.374812489 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.399969745 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.374313504 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.373385851 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.373730795 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.374935883 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.447637235 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375048511 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.372793541 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.37287291 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.453343865 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.382277297 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.376136823 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.372928219 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.375798661 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.372477469 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.530187475 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.423571518 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.375066893 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.423191849 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375982861 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.376428221 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.376701619 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.375304855 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468309387 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.377312599 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.425966292 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.374097478 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.599729557 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.400888795 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.377336004 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.379587075 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.381757 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.3782355 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.373194689 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.383663898 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.374948183 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.378148932 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.383955648 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373670182 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.374256915 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.561636426 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.532540011 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.373147 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.389342272 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.385043155 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.373840637 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.452767137 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.377151064 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.374044602 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.429252287 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.492966221 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.454866365 seconds)
  done (took 142.17381843 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.383918791 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.386147572 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.382434103 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.400726721 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.381324089 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.379993235 seconds)
  done (took 9.592884569 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.381814608 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.380364747 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.377630005 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.379160551 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.379747821 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.379883318 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.380756048 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381032722 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.384171033 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.378561214 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.381908358 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.380730437 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.382061754 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.379108711 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.380972446 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.3803824 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.381093913 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.376545375 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.379508381 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380871554 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.380334837 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.38073626 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381283515 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.385068264 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.385086168 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.380832366 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.388551557 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.37905775 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.378621691 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.389705296 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.404617212 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.380559629 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.382564484 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.38717227 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.386580477 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.384416001 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386370773 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.382767889 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379264403 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.381056382 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.382501771 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380889529 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.381899143 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.383236684 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.384733075 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.388143822 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.389293819 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.38994957 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.383428192 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.383675367 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.38327576 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.382713193 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.382292162 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.382195269 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.386027415 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.407563669 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.387199748 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.384596977 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.384870803 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.386172106 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.385486934 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.383219028 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.385548531 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.388500887 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.381730748 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.383200083 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.386666127 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.388253559 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386089066 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.383550854 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.384530969 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.381880932 seconds)
  done (took 101.905895632 seconds)
done (took 373.139083143 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.416669939 seconds)
  done (took 3.701435714 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.653472109 seconds)
  done (took 3.938611778 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.380529934 seconds)
  done (took 25.673031019 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.472762958 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.508818415 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.392993488 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.379626823 seconds)
  done (took 11.037642519 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.76152467 seconds)
  done (took 4.045564773 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.377562582 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.395841951 seconds)
  done (took 6.059983983 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.757511797 seconds)
  done (took 4.042151754 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.83353771 seconds)
  done (took 4.12705599 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.399614224 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.391742908 seconds)
  done (took 6.084916465 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.361950423 seconds)
  done (took 3.647178488 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.445929358 seconds)
  done (took 17.732265849 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.381746433 seconds)
  done (took 3.671627312 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.426125528 seconds)
  done (took 3.711342069 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.523777331 seconds)
  done (took 6.809445087 seconds)
done (took 105.564433839 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.379413019 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.383307406 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.38424373 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.380370594 seconds)
  done (took 10.812211915 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.421011074 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.419173256 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.419888542 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.429230067 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.419906498 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.421571095 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.410487018 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.410987515 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.429454216 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.422486048 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.421842082 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.422650425 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.418793012 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.410543464 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.42120831 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.42225568 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.430287007 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.421643264 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.412141787 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.421531901 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.38645815 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.431489573 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.423073969 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.386721816 seconds)
  done (took 35.32206752 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.906178549 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.461584559 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.544062606 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.441688251 seconds)
  done (took 7.641221637 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.447288564 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.455644996 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.467663884 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.503169705 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.53523955 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.464848455 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.41499925 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.408350334 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.39533867 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.456105119 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.519780263 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.448743085 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.550879076 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.388024174 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.584707879 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.388671833 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.387471306 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.465422217 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.504580752 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.516852838 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.387621174 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.449182369 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.470438477 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.44884168 seconds)
  done (took 36.348697483 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.388058025 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.400667338 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.387622581 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.386028915 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.396957988 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.388324919 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.386929282 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.388847206 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.387081575 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.936269626 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.408400403 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.401099377 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.935527383 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.410714214 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.394847639 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.390176073 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.944187716 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.950671333 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.409937995 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.395259172 seconds)
  done (took 31.377324953 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.38235925 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.382855528 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.736582436 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.641245203 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.384226019 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.385884836 seconds)
  done (took 14.203500968 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.474136173 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.651490207 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.392741402 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.832743424 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.899642732 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.391572562 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.392411129 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.675457716 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.060951392 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.056004307 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.463085314 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.472247428 seconds)
  done (took 21.054356712 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.394912457 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.383085481 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.392164289 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.398901174 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.458406598 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.418043301 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.399089511 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.384919733 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.457841259 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.4855968 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.42023876 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.458872819 seconds)
  done (took 22.344013644 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481160654 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3855931 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.405126576 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49046132 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385382394 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.237486269 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.500420822 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.151928391 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.41143005 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662573086 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400788627 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485039994 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.645523138 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403737976 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392991773 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.387039729 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621138422 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95349971 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390357995 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40958464 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425787585 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385209303 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41327982 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.670648671 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393789973 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385881543 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.818067426 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38731635 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.728720509 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407642075 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397665455 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387231749 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661272421 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104141787 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509216814 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643226074 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419891222 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388601021 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.380483334 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.406789443 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399668985 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39005601 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398328726 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388392756 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38900544 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388921138 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168696634 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.416937906 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.387546515 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388867371 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.70882761 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492411926 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.393881725 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38910812 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474448113 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390745033 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.39311489 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.389749252 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975007234 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390498902 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41033634 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.393861232 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411871022 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391593932 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124062649 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.396269842 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.393598279 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394907225 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390838155 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391416985 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412862163 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390706403 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.416154375 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391555467 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.210509132 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393635711 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39785498 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019255814 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39378719 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.396951762 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625344648 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392370043 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392267061 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.389667786 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392020859 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206526332 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400714333 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.375868483 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.410228834 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.161176636 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.673005842 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415801613 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423992859 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618503056 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.375945054 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392484262 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.391809762 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397647084 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414489448 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.164942391 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415770635 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.398033417 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653634115 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.6052666 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403606809 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.382829431 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932596953 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415814315 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.435050506 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400406206 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.656053923 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.094370557 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416739015 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392375201 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416545113 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393794748 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246927668 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416479359 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.499350485 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39511879 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715961119 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.299065728 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395372139 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463897796 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400032376 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395182144 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39447337 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400307351 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394614555 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.643765321 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430131523 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.40995643 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.395596063 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395579598 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.391461735 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402517126 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.402265593 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.621083144 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396221119 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695438842 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395495903 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395174731 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396214551 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.618825616 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.3930506 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.737594588 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661744788 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400802219 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404543367 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411767001 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415762668 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500748753 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418624207 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.402538432 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.659415605 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.399802952 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.40078021 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396094313 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404119357 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403032186 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.403177839 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422145164 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090284525 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376270074 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405256709 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.29245793 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.411565543 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466074179 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403689569 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.657918475 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.400493086 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44620858 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.402917449 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.395006468 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626286728 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408983164 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.3973172 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478795395 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.935200745 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115141987 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418244687 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.398549107 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.395955062 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.397212929 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398812607 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399103771 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398226035 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.65750914 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418618211 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.429429917 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.097888183 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407476563 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399444944 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.41025444 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412530271 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.404693876 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400834588 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.412877117 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399682194 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440874465 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.41602701 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545979651 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.414608889 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400002307 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.918103178 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407492271 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401079746 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401395423 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435427492 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401233984 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285297543 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688635159 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424118563 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.722611917 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406983536 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.421156512 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.399215657 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403893185 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416504999 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.424993019 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41455264 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.412180605 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401168086 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406079097 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981728954 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292953501 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054001859 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408981055 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.436026439 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405274745 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.179810728 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423882088 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402391112 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671419875 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.198179702 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425274276 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943223958 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.422109277 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.295957363 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.724269425 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643144577 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403810863 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.436404293 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.731813011 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621052189 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438811806 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412879191 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408634379 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.388139791 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027070084 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425348799 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486156615 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183130885 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434149143 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409026433 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.523186311 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.41815252 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873960686 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426816498 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40541871 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413095599 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417194431 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288070818 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.433522053 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404143092 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1516188 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410602222 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.969203547 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427741961 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.669997348 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.424656676 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.410092726 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.416093682 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.411070196 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.663989388 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.727533946 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412098064 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404790048 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058583289 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.287022466 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.410643252 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406524949 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266540184 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407455025 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.761508414 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.419138322 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.407251771 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408870492 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407178107 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406768568 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.404657314 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415910779 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379218387 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981100309 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.435255475 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414249917 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421804846 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412600974 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.666540739 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.421419673 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.104594485 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645165862 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434457603 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453944955 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.411793941 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425229216 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.399344686 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408123011 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408144683 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416211071 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634347765 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.408598121 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.393986174 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.531957541 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621121771 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407685904 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.421114373 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702868978 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.411501541 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.435250965 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300999618 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447890216 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.419018594 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41681111 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41574122 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.409980531 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484521154 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670796777 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.425866157 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.421540724 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879433801 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444461739 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416350404 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.423797138 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504781825 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418203827 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.414552938 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.18361879 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105615645 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250444349 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.116547162 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.740360107 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41773672 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419733362 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409354553 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575451772 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411627769 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684762363 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411461377 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.449948202 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435886038 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416320067 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429266858 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628798983 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687297089 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411260639 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413782555 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416326393 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.41075922 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42335041 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.624019615 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988010913 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050827371 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413913313 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.423043893 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.197548641 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709008301 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412146357 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411404295 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412653816 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.422363821 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.454193156 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.420158545 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422371931 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559499511 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.735985083 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147758864 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.446110766 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.439857951 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.186610969 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414271878 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.671141223 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410873003 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.67748719 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121257107 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.259166308 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686411615 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485850767 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676823227 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.417995751 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576092118 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.428025323 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41295581 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414117825 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413735773 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.411730601 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.425486481 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115260311 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688916781 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.418641286 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.428357221 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446043818 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.424909954 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.641615029 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.24763242 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.640409597 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425058063 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419149832 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41492343 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1102335 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.745264761 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422015049 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.419479989 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702949065 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421889772 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438490071 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.932545643 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.413838525 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051274804 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.392731502 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439855687 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429704982 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.257541125 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123367147 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.421501798 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994389315 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416444326 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418219203 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692640382 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.422090874 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417344425 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692074457 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.421123564 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422711152 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675300269 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.10511997 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.315435673 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.427616553 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445473308 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.419900689 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418219536 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.565579337 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417334924 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418121961 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.90571318 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.440907621 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417946033 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43076347 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.414969572 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429379455 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.41576666 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419226082 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.423403777 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.426884524 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.409130269 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438482256 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.42128874 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053033101 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451372805 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.088458769 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.744780135 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.677453143 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.43369285 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.404375575 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.423244808 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420458386 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419756797 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421238018 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.450102684 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056802098 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.43794011 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.429965159 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.423528455 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.637137901 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633427966 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.425847204 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686671254 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427301084 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439402824 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.40490558 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420676216 seconds)
  done (took 1002.094819955 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.462137859 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.465035135 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.473345121 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.48686821 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.469116143 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.563682067 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.446281921 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.47285761 seconds)
  done (took 21.164946759 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.430560938 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.432540415 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.440565964 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.434649929 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.422850375 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.989907908 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.45515078 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.43351119 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.433837962 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.43167651 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.425257881 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.408213639 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.436436352 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.441637301 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.410117984 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.434199596 seconds)
  done (took 33.79417728 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.83327186 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.736177302 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.262476727 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.446448001 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.479984664 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.424388996 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.856569141 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.443827097 seconds)
  done (took 28.810142554 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.434568344 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.434931948 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.435174182 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.43537014 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.435518116 seconds)
  done (took 8.500383736 seconds)
done (took 1274.751525456 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.426113947 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.429301871 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.427411434 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.429864189 seconds)
  done (took 7.038763059 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.409855763 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.409646232 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.41146305 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.423013013 seconds)
  done (took 9.980040296 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.301874085 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.198827543 seconds)
  done (took 5.828173434 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.992571243 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.992424218 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.987426071 seconds)
  done (took 7.30053987 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.738791627 seconds)
  done (took 3.066726374 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.424026575 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.341887593 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.183171027 seconds)
  done (took 8.278031476 seconds)
done (took 42.816703023 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.425675157 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.679393457 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.580993241 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.426437697 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.584349245 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.581799399 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.279423391 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.425497092 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.447997912 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.462543474 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.429693409 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.586768603 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.194886663 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.679587684 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.194233708 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.67774359 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.587394565 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.437644786 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.424730771 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.446137346 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.277563069 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.433600689 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.44003781 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.438675353 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.587843074 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.571035274 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.44319312 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.674917622 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.426063076 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.426399161 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.572918878 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.427143771 seconds)
  done (took 84.600884981 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.441038509 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.426490474 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.447750374 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.447017711 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.460124389 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.426833525 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.449943115 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.450856002 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.447567509 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.426727283 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.44740036 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.457680217 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.442965161 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.428002977 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.425374515 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.449448601 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.43686417 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.427428081 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.450766614 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.427937145 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.429884547 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.449478354 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.435200285 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.42726319 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.428294648 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.430239983 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.451349413 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.428586521 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.428558705 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.4295092 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.429759964 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.454587136 seconds)
  done (took 79.372626431 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.427355491 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.451104528 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.429142097 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.452948431 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.434020541 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.431220971 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.453537895 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.429375474 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.429610594 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.429488782 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.429731971 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.430863964 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.431440974 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.428465849 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.433459368 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.430325311 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.429897521 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.431237426 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.430122992 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.44949474 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.429459002 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.44731697 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.442685152 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.429226098 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.451720272 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.449176723 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.42958161 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.442083166 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.43872993 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.428564568 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.450494635 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.429898886 seconds)
  done (took 79.293348695 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.710763275 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.437143156 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.437241569 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.419422671 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.437920356 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.436791499 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.430203355 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.713958248 seconds)
  done (took 15.355973453 seconds)
done (took 259.947988489 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.431839673 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.436634995 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.656907567 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.459537933 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.429876577 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.48013446 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.45875956 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.686692406 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.451705506 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.686020886 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.452165597 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.476898667 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.430725875 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.477661189 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.743954928 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.599704667 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.424806861 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.431986455 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.821610405 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.458283913 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.728156209 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.447161581 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.749598391 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.437249374 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.432727032 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.44549798 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.443962405 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.412199657 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.481202891 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.821286497 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.443748317 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.419857015 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.533456747 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.559511462 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.677325811 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.617291375 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.445990345 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.538810589 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.677943166 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.44690616 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.432634465 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.252865434 seconds)
  done (took 86.275936081 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.440701639 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.560452995 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.440220532 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.440539917 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.440296397 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.565041218 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.537832958 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.440372423 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.440275812 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.44286293 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.441219891 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.4402798 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.44101514 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.441195654 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.442089006 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.443456152 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.441442076 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.443802132 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.443945453 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.48842371 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.564869189 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.468874555 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.436336573 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.44264354 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.547241568 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.585259383 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.442998009 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.435771642 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.485738796 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.441755923 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.446325724 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.489139513 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.44396749 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.443599052 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.560678141 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.544722584 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.470962962 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.440502005 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.561257312 seconds)
  done (took 58.806263871 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.444723041 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.71940502 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.939233154 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.446724292 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.444768542 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.449976857 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.539268423 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.447852579 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.449243739 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.44978344 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.611300206 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.448657648 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.48382472 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.967786571 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.454512252 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.445848711 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.445832107 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.44785435 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.725882292 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.460375824 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.563557926 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.446588137 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.539911253 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.459102171 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.473116158 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.449131803 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.451978872 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.04961474 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.452663971 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.616832119 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.427822655 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.544649372 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.020407615 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.955995857 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.428181909 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.452183779 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.447981865 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.625771817 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.454923988 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.447932602 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.578204016 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.452907852 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.948409732 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.160172485 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.476312694 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.448843861 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.076609205 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.61923511 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.754953812 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.46382853 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.975745686 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.457158741 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.450395498 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.4536352 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.754327045 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.457516379 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.447841567 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.102364379 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.477983613 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.546946048 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.455315279 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.451358547 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.722748299 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.452833592 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.721179981 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.456063583 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.457906113 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.47512106 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.949426159 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.456794308 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.165574884 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.470253799 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.450674823 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.614086997 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.724403293 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.127123866 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.479387444 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.733599229 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.034368132 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.549014904 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.459276836 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.044906174 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.551274293 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.456993837 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.452756892 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.453465116 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.451015843 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.500085001 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.546239086 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.107292618 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.175641429 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.146362055 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.575074987 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.464240672 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.454255638 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.121935715 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.476923218 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.452112332 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.950402657 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.179424515 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.479917628 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.459614828 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.189570065 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.481187258 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.55157682 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.464521091 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.963678874 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.458827247 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.498300855 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.452254132 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.460518094 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.479731022 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.551151165 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.463758335 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.451944242 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.163464712 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.656187776 seconds)
  done (took 192.772765227 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.449323924 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.446831044 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.449313147 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.448943014 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.446813249 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.455865112 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.446372047 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.44741411 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.453928188 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.444319574 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.454933071 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.448784913 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.449624614 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.45474882 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.459630725 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.456035306 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.449028573 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.4501938 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.448843359 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.449264786 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.448207065 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.453731378 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.449591403 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.449567278 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.448920585 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.449692263 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.457218887 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.452589609 seconds)
  done (took 65.969764556 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.454664922 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.124678421 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.457724618 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.61886126 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.485536467 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.454305275 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.61784661 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.529334743 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.457829031 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.454510053 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.455513606 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.816505576 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.457799888 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.097852177 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.697220185 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.642460016 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.070201328 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.47833952 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.45525671 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.452415751 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.618568272 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.473824996 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.815007601 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.122857167 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.457067966 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.125537583 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.446392466 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.456668386 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.455642576 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.130081642 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.476271243 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.817106011 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.55302783 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.531564756 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.128710199 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.071843388 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.091916564 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.642003012 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.460632765 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.453261566 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.456175731 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.446965087 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.128739869 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.458570594 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.458965958 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.123496815 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.47737873 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.459648406 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.463393395 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.456342122 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.528669816 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.530864792 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.821524723 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.211142309 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.552993117 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.47358264 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.623311024 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.83737091 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.462578367 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.072909246 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.467143891 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.132706264 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.482882846 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.447595852 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.458949786 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.463614657 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.643540699 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.625740011 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.078166892 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.483502078 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.075665637 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.666956075 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.461264462 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.458138835 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.464031157 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.137174306 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.078450432 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.667937669 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.633476524 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.704753536 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.45755267 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.463234573 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.451523338 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.558463854 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.460963057 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.14000303 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.098797341 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.482825351 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.460182421 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.460044824 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.461516504 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.677758474 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.16367606 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.556372605 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.078963926 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.845033972 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.825673906 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.462133427 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.530469652 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.482609568 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.895093321 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.463932136 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.528098516 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.92510346 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.832620856 seconds)
  done (took 176.399719863 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.746233922 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.481656434 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.563234729 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.637587453 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.132692055 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.111041177 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.464035764 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.59383125 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.588303091 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.755431201 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.466687808 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.550715207 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.717135282 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.555434059 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.259763033 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.55004396 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.568938446 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.624994213 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.622593324 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.461876998 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.17265231 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.815564241 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.688317116 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.486792746 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.612511271 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.342524782 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.112861269 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.058567798 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.677206312 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.475425768 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.058465434 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.475856029 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.458117001 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.213867597 seconds)
  done (took 68.456396275 seconds)
done (took 650.01277702 seconds)
SAVING RESULT...
DONE!
