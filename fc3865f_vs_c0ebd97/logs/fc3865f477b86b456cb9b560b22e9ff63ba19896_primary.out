cset: moving following pidspec: 8573
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.2684244 seconds)
loading group "string"... done (took 0.561885415 seconds)
loading group "linalg"... done (took 7.033300362 seconds)
loading group "parallel"... done (took 0.163126309 seconds)
loading group "find"... done (took 1.13107901 seconds)
loading group "tuple"... done (took 1.960152099 seconds)
loading group "dates"... done (took 1.246842796 seconds)
loading group "micro"... done (took 0.232584574 seconds)
loading group "io"... done (took 0.947314163 seconds)
loading group "scalar"... done (took 38.359018519 seconds)
loading group "sparse"... done (took 12.376848385 seconds)
loading group "broadcast"... done (took 0.974266407 seconds)
loading group "union"... done (took 13.253135695 seconds)
loading group "simd"... done (took 4.531882124 seconds)
loading group "random"... done (took 9.121762956 seconds)
loading group "problem"... done (took 1.928818683 seconds)
loading group "array"... done (took 21.756578886 seconds)
loading group "misc"... done (took 1.950741512 seconds)
loading group "sort"... done (took 3.316604891 seconds)
loading group "collection"... done (took 18.483124001 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/10) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.446838072 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.189449479 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.242160126 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.134765831 seconds)
  done (took 1.911474372 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.143564544 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.06272867 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.062368776 seconds)
  done (took 0.983527212 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.370926223 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.248980662 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.217604426 seconds)
  done (took 1.511800899 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288391517 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.223179395 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.425873367 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.275090185 seconds)
  done (took 1.980501175 seconds)
done (took 7.064220402 seconds)
(2/10) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.61501837 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.414254388 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206438924 seconds)
  done (took 1.941479973 seconds)
done (took 2.612368302 seconds)
(3/10) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.899561178 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.234900477 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188510593 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.449728505 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.14712863 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.184848017 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.670651614 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325168351 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208065028 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099744376 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102249966 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.378308156 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.104513413 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672829099 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074843739 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.103950619 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160540367 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.424209102 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080200393 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08154446 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102485353 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140815729 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.09922282 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076211348 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167389363 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070475457 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145610678 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094723621 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066917956 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.2396694 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188029364 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684081286 seconds)
  done (took 10.377880612 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102891697 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.105454001 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06789766 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137872743 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099354435 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085653057 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069912906 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080668683 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089548169 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.156546949 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112031898 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.103451092 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080485221 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081183148 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099030042 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.208698868 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104521536 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.097097434 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070990734 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.073411634 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120790087 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079750603 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092329018 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075134232 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.149997592 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.192454779 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108604909 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110531511 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067561999 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094670004 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.127437831 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126735529 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064698715 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080939704 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.15194829 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094431916 seconds)
  done (took 4.451485493 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.046610172 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.167954387 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.088991717 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150650561 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08666158 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106743696 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082132621 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097985919 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243006058 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.161059523 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.436839533 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127558839 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.1246821 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100825102 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065949965 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084336465 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066435984 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.506879486 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143060746 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.139482839 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082177413 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091338995 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083571294 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366236359 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066438799 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065209213 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084077685 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058417677 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142130463 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066919548 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.196834636 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086201196 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087115727 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116923841 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.175319754 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093548852 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120268809 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083312379 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065980031 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167301983 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072324345 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.106656904 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102827288 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066287247 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116949891 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.103425553 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082211227 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066931639 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177737851 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065328893 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097890603 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.915437083 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.164486106 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065651984 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065137621 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.27969702 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083043645 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082983198 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063564624 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.27682719 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.148113117 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.065866711 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082372828 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065441737 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062494315 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083679175 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374033568 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067121854 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.742771588 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081962129 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077562236 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082671011 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067000719 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071335186 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088149389 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.083534101 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081132967 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068231782 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064964178 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081656489 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067245656 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.099000259 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202329755 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065761822 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082064968 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064340556 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.083739445 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111959929 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082594328 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065608614 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113395607 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068021484 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066653652 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120507791 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065662728 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10118526 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083559897 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11721673 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080079608 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.145146301 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066891947 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108713732 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071261468 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112762315 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.07776807 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.07744052 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066092022 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.150562169 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080659295 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064649254 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065175475 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081336464 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06665231 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084180441 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079644741 seconds)
  done (took 20.860147383 seconds)
done (took 37.410950323 seconds)
(4/10) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.543508916 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.689116188 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.825493848 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.143801494 seconds)
  done (took 2.911458448 seconds)
done (took 3.636005249 seconds)
(5/10) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.074816298 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.077387597 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.093193787 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.075248292 seconds)
  done (took 1.034600152 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.088128182 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.084276636 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074005932 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.068990937 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.089781558 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070500365 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.086646789 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073897097 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.084184832 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071322564 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.069557813 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.085741858 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.072407836 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.086558329 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.068102836 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.086473003 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074728185 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072060083 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.087808469 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.070378542 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.082943377 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.072875133 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.086905085 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069643229 seconds)
  done (took 2.600586132 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083244128 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069127202 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.087228694 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068368499 seconds)
  done (took 1.031656083 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074190899 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.102830409 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.085861822 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.088284457 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088017762 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.097847413 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067120463 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.066189478 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.084064665 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.073636245 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.080044762 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094542412 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.100084659 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.074071208 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.090690639 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064375156 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06512378 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.099683898 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.074588911 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.09073824 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067627912 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08755172 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.065838571 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.099734105 seconds)
  done (took 2.707501196 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085544892 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.11350993 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.075621498 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.100531431 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088638437 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.100687889 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.072874944 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.102368575 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12055386 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.078344839 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067839074 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06264392 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.086515582 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.08737216 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.089322584 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104199552 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.12386613 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065385967 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.109646129 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063052681 seconds)
  done (took 2.524116901 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.082557638 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.076320883 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.078688202 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065404548 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.08862306 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070609152 seconds)
  done (took 1.190687228 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065987242 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064741813 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.079458513 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064595869 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068874211 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.079241558 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.0636358 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064007284 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.080053208 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064170604 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065805856 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.078552833 seconds)
  done (took 1.568539957 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.40889133 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06588839 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.081780372 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063890818 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.084478535 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06386592 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.075639143 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.082072276 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.087225768 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.082569061 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064562002 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.064691921 seconds)
  done (took 1.993727169 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244712013 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082397847 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283643133 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15297604 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126125288 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140777182 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114927882 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1091547 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.172948896 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124244156 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198403883 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181716063 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120650351 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150719351 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102278261 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.127639372 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169006574 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195288118 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116684389 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197749535 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164097684 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143958452 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180441219 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098694584 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120201663 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134848773 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.08484316 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077431162 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202946309 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161369136 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159922434 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123791469 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109407548 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206387492 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201321406 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15554768 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148711422 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097993194 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.119033774 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166051183 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233526027 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085965078 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193669859 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121717702 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077520862 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174490032 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133215677 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.132619684 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.123074407 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086109483 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175009237 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215737952 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.151583181 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100306188 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107332699 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127180382 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.127061395 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115280393 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2144793 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195115069 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1471367 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.084087127 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094762215 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186879267 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14602247 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.127879624 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.139049252 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106041234 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151435565 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187547793 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13344468 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157600025 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.160908957 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086243685 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132917967 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172270007 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142886545 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200186738 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140169673 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071726233 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138657919 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117125785 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094139766 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14053338 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088906907 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195347971 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111693284 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.125486818 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125975785 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121766748 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122012625 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178591062 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178079572 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115662302 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.063744351 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116555509 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.135065436 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160170568 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101682542 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121654469 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132087142 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.090765451 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152505241 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072015211 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138158031 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091764717 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136503086 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146476086 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.08913464 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137538223 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097908676 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.115267081 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1460431 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194727424 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102509559 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079713145 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205466244 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140201994 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.118938102 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158455545 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191135121 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.114192702 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098925771 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181507025 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216869137 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102778369 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180567968 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121004428 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098215131 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.083737705 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15646158 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125755009 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126631012 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080342899 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.138965205 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200004216 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072465785 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109560114 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151877678 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094859483 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09331406 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124958748 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097764632 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.218395066 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.114034172 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.119307549 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15409179 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139079442 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120177467 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138129827 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112120527 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200278208 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102549489 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101444067 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117227038 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.082385564 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.148899778 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174396921 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093596582 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199900162 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.139909877 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11667817 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133905657 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081058692 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154209836 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093125208 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.06840833 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175993835 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125183326 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106974435 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.18727981 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117260189 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.141339039 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.140707592 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147342951 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143315601 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163935098 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120290792 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.085509176 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126896902 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13961903 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.087911942 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089659775 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.096932586 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117603451 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109484702 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081292179 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173615306 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141423607 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09420518 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126274041 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111274243 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180458097 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074612044 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142724444 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.133584956 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108838036 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.187566421 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171360154 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152275388 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113747738 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176892072 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069056479 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087628138 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087561311 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14059614 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097717095 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080350916 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148832713 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166260776 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141538957 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168758085 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107687332 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134051784 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191128998 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068664076 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.131484895 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164150934 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155995914 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.118871584 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103936293 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094878386 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178292203 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122423425 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221389309 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130148327 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139232152 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185322269 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100542355 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097805068 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116387198 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153397438 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120215931 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183017072 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096260558 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103615466 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123686649 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077871135 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116487222 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15782135 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134968196 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150345928 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.130929845 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145324859 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091640689 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130887854 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138818765 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136373876 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06140608 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151228661 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179188445 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109928068 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131098275 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188075484 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077030989 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138575851 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212633021 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176498954 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082559241 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125007196 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136114736 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14403484 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133228988 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17196888 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125771224 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15095153 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124550249 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082851469 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101588504 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094204717 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123154842 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109016574 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.125543516 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.131034459 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.108906938 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145597142 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124930425 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124264509 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132877099 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.111701101 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088833356 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111579164 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211757326 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135764985 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209673706 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101078194 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.183100794 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201159367 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07311391 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094362555 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077072656 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1540898 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099037184 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148820916 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111355884 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118654403 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144670371 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158695943 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11000565 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066314161 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125180849 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14995951 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125129997 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113243079 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.120509576 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197870777 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100271571 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09430945 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139240369 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100801134 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117434578 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207401132 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.076136404 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094781347 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090505836 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078802645 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144007575 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188715425 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.096782431 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.117640932 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133724476 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133793554 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160951399 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099379533 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11205062 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127385012 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164286739 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158729209 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087282705 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127188814 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143040854 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190036714 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12011858 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.108500352 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188551511 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189155872 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198676339 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086160943 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129436523 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132362842 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123885311 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176968672 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08029812 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200976343 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097374196 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15291475 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120131766 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106811645 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14429321 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111008603 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086578768 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182724758 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135227162 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096841713 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077509769 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133018346 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136330205 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121052242 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.089815649 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15434903 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.069852525 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170272837 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185884939 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096391103 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123682312 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109205508 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080174226 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123181646 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117472336 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10100877 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.109518801 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208781437 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.104638243 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166278923 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174957176 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128925049 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15194793 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114615017 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.649659915 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.092727514 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171936232 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132694573 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211751441 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112878823 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133290229 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125174542 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138090212 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176085699 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102233066 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.188303422 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145754174 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.152803796 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077705905 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117566107 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126124781 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.10492538 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120527602 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111401746 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129726159 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.113095634 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.137537758 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159916642 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079661732 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10982743 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174935459 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131684984 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176640886 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155882734 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100451394 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135251811 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155439404 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095751619 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.137488044 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189383147 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122659895 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094850664 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.096171096 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.12009748 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206780916 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071227361 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197229868 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13941052 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12582749 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129718348 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134200331 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148752973 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122655437 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160481855 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092863115 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.127409777 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130725001 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099848364 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.092106279 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103707646 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126712959 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.114827602 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117420928 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.109966714 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187366083 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069078464 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111604785 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118146083 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159503675 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213671142 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.104686926 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079931414 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134051742 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128481298 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.130247637 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159807087 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078942661 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097401454 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079598538 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.118432323 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.126066997 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130495589 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100561136 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1246126 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202737561 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.099427474 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.220602745 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11057994 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121170238 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.066895245 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.094393248 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110363404 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095067942 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122924283 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11301469 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209358969 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09529812 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106557734 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107663065 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071878244 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098685967 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146415939 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125754457 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136378842 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112828539 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062298875 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12444741 seconds)
  done (took 64.555380095 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122732997 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.097471121 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.107977302 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.26100881 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136982645 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.226108108 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.171985462 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212682766 seconds)
  done (took 2.138120024 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.153151442 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.091513436 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.115370821 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.102505602 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064712087 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.116572711 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.279600626 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.095764596 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.064966586 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.086441496 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.121396947 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066980436 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.426404997 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06320586 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.083220624 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076305739 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.065966714 seconds)
  done (took 2.868111875 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.410890979 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.519339363 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.413857143 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.088847657 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.387738206 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.100204989 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.563317273 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136992643 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083390344 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.364651181 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.718330674 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127041149 seconds)
  done (took 15.712557711 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07262742 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068876037 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.096797853 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.079896563 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.085567504 seconds)
  done (took 1.206251119 seconds)
done (took 101.860714226 seconds)
(6/10) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.074111238 seconds)
  done (took 0.868029507 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.337572967 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.051047057 seconds)
  done (took 1.220033826 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080026137 seconds)
  done (took 0.888517663 seconds)
done (took 3.772714426 seconds)
(7/10) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.196549799 seconds)
    (2/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.250062684 seconds)
    (3/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.170931652 seconds)
    (4/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.106793761 seconds)
    (5/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.323970968 seconds)
    (6/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072022024 seconds)
    (7/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.23830296 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.100566865 seconds)
    (9/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073595735 seconds)
    (10/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.08965285 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07641144 seconds)
    (12/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.15608686 seconds)
    (13/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.108193709 seconds)
    (14/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.231265488 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072559405 seconds)
    (16/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075902777 seconds)
    (17/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.250381399 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.173962606 seconds)
    (19/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.16539049 seconds)
    (20/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071177889 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092948478 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.081848671 seconds)
    (23/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.096898153 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.113862049 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.271346133 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.172501777 seconds)
    (27/309) benchmarking ("sort", Int8, false)...
    done (took 0.156831164 seconds)
    (28/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.238292257 seconds)
    (29/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.260378536 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.115831196 seconds)
    (31/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.243397128 seconds)
    (32/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.12923229 seconds)
    (33/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.283699687 seconds)
    (34/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.095009846 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.172286816 seconds)
    (36/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.230311156 seconds)
    (37/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.250116009 seconds)
    (38/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.153399719 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.152063264 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069133999 seconds)
    (41/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.228867126 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.089854545 seconds)
    (43/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.119566263 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.113946513 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.142405222 seconds)
    (46/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.071763159 seconds)
    (47/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.110461246 seconds)
    (48/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.070735635 seconds)
    (49/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.090297158 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.097597925 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.091370969 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089536017 seconds)
    (53/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088689787 seconds)
    (54/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051267546 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.119406286 seconds)
    (56/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.214129868 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07541874 seconds)
    (58/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.233006641 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.084575183 seconds)
    (60/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071825235 seconds)
    (61/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.171495856 seconds)
    (62/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.250571396 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115730829 seconds)
    (64/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.106751425 seconds)
    (65/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073073866 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11712932 seconds)
    (67/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.221600046 seconds)
    (68/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.07112606 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112432216 seconds)
    (70/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.156819403 seconds)
    (71/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.050260322 seconds)
    (72/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.208353496 seconds)
    (73/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.095930347 seconds)
    (74/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.16371876 seconds)
    (75/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.216038112 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.111454428 seconds)
    (77/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.198401846 seconds)
    (78/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074658126 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.090474928 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138153592 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.084256016 seconds)
    (82/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078674566 seconds)
    (83/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.050532964 seconds)
    (84/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.06863478 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092211423 seconds)
    (86/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.231730979 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070868706 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.084082122 seconds)
    (89/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.098323575 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.248711336 seconds)
    (91/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094636633 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064961907 seconds)
    (93/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051082001 seconds)
    (94/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.088448214 seconds)
    (95/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069250618 seconds)
    (96/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.08757926 seconds)
    (97/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.068603471 seconds)
    (98/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.0539132 seconds)
    (99/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.241706426 seconds)
    (100/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079611932 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.063853461 seconds)
    (102/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091835247 seconds)
    (103/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116060432 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.116123017 seconds)
    (105/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.112925475 seconds)
    (106/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071840543 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.16025074 seconds)
    (108/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052556394 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064334715 seconds)
    (110/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.249631846 seconds)
    (111/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074329914 seconds)
    (112/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107860803 seconds)
    (113/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074071732 seconds)
    (114/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092187056 seconds)
    (115/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052593402 seconds)
    (116/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.105351204 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.184130037 seconds)
    (118/309) benchmarking ("sort", Bool, false)...
    done (took 0.150465279 seconds)
    (119/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.091236509 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072748502 seconds)
    (121/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077081428 seconds)
    (122/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.079561227 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.172943097 seconds)
    (124/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094872522 seconds)
    (125/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067685054 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.082144831 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070504559 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.108463813 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085466555 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063699236 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.163075845 seconds)
    (132/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.102038838 seconds)
    (133/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077575697 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.106628834 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072720394 seconds)
    (136/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.241757199 seconds)
    (137/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.096573171 seconds)
    (138/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.077901621 seconds)
    (139/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.221978411 seconds)
    (140/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.085186037 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09222782 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.092781767 seconds)
    (143/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065734857 seconds)
    (144/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.124223191 seconds)
    (145/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060476775 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064830036 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.090353851 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.098895418 seconds)
    (149/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.078962388 seconds)
    (150/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075792913 seconds)
    (151/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.12051647 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086018911 seconds)
    (153/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.127904588 seconds)
    (154/309) benchmarking ("sort", Float64, false)...
    done (took 0.123572948 seconds)
    (155/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.059042731 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094323121 seconds)
    (157/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066033849 seconds)
    (158/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.164658453 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072109408 seconds)
    (160/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.085140063 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087146104 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.081958461 seconds)
    (163/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066265141 seconds)
    (164/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07466721 seconds)
    (165/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.09379439 seconds)
    (166/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.248583295 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094574226 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.079455502 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096571295 seconds)
    (170/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.162396891 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05126857 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.107413174 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.168709742 seconds)
    (174/309) benchmarking ("sort", BigInt, false)...
    done (took 0.199848773 seconds)
    (175/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.069580125 seconds)
    (176/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051044822 seconds)
    (177/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051315549 seconds)
    (178/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.087283191 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.0650277 seconds)
    (180/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05248408 seconds)
    (181/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.232626908 seconds)
    (182/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065018122 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.083389488 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092465652 seconds)
    (185/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.090715382 seconds)
    (186/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051244024 seconds)
    (187/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050684788 seconds)
    (188/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.122429989 seconds)
    (189/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089390255 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.090202852 seconds)
    (191/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071829196 seconds)
    (192/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.082129219 seconds)
    (193/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051556669 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089232934 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.091808934 seconds)
    (196/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066188272 seconds)
    (197/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051800964 seconds)
    (198/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.069409454 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085679972 seconds)
    (200/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.090724682 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06493572 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064030803 seconds)
    (203/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.089884572 seconds)
    (204/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050974049 seconds)
    (205/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050375648 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.082866033 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064419288 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07224651 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.182111526 seconds)
    (210/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050066 seconds)
    (211/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.069828134 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065386343 seconds)
    (213/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.092989562 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078364742 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.107267369 seconds)
    (216/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074663922 seconds)
    (217/309) benchmarking ("sort", Float32, false)...
    done (took 0.144027602 seconds)
    (218/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074923235 seconds)
    (219/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070881134 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.091712875 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065501765 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.193276873 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073872626 seconds)
    (224/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.08535292 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051307299 seconds)
    (226/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06588927 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.084389249 seconds)
    (228/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052290206 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.139092296 seconds)
    (230/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.23472815 seconds)
    (231/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053028192 seconds)
    (232/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050653969 seconds)
    (233/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.050461321 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.089797366 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.1381491 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070382837 seconds)
    (237/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065959233 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08177884 seconds)
    (239/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051055074 seconds)
    (240/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052613612 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.050751071 seconds)
    (242/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.085474341 seconds)
    (243/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052000749 seconds)
    (244/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.085892803 seconds)
    (245/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052112112 seconds)
    (246/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066487539 seconds)
    (247/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061578798 seconds)
    (248/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.11005224 seconds)
    (249/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064711264 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.156801513 seconds)
    (251/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051115972 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.083292732 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131301802 seconds)
    (254/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.120087872 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088170365 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.104325342 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.145090957 seconds)
    (258/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065935786 seconds)
    (259/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051052053 seconds)
    (260/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.070728655 seconds)
    (261/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069393764 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064137887 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.114891977 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070844419 seconds)
    (265/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.184544426 seconds)
    (266/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.061461536 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.084833932 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065212274 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.091884595 seconds)
    (270/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052364043 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05313667 seconds)
    (272/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.087342148 seconds)
    (273/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065172428 seconds)
    (274/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050481955 seconds)
    (275/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051096204 seconds)
    (276/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.091216434 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.09612013 seconds)
    (278/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.116074421 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084534713 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.084125486 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111714938 seconds)
    (282/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.082992503 seconds)
    (283/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067088198 seconds)
    (284/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068385664 seconds)
    (285/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.084756575 seconds)
    (286/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051621213 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071736779 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.139747967 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063294828 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.083476178 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064187276 seconds)
    (292/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050449755 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.103026718 seconds)
    (294/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051185546 seconds)
    (295/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.061127934 seconds)
    (296/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.078873515 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051288033 seconds)
    (298/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051014751 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.087777528 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051702022 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051080654 seconds)
    (302/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072639693 seconds)
    (303/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.08473278 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052031603 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050287547 seconds)
    (306/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.097266302 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070269299 seconds)
    (308/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.070116561 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128134058 seconds)
  done (took 33.424796162 seconds)
done (took 34.226646874 seconds)
(8/10) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.199487619 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183348119 seconds)
  done (took 1.222355228 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097686389 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.115353468 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077268007 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.147576923 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06720363 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118424216 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098495347 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077726395 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.085017457 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069868487 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.083446801 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067792001 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.12961569 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084780971 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066974683 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.0675514 seconds)
  done (took 2.340433905 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10109014 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.183729692 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107141459 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064903357 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097169488 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077207506 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.083107747 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076390472 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089722432 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065275806 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076702971 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094040154 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064474826 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.101283612 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07082911 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.095086661 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064774363 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095443691 seconds)
  done (took 2.45766968 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103611474 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.139059217 seconds)
  done (took 1.090750882 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.195588726 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.120810214 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.194759004 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.412159712 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.200847312 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.272685114 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.169990477 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.169322173 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.152280444 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.16606615 seconds)
  done (took 2.897639873 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09810514 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.166682671 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.324094037 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136533505 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.08600537 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.112783981 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.13661502 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.107197333 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081375232 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099174331 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.098479129 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077436017 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1151509 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074644543 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.092675743 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077241829 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119289049 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072497767 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095037616 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074424566 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115419159 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066182613 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092377073 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073271996 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.095086779 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077224609 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083829387 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066237864 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.09150698 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075265527 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.09628941 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092067909 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099296211 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.126582664 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10058142 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.128529652 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076249007 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090567795 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074867857 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090442317 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07764905 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.095283385 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.082955939 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094579264 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065482716 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.094253565 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066503636 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065497516 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.097264561 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.075832262 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097997008 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.095634181 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.127166298 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.075796556 seconds)
  done (took 6.114667693 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.73448703 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.131280787 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071200285 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.794177262 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109675618 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081145518 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.7029592 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115807798 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.205639074 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.751409158 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.086139091 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097230163 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.195205957 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.210100041 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.897678852 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.255307 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.619941263 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102239094 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126979654 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.127551892 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135750593 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147928876 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142775575 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.403778648 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094603174 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070580852 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131925318 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.095036965 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.134673444 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100852913 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072770605 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.14904113 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.21977768 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.171044392 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073406721 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089107464 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0696652 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.14273359 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232767141 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.183304934 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.135235942 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087948527 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069620074 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134844135 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12633308 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087418611 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.135871886 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.147636353 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.146468955 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091939825 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076011837 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.136273719 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.153259898 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.138898446 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078845929 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.278355689 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.280636011 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069652463 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117587894 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10056765 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.209290824 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100396112 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.172303235 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132646094 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.18143525 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068825092 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.745824129 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.14345698 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068580931 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093359264 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116011355 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07248978 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.153492228 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.121989985 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.380948614 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13674399 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092771827 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069599864 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.196895913 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082628395 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088802811 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.134488831 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074566167 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118075315 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13873807 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156656574 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.141607581 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.201573842 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136969965 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134318605 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092033997 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121293819 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074145905 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.184473983 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.185743247 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.134673384 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.180807887 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.153820668 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.136897752 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.143087131 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075298319 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.164581381 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096773146 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099037268 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134284693 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.18215158 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.1197567 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080960973 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092587235 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135463178 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.122593829 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083438817 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.15479328 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.144299989 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.426321728 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.14013995 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087131462 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084646956 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134828169 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.156073538 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074511269 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.229872567 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099152454 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164793796 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118387948 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067647044 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117443898 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.135639495 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096589498 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098535779 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.154204608 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075683488 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.20934774 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.18265941 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075873723 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.210155016 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.158027034 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07405711 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.143066104 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116250859 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141047205 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095991937 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133894039 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093334769 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.71860291 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137949256 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117379527 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092734065 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161642863 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070030161 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080142606 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101756373 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066517562 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.750615238 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10340215 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077866958 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100975336 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073884256 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118393944 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131545539 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092512883 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.134541291 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.194065964 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074084122 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115418906 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101033071 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.134498854 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.073850697 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101725784 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081178958 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102818053 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12029267 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071929112 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101734886 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.142089226 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.135053169 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.184716701 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.542284276 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.08944453 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081053188 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.193320128 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068992511 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.255019581 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132040954 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.191582917 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.13588411 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098032928 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.263644792 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.137602809 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.161413684 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104095622 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.146878303 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066598306 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.152567591 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.136808627 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069959942 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093088406 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.139783757 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140790248 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138339358 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.935290125 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069768939 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.199104691 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087442861 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.145607647 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093933609 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075658122 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.254567497 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070109577 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141213847 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.156498128 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073117705 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100736246 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.812251428 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081099866 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.155448001 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073951438 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.188110119 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.137264665 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132099127 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133565142 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094762308 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.135010067 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.181219767 seconds)
  done (took 39.519566277 seconds)
done (took 56.491567052 seconds)
(9/10) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.080689501 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110558591 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074315857 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.101378353 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079850646 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096441045 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072182965 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077454591 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.099652632 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081439487 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097147267 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05410953 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.093669506 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073471351 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.093335761 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091349253 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097039845 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072522395 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073087802 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084591948 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073295497 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.084498482 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066957334 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054842732 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.09614176 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072019442 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071151794 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.094060781 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06505654 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.084521128 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068924948 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072417566 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08443049 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077964492 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.090774984 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07303863 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074197744 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.09630719 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066943502 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.084513441 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073445495 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065047264 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.090981706 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072634551 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07017175 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.090866535 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073213705 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098500883 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093486484 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087481787 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073809472 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.096470212 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077611969 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071317355 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089478538 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073648261 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.089293729 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091207521 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.092659391 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067383296 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072741024 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093891537 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070558409 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.092781046 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072829678 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074230308 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095671019 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070519285 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.094056818 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071144292 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064922943 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09289805 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068387624 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064881026 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095467125 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075369046 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084206253 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071181691 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071620325 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09109566 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064659359 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086306703 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067444715 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071232462 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087039086 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055272876 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069353461 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.091701464 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064327418 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072680586 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.091148771 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071541536 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.085730889 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076777146 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064062517 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.090229979 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065592738 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064661562 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.087672418 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06909298 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.083136723 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06779511 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073429736 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.085779155 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070555605 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078263518 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.084991087 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070710974 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.084042475 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064429686 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080355662 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.094155856 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064809354 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087257979 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064649015 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071891297 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.084149042 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064894339 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064813134 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.084927525 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071505644 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.084433378 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070677423 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07225315 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.097958402 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065312024 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068540279 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086854051 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065253352 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070107521 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.08559113 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065242792 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.086197216 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062614597 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067060751 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.085410202 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072489733 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066529232 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.093433502 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066544551 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.092664323 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069472346 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070999232 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.090746925 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065071231 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058521488 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087387769 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067878583 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066259086 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.085789307 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067758042 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.083923334 seconds)
done (took 12.794780606 seconds)
(10/10) benchmarking "collection"...
  (1/1) benchmarking "set operations"...
    (1/21) benchmarking ("Vector", "Int", "union")...
    done (took 0.085002715 seconds)
    (2/21) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.114093381 seconds)
    (3/21) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108502878 seconds)
    (4/21) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.102217758 seconds)
    (5/21) benchmarking ("Set", "Int", "union")...
    done (took 0.068372099 seconds)
    (6/21) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.114104983 seconds)
    (7/21) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072269561 seconds)
    (8/21) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.087098838 seconds)
    (9/21) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.086710206 seconds)
    (10/21) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.10761891 seconds)
    (11/21) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068710315 seconds)
    (12/21) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074059843 seconds)
    (13/21) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.096438026 seconds)
    (14/21) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075945102 seconds)
    (15/21) benchmarking ("BitSet", "Int", "union")...
    done (took 0.085498819 seconds)
    (16/21) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069351351 seconds)
    (17/21) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.087394494 seconds)
    (18/21) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075164897 seconds)
    (19/21) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065953087 seconds)
    (20/21) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.094934543 seconds)
    (21/21) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071650617 seconds)
  done (took 2.75859605 seconds)
done (took 3.631857216 seconds)
RUNNING BENCHMARKS...
(1/10) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.924084157 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.921713787 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.910824028 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.92323505 seconds)
  done (took 24.552149295 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.92601359 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.926545667 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.926454983 seconds)
  done (took 3.652963129 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.06843147 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.922097197 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.923897467 seconds)
  done (took 17.787633389 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.084921465 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 1.832913007 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.185145794 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.38946937 seconds)
  done (took 7.367311814 seconds)
done (took 54.233284082 seconds)
(2/10) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.613859483 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.616078668 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.723971161 seconds)
  done (took 9.824501624 seconds)
done (took 10.694636589 seconds)
(3/10) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 5.90720326 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 5.963171291 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 5.928392998 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.906622131 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.01137528 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 5.936898099 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.437023607 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.136913723 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 5.927824661 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.911622311 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 5.920851713 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.920968987 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 5.9261491 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.508762402 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 5.93044718 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 5.921089737 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 5.984816941 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.414402016 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.241583444 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 5.927357813 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 5.936446724 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 5.940158177 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 5.923894078 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 5.923334245 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 5.989595495 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 5.929047044 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 5.921486563 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 5.941508642 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.369918874 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 5.925442067 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 5.973384496 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.069869423 seconds)
  done (took 181.480026004 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.922035015 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.046064806 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.035572383 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 5.974375845 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.392194869 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.121735291 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.05732428 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.449591395 seconds)
    (9/36) benchmarking "syr!"...
    done (took 5.9365253 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 5.926378577 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.181540401 seconds)
    (12/36) benchmarking "her!"...
    done (took 5.925544124 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.240721183 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.904057063 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.932089622 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.0317194 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.228717257 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.268184594 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.935305093 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.194487415 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 5.939440948 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.198595865 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.124643357 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.17712335 seconds)
    (25/36) benchmarking "symm"...
    done (took 5.952521342 seconds)
    (26/36) benchmarking "herk"...
    done (took 5.988058853 seconds)
    (27/36) benchmarking "syrk"...
    done (took 5.945431946 seconds)
    (28/36) benchmarking "trsm"...
    done (took 5.949984396 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.112122131 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.161139451 seconds)
    (31/36) benchmarking "gemm"...
    done (took 5.967960754 seconds)
    (32/36) benchmarking "symm!"...
    done (took 5.948799061 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.362050249 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.783057223 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 5.934790727 seconds)
    (36/36) benchmarking "trmm"...
    done (took 5.943508291 seconds)
  done (took 140.066131988 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.167281403 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.923706356 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.924084065 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.923412429 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.945668914 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.923184431 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.331171175 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.332844768 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.432152002 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.333980248 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.980384066 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.037596988 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.926906443 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.924577806 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.008527087 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.93641358 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.924488372 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.939338407 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.950710803 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.92389432 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.92325115 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.333896464 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.939413566 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.052142633 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.930157103 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.924261645 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.946891206 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.31010019 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.924569763 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.947323028 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.217720564 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.957702555 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.92472157 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.095660166 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.380773003 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.024611629 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.926053013 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.948103762 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.92451423 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.177475605 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.924858965 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.924393785 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.928551003 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.925904237 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.385218619 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.9272301 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.335868133 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.927815699 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.687911383 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.924888252 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.92553235 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.469697737 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.157881695 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.928336526 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.924823269 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.927289436 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.926584202 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.925299236 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.948441825 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.749132979 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.019865929 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.926204405 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.928490352 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.949105093 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.92545442 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.926084562 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.002727917 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.926178147 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.150862151 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.988721976 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.146869437 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.338693512 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.92887974 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.012217504 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.037308507 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.925735975 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.926914125 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.927183618 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.927335542 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.026034011 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.926620141 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.246153802 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.93231937 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.927709826 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.981233633 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.01269015 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.927212949 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.094711688 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.92902991 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.926733188 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.497518337 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.011220786 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.927391203 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.925695558 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.927571319 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.248935783 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.33637611 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.001040467 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.929961583 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.525501468 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.930436252 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.258430154 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.328438922 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.413607665 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.928872972 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.927521391 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.026820224 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.932737247 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.929764527 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.927812026 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.956113219 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.928502454 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.987473153 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.927824963 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.316634692 seconds)
  done (took 310.987756419 seconds)
done (took 634.572368252 seconds)
(4/10) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 5.998874 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.007145567 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 5.941545062 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 5.93118685 seconds)
  done (took 24.758048292 seconds)
done (took 25.636295524 seconds)
(5/10) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 5.928578506 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 5.933536333 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 5.933187909 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 5.931357173 seconds)
  done (took 24.604787276 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.969831929 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.970865121 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.971203845 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.980558838 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.972447955 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.969680564 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.961886495 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.96313206 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.981028346 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.973736788 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.973048741 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.972186738 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.970773042 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.963151346 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.972860051 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.973063788 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.982197727 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.971801554 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.96342013 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.974445434 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.938395991 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.981851201 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.974063112 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.937937456 seconds)
  done (took 24.144325506 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.135595617 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.008850526 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.090789531 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.988858936 seconds)
  done (took 5.103258509 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.989337723 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.992604121 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.002997175 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.042042107 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.068392897 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.000769123 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.965022431 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.959947004 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.946033091 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.99139734 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.067219996 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.007699594 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.074481185 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.937546095 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.125821109 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.937919855 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.938748793 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.990398656 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.04217813 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.063577638 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.938675678 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.991579558 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.994254092 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.007932438 seconds)
  done (took 24.956937383 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.937463053 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.94735225 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.943954975 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.938333782 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.938273227 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.938231224 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.944461953 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.939144795 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.95950349 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.939074506 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.938072544 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.937193771 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.937430033 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.938266349 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.938552454 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.951166998 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.952532695 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.938160388 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.941329385 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.944501337 seconds)
  done (took 19.724268037 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 5.932230673 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.195012735 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.283456633 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.187726289 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 5.931928781 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 5.934929868 seconds)
  done (took 25.347254392 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.98579191 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.086805366 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.941669418 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.180300155 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.256628428 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.938863172 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.938450673 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.109122296 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.308837239 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.288647398 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.98118116 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.990483799 seconds)
  done (took 13.890109499 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 5.939144796 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.152730911 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 5.938803327 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.950719194 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.977058625 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.946179367 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.946354412 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 5.932953551 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.980964747 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.982396097 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.943708342 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.979228346 seconds)
  done (took 32.554240605 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.02159647 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.984938313 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.655930195 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.717383585 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.313482141 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.145847379 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.775985745 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.321812911 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.939561102 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.208403325 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.794770531 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.036727126 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.189150186 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.941684425 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.939529974 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.720657768 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.162959929 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32428189 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.936471495 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.17374808 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.962863099 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.939064277 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.256293476 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.961950622 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.147997095 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.068981235 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.196840566 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.93624645 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.139313225 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.950270379 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.946464323 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.936098359 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.210706649 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50172652 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.056382827 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.947005218 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.593107312 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.654002633 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 5.923270639 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.177325258 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.600770062 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.940713584 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.947814277 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.936925351 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.870997672 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.937602644 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.327786986 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.943314361 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.64792361 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.935955481 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.948743549 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.031808521 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.940758159 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.754260743 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.00497918 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.938144221 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 5.935605352 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.944423404 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505267218 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.699162014 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.942062215 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.873834733 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.277659572 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.167071797 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472405538 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.042200533 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.941217227 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.941957179 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.8726279 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.180596818 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.956884746 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076963514 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.959561037 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.599640743 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566204622 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.852196676 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.881435701 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409670312 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.944074582 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.875508843 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.167648484 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.939076504 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.875565629 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.887451227 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.872182232 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51491907 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.946585012 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.15278163 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.945759653 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.323219875 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.950733947 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.954811083 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.962530104 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.163633781 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 3.825389895 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.93928509 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.601127926 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069450343 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.961697833 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.322809883 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.875050679 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.943090573 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.19468914 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.151520596 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.943112344 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.737954461 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.098058899 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.93989831 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.959095854 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.949074362 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.952084045 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.430825754 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.95486958 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.686065077 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.958637754 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.940681401 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559286404 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.949020923 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.041915443 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.872857173 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.143917438 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.583476243 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.940522455 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.022446932 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.944879779 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.940979553 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.278895104 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.457170072 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.942532707 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.942230096 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.940628025 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.952707927 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 5.942138394 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.889998034 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 5.938292081 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.899746308 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.944785845 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.165748051 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.944386634 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.218123317 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.875574967 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07988661 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.042747811 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.164874936 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 1.881235295 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 5.940017647 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.198665219 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.947025986 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.949670134 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.955033308 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.960331391 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.040082502 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.963528851 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.943898198 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.197528076 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.944781941 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.945612685 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.296013029 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.946143266 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.949744397 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.948819757 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.776719972 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44085308 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915833769 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.946120832 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.835974212 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.956531439 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.007261334 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.948539714 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.953651219 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.274956391 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.877835987 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.947719089 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 5.940605298 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.166503776 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.954244417 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.291414416 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.026904654 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.099928223 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.444743438 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.959636754 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.877945635 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.655953217 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.636632385 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.942699903 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.879203599 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.944204906 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.95254804 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.954185145 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.540743027 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.435320735 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.94782289 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.208685991 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.951775586 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.95482174 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.949346859 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.944047511 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.250017735 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.714708504 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.950520451 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.956333797 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.086898541 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.958842105 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.878406528 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.948549349 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.948993999 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.944928441 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.944648161 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.976950704 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.203157726 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388395771 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.202884607 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.594974882 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.956304259 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.37635801 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.973948041 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.946550038 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.646573884 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.96622469 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 5.964907983 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.953815437 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.956516758 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.274172231 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.616150982 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511098733 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576036335 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386070929 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688236655 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.947653932 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.949158179 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.337603522 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.880549837 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.512730966 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.086473017 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.337609561 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.895215156 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.103564536 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 1.888544403 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.525875898 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.958294735 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.174149863 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689390046 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.641530372 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.970006276 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.15764722 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.981696335 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.946356945 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.877507246 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.23180065 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.140862704 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.654486623 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.028993371 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.337447813 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.665866136 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.958947968 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 5.945047399 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096294452 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.078392895 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.661535353 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.121455528 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.956836719 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.890906327 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.405730439 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.951354134 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.17204094 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482896162 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.952132041 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.106490874 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.884637003 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.957918627 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.958631895 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.948408146 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.760680213 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 4.758931043 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.215633173 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.958507734 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.881161734 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.947786275 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400962817 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.806419585 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.952696143 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.947968252 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56949626 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.948959304 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.155814541 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.95663023 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.249720602 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.952904771 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.88234447 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.882428648 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.641251415 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.957803945 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918238165 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337452855 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.316997452 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.975923867 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.963669402 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801079427 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.202487464 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.963151746 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.447440075 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.176702446 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.831571093 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.971320616 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.049805837 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.716978982 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.94452658 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.949677562 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.183538073 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.777648909 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.174623704 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.682751872 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.854109975 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.949306356 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.161651827 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.9506173 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.908869024 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.151224832 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.663824349 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 5.954301764 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570034692 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.9749796 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.924272267 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.883669792 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.292108518 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.957437421 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.029627696 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.961508853 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.961593764 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.960741079 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.081931792 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.912270352 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.965220313 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.963819675 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.043840126 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739314379 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.252867754 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.956694072 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.454521767 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605779153 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.44972777 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.965263713 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.951377516 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.952116043 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.884881382 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.09953811 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.176023608 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.224763177 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070354719 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.457167787 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.972846551 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.726426781 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.966136322 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.165017259 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.226364972 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.845382415 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.955340569 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.967647324 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.952081204 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.962995178 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.164310709 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34632112 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408329068 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092971003 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.956693391 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.33828992 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.226650406 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.95242952 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.953077452 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545690838 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 5.964200324 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111842987 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.958352463 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.95825577 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.102896638 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.962654651 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523473919 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.961587221 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.111864045 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.726276814 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.322823095 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.210294947 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270750161 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.964095746 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458680264 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.557526529 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.218652011 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.019729489 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.964087553 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.061985696 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.099150289 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 4.795608706 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.965967862 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.953841307 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802047789 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.663495352 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.963214898 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.452043962 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.224316485 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 5.950808812 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 4.812116635 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.988543379 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.963639917 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.178469234 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539326635 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.179075615 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.963268207 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.963207099 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.774580985 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45377168 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.969428813 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.888684085 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.958026065 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.142998421 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.193162241 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.975231088 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.407195058 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.665567375 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407494396 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.930562547 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.975912881 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.961281775 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.554284349 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.454642712 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.261916165 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346679566 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.522995118 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.954176072 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.231625135 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.960497645 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.964218841 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.232440539 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.958972977 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.964889183 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.968805766 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.457581436 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543578481 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 5.963336502 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265460495 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.894054294 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303097214 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611289905 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.892289248 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.956264173 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.099128489 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.957226189 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077465146 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.968035489 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 4.820722653 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.96920271 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.713349117 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236238449 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.961661134 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 5.957561228 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.767882076 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.962262487 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.964900997 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.150534115 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.961432214 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.631714839 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.310794462 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.210904248 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.965989617 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 5.943612226 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.960978836 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.957373732 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.947760008 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.15864807 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.552840749 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413537823 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.964917082 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.969312617 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.960490154 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.1746665 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.168631405 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.97931495 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.979590098 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.957450067 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.975169954 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 3.862625937 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.464886208 seconds)
  done (took 1357.985507001 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.984782084 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 5.991298418 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 5.994338127 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 5.978905446 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.970068025 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.059057088 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.033302953 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.045039023 seconds)
  done (took 48.961842805 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 5.962190824 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.103684778 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.981600138 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 5.967227583 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.96799545 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 5.964831589 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.299590439 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 5.960949227 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.967392717 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.968035223 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 5.969150422 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 5.958506049 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.46698954 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.971163512 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 5.965030628 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 5.950342734 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.967761285 seconds)
  done (took 58.306277972 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 5.965054454 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.240656996 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 5.994565863 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 5.965043229 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.347508417 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 5.972899892 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.699657303 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 5.988407655 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 5.971805667 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.197513698 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.625222489 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 5.976961387 seconds)
  done (took 78.855216042 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.967760731 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.967091308 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.967885467 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.967800381 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.968021098 seconds)
  done (took 5.747638466 seconds)
done (took 1721.060726383 seconds)
(6/10) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 5.944369176 seconds)
  done (took 6.852997059 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.463007607 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.469191322 seconds)
  done (took 3.8421473 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.248841538 seconds)
  done (took 2.155900996 seconds)
done (took 13.759889696 seconds)
(7/10) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.060235227 seconds)
    (2/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.958920203 seconds)
    (3/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.96345231 seconds)
    (4/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.98724495 seconds)
    (5/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 5.944947869 seconds)
    (6/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.985780432 seconds)
    (7/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.825498361 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.174229196 seconds)
    (9/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.995772159 seconds)
    (10/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.024444962 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.000566639 seconds)
    (12/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.411115934 seconds)
    (13/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.586347744 seconds)
    (14/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.233979391 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.986838574 seconds)
    (16/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.047193155 seconds)
    (17/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.625290825 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 5.961734038 seconds)
    (19/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.135649939 seconds)
    (20/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.987532922 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.308590294 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.627251583 seconds)
    (23/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.050295191 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.033811931 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 5.976991793 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.440074216 seconds)
    (27/309) benchmarking ("sort", Int8, false)...
    done (took 3.964110174 seconds)
    (28/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 5.952676488 seconds)
    (29/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.254134732 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 5.974161686 seconds)
    (31/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.184926128 seconds)
    (32/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.864869018 seconds)
    (33/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.345606562 seconds)
    (34/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 5.960568578 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.982487192 seconds)
    (36/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.173944032 seconds)
    (37/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.994270609 seconds)
    (38/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.219958179 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 5.963193297 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.555712686 seconds)
    (41/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.078599125 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.092877328 seconds)
    (43/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.987684432 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.648110905 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 1.740386353 seconds)
    (46/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.057386613 seconds)
    (47/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 3.918666701 seconds)
    (48/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.987391567 seconds)
    (49/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.976445586 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 5.961078494 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.072689973 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.216726274 seconds)
    (53/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.043960537 seconds)
    (54/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.226351257 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.00976156 seconds)
    (56/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 5.946148469 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 5.973348644 seconds)
    (58/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.948223285 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.021696328 seconds)
    (60/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.988436361 seconds)
    (61/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.232201068 seconds)
    (62/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.161320905 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.06451293 seconds)
    (64/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.971408752 seconds)
    (65/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.971495686 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.51016055 seconds)
    (67/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 5.947320157 seconds)
    (68/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 5.95073961 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.035939711 seconds)
    (70/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.618000586 seconds)
    (71/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.440541524 seconds)
    (72/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.109822886 seconds)
    (73/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.698475864 seconds)
    (74/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 5.95614039 seconds)
    (75/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.380308511 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.838997941 seconds)
    (77/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 5.961130685 seconds)
    (78/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 5.970117726 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.066465047 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 5.962711346 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 4.967467991 seconds)
    (82/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.690745826 seconds)
    (83/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.505147114 seconds)
    (84/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.23310394 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.058030064 seconds)
    (86/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.906348152 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.660372184 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 5.983636956 seconds)
    (89/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.638839589 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.870653736 seconds)
    (91/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.997675535 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.333698967 seconds)
    (93/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.706506763 seconds)
    (94/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.086807285 seconds)
    (95/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.129614642 seconds)
    (96/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.05692361 seconds)
    (97/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.566167773 seconds)
    (98/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.109536712 seconds)
    (99/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.172878367 seconds)
    (100/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.093477652 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.543372332 seconds)
    (102/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.163614271 seconds)
    (103/309) benchmarking ("sort", BigFloat, false)...
    done (took 5.962977331 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.228087604 seconds)
    (105/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.13290378 seconds)
    (106/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.082752323 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 5.96418971 seconds)
    (108/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.229417124 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.046499989 seconds)
    (110/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.637677683 seconds)
    (111/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.064324408 seconds)
    (112/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.98068283 seconds)
    (113/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.064189485 seconds)
    (114/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.991248252 seconds)
    (115/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.834524926 seconds)
    (116/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.547186842 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 5.96527568 seconds)
    (118/309) benchmarking ("sort", Bool, false)...
    done (took 1.471271924 seconds)
    (119/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.988240471 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.224856273 seconds)
    (121/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.623203359 seconds)
    (122/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.91659888 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 5.964680314 seconds)
    (124/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.975300441 seconds)
    (125/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.029220146 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.569784815 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.543680783 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.226133804 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.940811351 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.498760279 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 5.964955838 seconds)
    (132/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.843886678 seconds)
    (133/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.073178111 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.96279391 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.068222862 seconds)
    (136/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.48241818 seconds)
    (137/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.134771003 seconds)
    (138/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.260413945 seconds)
    (139/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.230510524 seconds)
    (140/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.025963602 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.205931516 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.337928178 seconds)
    (143/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 5.978161651 seconds)
    (144/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.922855156 seconds)
    (145/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.088731832 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.580603251 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.992988301 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 5.966012879 seconds)
    (149/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.281595463 seconds)
    (150/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 5.989809633 seconds)
    (151/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 5.964291434 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.246431973 seconds)
    (153/309) benchmarking ("map", abs, BigInt, true)...
    done (took 5.99346986 seconds)
    (154/309) benchmarking ("sort", Float64, false)...
    done (took 5.087215921 seconds)
    (155/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.137780883 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.293682006 seconds)
    (157/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 5.962675341 seconds)
    (158/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.525112471 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.989671107 seconds)
    (160/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.120955719 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.373594421 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.06586665 seconds)
    (163/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 5.976635403 seconds)
    (164/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.032742009 seconds)
    (165/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.057760341 seconds)
    (166/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.246378792 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.720238901 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 5.957266814 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.016410238 seconds)
    (170/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.529960998 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.025713736 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.776170133 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 5.980174335 seconds)
    (174/309) benchmarking ("sort", BigInt, false)...
    done (took 5.967437267 seconds)
    (175/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.285644709 seconds)
    (176/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.388851674 seconds)
    (177/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.243608205 seconds)
    (178/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.032690924 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.348656075 seconds)
    (180/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 5.971969964 seconds)
    (181/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.901660391 seconds)
    (182/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.507907218 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.284530664 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.027632645 seconds)
    (185/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 5.993161813 seconds)
    (186/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.397933789 seconds)
    (187/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.54353606 seconds)
    (188/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.041304405 seconds)
    (189/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 5.972775404 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.996616063 seconds)
    (191/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.045251512 seconds)
    (192/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.559045335 seconds)
    (193/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.269448537 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.838168101 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.012239204 seconds)
    (196/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 5.96802586 seconds)
    (197/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.713477362 seconds)
    (198/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.188554686 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.384349392 seconds)
    (200/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 5.985201021 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.344426499 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.35086041 seconds)
    (203/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.004389263 seconds)
    (204/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.941047367 seconds)
    (205/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.386310632 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.310823729 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.026011095 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.978838737 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.033806739 seconds)
    (210/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.807497575 seconds)
    (211/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 5.964930308 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.718357992 seconds)
    (213/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.05413886 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.082282507 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.974732608 seconds)
    (216/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 5.968842491 seconds)
    (217/309) benchmarking ("sort", Float32, false)...
    done (took 4.903351364 seconds)
    (218/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.019700157 seconds)
    (219/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.995329859 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.186772356 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.722400156 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 5.969321918 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.605965746 seconds)
    (224/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.093830372 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.645327675 seconds)
    (226/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.058234418 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 5.991018992 seconds)
    (228/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.476681336 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 5.988310331 seconds)
    (230/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.164982195 seconds)
    (231/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 5.96438115 seconds)
    (232/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.052190002 seconds)
    (233/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.433506812 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.994749884 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 5.95490476 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.148024705 seconds)
    (237/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.090103303 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.010345796 seconds)
    (239/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.65937827 seconds)
    (240/309) benchmarking ("map", abs, BigInt, false)...
    done (took 5.955854926 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.044345275 seconds)
    (242/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 5.972986807 seconds)
    (243/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.181667253 seconds)
    (244/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 5.987098205 seconds)
    (245/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.457543747 seconds)
    (246/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.058991892 seconds)
    (247/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.268194046 seconds)
    (248/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.987697734 seconds)
    (249/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.012886169 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 5.972933584 seconds)
    (251/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.270606512 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.726496757 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 5.971733414 seconds)
    (254/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.821934061 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 1.77925451 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.014644164 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.08072168 seconds)
    (258/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 5.982042369 seconds)
    (259/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.17606557 seconds)
    (260/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.044336776 seconds)
    (261/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.991364597 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.146238424 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 5.992423306 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.000727208 seconds)
    (265/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 5.981870156 seconds)
    (266/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.829017703 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 5.980560854 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.664062014 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.358383824 seconds)
    (270/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 5.956576991 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 5.980254486 seconds)
    (272/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.037865607 seconds)
    (273/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.053055692 seconds)
    (274/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.35455848 seconds)
    (275/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 5.97049605 seconds)
    (276/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.009241235 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 5.956753647 seconds)
    (278/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.167757045 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.234651431 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.329733693 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.050812812 seconds)
    (282/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.191342377 seconds)
    (283/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.103047355 seconds)
    (284/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.078507293 seconds)
    (285/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 5.998470683 seconds)
    (286/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.480387283 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.057618325 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.996639585 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.055819789 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.520633303 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.089435379 seconds)
    (292/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.256279394 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.718427013 seconds)
    (294/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.169644943 seconds)
    (295/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.473463604 seconds)
    (296/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.299900861 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.019798813 seconds)
    (298/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.409183281 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.018565406 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.036813568 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.410820556 seconds)
    (302/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.999680301 seconds)
    (303/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.018259362 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 5.963187531 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.304996542 seconds)
    (306/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.627067481 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.012444843 seconds)
    (308/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.433927508 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.07258438 seconds)
  done (took 775.629631903 seconds)
done (took 776.537481315 seconds)
(8/10) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.03463705 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.009986246 seconds)
  done (took 12.965306684 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.143416377 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.094084438 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.978584535 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.01052946 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.978456563 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 5.977523048 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 5.990221993 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.979642434 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.979121013 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.979144164 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.980112315 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.166659466 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 5.976957705 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.978582234 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.979923157 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.072707794 seconds)
  done (took 37.195269991 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.002717358 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.985128146 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.071319905 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.998156157 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.002337154 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.130115661 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.030835472 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.983803669 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.114812902 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.016739058 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.217932355 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.003531924 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.984765634 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.854129469 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.997816388 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.130388995 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.183315455 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.222364369 seconds)
  done (took 22.853814616 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.326763678 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.002777654 seconds)
  done (took 8.253667772 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.017278378 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 5.996129399 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 5.976475838 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.010923741 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.017813148 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 5.978191837 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.027258775 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.045015466 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.018885491 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 5.985716834 seconds)
  done (took 61.00482071 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.998907278 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.984759376 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.984699935 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.983134505 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 5.97716293 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 5.976712972 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.982547292 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 5.98054304 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 3.685605568 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.083864576 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.998025266 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.990933802 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.984998819 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.985583819 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.983027698 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.014975809 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.106536729 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.98150151 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.982926654 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.990054894 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.985085918 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.107279507 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.018660245 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.985445258 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.083415839 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 3.693909147 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.989863836 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.991488037 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.090782346 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.983041407 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.984320607 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.985388969 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.985127194 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.529266707 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.428888772 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 5.98813298 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.003209422 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.993303619 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.982654923 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.134980687 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.986511256 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.992177361 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 5.977667918 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.407440756 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.128830423 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.079555402 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.961253855 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.989252693 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.986244897 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.038952348 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.987352634 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.986306076 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.009785815 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.667938488 seconds)
  done (took 89.725642199 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.023807884 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.467906845 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.144525709 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.99868491 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.700509708 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.597005309 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.979589799 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.198017918 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.031834075 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.978263148 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.278141269 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.40893331 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.98761139 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 5.993030633 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.686035386 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 5.978565789 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.98144084 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.670475737 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.98130917 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 5.98245601 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.369081356 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.995457238 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 5.981334963 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.135398286 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.014948601 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.374646296 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.08648727 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.351349778 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 5.984946517 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 5.979485402 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.375307203 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 5.986664909 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.00878636 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.980128465 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.222027086 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.262098205 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.246296264 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 5.984109986 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.010594159 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.982251542 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 5.993920673 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.371146579 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.254586748 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 5.980594692 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 5.980502926 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.37465611 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 5.98143512 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 5.989193444 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 5.981765518 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.174718284 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.970437664 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 5.984255591 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.085520713 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.983533299 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.34339962 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.075110715 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.041420305 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.402292759 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.980343525 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.991237844 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.0096986 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.983828324 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.983076188 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.98525809 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.981600908 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.261221457 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.094612701 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.98242907 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.261433876 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.368575922 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 5.981829892 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.441689505 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.881792908 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 5.988823418 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.049331298 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.981810066 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.478592524 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.402173455 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.985176601 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.982362643 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.244953786 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 5.984434249 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.268794891 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 5.992716896 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.982983142 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.3885631 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.005365285 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.015126212 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.983151535 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.994822113 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.60049508 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.982604355 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.218163446 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.993389329 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.982750141 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 5.982922759 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.007984184 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.983314909 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.983214513 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 5.987883847 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.435025991 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 5.984042809 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.236880991 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.999742511 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.983621466 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.986373737 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 5.983619051 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.983114885 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.194190852 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.421055061 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 5.988430282 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.983047239 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.983214741 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 5.991559462 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.116650968 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.989246884 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.221249142 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.984123814 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.984354828 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.993342569 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.646902119 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.002815838 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.983997133 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.985343022 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.810552635 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.189630691 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 5.998198138 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 5.98447099 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.985182917 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.997228189 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.043162674 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.98481434 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.02819664 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.987352026 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.619918817 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.019846053 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 5.988390513 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.632366364 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.986679359 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.674838583 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.998398985 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.985909017 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.267671186 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.228202687 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.03245635 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 5.985683883 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.984646739 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.596436029 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.026337086 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.128633582 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.999422805 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.030959279 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.181889298 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.374624089 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.987469176 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.575696223 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 5.985081746 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.192724804 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 5.985832141 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.280571433 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.402253074 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 5.986653996 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.990683976 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.614424464 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.643439407 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.608555667 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.985653795 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.28610799 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.993039977 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.432485967 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 5.98699694 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 5.986749792 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.412276922 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.985906665 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.997094849 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 5.986089701 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.987209989 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.122533078 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.158700844 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.720098159 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.988675551 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.378495345 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.006624296 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.997001499 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.991967941 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 5.991345441 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.337718665 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.065270472 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 5.98925436 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.007246015 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 5.987724497 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.995358454 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.395179876 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.9137138 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 5.987811544 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.138328625 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.541601079 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 5.988293705 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 5.989300583 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.605075799 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.287683393 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.427500259 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.045815226 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.227973168 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 5.99633433 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.023216128 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.640809755 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.022789707 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.391984395 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.991754936 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 5.988678312 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.506187527 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 5.989004131 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.332111003 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.988830976 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 5.990482391 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.443352553 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.988417069 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.990838198 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.055132356 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.989772587 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.232525084 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 5.988855303 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.037308333 seconds)
  done (took 1028.925565126 seconds)
done (took 1261.845609331 seconds)
(9/10) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.021522779 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.016914789 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.000267436 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.021251687 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.113479412 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.032044429 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.011681471 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.00340817 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.048164123 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.050128374 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.000298398 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.029785619 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.002343437 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.001153383 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.000855105 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.015309565 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.805830351 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.001993467 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.018754532 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.009968405 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.018258916 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.000659463 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.050576764 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.030416502 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.004793687 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.004496613 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.00499545 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.021232083 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.114269588 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.004432248 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.005147361 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.013964777 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.803950382 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.999870454 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.997729172 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.021872175 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.013227558 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.010661026 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.0062925 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.034207556 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.119455911 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.001792519 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.002913619 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.002964078 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.002584552 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.006876191 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.004045333 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.008575419 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.01609154 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.016069516 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.111646631 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.016842799 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.00664101 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.003569656 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.013115265 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.003111533 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.006005802 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.018430241 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.021382416 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.019136817 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.794595988 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.007202044 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.00572293 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.020641749 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.010910326 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.149715646 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.997839265 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.007903752 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.119228601 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.008844711 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.148282503 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.012250587 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.004803178 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.018141148 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.035959231 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.811170806 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.999055039 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.003653977 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.013763141 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.003068223 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.01434555 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.017594145 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.007744804 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.005150958 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.019305472 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.034414945 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.01485025 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.006198734 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.013280659 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.0244652 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.012755676 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.015713675 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.008724758 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.000528192 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.016157382 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.008838669 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.008326737 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.008197094 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.009757797 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.016542875 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.116466241 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.022237287 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.001919456 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.00189321 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.004862948 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.019288216 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.118385073 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.006585574 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.026708443 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.053397193 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.006711348 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.803542331 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.008951393 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.020707611 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.014909615 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.008771702 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.999834229 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.804360885 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.118973762 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.021696418 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.007639526 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.004909901 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.023381388 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.008344348 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.003269672 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.816549652 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.007528627 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.020549814 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.128188642 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.017344761 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.038624804 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.005689355 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.009899936 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.037024669 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.022664513 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.039144565 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.008643901 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.023073359 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.023071493 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.003488988 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.018321489 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.017168405 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.008242593 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.013395246 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.001500594 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.04067478 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.019649976 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.019129171 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.028438755 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.128471816 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.004999412 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.805157961 seconds)
done (took 170.680754748 seconds)
(10/10) benchmarking "collection"...
  (1/1) benchmarking "set operations"...
    (1/21) benchmarking ("Vector", "Int", "union")...
    done (took 1.360064763 seconds)
    (2/21) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.373430353 seconds)
    (3/21) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.007931387 seconds)
    (4/21) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.136995569 seconds)
    (5/21) benchmarking ("Set", "Int", "union")...
    done (took 1.059868458 seconds)
    (6/21) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.14606426 seconds)
    (7/21) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.37221885 seconds)
    (8/21) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.005652061 seconds)
    (9/21) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.372761768 seconds)
    (10/21) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.374327076 seconds)
    (11/21) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.00621144 seconds)
    (12/21) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.137157136 seconds)
    (13/21) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.141904778 seconds)
    (14/21) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.379122627 seconds)
    (15/21) benchmarking ("BitSet", "Int", "union")...
    done (took 1.004813298 seconds)
    (16/21) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.008346096 seconds)
    (17/21) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.00667188 seconds)
    (18/21) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.377079381 seconds)
    (19/21) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.006106849 seconds)
    (20/21) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.139422674 seconds)
    (21/21) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.144376735 seconds)
  done (took 25.50387516 seconds)
done (took 26.445591833 seconds)
SAVING RESULT...
DONE!
