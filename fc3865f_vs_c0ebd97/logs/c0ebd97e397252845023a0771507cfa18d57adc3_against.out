cset: moving following pidspec: 23103
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.289364797 seconds)
loading group "string"... done (took 0.569488352 seconds)
loading group "linalg"... done (took 7.06263896 seconds)
loading group "parallel"... done (took 0.165838622 seconds)
loading group "find"... done (took 1.146852086 seconds)
loading group "tuple"... done (took 1.987385363 seconds)
loading group "dates"... done (took 1.263244011 seconds)
loading group "micro"... done (took 0.235734393 seconds)
loading group "io"... done (took 0.961803438 seconds)
loading group "scalar"... done (took 39.127800891 seconds)
loading group "sparse"... done (took 12.37619166 seconds)
loading group "broadcast"... done (took 0.973811981 seconds)
loading group "union"... done (took 13.258219419 seconds)
loading group "simd"... done (took 4.540971733 seconds)
loading group "random"... done (took 9.153751505 seconds)
loading group "problem"... done (took 1.958310025 seconds)
loading group "array"... done (took 21.722917667 seconds)
loading group "misc"... done (took 1.947662394 seconds)
loading group "sort"... done (took 3.316834179 seconds)
loading group "collection"... done (took 18.489562238 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/10) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.447781914 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.189232264 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.24315877 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.133011036 seconds)
  done (took 1.90563866 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.143521229 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.062892038 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.063180048 seconds)
  done (took 0.980762389 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.371843064 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.250282742 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.218499205 seconds)
  done (took 1.511092921 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288270821 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.223523007 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.426846289 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.276541341 seconds)
  done (took 1.986773028 seconds)
done (took 7.057679161 seconds)
(2/10) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.618050798 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.416284571 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206384502 seconds)
  done (took 1.948376111 seconds)
done (took 2.6204812 seconds)
(3/10) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.897264443 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.234556799 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18731082 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.450344106 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.146493126 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.184241107 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667348763 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.309637117 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.207646018 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100280247 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103145982 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.378780436 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.104675527 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665724754 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076673126 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.103934989 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.157495368 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.414644798 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079684635 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081535906 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102451913 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.139484013 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.098661378 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.0757586 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.166745719 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068163133 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146082306 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.093817997 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066799037 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.238412285 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188749129 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680681416 seconds)
  done (took 10.330266617 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102937763 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.105117404 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06766264 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138413862 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100082844 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084933306 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07016187 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082555004 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089979716 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.156961305 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.111936299 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104217597 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082992792 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083400543 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102560764 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210961989 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106923093 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099560989 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072117255 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075982146 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123982939 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083145904 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.09497912 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077623197 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.1528259 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194941085 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108307178 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110288359 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068047331 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094531374 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.127610054 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128072801 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064180357 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082481949 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.154074934 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096762032 seconds)
  done (took 4.499721788 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.05187111 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.166545757 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.08981931 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149364122 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086867888 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107950832 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.081597721 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09799357 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243285584 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.103230929 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.435717418 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127282037 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099776378 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067227485 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083034856 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066449385 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.539934457 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108653926 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.153841697 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101026405 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072939857 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084743738 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354794487 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067310695 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065090186 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083700351 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058556592 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143718401 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066621647 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.196196649 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086729025 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086557238 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116307149 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.174640553 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09507295 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120546523 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080697391 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068491346 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166128778 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072367365 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082045522 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087262769 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118797954 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11736466 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068244428 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080876155 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177929921 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065733495 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097724485 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.910608468 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165220331 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096855002 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065704166 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283212845 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101813349 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065735338 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06358274 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.275544192 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.15031702 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.065885397 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.0827403 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06452615 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066067357 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.379404019 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066667032 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.004100025 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068018413 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075298803 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084417724 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066509734 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087799553 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07139689 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100156255 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065880267 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067083316 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082083087 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064481969 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083037748 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091877121 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.100031364 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.201851605 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065262366 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083681997 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063931619 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094903569 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085799829 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066885539 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081509445 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094958013 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115328244 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082102343 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06712819 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.117177239 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069549147 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.099477677 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064398268 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082787175 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113266917 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080538806 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.145792321 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066669133 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069208244 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.11453023 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.084473756 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099949036 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.092149242 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066939745 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.150944819 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063438111 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081211174 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065173564 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080673002 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067295506 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066645895 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096504791 seconds)
  done (took 21.07077987 seconds)
done (took 37.628659308 seconds)
(4/10) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.542154372 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.694400215 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.825489528 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.144011552 seconds)
  done (took 2.917185342 seconds)
done (took 3.640838783 seconds)
(5/10) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.075547648 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.077814727 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.092898235 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.075437328 seconds)
  done (took 1.034911532 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.089104973 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.084218656 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074154717 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.069268872 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.08931918 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070400514 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.087156087 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073653124 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.084184969 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071092347 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.068912283 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.084721384 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.072400407 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.086471298 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.068515179 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.086938673 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.073872351 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071735695 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.087801427 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.069710886 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.082598285 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.072037142 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.086785166 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070321204 seconds)
  done (took 2.598480484 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084326239 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069330336 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.087003273 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069152097 seconds)
  done (took 1.032387659 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075014224 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.102042172 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086180555 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.088923795 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088844887 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.097700982 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06715799 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.065878077 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.08385037 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.073967427 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.079903213 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093798001 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.100088946 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.074233036 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.090335154 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064537679 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065171405 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.09920866 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07372712 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.090555966 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068035539 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.0884362 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.065642859 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.100973154 seconds)
  done (took 2.709397968 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084821089 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.114973052 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07733519 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.103164099 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089030117 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.101899941 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073064352 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.102052356 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121158216 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.07843954 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067887177 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061968644 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.085475182 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.087167175 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.089072766 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104484116 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.124161874 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065676666 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.108534678 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062930433 seconds)
  done (took 2.527986007 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083366406 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.076606197 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.078355778 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065407158 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.087946296 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070850486 seconds)
  done (took 1.191418105 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065943512 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063779184 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.079028563 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064478453 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068198466 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.07944699 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063740925 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.063546677 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.07974257 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064549414 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066566325 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.078538031 seconds)
  done (took 1.567040049 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.398720898 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065856918 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.082654967 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06374336 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.084599364 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064492098 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07604384 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.081690356 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.087506544 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.083236979 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065029361 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.064816503 seconds)
  done (took 1.986733355 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242981974 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082719806 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283984712 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153276531 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125005607 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140171529 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097842905 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124265448 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.172297175 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123597625 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19870392 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180266938 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118894541 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151896741 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10199981 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.127677835 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166560847 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19402567 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115301792 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181958734 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180151383 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144320788 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162574934 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114295395 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120513076 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130194472 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.084978658 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077585274 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203826128 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144124516 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175065892 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124882306 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10624602 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205547856 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178466381 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171007861 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14846194 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080457659 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.135072101 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.150576541 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230020089 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102766682 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192819842 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119991014 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079026949 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156381169 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13030175 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.131537515 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.12119418 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103053969 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173442474 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194877964 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165391739 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083721232 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123402374 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124862578 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.128906058 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114695905 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215665208 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193430627 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147935339 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.068811334 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110078107 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169743372 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161735471 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.128911593 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.139972988 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089041717 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16893959 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171065169 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128735054 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173674723 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.14509723 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102330481 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13337918 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154769197 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138568009 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202884943 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139186174 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.086612084 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137298029 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114190098 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080206985 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.154506932 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073906546 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211705752 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112475972 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.125730768 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108543952 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121406669 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122567001 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193927697 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158555794 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116338281 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.078905793 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099404848 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.13372536 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17479638 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100063658 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104731433 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131084715 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.091290373 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149693175 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.087823231 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137531053 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075007484 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134932371 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162593423 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073473943 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139427938 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115163392 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.113540072 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14736726 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1940017 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08713018 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095099812 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186600898 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155731886 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101921176 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175832469 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172420593 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.114686366 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113711503 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176944367 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218334443 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086349546 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199022101 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117565978 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08099629 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.100473165 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139993542 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12585019 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.143701374 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079876814 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.154794956 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183787065 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.089683663 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108263225 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154089482 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078531984 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094940028 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125176872 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112391823 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.200631279 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.113677589 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.119596283 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151462731 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154356934 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104271752 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153442933 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095679513 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19620365 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103176235 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.115751043 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100232403 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.083736069 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.149523696 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19339357 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077284894 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20060794 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.139477467 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117894797 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133645368 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079852222 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170223129 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076291406 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067483601 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174864746 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124414071 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122884189 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.168339556 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117971443 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.139226469 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.139451536 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144544803 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161702353 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.148752262 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119588023 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.083994121 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127129947 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137650956 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.08890421 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.107349061 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07952137 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116648473 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106886545 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080200799 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172077542 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14118605 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111321967 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126944132 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094552864 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181409661 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073947227 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143665995 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.132383961 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108829031 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.188492408 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17015937 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169061772 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097139703 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178109963 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.067378403 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087816754 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085670899 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157649184 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08094493 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096587409 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13003186 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165995589 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141586482 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166390683 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106858701 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150815067 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174313797 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068013493 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.130831276 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180319938 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139909645 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.118536962 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102374082 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.111607056 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162711008 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118112681 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219625118 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130614427 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138368294 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184402276 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100027341 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098161113 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116424314 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152162642 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11791854 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183171647 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097107595 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103388042 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124351745 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077319757 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116302972 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158061297 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132815809 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150358705 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.13100816 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146846798 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092085959 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129901824 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136914989 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13504602 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.061550172 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132097949 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194980838 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110084901 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131968712 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187611423 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076765294 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.13910081 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211674797 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176199661 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082726185 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121723204 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13568009 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14352007 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132194355 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154065983 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121560694 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167146029 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106852614 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.099716183 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100291011 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094216171 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122667667 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.107863369 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.125408032 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.131769968 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.107961597 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14526611 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124953508 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124006817 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133229996 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.094209053 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.105107503 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111103159 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191535858 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13435139 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206957549 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100595199 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.182886363 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201603056 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073068999 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093124298 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077745169 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154159918 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099579183 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148008511 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109844103 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101659811 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159860976 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158405187 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108878116 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066537526 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123943079 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147466261 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125409127 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112605942 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.119789917 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179781312 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.117497987 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092580609 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139332545 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101334581 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117604252 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208905776 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.05831401 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110695059 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071841833 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09483308 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143665752 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189266261 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079389413 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.134690034 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135589497 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134933842 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143376277 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113374393 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11114399 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127588452 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163805332 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141557838 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104086366 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127103204 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14506634 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190952593 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120345917 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.092190366 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203766136 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188809663 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198653236 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085053279 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130396178 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133379564 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123331987 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175557495 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081400712 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202438178 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078432154 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169301986 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117833235 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106810273 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143832744 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.093089836 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103220612 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182431723 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135829426 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079645029 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094207626 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128409638 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136813181 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116776252 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072485519 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171438795 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071230828 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152321828 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203972184 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095794068 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106876124 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111143156 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095502311 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120255098 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100102517 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101638435 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123644064 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20927167 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088368504 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18549609 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155344305 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127866148 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170597396 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114254185 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.65075767 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076373905 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189846738 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133803147 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213834771 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112516841 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133925635 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108011426 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135350112 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174860187 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11958033 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.190269972 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148319928 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.13667187 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092945391 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100106112 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1243566 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.104248658 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120527749 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130042363 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130385644 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.113788276 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.13916634 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141339632 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.096135007 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09208919 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193736094 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13237582 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156431565 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173938065 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082115756 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133732287 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17556468 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077091223 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.153610046 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173377275 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122072221 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114485835 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077529963 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.11969635 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206539538 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.087715102 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176647945 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139899038 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12529436 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129589051 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.151166914 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149143014 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121344273 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143719751 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109257379 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.127356104 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130571131 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081830847 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.092658834 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120507467 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126853981 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095930899 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11698644 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.125934896 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170498872 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.086705982 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091258161 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117974351 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174825776 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214410551 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086068203 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098755459 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133396091 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129037614 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.130807107 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143563002 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.095951389 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081266687 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.096343801 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.101663642 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.124832508 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130388171 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117382032 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126223344 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184019488 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.101169703 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.234968015 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091704709 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120676418 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.083649529 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077562302 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11062796 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109627197 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10034345 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113110328 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207839427 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.110658463 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.08858315 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107586697 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.070725387 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098835776 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145905607 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12574272 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135945383 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111990718 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.060243313 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122525436 seconds)
  done (took 64.294000839 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123052881 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.09824334 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.108089442 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.260569981 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136538499 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.226284286 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.172227424 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212742811 seconds)
  done (took 2.137004481 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.151995419 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.091196501 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.115553317 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.103624021 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064573164 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.116690667 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.279101029 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.096864446 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.064770802 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.086302513 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.12223895 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066512339 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.423854915 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06288318 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.083570313 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.075322881 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.065103369 seconds)
  done (took 2.862114314 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.411694816 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.514518588 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.413183342 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.089499323 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.355981941 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.100596094 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.525112702 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136119988 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083075786 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.358252516 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.722592484 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129900263 seconds)
  done (took 15.640825414 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072074935 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068829019 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.098336477 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.080777081 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.086216505 seconds)
  done (took 1.210976975 seconds)
done (took 101.520588072 seconds)
(6/10) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.074421621 seconds)
  done (took 0.869354691 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.339143145 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.050645318 seconds)
  done (took 1.222869173 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078891002 seconds)
  done (took 0.887067069 seconds)
done (took 3.778152963 seconds)
(7/10) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.219965399 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.305883654 seconds)
    (3/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.140934049 seconds)
    (4/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.17805429 seconds)
    (5/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.257646474 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070770377 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.185181568 seconds)
    (8/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.089064716 seconds)
    (9/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.314157321 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.095959124 seconds)
    (11/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.165209293 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074776918 seconds)
    (13/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.155967897 seconds)
    (14/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.164174035 seconds)
    (15/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072705877 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.211708911 seconds)
    (17/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.177760037 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.134696657 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.193282192 seconds)
    (20/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.231984263 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.271799022 seconds)
    (22/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060012608 seconds)
    (23/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076231265 seconds)
    (24/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.111551196 seconds)
    (25/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.090145021 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.10460771 seconds)
    (27/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.0933815 seconds)
    (28/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.183319693 seconds)
    (29/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07115313 seconds)
    (30/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.060523382 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.083710237 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.093426008 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.124155042 seconds)
    (34/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.077262385 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.111645824 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.106253383 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087948193 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.209595061 seconds)
    (39/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.233841046 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.090998216 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.140124198 seconds)
    (42/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072519688 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088687283 seconds)
    (44/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.0954973 seconds)
    (45/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.098326992 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.096309773 seconds)
    (47/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.072616113 seconds)
    (48/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.083765512 seconds)
    (49/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06667302 seconds)
    (50/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072406349 seconds)
    (51/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.152284707 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.131520434 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097705107 seconds)
    (54/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.07998651 seconds)
    (55/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.132667921 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.115001583 seconds)
    (57/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.139188327 seconds)
    (58/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073022971 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.111312604 seconds)
    (60/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071819093 seconds)
    (61/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.268056831 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.111047106 seconds)
    (63/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072246707 seconds)
    (64/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.162363709 seconds)
    (65/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075756993 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.140942331 seconds)
    (67/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.104694157 seconds)
    (68/309) benchmarking ("sort", Int8, false)...
    done (took 0.156144222 seconds)
    (69/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.155902237 seconds)
    (70/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.087298715 seconds)
    (71/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075604109 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086265711 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.083322673 seconds)
    (74/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068789737 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.083232588 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065229845 seconds)
    (77/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077805068 seconds)
    (78/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.08612358 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.066334822 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.149260732 seconds)
    (81/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.180072218 seconds)
    (82/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.132204932 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.160877127 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.110755292 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.229805505 seconds)
    (86/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.069812413 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089234449 seconds)
    (88/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06825642 seconds)
    (89/309) benchmarking ("sort", Float32, false)...
    done (took 0.125122393 seconds)
    (90/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.119852238 seconds)
    (91/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061164459 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.061486548 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091626505 seconds)
    (94/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.109805973 seconds)
    (95/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.079411039 seconds)
    (96/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070616409 seconds)
    (97/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067561916 seconds)
    (98/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095197504 seconds)
    (99/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072460726 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.247371671 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088490269 seconds)
    (102/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.088045746 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050957163 seconds)
    (104/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050044259 seconds)
    (105/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.231117741 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.159333164 seconds)
    (107/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.232055384 seconds)
    (108/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.230403207 seconds)
    (109/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.097131705 seconds)
    (110/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.246299175 seconds)
    (111/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.062547056 seconds)
    (112/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.229784792 seconds)
    (113/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064798738 seconds)
    (114/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.069276511 seconds)
    (115/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.240664085 seconds)
    (116/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.239830566 seconds)
    (117/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070184308 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.157082633 seconds)
    (119/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.089440273 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174649834 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.150154738 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.090844251 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.095743893 seconds)
    (124/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084380422 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072102256 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06972728 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.10987345 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.167255508 seconds)
    (129/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.061630426 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069857166 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088331088 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072717544 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.04975011 seconds)
    (134/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.086753295 seconds)
    (135/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079559861 seconds)
    (136/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.094224561 seconds)
    (137/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074899565 seconds)
    (138/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067482758 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.163509465 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.089126534 seconds)
    (141/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074700564 seconds)
    (142/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071635156 seconds)
    (143/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.068962177 seconds)
    (144/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.21204308 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.08436079 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.192306001 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065385018 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071787279 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.069562167 seconds)
    (150/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075086074 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.125220779 seconds)
    (152/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051319898 seconds)
    (153/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.233906056 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065637397 seconds)
    (155/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.094283203 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.135086202 seconds)
    (157/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.104669863 seconds)
    (158/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.117411283 seconds)
    (159/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.088958985 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073545121 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096530225 seconds)
    (162/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.126897104 seconds)
    (163/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075140841 seconds)
    (164/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.087547408 seconds)
    (165/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060261821 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051106867 seconds)
    (167/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.091017855 seconds)
    (168/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066491036 seconds)
    (169/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.049855216 seconds)
    (170/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.164925396 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068731281 seconds)
    (172/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078306336 seconds)
    (173/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066132286 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108965488 seconds)
    (175/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065458567 seconds)
    (176/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.235384342 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.183897919 seconds)
    (178/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076300727 seconds)
    (179/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.171085837 seconds)
    (180/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068159099 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.083319484 seconds)
    (182/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068123692 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070574551 seconds)
    (184/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.083582211 seconds)
    (185/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.10513638 seconds)
    (186/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.081990306 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073499926 seconds)
    (188/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.129398187 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.227308627 seconds)
    (190/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.070717913 seconds)
    (191/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061188571 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.083164282 seconds)
    (193/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.069908453 seconds)
    (194/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075691513 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.102945284 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065945227 seconds)
    (197/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051701041 seconds)
    (198/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068923277 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065518529 seconds)
    (200/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078850372 seconds)
    (201/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.084710378 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06382326 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063486825 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070596039 seconds)
    (205/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071938537 seconds)
    (206/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050696847 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.088049251 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07314866 seconds)
    (209/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.105275364 seconds)
    (210/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053186876 seconds)
    (211/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065756415 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.163019066 seconds)
    (213/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070166198 seconds)
    (214/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.228478989 seconds)
    (215/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.050534357 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.082834195 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073949639 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.090498011 seconds)
    (219/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074391841 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.156198864 seconds)
    (221/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066786573 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.185465032 seconds)
    (223/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.243953215 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163590292 seconds)
    (225/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.102199869 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065730758 seconds)
    (227/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.230271238 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070321481 seconds)
    (229/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091295509 seconds)
    (230/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18669894 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065494196 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063335785 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06902233 seconds)
    (234/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065679734 seconds)
    (235/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052708353 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.156368499 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070499351 seconds)
    (238/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.097382471 seconds)
    (239/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050933884 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.137206178 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052834137 seconds)
    (242/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050776436 seconds)
    (243/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.083872307 seconds)
    (244/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052434799 seconds)
    (245/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.0653534 seconds)
    (246/309) benchmarking ("sort", Float64, false)...
    done (took 0.14443726 seconds)
    (247/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055866227 seconds)
    (248/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05141231 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.070712285 seconds)
    (250/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051402234 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064245253 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.083334217 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094538955 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.082906674 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072000707 seconds)
    (256/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051684771 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069985527 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064369473 seconds)
    (259/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087986199 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.092948589 seconds)
    (261/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071585405 seconds)
    (262/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.068860895 seconds)
    (263/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07085637 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065325101 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121240878 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089813939 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.07181915 seconds)
    (268/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051130031 seconds)
    (269/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.115100015 seconds)
    (270/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.088294141 seconds)
    (271/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05170014 seconds)
    (272/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051832435 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114024566 seconds)
    (274/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051481257 seconds)
    (275/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050810627 seconds)
    (276/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.069828265 seconds)
    (277/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050922718 seconds)
    (278/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.060747155 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.090612556 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051885409 seconds)
    (281/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063994492 seconds)
    (282/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.096791533 seconds)
    (283/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050954018 seconds)
    (284/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066585717 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.082542256 seconds)
    (286/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051061739 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120605227 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063921109 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064988408 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.10231049 seconds)
    (291/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066688092 seconds)
    (292/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063810645 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.083818328 seconds)
    (294/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06561068 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.083370149 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085165685 seconds)
    (297/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071660891 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.088407275 seconds)
    (299/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.185201459 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.133036385 seconds)
    (301/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.090180371 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051173455 seconds)
    (303/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088185739 seconds)
    (304/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.069968654 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07064889 seconds)
    (306/309) benchmarking ("sort", BigInt, false)...
    done (took 0.200556906 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.10523086 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052626151 seconds)
    (309/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051548021 seconds)
  done (took 33.408147276 seconds)
done (took 34.210617712 seconds)
(8/10) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198564298 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182571493 seconds)
  done (took 1.215366977 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097962446 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.115847547 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07722373 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.148190853 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066661667 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.097525766 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118656475 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077317887 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084568496 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069626035 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065036283 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087067855 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131105292 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085030719 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066488974 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.066651204 seconds)
  done (took 2.335270172 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100677585 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.181596029 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106900651 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065077122 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096779948 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077277952 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08337557 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077291571 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089390948 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065379507 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075831431 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092768063 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064227274 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.101398823 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071616179 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096397767 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064481145 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.094961172 seconds)
  done (took 2.450336853 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103606714 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.139385725 seconds)
  done (took 1.085830452 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.194571762 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.120483528 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.194730244 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.410008619 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.200308904 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.271767271 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.16950458 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.168077733 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154135925 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.165738751 seconds)
  done (took 2.889865338 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096768728 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.166496404 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.323086432 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.135295989 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086307129 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.111834675 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.135101504 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.106570555 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081042843 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099737132 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.09771432 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076658487 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.11493161 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074748852 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09225861 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076176646 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.118087444 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072511705 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.094385677 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074120421 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115715335 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065811479 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092511715 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073114711 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.095539843 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077265605 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084188531 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065757042 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.091559969 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074389483 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.095761267 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090904086 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098288245 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.126954662 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.099991928 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.128230241 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077204389 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.089747176 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07492884 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090553122 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.076649393 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.094338865 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.082764281 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094863993 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065012753 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.095024769 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065844636 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064996621 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.096565406 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.075704556 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097670806 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.095118023 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.125986977 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.077312018 seconds)
  done (took 6.094588767 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.734780002 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.131500409 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070931962 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.793893071 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109873639 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081766878 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.700104373 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115999874 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.20532615 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.752973352 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.08651345 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096971066 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.194600154 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.211078542 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.896278729 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.256276534 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.618514583 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10156348 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126924298 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.128207038 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135395247 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147703008 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14141309 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.403631522 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094023072 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069907385 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132573738 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094631702 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.135116296 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.102344907 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072304413 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148648697 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.220105814 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.172971853 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073625067 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08980399 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06953243 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.142726325 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232915408 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.182922203 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.134645383 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088001267 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069568088 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135024663 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126425523 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087774091 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.136747397 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.147879682 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.145532462 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091572776 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07488564 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.136398264 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.154094206 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.137688717 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078740964 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282821927 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.280347498 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069846416 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117716302 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100740953 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.209387859 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100993924 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.172495718 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133579948 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.182732913 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069628799 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.748276025 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.143270945 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068421247 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093365741 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116335321 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074260925 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.154087039 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.121395643 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.381217434 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136614421 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092186921 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069345709 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.197906309 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082343496 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089296467 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.13642523 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074186993 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119285057 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137441163 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.15690311 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.142837493 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.200818176 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138332456 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134955338 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092208958 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120913271 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07471665 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.186646292 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.185929359 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.135845029 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.181690117 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.155790351 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.137892977 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.143561634 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074568356 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.164981689 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096409069 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099196201 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134982719 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.183137848 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.119256959 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081153617 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09200446 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136366518 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.122184263 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083980218 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.156711862 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.143743703 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.427453559 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.141885399 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087506239 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085023998 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135168326 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.155854975 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074858663 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.22990595 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099799146 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164637167 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118064703 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067616002 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117259367 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.135195971 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096655858 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097789564 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.15459515 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075896702 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.209235969 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.183700431 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074799215 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209854409 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.157783534 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073990343 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.143570224 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117509844 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14140778 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09606261 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134242711 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09339381 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.720712826 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139161437 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117367407 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092720386 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161809959 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069443124 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080150116 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101641346 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066450454 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.766468096 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103705297 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078743153 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101995444 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073121989 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118497255 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132974018 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091828323 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.134509729 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.19557505 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074429712 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115500759 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100634067 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.135804946 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.074740233 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101771103 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081900668 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102106243 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119514222 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071118723 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101545221 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.142420899 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.136152141 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.185749878 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.540916967 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090413427 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080603791 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.194623293 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069011251 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.25831144 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13222076 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.19086042 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.135945409 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098450399 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.264320255 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.137127905 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.162314658 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104456555 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.147115518 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067138532 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.153223475 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.13852302 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069955364 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094237722 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.14060198 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139993323 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138000036 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.936371065 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069741456 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.19930166 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08804188 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.14515825 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094116829 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075929514 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.254696376 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070611369 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141357725 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158440977 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073047766 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101481111 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.812323788 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081246223 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.156055232 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07348749 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.187694059 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.138230539 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132176014 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133846003 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094481303 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.134541863 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.181676758 seconds)
  done (took 39.589007566 seconds)
done (took 56.504528291 seconds)
(9/10) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.080292386 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11043019 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074077331 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.100937893 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079554694 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096141826 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072007244 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076954112 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.098756013 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080702248 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097506337 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054319063 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.093695624 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073876166 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.093280112 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091802926 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.096990097 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072417218 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072219002 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08479845 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073444116 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.084646056 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067618056 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05419749 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.096349096 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071715287 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071903521 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093139646 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065154772 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.085142275 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067967251 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071713779 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.084434674 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077899181 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.090557708 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072322832 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074653904 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.094917454 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067213969 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.084745872 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073635345 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064809002 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.091039555 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072689397 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071143033 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.089806372 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072383863 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098064794 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093619778 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087478666 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073136049 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.095890395 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076318906 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071669284 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.088437864 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07350416 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.089712087 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091601444 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.093034658 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067606453 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073252118 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093112901 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070257162 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.091701644 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073332671 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075001225 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095500435 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070766296 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.093571439 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070801361 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064873278 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.092794843 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068651017 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064398422 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095671166 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075829492 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.083044736 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07084536 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071650355 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.090799065 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06464912 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08677058 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067135204 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071586973 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086369542 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054622906 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069165621 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.091432328 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064505911 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073127005 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.090471238 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071616447 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.085937602 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076955253 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064168349 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.089586823 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066055478 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064608777 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.086719112 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069604272 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.083632021 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067887104 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073660959 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.085488156 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070898423 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078315122 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.085383359 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070902349 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.084169224 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064611757 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080357492 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.093830345 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06536262 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087456654 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064973578 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072142974 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085296501 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065768409 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065363511 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.085173921 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070787513 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.083907593 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070449358 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072375438 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.098580661 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065330619 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.0682066 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08704991 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065775729 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069694729 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.084839622 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065314055 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.085989676 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062584662 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066895314 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.084668652 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072522531 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067108099 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.093026726 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066684732 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.093269604 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069512156 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070088786 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.089562206 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064290237 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.057917156 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086580915 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067385035 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066309926 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.084894063 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067597624 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.084012747 seconds)
done (took 12.778236452 seconds)
(10/10) benchmarking "collection"...
  (1/1) benchmarking "set operations"...
    (1/21) benchmarking ("Vector", "Int", "union")...
    done (took 0.085465991 seconds)
    (2/21) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.113193425 seconds)
    (3/21) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108372472 seconds)
    (4/21) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.102130733 seconds)
    (5/21) benchmarking ("Set", "Int", "union")...
    done (took 0.068536922 seconds)
    (6/21) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.114142532 seconds)
    (7/21) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072616949 seconds)
    (8/21) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.087153034 seconds)
    (9/21) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.086849365 seconds)
    (10/21) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.107843747 seconds)
    (11/21) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069210588 seconds)
    (12/21) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074340489 seconds)
    (13/21) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.095816415 seconds)
    (14/21) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076545053 seconds)
    (15/21) benchmarking ("BitSet", "Int", "union")...
    done (took 0.085920721 seconds)
    (16/21) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069947129 seconds)
    (17/21) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.087310742 seconds)
    (18/21) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075199648 seconds)
    (19/21) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065324468 seconds)
    (20/21) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095832739 seconds)
    (21/21) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071532787 seconds)
  done (took 2.759338286 seconds)
done (took 3.630117944 seconds)
RUNNING BENCHMARKS...
(1/10) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.923282555 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.926740644 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.910062048 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.924361833 seconds)
  done (took 24.558129526 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.925698318 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.92432362 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.924853492 seconds)
  done (took 3.646146602 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.038127338 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.921072705 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.918736826 seconds)
  done (took 17.75023038 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.08372408 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 1.827005966 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.184590085 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.388104454 seconds)
  done (took 7.358765287 seconds)
done (took 54.187693864 seconds)
(2/10) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.550673878 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.579903074 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.733214483 seconds)
  done (took 9.733894599 seconds)
done (took 10.60259724 seconds)
(3/10) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 5.939703745 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 5.938918427 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 5.919084805 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.907758622 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.009638428 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 5.947132106 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.156832103 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 5.918826739 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 5.918585354 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.90877359 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 5.921094024 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.919434153 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 5.932855841 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.169061909 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 5.921965832 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 5.923507229 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 5.920552902 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.414063553 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.241510185 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 5.933223389 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 5.950744841 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 5.928091988 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 5.929272247 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 5.923824678 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 5.937892684 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 5.929160652 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 5.920392042 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 5.946182432 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.358196393 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 5.928791811 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 5.972931187 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.354828627 seconds)
  done (took 179.813681613 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.921336959 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.83321744 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.93485607 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 5.938723034 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.262600002 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.119184194 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.034901881 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.343424559 seconds)
    (9/36) benchmarking "syr!"...
    done (took 5.932485615 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 5.949334767 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.134517402 seconds)
    (12/36) benchmarking "her!"...
    done (took 5.92416458 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.172751453 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.909567732 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.930650863 seconds)
    (16/36) benchmarking "herk!"...
    done (took 5.990879516 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.205177251 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.17575652 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.933434116 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.19400458 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 5.921765185 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.11801322 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.03258717 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.094974781 seconds)
    (25/36) benchmarking "symm"...
    done (took 5.947138528 seconds)
    (26/36) benchmarking "herk"...
    done (took 5.953977254 seconds)
    (27/36) benchmarking "syrk"...
    done (took 5.954757627 seconds)
    (28/36) benchmarking "trsm"...
    done (took 5.941830229 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.111158266 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.166659776 seconds)
    (31/36) benchmarking "gemm"...
    done (took 5.957746885 seconds)
    (32/36) benchmarking "symm!"...
    done (took 5.943871298 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.360676172 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.785809766 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 5.92992084 seconds)
    (36/36) benchmarking "trmm"...
    done (took 5.923285248 seconds)
  done (took 138.857105304 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.162351759 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.922484312 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.922627 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.922587808 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.945380713 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.925486643 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.33172856 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.333952048 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.4090196 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.272942167 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.978623492 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.027094428 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.924807689 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.007445152 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.935121442 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.923594923 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.938609815 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.950252246 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.923450059 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.923616248 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.332564473 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.938518578 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 20.981838195 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.929796383 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.923880687 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.947397643 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.310122754 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.923892132 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.945851817 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.217762106 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.957262607 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.923840666 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.093454165 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.429979009 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.028640064 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.924960071 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.947503582 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.92437346 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.175181884 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.923930904 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.924122092 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.927381944 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.385478019 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.926189007 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.334269991 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.92368351 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.69547017 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.925679743 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.924725703 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.059027715 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.149666504 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.924319367 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.924846087 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.928140469 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.92526804 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.924688616 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.949054754 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.015555205 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.01659298 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.927704071 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.927666224 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.947843564 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.924807274 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 20.933085659 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.925477929 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.169920573 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.983917712 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.03852856 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.336449253 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.924091532 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.011431358 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.036244023 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.926540705 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.924426047 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.926206997 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.925505649 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.024883795 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.925458033 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.925805864 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.237973244 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.932522301 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.926914486 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.98190847 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.010462379 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.926687915 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.925638098 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.927380033 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.92721505 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.090773212 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.488396124 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.011393717 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.926210847 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.926914346 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.926790585 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.241182121 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.926741797 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.336870509 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 5.968805609 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.92979695 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.065299064 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.929965108 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.926940822 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.253754562 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.325881716 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.390079496 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.926448262 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.024636146 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.931348694 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.927697901 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.926698751 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.955240501 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.927819724 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.985299777 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.92661085 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.315919139 seconds)
  done (took 308.939077468 seconds)
done (took 629.641489168 seconds)
(4/10) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 5.988660612 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 5.975056733 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 5.934878005 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 5.936688187 seconds)
  done (took 24.712632057 seconds)
done (took 25.588978047 seconds)
(5/10) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 5.92775531 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 5.932552177 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 5.929676668 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 5.930545251 seconds)
  done (took 24.598779829 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.971106002 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.970138348 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.970967422 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.979757103 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.972879075 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.969897271 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.963224663 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.963043139 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.98154788 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.973626837 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.971787153 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.972285371 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.969838896 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.962351627 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.972485694 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.971284424 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.984244401 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.971351332 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.962624552 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.973037035 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.936672393 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.981401921 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.973153614 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.936784927 seconds)
  done (took 24.133936211 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.133940881 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.008577823 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.09102865 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.988791783 seconds)
  done (took 5.101134213 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.988150671 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.990445176 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.003178189 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.040875718 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.113946214 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.999631021 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.964676066 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.958296457 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.945036798 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.991052766 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.065244453 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.006197156 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.079816525 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.937474191 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.126300167 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.937562293 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.937034992 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.990012045 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.041607848 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.057306665 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.937447642 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.989325662 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.993940624 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.006850526 seconds)
  done (took 24.982093529 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.936059001 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.945204398 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.94326664 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.93561332 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.936751943 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.936867912 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.943544326 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.93759106 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.958129423 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.93917001 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.936248918 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.93685047 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.938593737 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.937721965 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.937513158 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.949831417 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.952212211 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.938473834 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.941212394 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.943337974 seconds)
  done (took 19.705214728 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 5.932226648 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 3.7845823 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.282241135 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.187031601 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 5.931086161 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 5.932446712 seconds)
  done (took 24.93100414 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.985061168 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.086216802 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.939750757 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.179830739 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.257001803 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.942248647 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.940234093 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.109963293 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.305156359 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.291907272 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.980965893 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.989340304 seconds)
  done (took 13.892814974 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 5.931267618 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.149988587 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 5.939031683 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.949686172 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.976057528 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.94418412 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.945545313 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 5.932582296 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.980848113 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.982542167 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.943686247 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.978755287 seconds)
  done (took 32.535210966 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.020202725 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982455489 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.667359005 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.717259772 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.654857905 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.1463329 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.77369715 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.319823733 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.939806496 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.208058003 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.755890954 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.035871183 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.189670421 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.935584084 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.937103171 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.746511448 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.161560799 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324498387 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.939658669 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157470398 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.962746976 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.935514769 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.217507231 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.961260532 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.146645437 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.917375997 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.195765848 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.70984813 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.136984321 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.948917522 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.945078169 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.93562293 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.208959485 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533601529 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.034388098 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.946308291 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.592821383 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.479030041 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 5.932617466 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.13805084 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.549811587 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.941739619 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.945870203 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.935958499 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.869984863 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.943064928 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.328481071 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.942429907 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.647838173 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.93621978 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.94729524 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.031249029 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.941018609 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.510086202 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.949222783 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.942387415 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 5.933523942 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.942311021 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509491196 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.643890871 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.941224903 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.88506844 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.263442755 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.215689494 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473042067 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.040783269 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.940425382 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.940433449 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.870864563 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.195960428 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.957239251 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075563395 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.963102736 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.598438115 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5604578 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.792214914 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.881810256 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395969451 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.947967687 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.875945375 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.167393893 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.712481657 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.875608922 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.883350905 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.87238079 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520509947 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.948132681 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.166922076 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.945525495 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.326972323 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.951016424 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.954526049 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.961762111 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.163039308 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 3.821749742 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.937795298 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.561559532 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068074036 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.960221339 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.327455839 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.876146555 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.94291695 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.196374549 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.150222409 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.939472986 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.750297716 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.10254092 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.945132644 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.956722678 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.939080881 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.951484992 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.42441253 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.953918513 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.629671289 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.960146215 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.715197142 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562322707 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.943458566 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.041970906 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.80803193 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.149107508 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.599020032 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.82889984 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.007125986 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.941739789 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.94116182 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.240967574 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.792923712 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.835243883 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.941953992 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.941796976 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.953028479 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 5.940077959 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.889136114 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 5.938789957 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.837008117 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.719247191 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.165218947 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.942298969 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.218109104 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.873528513 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07786743 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.956040055 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.165122591 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 1.902534251 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 5.941970354 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.199596462 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.943071124 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.941362093 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.95478902 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.958900492 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.037853214 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.962735168 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.94481743 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.197550289 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.944718918 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.944104478 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.240391387 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.7228236 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.945003054 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.947250521 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.785016715 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.432616493 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911570716 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.95102112 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.833127989 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.955676681 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.007819772 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.947512664 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.952733888 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.266175813 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.854413007 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.948698146 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 5.942515098 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.168111981 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.953177203 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.237597309 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.023631999 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.099971157 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.439835905 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.957854598 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.877577074 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.653744788 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.635524712 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.94291302 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.130969874 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.943327048 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.952321221 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.953191825 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.515891894 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.431617036 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.947507959 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.162864178 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.951362149 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.952573031 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.948547525 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.943314628 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.240192382 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.665270685 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.949830139 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.95607054 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.086494669 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.956532657 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.876435451 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.460643806 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.948409444 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.943959227 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.717049339 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.978384071 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.162278581 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387825904 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.203004057 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.576938321 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.958267291 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.255653763 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.975095932 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.941708909 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.606264862 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.966254138 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 5.962820792 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.953920634 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.955453918 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.175932101 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394580789 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514567022 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565813632 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383612283 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.69530104 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.957232636 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.843867866 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.339341123 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.87943627 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.60487249 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.085546175 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.343562798 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.897319116 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.105085119 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 1.894780501 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.522844099 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.955206172 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.174194514 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.714458186 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.639671477 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.967967108 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.156784298 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.980390947 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.948636506 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.876676018 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.248402088 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.138739448 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.629186012 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.02794723 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.340831428 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.619817416 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.74032429 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 5.944684547 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104246584 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.082450051 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.494667657 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.336454505 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.955396994 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.851887049 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399094966 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.956332581 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.471148497 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481655664 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.952871306 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.108448991 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.888515203 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.957370872 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.957284433 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.94677213 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.755796482 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 4.73737269 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.215484165 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.957608303 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.881405115 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.950365672 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387624598 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.807895974 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.952662978 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.947945875 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571986384 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.956264015 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.154345603 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.952788883 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.240381912 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.952463373 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.881870529 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.881657954 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.640407073 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.949665572 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915395515 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33823847 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.306279627 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.962518178 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.970719559 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799941558 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.203353832 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.962093435 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.441210304 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.178437537 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.818879708 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.973494488 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.048469019 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.657500334 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.948557917 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.830722802 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.18340897 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.783642246 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.174491461 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.709783218 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.863068366 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.948015442 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.163136182 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.830203906 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.86642083 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.151136425 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.662909713 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 5.957109298 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568034811 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.974347081 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.862571191 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.980594479 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.277776396 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.959944032 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.018326863 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.960304037 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.960027358 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.959906078 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.082794906 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.874118817 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.96637414 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.963568185 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.041058704 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.676083023 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.244723687 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.726261223 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.449734707 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601560767 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.444298388 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.965342029 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.949888089 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.949925231 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.883294946 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.098058495 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.47496895 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.223832744 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070247095 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.442859387 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.975995196 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.674455014 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.974371943 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.164913393 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.225623825 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.820337861 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.950712658 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.617442135 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.10899079 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.961439247 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.162357225 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345915081 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411229719 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077479093 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.957164694 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.343364622 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.226452337 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.042991969 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.95241115 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543489744 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 5.954758894 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131095929 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.956307777 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.908536166 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.101014191 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.962201528 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526310591 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.96522423 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.112696484 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.725588322 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.270996996 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.211440228 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273765942 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.964457512 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449465145 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.553887192 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.218010838 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.022645253 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.963970128 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.06151847 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.098436976 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 4.776911345 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.867105377 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.953043057 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803510091 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.662736079 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.962661611 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.447005787 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.219291672 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 5.949646414 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 4.785336254 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.988984445 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.962223023 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.177557744 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543065188 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.180260638 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.962631409 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.953917749 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.526125392 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446320903 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.96923108 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.885923795 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.957362834 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.142849173 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.194254402 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.979089381 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.410652291 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.665651536 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416262571 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.932767958 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.975834996 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.963139391 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.550950789 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452029931 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.257183381 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349489323 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.618446276 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.954272684 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.231711822 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.958196929 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.963798051 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.232651883 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.957551223 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.961793755 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.967438087 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.450311569 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542627644 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 5.974728773 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228718296 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.892985526 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.182733089 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601652313 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.893372589 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.956416265 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.098168091 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.959115386 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074578985 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.966682837 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 4.811904355 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.969957365 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.692149939 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24305847 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.960528157 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 5.942328659 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.70496001 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.962219197 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.965544079 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.150523918 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.96337864 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.631366993 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.306634066 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.211232389 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.95772532 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 5.944026874 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.9588092 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.95634117 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.676345321 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.92887977 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.544612189 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421053463 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.961608388 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.969774533 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.960742104 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.172057325 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.168174466 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.910358726 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.981681544 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.962337896 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.974137078 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 3.861374777 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.729852054 seconds)
  done (took 1346.234859356 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.964172531 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 5.955897904 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 5.973029392 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 5.989567751 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.964511 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.96352769 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 5.962003039 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.055631685 seconds)
  done (took 48.733367116 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 5.964896605 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.112176853 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.988354728 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 5.972018582 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.974276558 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 5.96811961 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.30360688 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 5.974519513 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.968398358 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.971364048 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 5.967867927 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 5.964790336 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.463647801 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.973818135 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 5.967943203 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 5.956561048 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.974757993 seconds)
  done (took 58.372389234 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 5.965845899 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.167377048 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.005942368 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 5.96763392 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.228040769 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 5.960359351 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.627354714 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 5.96996097 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 5.961574137 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.081498455 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.62527465 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 5.96425258 seconds)
  done (took 78.437800937 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.973055703 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.972268597 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.97271322 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.9741973 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.972586743 seconds)
  done (took 5.774080278 seconds)
done (took 1708.308957985 seconds)
(6/10) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 5.954628507 seconds)
  done (took 6.867000067 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.457633357 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.468839928 seconds)
  done (took 3.840287013 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.24770072 seconds)
  done (took 2.160385411 seconds)
done (took 13.778494514 seconds)
(7/10) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.259524726 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.167926694 seconds)
    (3/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 5.98594506 seconds)
    (4/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.037376331 seconds)
    (5/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.191394196 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.205215132 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.722592232 seconds)
    (8/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.971631771 seconds)
    (9/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.194201321 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.020522748 seconds)
    (11/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.477958776 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.99249027 seconds)
    (13/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.031172719 seconds)
    (14/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.674943131 seconds)
    (15/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.976975616 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.099120104 seconds)
    (17/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.637767689 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.89546162 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 5.966949364 seconds)
    (20/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.172571247 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.347390977 seconds)
    (22/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.101997362 seconds)
    (23/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.004575735 seconds)
    (24/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 3.889383729 seconds)
    (25/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.095960761 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.652297356 seconds)
    (27/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.990099028 seconds)
    (28/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.259308194 seconds)
    (29/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.070628573 seconds)
    (30/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.487377263 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.70317921 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.281164486 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.452711871 seconds)
    (34/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.131911036 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.333916559 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.93308412 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.367461594 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 5.962921004 seconds)
    (39/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.462617678 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.078727693 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 5.965235596 seconds)
    (42/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.232189685 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.555475144 seconds)
    (44/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.052521001 seconds)
    (45/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.414338612 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.075485787 seconds)
    (47/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.135334395 seconds)
    (48/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.022080069 seconds)
    (49/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.049232905 seconds)
    (50/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 5.968459648 seconds)
    (51/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.485250732 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 5.967386522 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 5.95778381 seconds)
    (54/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.573168258 seconds)
    (55/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.277473859 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 5.971796003 seconds)
    (57/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.05140356 seconds)
    (58/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.077457977 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 1.753926663 seconds)
    (60/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.004711749 seconds)
    (61/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 5.952280498 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 1.753361568 seconds)
    (63/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.004488472 seconds)
    (64/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.574010333 seconds)
    (65/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 5.968800586 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.04690266 seconds)
    (67/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.931559911 seconds)
    (68/309) benchmarking ("sort", Int8, false)...
    done (took 4.003896439 seconds)
    (69/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.496884726 seconds)
    (70/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.213745133 seconds)
    (71/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.065496164 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.391510865 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.515905487 seconds)
    (74/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.035778659 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 5.998910065 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.646195072 seconds)
    (77/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.617993282 seconds)
    (78/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.0601454 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.025176745 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 5.969121529 seconds)
    (81/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.643109112 seconds)
    (82/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 5.94595653 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.092537386 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.19296393 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.210683626 seconds)
    (86/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.277052538 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.942585985 seconds)
    (88/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 5.946503727 seconds)
    (89/309) benchmarking ("sort", Float32, false)...
    done (took 4.885517865 seconds)
    (90/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 5.956993507 seconds)
    (91/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.11337469 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 5.97775168 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.998044328 seconds)
    (94/309) benchmarking ("map", abs, BigInt, true)...
    done (took 5.958108406 seconds)
    (95/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.255640162 seconds)
    (96/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.051572386 seconds)
    (97/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 5.960936746 seconds)
    (98/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.219495653 seconds)
    (99/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.98946861 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.008018608 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.007931628 seconds)
    (102/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.206032786 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.0064333 seconds)
    (104/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.667764372 seconds)
    (105/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.385581716 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 5.970347308 seconds)
    (107/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.376392261 seconds)
    (108/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.179966437 seconds)
    (109/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.613520657 seconds)
    (110/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 5.961609581 seconds)
    (111/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.142266526 seconds)
    (112/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.378187077 seconds)
    (113/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.077218492 seconds)
    (114/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.078783403 seconds)
    (115/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.165240542 seconds)
    (116/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.243740738 seconds)
    (117/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.145542039 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 5.983481224 seconds)
    (119/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.996645965 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 5.971161287 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 1.459203318 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.995948441 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.326850186 seconds)
    (124/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.433594667 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.248182855 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.548614843 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.809556708 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.99478546 seconds)
    (129/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.443518998 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.543069828 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.54576668 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.229568849 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.552976808 seconds)
    (134/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.03442835 seconds)
    (135/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.695410618 seconds)
    (136/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 5.966172981 seconds)
    (137/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.074117768 seconds)
    (138/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.036579621 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 5.970393353 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.079054057 seconds)
    (141/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.030173586 seconds)
    (142/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.09592844 seconds)
    (143/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.16890331 seconds)
    (144/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.118183961 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 5.976155074 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 5.9755599 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.551348651 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.993700766 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.396296945 seconds)
    (150/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 5.972713639 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.02532592 seconds)
    (152/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.462408574 seconds)
    (153/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.910809815 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.338671164 seconds)
    (155/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.15374659 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.072327567 seconds)
    (157/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.985447621 seconds)
    (158/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.932228351 seconds)
    (159/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.989317943 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.995000248 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 5.978140331 seconds)
    (162/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.554117998 seconds)
    (163/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.975271157 seconds)
    (164/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.990480936 seconds)
    (165/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.268282417 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 5.959589 seconds)
    (167/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.058467778 seconds)
    (168/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 5.972420152 seconds)
    (169/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.421335148 seconds)
    (170/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 5.960452936 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.023441974 seconds)
    (172/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 5.965900705 seconds)
    (173/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.100449253 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.014770336 seconds)
    (175/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 5.970590635 seconds)
    (176/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.018016492 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.000525607 seconds)
    (178/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.072161005 seconds)
    (179/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.233768839 seconds)
    (180/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.848096147 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.30445418 seconds)
    (182/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.030871204 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.999057077 seconds)
    (184/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 5.972681146 seconds)
    (185/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.303786042 seconds)
    (186/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.554486049 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.008286682 seconds)
    (188/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.856847088 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 5.992862515 seconds)
    (190/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.246264421 seconds)
    (191/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.968941886 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.933637704 seconds)
    (193/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.807324206 seconds)
    (194/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.009613962 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.249005192 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.245981568 seconds)
    (197/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.52253076 seconds)
    (198/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 5.984242747 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.348804271 seconds)
    (200/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.098663437 seconds)
    (201/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.058151006 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.028814483 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.350613615 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 5.970379568 seconds)
    (205/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.002631119 seconds)
    (206/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.032398992 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.329057102 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.984783773 seconds)
    (209/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.986102909 seconds)
    (210/309) benchmarking ("map", abs, BigInt, false)...
    done (took 5.957994827 seconds)
    (211/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.114570858 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 5.973447464 seconds)
    (213/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.002345195 seconds)
    (214/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.284570534 seconds)
    (215/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.430433324 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.381001347 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.621467699 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.185518821 seconds)
    (219/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 5.975223328 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.093949262 seconds)
    (221/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 5.984002243 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 5.972218871 seconds)
    (223/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.305161473 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.038413809 seconds)
    (225/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.881146396 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 5.975844884 seconds)
    (227/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.963947311 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.00975343 seconds)
    (229/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.080823841 seconds)
    (230/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 5.974190861 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.74231842 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.012166052 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.362135926 seconds)
    (234/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 5.987352216 seconds)
    (235/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.164216097 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 5.987603911 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.671120103 seconds)
    (238/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.871482366 seconds)
    (239/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.914605803 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.000583933 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.709810537 seconds)
    (242/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.225705878 seconds)
    (243/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 5.987459006 seconds)
    (244/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.257607003 seconds)
    (245/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 5.969962208 seconds)
    (246/309) benchmarking ("sort", Float64, false)...
    done (took 5.140927795 seconds)
    (247/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 5.957708501 seconds)
    (248/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.183779793 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.389105712 seconds)
    (250/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.65504568 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.143744579 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.200068069 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.128950542 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.296477947 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.013027744 seconds)
    (256/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.859066524 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 5.962249107 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.596618077 seconds)
    (259/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.999552994 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.363486011 seconds)
    (261/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.998761175 seconds)
    (262/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.089597335 seconds)
    (263/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.089418894 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 5.972018243 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.04947253 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.830547239 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 5.961683558 seconds)
    (268/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.975040244 seconds)
    (269/309) benchmarking ("sort", BigFloat, false)...
    done (took 5.977445585 seconds)
    (270/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.0557275 seconds)
    (271/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.272353179 seconds)
    (272/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.259521511 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.025271607 seconds)
    (274/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.42739094 seconds)
    (275/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.028200483 seconds)
    (276/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.796154487 seconds)
    (277/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.264841354 seconds)
    (278/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.990196316 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.056099557 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 5.983754048 seconds)
    (281/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.084586651 seconds)
    (282/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.699439513 seconds)
    (283/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.244835465 seconds)
    (284/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.0718842 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.056555941 seconds)
    (286/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.668785202 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.04878989 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.083023745 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.659123684 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.749031104 seconds)
    (291/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.019824429 seconds)
    (292/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.052632249 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.735754717 seconds)
    (294/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 5.984183814 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.515588778 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.230192908 seconds)
    (297/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.012334187 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.01626687 seconds)
    (299/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 5.972941982 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.085109417 seconds)
    (301/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.000110683 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.650702264 seconds)
    (303/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 5.973610986 seconds)
    (304/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.938479271 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.995098721 seconds)
    (306/309) benchmarking ("sort", BigInt, false)...
    done (took 5.967551993 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.746784226 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 5.959870155 seconds)
    (309/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.478837712 seconds)
  done (took 776.738669885 seconds)
done (took 777.652047475 seconds)
(8/10) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.06583413 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.017504529 seconds)
  done (took 13.000235724 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.142024617 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.095504336 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.980491812 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.010558221 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.976108391 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 5.980257802 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 5.975159899 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.976891069 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.979064264 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.978281743 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.978989008 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.164731567 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 5.977394328 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.977689725 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.977619229 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.070702052 seconds)
  done (took 37.161042387 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.004455505 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.987027718 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.069451959 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.997318187 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.00497043 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.123154098 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.028811731 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.986203393 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.109246982 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.015270626 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.203782252 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.005428242 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.984984902 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.845652404 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.000101164 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.125732506 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.17481138 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.205261619 seconds)
  done (took 22.794003349 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.306020669 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 5.993212894 seconds)
  done (took 8.223707199 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 5.975575747 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 5.973832991 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 5.989014549 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.013817926 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.014059484 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 5.981975494 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.029365028 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.035124902 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 5.997909185 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.030497812 seconds)
  done (took 60.961593821 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.998906649 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.986402987 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.987155549 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.983552236 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 5.977776689 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 5.977993067 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.982514327 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 5.975938355 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 3.511113898 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.075227979 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.995107287 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.990753215 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.982864299 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.985264833 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.981682132 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.017337872 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.106783038 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.980911507 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.98045228 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.988960942 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.983963826 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.099696861 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.012500876 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.980690305 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.075718563 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 3.509321283 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.98555627 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.989384266 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.092331362 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.980387137 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.981032138 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.983716474 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.985715595 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.51141463 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.374169278 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 5.985305909 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.001696678 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.992135267 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.979942029 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.125939394 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.983459806 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.989572267 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 5.975495723 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.345200728 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.121952343 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.074222769 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.89028867 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.985510819 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.985172119 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.038736278 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.984776801 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.985051898 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.008396083 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.659283238 seconds)
  done (took 89.047619215 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 5.984843431 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.464694552 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.140743605 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.990672534 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.689733652 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.591818215 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.977358337 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.179157992 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.034530497 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.977620569 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.271581878 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.392691221 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.979909392 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.052597471 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.053271978 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.057530145 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.976450881 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.670307907 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.977068669 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 5.973610071 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.357585832 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.98999006 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 5.972575612 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.131522176 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.009249543 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.354977931 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 4.974055775 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.359021489 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 5.979913719 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 5.97484069 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.34792116 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 5.981201517 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.052660878 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.9743139 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.206130208 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.239795188 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.225609084 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 5.977702157 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.014414772 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.975024843 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 5.982180509 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.346861932 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.233592486 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 5.975307746 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 5.97147631 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.350060846 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 5.975295992 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 5.978892486 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 5.979454085 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.165815738 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.952002803 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 5.976260599 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 4.968556908 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.975445325 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.322484809 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.063139063 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.063085478 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.377710643 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.976040924 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.967754615 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.010863122 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.977161497 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.980389379 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.976308309 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.972718936 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.230783591 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.103059737 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.975077324 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.235226244 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.335373401 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 5.976611839 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.391977335 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.859915991 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 5.978223949 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.043390073 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.975719258 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.469488794 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.37425413 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.00603263 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.973888636 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.217275057 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 5.97810231 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.249349834 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 5.98618439 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.976788408 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.359566244 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 5.994343463 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.004319834 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.975402402 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.9760476 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.596210734 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.978540397 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.198606036 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.029960808 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.977025582 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 5.97595727 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.008587623 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.983791206 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.974220783 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 5.978371296 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.398739052 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 5.983320063 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.231186794 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.990983612 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.977103717 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.989030534 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 5.976458133 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.977864001 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.183623542 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.374054902 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 5.982542113 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.977771353 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.973547434 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 5.982171335 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.106616764 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.980288251 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.190140199 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.978273033 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.978050577 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.980072025 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.6249159 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.023154216 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.97280329 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.974037957 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.793313516 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.17971915 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 5.988095253 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 5.977368702 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.978870007 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.986383802 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 4.943960331 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.979327267 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.010586161 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.979346104 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.578314569 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.009493855 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 5.979508111 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.615394119 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.982690237 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.566600083 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.991278134 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.980607794 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.252347234 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.208220373 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.030747757 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 5.977567464 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.979053553 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.587095274 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.023831648 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.116771657 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.993236354 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.023960382 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.173151964 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.344183629 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.980548165 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.54872688 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 5.978845805 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.18236561 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 5.984839046 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.26059099 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.366573711 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 5.980099975 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.985262178 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.578311006 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.625825998 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.60105955 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.984436045 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.265601824 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.969020307 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.430533021 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 5.979727277 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 5.982205483 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.401883522 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.983568102 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.982541941 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 5.980357737 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.979887898 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.12419264 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.14989642 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.781377256 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.977558509 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.347078934 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.991054122 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.978158192 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.988665647 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 5.978841005 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.334758847 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.077791356 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 5.984783899 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.004089453 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 5.982623444 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.983180469 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.35920819 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.894611466 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 5.9819645 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.131808176 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.500941873 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 5.983148232 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 5.982021259 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.546081535 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.241758245 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.392382642 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.045011906 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.196719588 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 5.982131599 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.014450274 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.613494803 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.992988877 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.351844281 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.980248532 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 5.982054144 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.496335294 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 5.978326065 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.323112847 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.979657885 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 5.983859255 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.408759687 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.982187792 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.987202665 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 4.951096911 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.983992632 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.228094591 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 5.98144361 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.015825905 seconds)
  done (took 1025.541599453 seconds)
done (took 1257.647562731 seconds)
(9/10) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.017070901 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.010760384 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.994609864 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.015320185 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.107298503 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.02595698 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.005436974 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.996711673 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.041394766 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.044048437 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.992942311 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.02318901 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.996424104 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.994892049 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.99452573 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.009087834 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.724674987 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.994275957 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.011164888 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.00335162 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.012854605 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.994529752 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.044521986 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.024054094 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.999869721 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.998024531 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.999104201 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.014080795 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.106023713 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.998808922 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.997851752 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.007352188 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.724045977 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.993328403 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.988858309 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.015035208 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.006247117 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.005410137 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.997546488 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.028151742 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.999592065 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.995536191 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.997270345 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.997433961 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.998547658 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.000134152 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.99704494 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.004223164 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.009851537 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.010242704 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.004987744 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.010687423 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.000757732 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.996559036 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.007686466 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.998282613 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.999359701 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.011610673 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.01657903 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.011634539 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.714382268 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.002328025 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.999402763 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.014221981 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.005191742 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.048225808 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.992546045 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.001993397 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.001195249 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.00219745 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.047107923 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.005084737 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.99827087 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.010737912 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.029223467 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.729103629 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.991927589 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.997370879 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.00599934 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.99667229 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.007881344 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.011013908 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.002626103 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.997690643 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.011608073 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.027535332 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.008230262 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.000272299 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.008577937 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.016554507 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.006624268 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.009629392 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.00149773 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.993467973 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.007893676 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.002730287 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.001070544 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.001592139 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.004166792 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.010042583 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.002891805 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.01358164 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.994748121 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.995072394 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.997858874 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.013930559 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.002641884 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.999048714 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.020440811 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.047479772 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.000496506 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.72059681 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.001957257 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.015415391 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.008309387 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.002629304 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.994886082 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.72429078 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.014662466 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.013813593 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.000588472 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.999407524 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.015836951 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.002342818 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.996313156 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.737375766 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.001729924 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.013077167 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.121254072 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.011353267 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.031922203 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.998570244 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.002111852 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.032352199 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.016187182 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.031263395 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.003316834 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.016095179 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.017105639 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.996239165 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.012129751 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.011416904 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.00171223 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.006778044 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.995022329 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.034746861 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.013453426 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.013815814 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.021127249 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.121700334 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.99882098 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.725715656 seconds)
done (took 168.271373805 seconds)
(10/10) benchmarking "collection"...
  (1/1) benchmarking "set operations"...
    (1/21) benchmarking ("Vector", "Int", "union")...
    done (took 1.324329455 seconds)
    (2/21) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.339197922 seconds)
    (3/21) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.000092517 seconds)
    (4/21) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.127596219 seconds)
    (5/21) benchmarking ("Set", "Int", "union")...
    done (took 1.046087307 seconds)
    (6/21) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.131875261 seconds)
    (7/21) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.334688665 seconds)
    (8/21) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.000427115 seconds)
    (9/21) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.335847858 seconds)
    (10/21) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.335150865 seconds)
    (11/21) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.999841 seconds)
    (12/21) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.126193615 seconds)
    (13/21) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.131177355 seconds)
    (14/21) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.3403812 seconds)
    (15/21) benchmarking ("BitSet", "Int", "union")...
    done (took 0.998764698 seconds)
    (16/21) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.004070942 seconds)
    (17/21) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.000458451 seconds)
    (18/21) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.338863151 seconds)
    (19/21) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.000788033 seconds)
    (20/21) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.129234134 seconds)
    (21/21) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.132648068 seconds)
  done (took 25.113449316 seconds)
done (took 26.04726673 seconds)
SAVING RESULT...
DONE!
