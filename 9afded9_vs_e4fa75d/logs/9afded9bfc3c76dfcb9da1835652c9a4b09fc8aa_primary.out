cset: moving following pidspec: 26721
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.522539446 seconds)
loading group "string"... done (took 0.545276883 seconds)
loading group "linalg"... done (took 9.096915883 seconds)
loading group "parallel"... done (took 0.182293079 seconds)
loading group "find"... done (took 1.319479891 seconds)
loading group "tuple"... done (took 1.977530137 seconds)
loading group "dates"... done (took 1.399853288 seconds)
loading group "micro"... done (took 0.201123365 seconds)
loading group "io"... done (took 0.520407197 seconds)
loading group "scalar"... done (took 52.375101039 seconds)
loading group "sparse"... done (took 14.316207195 seconds)
loading group "broadcast"... done (took 1.341048715 seconds)
loading group "union"... done (took 10.363819988 seconds)
loading group "simd"... done (took 3.080435371 seconds)
loading group "random"... done (took 11.680330281 seconds)
loading group "problem"... done (took 2.231664542 seconds)
loading group "array"... done (took 24.652456172 seconds)
loading group "misc"... done (took 1.154851326 seconds)
loading group "sort"... done (took 3.830280582 seconds)
loading group "collection"... done (took 19.496897473 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.6193296 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.182246258 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.20667259 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.288091891 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.239636726 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154783707 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142258013 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.26091611 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.645607064 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209210848 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.133743739 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.510310323 seconds)
done (took 6.409797203 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253698679 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.18161999 seconds)
    (2/2) benchmarking "String"...
    done (took 0.168815866 seconds)
  done (took 1.108288303 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075989806 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.155688774 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107053764 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093263978 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090676326 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107159971 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092612074 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107011644 seconds)
  done (took 1.518667751 seconds)
done (took 3.718720198 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.512597327 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.867203128 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.522796494 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.164932584 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.304504413 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.3131728 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.31970988 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.202119288 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090539688 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090956926 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175084861 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.399362521 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.437512215 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.959494285 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090336668 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.114546731 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.119503644 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.775672056 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079349722 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.125799606 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.499849811 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.193117707 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098629682 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123322189 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185265122 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134088133 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.161492706 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104466769 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.675403076 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131552126 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.187825058 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098022914 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160624397 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.198137154 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.210800571 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093180382 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.691371375 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200999612 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.092138245 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098278848 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.668961488 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118670145 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.188851164 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102769437 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.092263787 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.183645196 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.096913891 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077735811 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.116097913 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084698668 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164919786 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.448583364 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109387309 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171063567 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092728028 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.696818192 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101400266 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275285863 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126423714 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095730856 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090350631 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.08815426 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.159313036 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094608321 seconds)
  done (took 20.247746231 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147068827 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165017293 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077405616 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155737812 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122572582 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079616996 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.101198482 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078206784 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125027363 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.223409874 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137348938 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.154340183 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09083192 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088594354 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.127614736 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249647559 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109352327 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123575304 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087255367 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090210724 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138520783 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095893006 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106572467 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093875225 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169198794 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203347082 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10849776 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121777471 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.086993792 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096582037 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141458039 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.149283115 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092223157 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088280978 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.190252896 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.10638725 seconds)
  done (took 5.300715697 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.205074463 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12372916 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.216441218 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162725016 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145102999 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.168845986 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.151807985 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.287591728 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.302847859 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.114349976 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155036252 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160327222 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13047538 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105798394 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093882826 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080042492 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07786834 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.507128356 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.138832278 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.173907926 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.134536248 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10619582 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081272488 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.389382953 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083667303 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09621345 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086578555 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067614975 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.199978318 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100757299 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.079731715 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.104959188 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089881906 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132449934 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197484345 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.118109431 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137997456 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086431813 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080120137 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.218701026 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.110027227 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078100648 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108250956 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132715161 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131097245 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085627843 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109472629 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222615989 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083412656 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.106506931 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.062020235 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197693759 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.12531999 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079732374 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288295077 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117839453 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087145149 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081383833 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.255664881 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.115480162 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082318559 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097371664 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086852027 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079191521 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.439576871 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108260762 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080761783 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079009558 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.163239376 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.96527145 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088554886 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105179851 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086641444 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08465947 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11962569 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081339309 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07794832 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09672471 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080466655 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083785166 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10997255 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085024338 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079067932 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162162966 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.099993353 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099728658 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125227428 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084299222 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.0965786 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113671819 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095852278 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084019226 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.17313379 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088573041 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110671171 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085511439 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141859908 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083156022 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.206389362 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.098279611 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.109477204 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098007253 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114068331 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.119492588 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081385753 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084262964 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096834955 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081221857 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.080499153 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098969876 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147723176 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.087097091 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080456551 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112477643 seconds)
  done (took 23.273683553 seconds)
done (took 49.580807531 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.475342501 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.088025248 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.087497942 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105615355 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.088307983 seconds)
  done (took 1.68506705 seconds)
done (took 2.499785184 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.334336375 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.202200912 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101097719 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.197991796 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086093901 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.202953156 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.18927801 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094923031 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217480383 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085156054 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.195436718 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085506562 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10418896 seconds)
  done (took 2.938059876 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10059489 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107329309 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.116334768 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100646322 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080780663 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099538134 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115465376 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1086465 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096906676 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109395097 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081371739 seconds)
  done (took 1.932576622 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097218995 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103103073 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094590164 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114198801 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081018867 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096450878 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114569423 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105913255 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094602788 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109586617 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08123193 seconds)
  done (took 1.912369745 seconds)
done (took 7.596511418 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.138369381 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.989982353 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.16859392 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.220189004 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.358431549 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.240124651 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.573465346 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.155920239 seconds)
  done (took 14.821126837 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.121921871 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.088957132 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.156705301 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.092770008 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094006552 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.112137741 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095419592 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090760299 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.108471611 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090920889 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092059758 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.110996086 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08995842 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089451657 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090650396 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.110917634 seconds)
  done (took 2.515495201 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.13822396 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.12079871 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.113103663 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.094916258 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.1082538 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.095647409 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.096623616 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.112098228 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092058129 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.091257162 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.114196647 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.094013901 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09299931 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.106650495 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.095392418 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109089451 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.10604628 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.094884808 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109291881 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.113518026 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09560173 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.092941789 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.109974373 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.096527749 seconds)
  done (took 3.397148522 seconds)
done (took 21.554151406 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149508417 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100744964 seconds)
  done (took 1.071591382 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.141863354 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.159679524 seconds)
  done (took 1.124786819 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111697593 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.085423928 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136029558 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101401421 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.088344226 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.103892961 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115918696 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.10372154 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.087773525 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.087272023 seconds)
  done (took 1.850082841 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091304881 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.091347237 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.119224816 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.141743355 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.112052663 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092175367 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.092144724 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.089047766 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111575805 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.086558772 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095670679 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.123965345 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093055309 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124552091 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093112567 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.093829226 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116171738 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09281826 seconds)
  done (took 2.690029076 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.087593814 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.089157383 seconds)
  done (took 1.00776012 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091826981 seconds)
    (2/7) benchmarking "second"...
    done (took 0.087297631 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088699797 seconds)
    (4/7) benchmarking "year"...
    done (took 0.106861807 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.086778488 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08690404 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.104429324 seconds)
  done (took 1.483353465 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.509713617 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.266761268 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.38076301 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105057719 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.143460169 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.353420852 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.143215995 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.100932002 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.097764938 seconds)
  done (took 2.966778005 seconds)
done (took 13.022212941 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093754713 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.217299536 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.749773406 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.110056187 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.086700149 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.163412981 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.291002559 seconds)
done (took 2.549086703 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354247441 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.151838777 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085225836 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.087602652 seconds)
  done (took 1.508854088 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082056069 seconds)
    (2/2) benchmarking "read"...
    done (took 0.094946765 seconds)
  done (took 1.017282432 seconds)
done (took 3.363092241 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087718816 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.122474941 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.10375563 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.086876151 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.086260483 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.085074621 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.103544891 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086002938 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085454355 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.106237285 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.087294938 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086406423 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084605203 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101458512 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08708373 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08477958 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1022016 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.086301044 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086726912 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087858224 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105432988 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.085107028 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.085114077 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086764902 seconds)
  done (took 3.082277026 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110675691 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08782264 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108182909 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092228996 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.089816375 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108338728 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091220759 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.087611252 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108797525 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.088743466 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090185 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.107426918 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.089610669 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.090879783 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089999615 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.109460087 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093758391 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089743978 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107051476 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091196804 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093147861 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106650038 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.091917819 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092349953 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109397818 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090732483 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088036481 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.10556151 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091305808 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.090748301 seconds)
  done (took 3.733971924 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098177743 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086094849 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090067502 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116670325 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086007498 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089069412 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105966856 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088336691 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090636818 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088258979 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109031947 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090226859 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085289673 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108052232 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091691384 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092150626 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114328515 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.087748664 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086333514 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089986704 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110271152 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086097192 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088587799 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.106578152 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089983888 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086691672 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088514664 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107773611 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090961346 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088879898 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.108832097 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093177288 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089153243 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.115476374 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093165915 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089713371 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094567686 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104035757 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091458171 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085145326 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.103597187 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091006147 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087417361 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.095002831 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.107548789 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089958029 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08570827 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108787562 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.090610827 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09447204 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087930526 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.105423123 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09370254 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093211649 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.112078675 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08751698 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092992115 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.105431099 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092191536 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089726748 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085570423 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.10352356 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.0955317 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089985651 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.122803089 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.09638968 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.0859733 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.108778953 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090672461 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.093939629 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.107817048 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101610031 seconds)
  done (took 7.744619308 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102029098 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095649368 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08746569 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105578401 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087450809 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.086014287 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108801614 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088792803 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089779736 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113088827 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089904073 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090166486 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108104925 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092689781 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091484977 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090088708 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114227947 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08997807 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090008213 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108888752 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090863184 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094674789 seconds)
  done (took 2.964646695 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.229699998 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095408413 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140622891 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120398428 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105668935 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120441645 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09369463 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096592906 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113128354 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09903564 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0986659 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112857082 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108140606 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098647492 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115044089 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095952562 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110894853 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097460633 seconds)
  done (took 2.902206069 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101283029 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.087726127 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127735117 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090113658 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.089224945 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09249771 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11691056 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113610278 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109697267 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091133767 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100424345 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110869358 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092051844 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090503588 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093215261 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111237759 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092657064 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091113118 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116823898 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094223186 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094149484 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115767015 seconds)
  done (took 3.074430948 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10348775 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090470203 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124726531 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.092511795 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.088775597 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.1083103 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.095348762 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.088297268 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.114186827 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.089735791 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090542464 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092355182 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124398338 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092520237 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096468547 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109816495 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092774498 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091673017 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10976798 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088720188 seconds)
  done (took 2.833443145 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.176023127 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124942472 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108600556 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115866007 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127788598 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108856257 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114396344 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128725675 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106597874 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136257978 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108969794 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10749359 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133116684 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115489596 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124964505 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116626338 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115034644 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134492259 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107502987 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123574282 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119939644 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10653622 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13361445 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10773262 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106732597 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126387939 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107709127 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13067508 seconds)
  done (took 4.22766732 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090399199 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087964397 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.086240165 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.103951775 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.087856463 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08625623 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.085148831 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.104745791 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088536781 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086355241 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107413166 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088965786 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087883743 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.087533221 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10675867 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.087628462 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088470279 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.103824343 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088568937 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08716368 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.086729773 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106563734 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.088206792 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087728099 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107358637 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.090259112 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08813132 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090443412 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110266983 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092682332 seconds)
  done (took 3.642247128 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.099510991 seconds)
    (2/2) benchmarking "in"...
    done (took 0.096162906 seconds)
  done (took 1.051921889 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.096331108 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103492143 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.087755361 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10646516 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094187667 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08759627 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115281965 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093958741 seconds)
  done (took 1.642298923 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.145616012 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.165156269 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094172376 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.101656269 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.165634382 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.157194988 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136605469 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093286107 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108598844 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084588215 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.161249061 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084260034 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092512161 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10710559 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092929266 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096248872 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.107382723 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.099273687 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.09545183 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.108149102 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096648396 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097220367 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110677516 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098677266 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085860127 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11110771 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09618351 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103462052 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106789975 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095197218 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089665505 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.106485142 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095013497 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.093360044 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.089132272 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.165147899 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098922745 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108157363 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093281455 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093193067 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.144141514 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.089334201 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092231966 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109377069 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096747752 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.093723512 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.113432157 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.089795706 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084040471 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.104408806 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.090088823 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087455782 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.105247511 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094293669 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091996909 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115442752 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.092290572 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088129158 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105071627 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089041454 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09017137 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087002681 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112450415 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.092715482 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092981568 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.11197528 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0919618 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.087876374 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.109196554 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.091424795 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09137613 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12564164 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092656049 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.093247668 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113612217 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.090797902 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088966887 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112753714 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091992648 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092070479 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.112064877 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120872135 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093757093 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106447362 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088505916 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09585069 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.109316303 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.094360071 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084160939 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119514587 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.093668256 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.089788479 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102251884 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092035284 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088054157 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.092033619 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.103579975 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093345391 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.087767255 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.113330129 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096078111 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090731585 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112312055 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096310243 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096571971 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109565334 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.138746806 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107630211 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088969065 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091660094 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094093555 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104715113 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092803132 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089012726 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10936353 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089062793 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.094986071 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11001776 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.094450433 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.094048027 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112939707 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095642605 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.092019867 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.106085372 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090075711 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.093691753 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11519823 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.0956619 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.092673893 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.089031985 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.107985547 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092574596 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.093409424 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.108622306 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096749755 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088998576 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.107123698 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09183455 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.095194097 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111015372 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089528027 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.090605596 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111445848 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093199819 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09269643 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111567863 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08912701 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084904558 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111382908 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089828759 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.090927188 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116388719 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090364766 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.093854783 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089409431 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118636579 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089741567 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.095730519 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111930404 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.097465453 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095076282 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103244487 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091074031 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.092879691 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113270728 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090737769 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.090450752 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.107539377 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09981257 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08606097 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.094053061 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.103903965 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091187068 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.095506837 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.110738989 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095521326 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089135131 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149991984 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10439599 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098567329 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110641167 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094556919 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.094437174 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.112032051 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095957998 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097162795 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.114117266 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094977271 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092134549 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114349574 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090814427 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093278166 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091984615 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113033408 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085844184 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09092208 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103918961 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096635845 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094223838 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.114751396 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.096519092 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092878484 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109845891 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099659501 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087913295 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.112966703 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086822103 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095994097 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099107184 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.117189314 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096914716 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093565679 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110068382 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.090977146 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0979966 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111353809 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094336999 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.091359208 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.104178134 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08683453 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.096838556 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.111149226 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090244823 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090076733 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094521602 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115645452 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091007734 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084558456 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.114335388 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098117592 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088924518 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.1126582 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090437254 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090809556 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120155696 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085992219 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089105478 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113618981 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096396248 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089304025 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111403891 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.094998058 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.09827855 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.11228914 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095239557 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091098679 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099084687 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111327219 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090119289 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091273343 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.112492822 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088045969 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.090690669 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112163561 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091438765 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088553899 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116697716 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099708298 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.097456307 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110257684 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.096914833 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.097476447 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.115063146 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093500198 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.096941669 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08819293 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105859892 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089538458 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085875662 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.111142756 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090128693 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.095527873 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.110032253 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092887927 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.095141434 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112965895 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091790059 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.096222854 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.121824167 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088231073 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086300113 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110317583 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094874365 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.089313022 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10793266 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.092914751 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094703741 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.11319928 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099008734 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.0890994 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098683555 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.11786176 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090552349 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.097665107 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.116993584 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098054105 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088593458 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.114704955 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091162139 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097330959 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.106573875 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093880988 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100263291 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112082529 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091761827 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.090874772 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109147263 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08751578 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089470264 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.115368943 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093850387 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.095884817 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111702833 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093209203 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090004146 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088792872 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.117602266 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092652308 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.097732646 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.110738255 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088019752 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087252177 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.116343435 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093829691 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097449714 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108683527 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.09652494 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098223406 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.094038401 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.112545177 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101172144 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100207361 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.117056831 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099951425 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086261262 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.11012472 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099773743 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.090366242 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.1143428 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.093621294 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087256095 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115141511 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.098662925 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094866194 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.110648085 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088605823 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09111521 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.097575075 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.11423502 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095271853 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09317148 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114417296 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090241591 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094982117 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.116188846 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095012296 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09775508 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11195418 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.097172789 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.09056762 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.115727889 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09363257 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088253267 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087093587 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.111063798 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.099156767 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087242321 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.1180525 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.097613197 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090198845 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110573435 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.09797439 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090435683 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115165538 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098512378 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092106087 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119487594 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094523524 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091846455 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.096547342 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.116783492 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088343342 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092714631 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111884278 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100332193 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092143137 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.115685652 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095281574 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096656838 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.112700227 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.09823901 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.096998771 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.096286697 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108480463 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.099508222 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097410635 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.114876164 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091221583 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092734135 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.108841518 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093660625 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.098176466 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.109501624 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10258419 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.097634939 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.110094269 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093326201 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.097816905 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110848132 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100571334 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090498614 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095169732 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.108586956 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098183242 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092609534 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.118771657 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091287278 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087857139 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117252271 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.098005465 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09579104 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.115514406 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.100131973 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088036121 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.10750358 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.095780519 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091107621 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1193278 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100496918 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092725697 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092172715 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.11372142 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.092913443 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09750445 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.108131474 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091733391 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09424541 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115977705 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093697302 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089333638 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.115905546 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094273509 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095506073 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112960786 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.09042717 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093602795 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.117279453 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.09421466 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090350036 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091315396 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120967848 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094523116 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090514484 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.108530774 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101186018 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096192174 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118671561 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092031201 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09447202 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.111650302 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.094391898 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.098394591 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.113322644 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095745959 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092685125 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117025408 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101385165 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087443737 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.110681573 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104006253 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096867886 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117378104 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095012686 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.093084229 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117582026 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101501361 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.093645884 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087732685 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.109437185 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.09372224 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088228169 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.113559177 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101258484 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093875604 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.111235306 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098081709 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096619916 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.113008714 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.094657697 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089148571 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099387212 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.111529531 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099173787 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087905757 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.108607068 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.094782634 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098069982 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113873679 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095909695 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.092914726 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.113080075 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091557463 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092792536 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.097187917 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118129809 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.0984298 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093952213 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.114191896 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.095488076 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10233158 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.113227688 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094542289 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101431359 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.119341497 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096834922 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094414014 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11943943 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.099995978 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.093699736 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.119374258 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093552846 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093933463 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.11925597 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10248108 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104567236 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111994562 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090148634 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.097906984 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111627733 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091402187 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09910854 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099643548 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.121091314 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095717332 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090580397 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121977841 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100590689 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094595529 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.112607979 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093120315 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.097561193 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112907165 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.097823452 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091915071 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.119697587 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101068445 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099073756 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.120442711 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.09150105 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100855785 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116579107 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104949081 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.093539745 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088669504 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.110506045 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.095277699 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.100009839 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.121650811 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098168475 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.096995689 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.117277555 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097321585 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095556007 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110917321 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101621011 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099953038 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.092629104 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.117415467 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095168451 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095585123 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.114665611 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100383679 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.099158055 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.115736325 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104624323 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.097954255 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.11293289 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094014576 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095994384 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.113513054 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098543948 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098044232 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091223917 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110589205 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100147787 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.099634586 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115636111 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102025677 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100734527 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.114431328 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09918975 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101289877 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.117209503 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095287548 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095828997 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.115684223 seconds)
  done (took 60.94602058 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145411134 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100437322 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114626743 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095074761 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112468595 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116342114 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095863229 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094138255 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.1172128 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105928316 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094777707 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113082652 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112194159 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134224761 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1138879 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104625127 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113095794 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096044866 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094426436 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114819529 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111074106 seconds)
  done (took 3.20828359 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114160603 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.10832156 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126570469 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11053193 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101122394 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127196139 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.106455861 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126263016 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110238172 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102284491 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.13129132 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106750837 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.123117877 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.104161073 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102829242 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125607016 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110895781 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101517873 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128051358 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106198812 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123643184 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107069072 seconds)
  done (took 3.416171363 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.105495123 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.09868846 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099790918 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.115454298 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099338846 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.095244959 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122432386 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097464389 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103820891 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115502071 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092096744 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096098296 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.121022671 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.09634796 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091605294 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.0949658 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125151272 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.099918096 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.100155172 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.115301174 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109394268 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.093918677 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.11569869 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.091868191 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106844444 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.120036062 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096261493 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.100341914 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090091876 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.120878555 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.09678964 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095144404 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.117915112 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.09235803 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090777455 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.119500617 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100674809 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.095597556 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.11417102 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.099304869 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.095994521 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.100046572 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.121579071 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.095451971 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.097400406 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.115904764 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.099785978 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.093781301 seconds)
  done (took 5.888776444 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.125688764 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164589608 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099953611 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136815682 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13207596 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106312282 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.120668385 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140863019 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.097038537 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.12016637 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.111734445 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107914071 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121655242 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.103183713 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.122946066 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101147853 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100814112 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.117954347 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10595173 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100064964 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.122631999 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.102475938 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10847151 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.128312432 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10357103 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098012591 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119534694 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.103574024 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.10747053 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.124930897 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.340543076 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.123405248 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.1109013 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.098671834 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.117982316 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.102645714 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111525022 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.119636222 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.101190598 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.096495395 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.121424071 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.103379004 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.101056523 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132354388 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100533795 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.100071139 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.120599608 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.097209252 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.108079594 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121152464 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.106199803 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.130057875 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104127452 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.100287728 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123091877 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.111015076 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.099185784 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.119323385 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.101998415 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.107126638 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.118781725 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103229845 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.108915654 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.121549454 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.106464358 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.130227247 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.102227662 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102878414 seconds)
  done (took 8.913840833 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135640177 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104174708 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132953807 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112238676 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103809871 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124534882 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103636583 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.102628474 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125275719 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109555614 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123528458 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.203760275 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122161721 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.10823874 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103394483 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125351782 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104092265 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102849961 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125691151 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103589644 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.121347331 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113876517 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103092954 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13125956 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116562634 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099501238 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125710211 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103949074 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130724555 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106134157 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114321681 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124671053 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104232769 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.130388604 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.117122355 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103546194 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.119013922 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105755092 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104210716 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124376507 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102478487 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111908954 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12533372 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.101482262 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102920603 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125946704 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112776686 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.136091599 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110433212 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108470435 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.12449659 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113231686 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123695277 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106614948 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112182762 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.139368119 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113444557 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13223077 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105346072 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111563768 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133396423 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.118771133 seconds)
  done (took 8.176402634 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097610642 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097977018 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095360252 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.116813125 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09778104 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095738152 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096934224 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.11872985 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098569557 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09773704 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118520999 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09792019 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096640667 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096003504 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117248127 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09705924 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096026387 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115997963 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098445194 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09601474 seconds)
  done (took 2.972644044 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108415078 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115329974 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.11787984 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106187633 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.099384607 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123995019 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101319963 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099663226 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097498414 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121706261 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10895033 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127499391 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101335844 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10491164 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127386631 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106821791 seconds)
  done (took 2.699207094 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118612423 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116402494 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.19330011 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.101420031 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.120346982 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107785937 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100112224 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.121412453 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.099646376 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.104959705 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103570702 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125580509 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100778802 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10016136 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.121563686 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.1035354 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.097015167 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.123754523 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.100864041 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.189843744 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.102874371 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.100663867 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.121404042 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105281589 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.100080519 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.123787523 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10673752 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.099219768 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.121895017 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.102004553 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.100902808 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.126976071 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100276553 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.103978909 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10096064 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.121629805 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.100604832 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.099642102 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123534278 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102010771 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102827508 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.121294715 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.101996849 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102485538 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.117421824 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.101475424 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.097858155 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.12494639 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101813025 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101117892 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100037285 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130508172 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105473541 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.107262924 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129565563 seconds)
  done (took 7.095585591 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112414595 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101059119 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.131252296 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099958735 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100468267 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.099395613 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.122437313 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.101203917 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099966615 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.119571962 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101153836 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100993262 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121257517 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103130476 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.100966796 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1214758 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099717402 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10079264 seconds)
  done (took 2.873358286 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106306733 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099554864 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103781945 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.119281801 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099142732 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099816289 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118290948 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100295914 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098219068 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.120231366 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101666301 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.100353656 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098515332 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12102347 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099999536 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099420976 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121506018 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100987693 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099441314 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.117759974 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101871045 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100015425 seconds)
  done (took 3.265556777 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113887945 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.185264872 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108677885 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.195706292 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099090498 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096519376 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129590287 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099689292 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115262563 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.119472071 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098597345 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097075724 seconds)
  done (took 2.399073662 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130633214 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138105328 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121247065 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102618087 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109055738 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124254616 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104777393 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104331122 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134621406 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114822747 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123669723 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11441979 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111906489 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133820381 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109131973 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129228348 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105905718 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10385219 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119683537 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120748471 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103211648 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134181588 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104249966 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122983272 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106438904 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112234767 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133307675 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115866121 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102749438 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134375236 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108900885 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124652764 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114180154 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114146223 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123688032 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112820884 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123465805 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121416433 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10933684 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133351078 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101107576 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108408528 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134598098 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109497576 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133159754 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104984746 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108085157 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125854275 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10506509 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147153715 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110949831 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112053721 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130652362 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11308113 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132532801 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127064033 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136151168 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11409812 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108970472 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137761263 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112472125 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130699559 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112923198 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136151789 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11086137 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111119436 seconds)
  done (took 8.770734576 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143882648 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100709788 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125116045 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116904142 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13223049 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106023471 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103743605 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123933092 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106093444 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100902246 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171792117 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105449946 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135317914 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114153458 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103922692 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124390427 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105431683 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111521823 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122705989 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126356828 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125001381 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113984435 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11170546 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134378042 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116151105 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130281825 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10498386 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104268598 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126405549 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105779463 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10939845 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126065342 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1129097 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.120614919 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114925595 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103921164 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125365499 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110763763 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105147468 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13193894 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113368181 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141046806 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106106622 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103686237 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137709441 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10472346 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104389146 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12297612 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106184924 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101166984 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138274617 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116339063 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137829432 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11374605 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124356639 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106900919 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104890612 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125757055 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106459966 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109381016 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134783525 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105603281 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148022582 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106295538 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105357074 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135101046 seconds)
  done (took 8.723432758 seconds)
done (took 167.087474792 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.152599199 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.193765123 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.146614333 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.180308325 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095456774 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.131054607 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.150195116 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.151898975 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092775891 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116435139 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094231057 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097748321 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.182588487 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095205326 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093510909 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.120149672 seconds)
  done (took 3.035291439 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195500795 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.315816564 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114170323 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119734283 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103380842 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101089143 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120034429 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101628845 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097957751 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129144892 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103443354 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096626376 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129062011 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098205715 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098639822 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122664336 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107491461 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101095205 seconds)
  done (took 3.20223025 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121324817 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142995474 seconds)
  done (took 1.222027261 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132269174 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.19810199 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279022315 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172982365 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.123357061 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138258132 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153221363 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133238971 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.181198378 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134836557 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113625664 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098716611 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148224353 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10506528 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.133527306 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.10092668 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127569902 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.133191201 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.1113702 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101344708 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142559778 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105706491 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104851962 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.133658346 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.171839949 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133316695 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105199309 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103063888 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12396781 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111271356 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.127054117 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117444807 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113123905 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173514873 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104467218 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17114355 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.130334243 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.101293701 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110559167 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.119924725 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104736421 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103597473 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.137876181 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100400011 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103417158 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.132935654 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104991516 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.124384778 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.110299008 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.110177282 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.130638387 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10853073 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.169657789 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.110222651 seconds)
  done (took 7.929629564 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.86352205 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141108043 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101279434 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.005012714 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149466106 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115269257 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.858648277 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145421246 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252540596 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.871227542 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116229092 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11242384 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.259170121 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.232932161 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.020087245 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.332909528 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.721714089 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.120339956 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128594803 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164959084 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10841462 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148597176 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12048679 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.420479973 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100136376 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120328371 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109198262 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111224992 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177922223 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.09947689 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125493772 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194295223 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247054656 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207720057 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122318682 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098209268 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098384654 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182855084 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270001844 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217389705 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18793112 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097339561 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098209601 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130534745 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119069543 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117548622 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158914409 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189210842 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188445636 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103293141 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135510337 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110025778 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127654589 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.157382211 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118752137 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.329891074 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.328420394 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097907654 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130141036 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115467967 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266604469 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.119730461 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23600069 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126590625 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214188805 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120212748 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.825596994 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.161207613 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120801598 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108388569 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105766093 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128199716 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107554573 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180822483 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.374341459 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13445217 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104336661 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119967181 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222008681 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123157802 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099877832 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184166105 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101038416 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128620906 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114718264 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110878156 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187365506 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250369449 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112041889 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131046755 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105694288 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132357172 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102083583 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231843592 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230629669 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177071211 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.21236307 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130161063 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180781223 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.161587543 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128556338 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.165287772 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128108885 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114400762 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128954163 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226627172 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133579966 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121823777 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105612107 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108133043 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161513649 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101769245 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131111458 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.183325204 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.434894555 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.182988056 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095827042 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126350641 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109003256 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180892479 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106492197 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261727217 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130669728 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.1624538 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129893752 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097184536 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106924253 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183515043 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132300236 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108862871 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129366932 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112674351 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.251516089 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222679314 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113253131 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244711897 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19408284 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106928824 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190975593 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108671473 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187665861 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108710705 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130388395 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101204306 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798050201 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135794163 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108648006 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105419102 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.206214466 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098784711 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122501337 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102056608 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09649361 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805522676 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123263336 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10005634 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101070409 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127237383 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109326509 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107378644 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128168075 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157840792 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264239498 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113924224 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12838509 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102196461 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178349955 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102464044 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100162602 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.121573959 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103125789 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109114533 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125787156 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102554149 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190602446 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.154948871 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.250567559 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.560810723 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102143269 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100281755 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238779753 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122903229 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299563435 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109289026 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233160254 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187344717 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.118312555 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.329845256 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18656498 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185094831 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102038343 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189653924 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096514946 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131029617 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179238281 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101575081 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106750677 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178730046 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135560673 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.114883822 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.997810727 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100076099 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250021312 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.118658901 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.164966507 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12305383 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110292332 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301448918 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099942879 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139846555 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179078521 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105364876 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105933201 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.600970171 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.122832788 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113068474 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107504123 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.256324158 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165072593 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130959352 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109264209 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.136004996 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159771926 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23380919 seconds)
  done (took 45.400597243 seconds)
done (took 61.73587452 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.297817289 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.262972017 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.305905108 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.213939915 seconds)
  done (took 2.125627189 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.270426754 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163284387 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.237419521 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098754183 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.246291453 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098641624 seconds)
  done (took 2.096659626 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.491537322 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.384673458 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.341659802 seconds)
  done (took 2.200847194 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.257128376 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250473529 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354104448 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.409773283 seconds)
  done (took 2.363727177 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.305162855 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131414443 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131498357 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.215210031 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.259077975 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.234060389 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148397986 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.197069676 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.156324932 seconds)
  done (took 2.805815012 seconds)
done (took 12.567497465 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.383861475 seconds)
    (2/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.150790502 seconds)
    (3/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.193243058 seconds)
    (4/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.322215201 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.108007716 seconds)
    (6/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.361974005 seconds)
    (7/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.240626562 seconds)
    (8/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.252805371 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.110599247 seconds)
    (10/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.328219893 seconds)
    (11/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.258946312 seconds)
    (12/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.224011108 seconds)
    (13/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.356902664 seconds)
    (14/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.106524634 seconds)
    (15/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.144113427 seconds)
    (16/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.193994625 seconds)
    (17/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.132100276 seconds)
    (18/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.271636289 seconds)
    (19/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.198912539 seconds)
    (20/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.162407049 seconds)
    (21/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.317327328 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.209530777 seconds)
    (23/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.195315912 seconds)
    (24/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.304031436 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.124813119 seconds)
    (26/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.190912828 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.135892974 seconds)
    (28/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.256364851 seconds)
    (29/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.197939538 seconds)
    (30/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.081982674 seconds)
    (31/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.184344523 seconds)
    (32/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.137114111 seconds)
    (33/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.210920037 seconds)
    (34/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.139408055 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.169284882 seconds)
    (36/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.148217411 seconds)
    (37/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.105292 seconds)
    (38/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.202373967 seconds)
    (39/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.151100975 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.10872085 seconds)
    (41/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.104720505 seconds)
    (42/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.29306961 seconds)
    (43/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.110432448 seconds)
    (44/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.182962616 seconds)
    (45/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.082786054 seconds)
    (46/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.081882672 seconds)
    (47/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.114528699 seconds)
    (48/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.083611857 seconds)
    (49/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.106384925 seconds)
    (50/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.125732287 seconds)
    (51/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.210555065 seconds)
    (52/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.108456942 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.160769947 seconds)
    (54/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.085035467 seconds)
    (55/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.165313152 seconds)
    (56/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.082625368 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.143677675 seconds)
    (58/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.155548248 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.129717304 seconds)
    (60/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.199527391 seconds)
    (61/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.203112727 seconds)
    (62/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.089426612 seconds)
    (63/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.111774848 seconds)
    (64/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.174587932 seconds)
    (65/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.201376492 seconds)
    (66/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.177610761 seconds)
    (67/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.174452598 seconds)
    (68/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084029738 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126290058 seconds)
    (70/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.129917048 seconds)
    (71/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.084008182 seconds)
    (72/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.125683923 seconds)
    (73/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.081508866 seconds)
    (74/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.169480739 seconds)
    (75/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.224164874 seconds)
    (76/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.107543433 seconds)
    (77/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.221153149 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.228994833 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107571278 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10561948 seconds)
    (81/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.180568031 seconds)
    (82/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.184868539 seconds)
    (83/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.095347962 seconds)
    (84/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.223039597 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123849253 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.131515119 seconds)
    (87/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.08451404 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105306606 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.169345662 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.118914938 seconds)
    (91/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.109068681 seconds)
    (92/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081642555 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.124377323 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.107964212 seconds)
    (95/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.083920136 seconds)
    (96/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.129103531 seconds)
    (97/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.202698901 seconds)
    (98/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.107133968 seconds)
    (99/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.106897414 seconds)
    (100/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.177989173 seconds)
    (101/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083107864 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.162221347 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124369949 seconds)
    (104/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.083335902 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.130606178 seconds)
    (106/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117613547 seconds)
    (107/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.105599036 seconds)
    (108/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.106750625 seconds)
    (109/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.083376745 seconds)
    (110/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.082338463 seconds)
    (111/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.152499567 seconds)
    (112/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099204328 seconds)
    (113/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.105977449 seconds)
    (114/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108909881 seconds)
    (115/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.186692135 seconds)
    (116/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.107074317 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108921775 seconds)
    (118/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.082032656 seconds)
    (119/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.200942398 seconds)
    (120/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.177984366 seconds)
    (121/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.08817246 seconds)
    (122/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.130062143 seconds)
    (123/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.107645172 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.107372062 seconds)
    (125/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.099779618 seconds)
    (126/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.107150759 seconds)
    (127/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.083861507 seconds)
    (128/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084228082 seconds)
    (129/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.093800825 seconds)
    (130/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.082765543 seconds)
    (131/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.172074693 seconds)
    (132/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.106906395 seconds)
    (133/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.083292577 seconds)
    (134/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.089595721 seconds)
    (135/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.12505799 seconds)
    (136/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083476038 seconds)
    (137/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.089672824 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.129966142 seconds)
    (139/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.083901532 seconds)
    (140/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085225601 seconds)
    (141/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.083647585 seconds)
    (142/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.083904699 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.150366101 seconds)
    (144/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127378299 seconds)
    (145/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.084670789 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.129864341 seconds)
    (147/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.107632691 seconds)
    (148/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.100610177 seconds)
    (149/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.094141778 seconds)
    (150/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.132565433 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109922892 seconds)
    (152/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.083059975 seconds)
    (153/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.133431536 seconds)
    (154/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.083359419 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.107565216 seconds)
    (156/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.1456542 seconds)
    (157/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.106191885 seconds)
    (158/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.102269534 seconds)
    (159/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083417511 seconds)
    (160/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.082663278 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.133163073 seconds)
    (162/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.084774207 seconds)
    (163/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103743824 seconds)
    (164/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082846195 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.136709567 seconds)
    (166/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.109916616 seconds)
    (167/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.101831814 seconds)
    (168/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.124543454 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109071621 seconds)
    (170/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.088498384 seconds)
    (171/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.12964249 seconds)
    (172/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.084646276 seconds)
    (173/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.091069399 seconds)
    (174/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.128522613 seconds)
    (175/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.084724677 seconds)
    (176/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.108001601 seconds)
    (177/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.186248124 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125020109 seconds)
    (179/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.218242313 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.107923023 seconds)
    (181/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.115358271 seconds)
    (182/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.085523201 seconds)
    (183/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084365096 seconds)
    (184/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103165001 seconds)
    (185/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.107636761 seconds)
    (186/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.085058444 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.10834411 seconds)
    (188/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.112821973 seconds)
    (189/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.133291654 seconds)
    (190/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.084098083 seconds)
    (191/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.083366541 seconds)
    (192/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.083480422 seconds)
  done (took 27.709428979 seconds)
done (took 28.695553963 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.217232212 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129504198 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109456357 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108781917 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.206407358 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11540521 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.144574596 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112405732 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.114162426 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.131833253 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.10170861 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.117375763 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.131517072 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.178613705 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.136090403 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103694693 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101160221 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.138656386 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.11992818 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119127487 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.206296702 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103388643 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.13918646 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103343576 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.181135485 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.13013659 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108731344 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.108963078 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.141495148 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.108172351 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.108906168 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.125695055 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.119936222 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.119443526 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125709163 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.109921987 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101352643 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.112326676 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109360941 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.110767441 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.116192282 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.133469348 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11073109 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102378548 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.13450933 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.108048731 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101194906 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138001766 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101525255 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.108018861 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1285861 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12326708 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.107451393 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.124574977 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101472443 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102747846 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.139240461 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103346297 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.118968868 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.12503076 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104369336 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102689338 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110311025 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126593253 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.109170522 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102261482 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134910049 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112468469 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.106809858 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128901708 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103472051 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.108432541 seconds)
done (took 9.817748251 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109626271 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.158057235 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.203866089 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.215194676 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130693157 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.141669131 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123805923 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.131721962 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.144985572 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126477193 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.16037842 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131050387 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.214381949 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.114495125 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.140096636 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113659454 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11652422 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.139307644 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.19227429 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.149177724 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.132850853 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.113854155 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.160211365 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.124565522 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.133245159 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.140454354 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.108402258 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.136301087 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.109491926 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115937744 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.150315538 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.10965926 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.10698194 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.154634507 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122356144 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.138265233 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119444561 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113512364 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.130617914 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.109285378 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115155498 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.151026202 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10870317 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.140232592 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115757226 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116800939 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.140295276 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.117766587 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.112089256 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.135124084 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.113651112 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133882153 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.139230908 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.117664863 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.115386108 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.140900299 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.117303789 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115348472 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.133654155 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118127596 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108150154 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.134828516 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112973594 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153794487 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110926016 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.115987602 seconds)
  done (took 9.743789944 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127524007 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137836046 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140972683 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118064807 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110023872 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124981449 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100581613 seconds)
  done (took 1.896135505 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102916153 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.189353276 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.212083674 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211100345 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.20659535 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.197599553 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147048315 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101957909 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132117966 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137147635 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.189266701 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.243263728 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.132247721 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.117089787 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.212606896 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.101685742 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.215167703 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102538529 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113557341 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.213110251 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114505849 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.154593317 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.114519648 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101189022 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210545495 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.10263427 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.26600646 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14298489 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109973896 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116414811 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112538146 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206147373 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.211295038 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115559928 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106103565 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.211045012 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.207721766 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113306474 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.226411594 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105665151 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.21102619 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.113636272 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.140951254 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.115750255 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116669353 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.198743252 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.1202304 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.138693772 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.114992709 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.218725101 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114231783 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.210823045 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.111500508 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.112903175 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.1358062 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116051581 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124408603 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.137988015 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.197743433 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.139527551 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185790115 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.211544211 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.212396736 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.189169252 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148251895 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.188683115 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.20841036 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.112353656 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.135462167 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.115063822 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.214805398 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112718339 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113135988 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.201404018 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118622332 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.212983315 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.213621566 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112254525 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.113851013 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.131402932 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112411628 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102464541 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.203686277 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112043093 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.1348466 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121819187 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114218416 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.137591715 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108870851 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.123776739 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.137971702 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.113798827 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118813947 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.139321147 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118419731 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.216542935 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.111689415 seconds)
  done (took 15.738813038 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107827806 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104822157 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108055046 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128785579 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103685889 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10379455 seconds)
  done (took 1.712155692 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144205972 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115013925 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.148574626 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.116187402 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.167160784 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.219221461 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.228236307 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110997574 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.157397955 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128495748 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.220250274 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.202084387 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.228254331 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.116593779 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.227479714 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.143822543 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.204368288 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.137466057 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12603943 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112565688 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142298212 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121208007 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113702072 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.213858137 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116810973 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.144686818 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111970749 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12652562 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.149478594 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113530516 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.117931958 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.142961799 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110422565 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.134233373 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.205699114 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.134161077 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112343685 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123781268 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.141215585 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119547866 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.228388827 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113770402 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124266959 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.150624715 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112835364 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109200061 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.150643962 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112467409 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.228504853 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123556359 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.149299917 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119136006 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117392601 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.149719968 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.11178621 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11157123 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.148373607 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.207110428 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.143979008 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110884768 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.114410408 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.143988355 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11266997 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121958466 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.143041078 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.124712805 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.133260785 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.118917933 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113335727 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.139697461 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.128043908 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.116493824 seconds)
  done (took 11.341159617 seconds)
done (took 41.460125002 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.538623653 seconds)
  done (took 2.587162628 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.908628975 seconds)
  done (took 1.961796868 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.634644544 seconds)
  done (took 18.718349312 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.525588315 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.603966685 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.032320959 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.153801393 seconds)
  done (took 3.369357484 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.012855602 seconds)
  done (took 2.086627241 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.295710274 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265799111 seconds)
  done (took 1.621517617 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.737383529 seconds)
  done (took 1.810508134 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.53584088 seconds)
  done (took 2.594726465 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.361836213 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174970882 seconds)
  done (took 1.61179315 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.630887352 seconds)
  done (took 1.708144447 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.224443463 seconds)
  done (took 20.29999913 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236973116 seconds)
  done (took 1.317395687 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.285263643 seconds)
  done (took 1.362935998 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.559984074 seconds)
  done (took 4.640467016 seconds)
done (took 66.752341111 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115366665 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117775937 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.116913673 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.140999546 seconds)
  done (took 1.559865702 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123983215 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118687696 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145023951 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119838785 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.1250589 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117631802 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143442169 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120799345 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117806113 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145702122 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.11970943 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117801474 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145565572 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117402295 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117408888 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145704219 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123193522 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11897548 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.144678116 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120397367 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119129689 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144881591 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12253733 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121406111 seconds)
  done (took 4.138283532 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115780303 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108593078 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109357125 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132095724 seconds)
  done (took 1.550681923 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128178208 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13115136 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153392432 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127234919 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131562587 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154073874 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11820446 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114250132 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141693529 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127197607 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134956069 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156759195 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130505195 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120053829 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154458995 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11235461 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119231558 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156153567 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12595706 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.150235656 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120775183 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124803305 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.148005164 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128151312 seconds)
  done (took 4.291002936 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.191742477 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.127204004 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.166621513 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159419325 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.168068464 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.113328127 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.137314458 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.145925141 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.119912966 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.139661281 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.118788647 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162347098 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.144164309 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117341548 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114298938 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.145328756 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.126187595 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.119740204 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.181155167 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.119139016 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.145716046 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.127252397 seconds)
  done (took 4.179412622 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119674402 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107728347 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.127149628 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.112893796 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119342362 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.134078196 seconds)
  done (took 1.811845308 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107649712 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102604865 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101792106 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127768679 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108206245 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102311956 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.125130431 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.103802944 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102884605 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102655109 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126506225 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102082592 seconds)
  done (took 2.39699405 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.344800353 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.1080283 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134187976 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109232939 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.11402235 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.10451741 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.148772874 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107062995 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.27127712 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.107440288 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.14642735 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19618665 seconds)
  done (took 2.983482025 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206046869 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141942923 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29732229 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365873313 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16412478 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184363078 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267361957 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186589604 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200229546 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133716847 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241575314 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151900708 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176212519 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1702591 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162088513 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158764293 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192043755 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187686532 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171520657 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220561745 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152853045 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188585417 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176858623 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171701407 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131583436 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185383755 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115056444 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126635854 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192657152 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186836701 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166150704 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171322498 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136819888 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21640152 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256400971 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167841142 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.308742209 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130347228 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199240765 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.180862041 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253988083 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161690195 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183730822 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176367796 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12609954 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202413983 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149003247 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.197096601 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.126618233 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164860863 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175843731 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197429859 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199970404 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133644167 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310381151 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162143935 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.165709526 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170219888 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207022017 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213137814 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162654518 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.145300366 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205064051 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178903575 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202627023 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.137421444 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187501852 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121495264 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187701506 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189949586 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201707576 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180323781 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.193217745 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154320903 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153634856 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195075183 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175038311 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19943885 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178143845 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.11844613 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145932716 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156423258 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124144439 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.223323188 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11941412 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220096284 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130600756 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.343542548 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208563893 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154748927 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18094907 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155070648 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182792731 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140632268 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.10912177 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169851416 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158550123 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178212089 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127767084 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179467233 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134892029 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.150566664 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14836887 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.117872817 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180392606 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131054854 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186638145 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152762329 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.152473117 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160779998 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170852868 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149067382 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190953244 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202698229 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12875329 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128081085 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211848843 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152131528 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.154373021 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173184026 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206374243 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145579533 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159253634 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160463329 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210712189 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162356055 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185030624 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158804289 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132955531 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.142546819 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183403976 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177863497 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15312477 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123531033 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.173430267 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216916475 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125347704 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132659966 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191611689 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127784606 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148911561 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13535316 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131007072 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.163511701 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.139855812 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.156877474 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150048863 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179913187 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151780197 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179140133 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13136446 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200602554 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129202877 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.181681823 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142387289 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.113916979 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.196859243 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206789422 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126077664 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225789985 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.157875829 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217020717 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182981583 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128665482 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200552853 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123166704 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.115564888 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186411483 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149816006 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184209589 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199855975 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210763456 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163238973 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.170524436 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14470782 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190035688 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.171381373 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176137796 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140018437 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181248364 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159983019 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.144007956 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120757749 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.12243949 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160574526 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126886725 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130076026 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198132306 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185460065 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206655625 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154941854 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161632168 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180201164 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.147703181 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159102318 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.185854384 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136946294 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.204180258 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177251759 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188937452 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13705071 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184922005 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.11604862 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123160631 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.155848106 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159493903 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158980601 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131829855 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164940667 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179823656 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196127459 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143546945 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221243061 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189027684 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216568296 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.11710509 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16267099 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195260914 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153001764 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.20550884 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134173564 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.18180366 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174281898 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164378333 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184890211 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180720181 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158093067 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210888115 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.176852947 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127587029 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144249554 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183981751 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133110955 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188960364 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141336141 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153938536 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14875271 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.15913266 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121526317 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207141752 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139497127 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193920105 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157023757 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192731268 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121789197 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164931222 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156370013 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167166629 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114448846 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165600066 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207224 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167435642 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154127387 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199296529 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126427377 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.34098185 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184379166 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201618944 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129468767 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164866802 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15662252 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187727287 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15763566 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202659457 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135257173 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202895872 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179118143 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140595003 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127110983 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171262572 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146884253 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.171109532 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128186285 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177253203 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139057102 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207354499 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134955976 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182618792 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156353205 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.16912036 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149551878 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135781735 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219180975 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177505713 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173076683 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.179006568 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.163081 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215120681 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120191229 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149803721 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.12956752 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202643812 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12942489 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157403128 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.204280062 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217352954 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187512789 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158958881 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161299865 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.123407296 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152514125 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173420491 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214980857 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133238476 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159330289 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189470684 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.160463966 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128201525 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182685546 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278953739 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170566158 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169757898 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.14495785 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272337422 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152788019 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130065846 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184923266 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167826997 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.15411841 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178781096 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158100409 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166709891 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158911919 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160569981 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208940642 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190165616 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19245129 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194077148 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14263264 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155082787 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185328402 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199982935 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139748402 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.167584609 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160752131 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203882569 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.178732822 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.154807927 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155989531 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180577745 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15471381 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19360135 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133692489 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215045749 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12509689 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186079079 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134735476 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120188635 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181131994 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.202160027 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129702965 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202274095 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154646481 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155358347 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12287365 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140899406 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18113236 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134062434 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.154232162 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179320499 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.154211745 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158355512 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204091725 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127122731 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179466006 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14322862 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125973664 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165018758 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137886198 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154989691 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167540455 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20624847 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128842552 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200334251 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1610914 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187936116 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153295475 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166790302 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663371939 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.123301123 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20638689 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14211016 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211219562 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173379474 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159395237 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18321198 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145451619 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187927458 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144655778 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.264653119 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159927549 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179852041 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128292365 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136384401 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163813188 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.12832629 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176560796 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153922501 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164409561 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131868126 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.18011685 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140551121 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.140087144 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162790661 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178771911 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173134829 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206761524 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179840126 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160003991 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159808974 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195353232 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127360236 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.18739616 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170253837 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164232918 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144932008 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.128076916 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.162890908 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175993206 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.149534816 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155694472 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185286672 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155685865 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182970991 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131907772 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184167853 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137817646 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182337384 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124761827 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148971933 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183496271 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130065444 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.149484278 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15634925 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18082478 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.154067116 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121626529 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.19450279 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181349828 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.14640941 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132091123 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29751209 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155914053 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214547186 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.143672353 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158410807 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141933746 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176918891 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.152420905 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181074142 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128633573 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126804466 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.151833563 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.171106936 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.177354576 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157092029 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201001682 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158215741 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217783235 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.130856179 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.318231421 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136125699 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181261122 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.125567732 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.123897157 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165773952 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131253034 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135511015 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215254864 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205939565 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.14955462 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.169582453 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130774679 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.122564376 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156197881 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159831179 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176896859 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155420498 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168118054 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.112084347 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138496802 seconds)
  done (took 82.596400797 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166081929 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.1522293 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.16790943 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.226039542 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196116155 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.300450453 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.235167183 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264305101 seconds)
  done (took 2.881888906 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121584442 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157311019 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140062581 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144432418 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.11848998 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.445436544 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.15680722 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.11945619 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.166168787 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.156988402 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.141365052 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.62262003 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117389941 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145014677 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.127853618 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.119960128 seconds)
  done (took 4.16883802 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.361824029 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.573662578 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.002288011 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.274892022 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.231237878 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.180374286 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.770968345 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.191308097 seconds)
  done (took 12.763218105 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.635329139 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134506786 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.317985872 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.261452461 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.151056796 seconds)
  done (took 2.681983037 seconds)
done (took 129.070992411 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121923171 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120471746 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119475766 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151100283 seconds)
  done (took 1.680062594 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.18564402 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.094281567 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096408348 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120032525 seconds)
  done (took 1.676613675 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.450061606 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093513968 seconds)
  done (took 1.748023863 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.148298107 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.144335326 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163796816 seconds)
  done (took 1.64753931 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.140853659 seconds)
  done (took 1.316821207 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.128240558 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119864875 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.238612966 seconds)
  done (took 1.66957283 seconds)
done (took 10.922957915 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121152028 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.502938627 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432127712 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135695643 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.71164331 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425969205 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.018834735 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173372902 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175139072 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136780907 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132908873 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688148131 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.069165205 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.449988347 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.025610175 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.381857125 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694629992 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110782248 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145108194 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111833075 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.999542469 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137021318 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112167132 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111971119 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.717299047 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421373133 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108018485 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.395210914 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108529221 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113051252 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.426934587 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110117037 seconds)
  done (took 17.575998235 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119016845 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173440525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144844077 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11180382 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112595215 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138043552 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122731419 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121528291 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205984893 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109591969 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161556582 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110379953 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115185233 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138167178 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136077638 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108780595 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139597578 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114022222 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118311415 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.138898478 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13348855 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109096197 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.139138066 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113617609 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109406711 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158778981 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111178086 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121183131 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137127165 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114076428 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.1144826 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.136672011 seconds)
  done (took 5.330251164 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.158848638 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181384829 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147060915 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14835117 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185264878 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112515292 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222096538 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150221692 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202263461 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111315744 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132715274 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136683558 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152328696 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11099081 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164929184 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110761722 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113140455 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140809092 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11887063 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111858036 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161754503 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109339907 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110899447 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140224684 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109217779 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160401936 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111414728 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12263081 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.135620236 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115720476 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115816114 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137488144 seconds)
  done (took 5.628475261 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126121756 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.1263139 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133348272 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162299668 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121072005 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125719433 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153146018 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.1224858 seconds)
  done (took 2.258227915 seconds)
done (took 31.974990202 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13495348 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127190998 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.127748334 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.149585019 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.194386455 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.143331411 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.12570672 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.113734393 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.149378389 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130310314 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.10981947 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.142329287 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.129757265 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118195555 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.22572155 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.122904641 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.230550337 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.195155245 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.143748229 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.122761137 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.114534089 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.23241033 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.119698692 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.143828179 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.2064035 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.140770534 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.188177863 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.117109512 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.146914582 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112910356 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.224951166 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.119708384 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114121979 seconds)
  done (took 6.100659709 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.215672441 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.117265842 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149024554 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119310001 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.117146383 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146461793 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.215607195 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147646492 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.12068162 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119161713 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.119444277 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.22537462 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122305827 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.140732655 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.118183638 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.114420631 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.246179181 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.117647013 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.110127887 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.123988468 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.111794463 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118378925 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.255425172 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.110417895 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117695736 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.148230665 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.119196512 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121491248 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.146589601 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.118919521 seconds)
  done (took 5.478126346 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.127379047 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131377402 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.164218262 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.188234614 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146878529 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160408053 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141006654 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133494294 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171661348 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112274559 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127254439 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178922193 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129961216 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122219076 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145206102 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132321205 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134845154 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.141976038 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120382469 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130764779 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162595005 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131574698 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140085036 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150294057 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110921663 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118531763 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.150825286 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127975612 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119814668 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.155175527 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.114862913 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.11545765 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.142139033 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.148746858 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113252822 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.154292709 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140146704 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124116653 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.156418357 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.14571866 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11543119 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.144905779 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139542233 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168231191 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.143318229 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126495203 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123613746 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.155030678 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111306537 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131203902 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.185836802 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.112220668 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132467078 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.142882376 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111716871 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119943867 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.14143331 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116883891 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127169702 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.142687528 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138595973 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119827877 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.150381216 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116178173 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123067951 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110744173 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.140414846 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116706512 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138899918 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.148972861 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.14899554 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111393477 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.153102427 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125365072 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122669301 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.153056408 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112272379 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125281283 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.151927576 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.121067175 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125334482 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.141763152 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118017913 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130430439 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.161036629 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.12914187 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124437374 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.153314421 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117517103 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115120061 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129280726 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.142560033 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119198182 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125031653 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.142037062 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117361699 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125968404 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.15411261 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111859382 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.1394558 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.145339167 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113857642 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137533609 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.145583891 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121040642 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122325979 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.18172301 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114461357 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124437751 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.153748761 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114280933 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121418643 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116100834 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.140933316 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131275084 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128227619 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.148780972 seconds)
  done (took 16.978317767 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.328037264 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.313615733 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.181992098 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.315077727 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.156178393 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.2123383 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.310129615 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.311850901 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112227892 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180137868 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.19475232 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.250420485 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.143632373 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.141494837 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.31539138 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.366175612 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.172782517 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.15073237 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180811083 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127643274 seconds)
  done (took 5.673569626 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.13523921 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148851263 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16566689 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14409414 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.11987041 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.156979763 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112489711 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.131643694 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.150701878 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123844275 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115266053 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159203321 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.122982497 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127792477 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158419749 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150956537 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120923688 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146778336 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136816756 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117715078 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135337254 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141609603 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122133249 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165697323 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.129686848 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12552099 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.141725455 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118941324 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117193855 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.148291203 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118590667 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133908325 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.147972412 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108558392 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125704845 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.157788847 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.1187846 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.11533488 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117697997 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.146889693 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128917787 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12416213 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.151261914 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102826956 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.130779845 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.114824061 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.152255768 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127693116 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.110245317 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.157734708 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127741927 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124550233 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.147040606 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.134731676 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.117734339 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129525989 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.155941193 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124175745 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.147402378 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113392288 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112379883 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116920474 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.148570593 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.125005068 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126035696 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.163201838 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130654478 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112329111 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.147004119 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118235616 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118344512 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.157312818 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.135619224 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.118816198 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.146728035 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.128127155 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118503514 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.097406488 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.152234104 seconds)
  done (took 11.709009125 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141326945 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.119380867 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132798766 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.18052248 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.124513887 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119378682 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.150337444 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13497546 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123386702 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.15737911 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.12460241 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12637201 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166977748 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.122798886 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.119244553 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159940429 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124173024 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.153289133 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163108651 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.14250231 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.152681809 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120872499 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126547744 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124863106 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173223527 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.12527764 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170094248 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.125405637 seconds)
  done (took 5.13237415 seconds)
done (took 52.266575198 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.337086978 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.539652692 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.312654339 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.311086026 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.311220082 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.34400194 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.310313782 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.3105769 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.714868944 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.288957203 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.313056714 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.309668442 seconds)
done (took 29.621697481 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.408481509 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.827230929 seconds)
    (2/2) benchmarking "String"...
    done (took 1.599571274 seconds)
  done (took 4.634490477 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.306612668 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.306784393 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.528602331 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.306941034 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.312963757 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.312373026 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.307675831 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.325355901 seconds)
  done (took 16.609134215 seconds)
done (took 27.164848368 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.336828248 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.493149591 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.560139112 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.308244015 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.309592233 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.309748699 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.305543477 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.326578617 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.322067922 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.314009072 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.699049748 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.574109838 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.321463776 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.696306112 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.30877109 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.330575933 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.320468196 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.531781452 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.310690551 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.352010164 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.289369109 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.296682341 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.345690698 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.311294314 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.308387679 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.313137631 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.361061391 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.317457135 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.488080615 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.310354511 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.337853252 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.311976449 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.344186216 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.310794737 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.317667014 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.32181308 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.491606582 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.316469503 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.297228023 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.314543775 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.488545135 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.321265059 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.314464247 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.310628713 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.311392558 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.326158255 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.29692023 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.414087803 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.331403036 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.325718786 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.359732018 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.684895001 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.316437445 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.326311265 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.310937057 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.521964381 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.316315216 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.355661909 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.329870806 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.326479559 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.311937478 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.306910928 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.35978676 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.31032941 seconds)
  done (took 150.525723977 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.307924094 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.310454388 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.310208132 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.369629015 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.310150445 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.312210688 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.308088715 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.307911076 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.311911968 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.339671399 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.312394076 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.308366273 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.311259883 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.325852171 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.314021239 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.328809344 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.312025577 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.308046164 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.324736828 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.307809558 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.332037323 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.311416837 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.323043712 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.306970995 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.338661565 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.379356539 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.313851359 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.320868871 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.316232682 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.306291623 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.336745656 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.309645816 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.858652732 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.17448441 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.31397993 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.335230692 seconds)
  done (took 84.127001777 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.306567434 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.307374806 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.307345472 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.335808818 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.306730836 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.819295607 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.826910671 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.020595961 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.517190796 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.310094752 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.305501164 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.475879662 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.509090885 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.306686311 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397656497 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.320827557 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.307770285 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.323441733 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.333815286 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.312095387 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.307118832 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.820218127 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.323174521 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.535614276 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.475301961 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.321941856 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337989372 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.699121472 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.306806886 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335963206 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.628869008 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.350957464 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.30624364 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.625011478 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.680983713 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.420160405 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.308770022 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335637241 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.307838285 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.580937257 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.307313003 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.307741472 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.310240309 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.918293386 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.306340147 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.816936808 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.310150808 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.193197673 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.307839929 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.308726664 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.439906434 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.865408873 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.312381519 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.307881462 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.310329169 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.308891824 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.307647155 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.337495591 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.402887992 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.401589774 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.307943258 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.311867753 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336188957 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.308920026 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.434207178 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.309089221 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.308258571 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.36305143 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.560696028 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.519257933 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.814796427 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.312733315 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.402363203 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.425375575 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.308028611 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.308822102 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.308717765 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.30945452 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.415517985 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.30801403 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.676112221 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.474220557 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.323789306 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.444511731 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.404948253 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.309570705 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.607571676 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.31339647 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.308889187 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.982862169 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.40340578 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.309882838 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.309874761 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.309783239 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.678966657 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.817992893 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.48656774 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.312892021 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.590457444 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.312439635 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.691358267 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.804910832 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.931340287 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.315544631 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.42092309 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.4764666 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.326193396 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.310546826 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.311073006 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.310971382 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.447954814 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.314443675 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.369007188 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.715137342 seconds)
  done (took 375.751178464 seconds)
done (took 611.612326067 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.179165787 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.134310975 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.275741809 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.144913196 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.123261683 seconds)
  done (took 12.070175541 seconds)
done (took 13.282570311 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.488856965 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.494668935 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.371383012 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.490862741 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.344527509 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.503836192 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.472707608 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.334299284 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.417434913 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.385512166 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.417877323 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.363237217 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.346364561 seconds)
  done (took 19.644493065 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.579894033 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.318076773 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.380080998 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.577080705 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.355895833 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.581593358 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.624184881 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.319726887 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.461965329 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.338513676 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.331011505 seconds)
  done (took 19.083281251 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.588208469 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.319024434 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.374101264 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.576897045 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.35293914 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.58354881 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.62957804 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.319449088 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.468682177 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.332979399 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.330620406 seconds)
  done (took 19.089921486 seconds)
done (took 59.029286873 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.394138827 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.702625608 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.345996719 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.33922452 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.326338323 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.331703761 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.339421938 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.329312019 seconds)
  done (took 12.323336279 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.328105009 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.327328104 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.326562003 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.326413639 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.325845836 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.326730852 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.326845627 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.327055801 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.324689791 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.328320261 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.325718378 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.327410011 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.327160987 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.328210674 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.325293685 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.328114738 seconds)
  done (took 22.4457008 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.328585459 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.325288229 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.325926628 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.327016436 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.326679846 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.32718012 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.326152598 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.327211514 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.326845916 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.326194185 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.327315787 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.327185525 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.327579451 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.328530317 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.3291633 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.329917286 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.329329126 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.32743389 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.332869575 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.328855108 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.326245439 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.328427914 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.328599019 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.328286872 seconds)
  done (took 33.081752188 seconds)
done (took 69.06390901 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.326669498 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.330138296 seconds)
  done (took 5.872390429 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.387412472 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.385040927 seconds)
  done (took 3.989176122 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.331087316 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.329584056 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.328997157 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.328087252 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.328295591 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.329606381 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.329074557 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.329436003 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.327755779 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.328414589 seconds)
  done (took 14.508662447 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.329631456 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.330597568 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.329689844 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.33253747 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.330688029 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.328102722 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.329596739 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.330376816 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.331162242 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.329470748 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.333093211 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.330056889 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.330063052 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.330758846 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.33016583 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.329301328 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.330040811 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.330535093 seconds)
  done (took 25.164425431 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.342637479 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.351512588 seconds)
  done (took 3.912051482 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.470839864 seconds)
    (2/7) benchmarking "second"...
    done (took 1.370863645 seconds)
    (3/7) benchmarking "month"...
    done (took 1.44610157 seconds)
    (4/7) benchmarking "year"...
    done (took 1.435268189 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.372500886 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.351099034 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.372123956 seconds)
  done (took 11.037771964 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.330306866 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.541686999 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.664392923 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.879669052 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.332649864 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.334594419 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.174105853 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.333238649 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.337099419 seconds)
  done (took 15.145862948 seconds)
done (took 80.846551886 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.320393796 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.354172775 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.345799576 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.344293913 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.626429434 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.357131657 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.326047973 seconds)
done (took 16.894537685 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.309573931 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.316737647 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.307435052 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.321329273 seconds)
  done (took 10.475050973 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.321487273 seconds)
    (2/2) benchmarking "read"...
    done (took 1.611719108 seconds)
  done (took 5.151935349 seconds)
done (took 16.846414993 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.335701196 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.334375788 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.335474265 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.334294044 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.335309768 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.333017119 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.333898781 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.334669539 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.333054318 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.335942075 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.335306751 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334379623 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.331785271 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331118372 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333292935 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.332888423 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.332264936 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.331648202 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.332431435 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.332056335 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.334105331 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.332924799 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.333802687 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.334138946 seconds)
  done (took 33.228184789 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.333087669 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.334819186 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.334443575 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.333185925 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.332971842 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.335007348 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.334509047 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.333079898 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.337065631 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.335318863 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.334790028 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.333234344 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.336728401 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.333788245 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.333496278 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.333832717 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.334854914 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333379686 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.334474441 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.333943132 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.335066528 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333086072 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.335256639 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.33433927 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.334698892 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.334155445 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.33566561 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.335173717 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.336128382 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.333840117 seconds)
  done (took 41.254642378 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.338822288 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.340003123 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.333075309 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.335589673 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.337841022 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.3354022 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.336121257 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.333436871 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.328920816 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.329319702 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.329081013 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.329508707 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.328536006 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.329606565 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.3301072 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.326677424 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.327988483 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.32884018 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.328375265 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.32735131 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.328957062 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.328332779 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.32976082 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.328840202 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.328080605 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.329199435 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.329345273 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.328570785 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.329113537 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.326974927 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.327970601 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.328546528 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.328091731 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.328700181 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.328026646 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.326945006 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.329648621 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.330126317 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.324888233 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.324934118 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.324127764 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.325532014 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.325054035 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.327378932 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.328026574 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.322869571 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.3236932 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.322903028 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.321934006 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.322364608 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.322956604 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.321494567 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.321217577 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.321073072 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.318774212 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.321223478 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.321184406 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.321180016 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.318310278 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.320505457 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.318419005 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.3188102 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.316804627 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.318083315 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.317615899 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.316025176 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.316793486 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.316141407 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.313138587 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.315615393 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.313246636 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.31460586 seconds)
  done (took 96.672377975 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.311875423 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.310517954 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.310530865 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.30790076 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307826795 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.309865515 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.30803985 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308730782 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306948812 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.310416614 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304110746 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.304770862 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302996846 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.305811037 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305902094 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.304519994 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.305546793 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.304786168 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.302005964 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.301980547 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302028434 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.301426881 seconds)
  done (took 29.940766481 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302073485 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.304649057 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.300426968 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.301153246 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.298026775 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.298897231 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.300121577 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.300925436 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298320088 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299185145 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293993807 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295510565 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.29630812 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29405398 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294805207 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.296167681 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297024168 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.29817044 seconds)
  done (took 24.564689753 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.293613789 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.292197995 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.293745553 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.291691721 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.29237729 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.293323674 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292534355 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.292134551 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.292533882 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.289917105 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.292118931 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289852825 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.291133005 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290738591 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292522739 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.288816928 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.289308987 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288155569 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290581539 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288291346 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.289192686 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289734752 seconds)
  done (took 29.592406022 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288374917 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287641734 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28728969 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.287040731 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.285397734 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.287217384 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.289191496 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.286003003 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.286874287 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.287350221 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286086727 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.285161091 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.286488144 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.285113297 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.287036593 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28424759 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.28455875 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.283265323 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28539571 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.282470092 seconds)
  done (took 26.905480519 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287131209 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288524949 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.283600689 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285063767 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284510907 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.285617724 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284687157 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28522327 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285703257 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286851816 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.282279473 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281690292 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283556807 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.286247752 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282504707 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283880101 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284463581 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283563626 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281551088 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280389491 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281873579 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281487119 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281144087 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283119598 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283569949 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.280130109 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281068207 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280249456 seconds)
  done (took 37.119933343 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.278814431 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.278092987 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.278201791 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.279322 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.275952166 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.276685255 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.27743031 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.277028159 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.277665023 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.277888945 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.278340049 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.277662688 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.276925253 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.278061544 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.277197456 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.277863626 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27660269 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.276306683 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275465093 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275667045 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.274358906 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276669276 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.277422853 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.275518275 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274405248 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.276377931 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.275429245 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.274433912 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273850761 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.273115334 seconds)
  done (took 39.474829519 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.294131274 seconds)
    (2/2) benchmarking "in"...
    done (took 1.294101989 seconds)
  done (took 3.757867248 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.272582922 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274770985 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.2722381 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.270519547 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.270807393 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.272475593 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.2718827 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271363763 seconds)
  done (took 11.346366649 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.268665902 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.271163744 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.270099455 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.269544375 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.27180759 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.265017648 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274026639 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.276310113 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.26748934 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.26632935 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.268291556 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.269413365 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.267380331 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267085941 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.266091 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269467835 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.27260739 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.269131872 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.270453149 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.269309991 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269993451 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26754616 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269865165 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.273052415 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.266046013 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.272896552 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.270639197 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.276883025 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.264569341 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.269488492 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.266975539 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.271288096 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.270133531 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.269620181 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.269008858 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.270100612 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272393658 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269601184 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.27174073 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273934182 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270824663 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.268849235 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.265070481 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.267014286 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267661427 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.272122912 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.270101885 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.269733828 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.265424544 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.268832563 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.27279054 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264111179 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.269154264 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269359384 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.267763849 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275384272 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.275847685 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.269060825 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.270381858 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.273562183 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.280259428 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.275867098 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268350175 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.27324642 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275314889 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.279732916 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274672961 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.27388532 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.2717391 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.271969376 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.272018835 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281172667 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.277259648 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.273096753 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270857617 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.27045427 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266761797 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271758424 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.274200532 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.273085738 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.27234911 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27093402 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274233207 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277332441 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.265822871 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.271792734 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.272242675 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.271702656 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.265337875 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274075452 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.276639107 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.271005018 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.265260415 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.266542206 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.2685973 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.271593465 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.265047775 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.266702563 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.270281183 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.270423525 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.271006418 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265304486 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.270482549 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27104904 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270682293 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.272459569 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.272553612 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264739924 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.271523818 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.272973601 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270122446 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.266567859 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.268302121 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.269577316 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266894499 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.270819478 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.270780565 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.266454113 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.273788733 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.27202011 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274153247 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.281442027 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.274760885 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.271398682 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.268960678 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.276949494 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.271571383 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.270165947 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.274829611 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.269581716 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.271055866 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.267882543 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.274588871 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.269048078 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274849315 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.26746137 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.272615056 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.271271153 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.27362567 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.268378586 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.269427841 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.268767021 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.269045405 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.271721356 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.275637057 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.268904476 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.276145171 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.270367817 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.270439999 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.271122801 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.27464236 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272586043 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.269492635 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.275514453 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.267744104 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273123377 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.2676843 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.275769589 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273951153 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.273435928 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273097195 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.268123326 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270570002 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.273508351 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.271367317 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.269663091 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.274294747 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.273208757 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.272197765 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.267714297 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.272900854 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.266725204 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.270705012 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.277698883 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.273768263 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.274591737 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.270023987 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276320427 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275286281 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.274924885 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.271740859 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.273149131 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.276003342 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.276175602 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.278920119 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274255612 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.275248584 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.269230291 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.270437445 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276199861 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.272039903 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.278785997 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280488527 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280984509 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.274957894 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.278221342 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.272555225 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.278921029 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.273712671 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.278599802 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.276898951 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276237708 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271753144 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277473801 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.270809794 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.278174051 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.270467172 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.276784179 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.275220956 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.274448182 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276839382 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.27078525 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270552992 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.2746399 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277196591 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275741182 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.270779871 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.276306068 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.269956176 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.270083438 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.276764327 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.276122079 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.27710695 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.27846535 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274138272 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275207607 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.273549903 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.271850674 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.278103727 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273028635 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.275104468 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.280339604 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.277507143 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.273561156 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280097403 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.276727458 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.274296713 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.277517286 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.28120111 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.276918846 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.275661491 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.282961937 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.280924037 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.279027358 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.278763954 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272014571 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278865406 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.280143796 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.280238101 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.272282705 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.279653912 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.276058452 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.27622511 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.27292641 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.27481202 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.27386911 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274940395 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280368519 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.278469958 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272982041 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.277077261 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.275700388 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.27588563 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271615435 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.27919205 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.274963991 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.271559739 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.27261062 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.267846894 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.275347287 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.266783617 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.274631355 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.267698913 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278883052 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.282891843 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274341956 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.270332568 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.272907934 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272946908 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.270399483 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.269304869 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26788552 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267874543 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.270981471 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.267896273 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.272231144 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268055575 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.273567314 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269659801 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.27025404 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.273715367 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.273380347 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.266825142 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.274354787 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.272993038 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.273092656 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.266701072 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.27396754 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.269061772 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270385057 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.267464699 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.267322506 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276082775 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272158535 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.270248903 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.270322179 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.269355058 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.268933128 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.269148635 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.275237355 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.270312061 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.277507489 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.270115164 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.274167013 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.271011213 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.275316431 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.278778569 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.271369402 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.277900287 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.272910011 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.267133545 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.269159392 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.274859563 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277330474 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.277879838 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.269225622 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.277040963 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.2733266 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.274701911 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.275220501 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.275115277 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275930837 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.274907431 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.278369785 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.275379638 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.273585263 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272904109 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.277142949 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.276851309 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.276200649 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.269477646 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272842016 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.278520636 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.272152121 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.271392449 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.271601795 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.275897992 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.275526412 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.275740655 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.275077349 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.276138552 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27760778 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.274120328 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278714724 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.27678165 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.276161172 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.280798692 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277845857 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.279789468 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.271425811 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.278561853 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.276009401 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.272487308 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.271834345 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.272743945 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.278044214 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.271417005 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.283041471 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.278157663 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.272379355 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.273277637 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.280984869 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.271641746 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280698271 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2913539 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.273122369 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280018495 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.278235801 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.274082828 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.280624937 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.276909359 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.27223646 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.27579462 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278633151 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.28126517 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.274265891 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.279390174 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273629271 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278572626 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.278460831 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.278019107 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.278583466 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.279600428 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.27363889 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.279655575 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27740627 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.280086346 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.274334808 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276107608 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.274946532 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.282610208 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.282734851 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.274976723 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280896339 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.279881393 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.274893568 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.274647719 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.282537916 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27560596 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282127598 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.274916398 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278690735 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.276866459 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.27788175 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.277315151 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.280845081 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.274761703 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.276152368 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281518704 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.282176599 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28015509 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.2764594 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.280752119 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.27620005 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.27443589 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.281807944 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.275756799 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282500596 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278217735 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.278193514 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276684509 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.279582712 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.280279245 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2811329 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.275596729 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.27616166 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.283408499 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281192603 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.282424319 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.280583656 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.283858536 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.276646663 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278673792 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.281023584 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.277315378 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.277041119 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.282828963 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.278464697 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.277791678 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.279451828 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281995192 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.285312311 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.279324417 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.277313126 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286999142 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.284124628 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.283972089 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.277230602 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.279395961 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.277851311 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.282759255 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.282525522 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.276913007 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28573164 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.281779076 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284776318 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279790159 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.279046345 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.27736282 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285826192 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282549864 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.279217685 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.283559709 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.276962858 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285057386 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283854966 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.282071594 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.277251178 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.27796467 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.280030561 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.282254844 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.283705517 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281418475 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.281504697 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.280735574 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286095562 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286372779 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.28535159 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.283434945 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.279865336 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.2865366 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.27995992 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.282939295 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.281726712 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.280628281 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.286358766 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.285660807 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281554305 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.284607787 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.288357234 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.283542604 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.280090165 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.280172527 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.284064506 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.288071477 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.284958224 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280401894 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.282822209 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.285954549 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286146826 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.286158494 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.282578236 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292943213 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.290411888 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.281843127 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.283145006 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284246609 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.289114381 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.286243989 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.287704534 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.283791058 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.284245268 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.289528973 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.286339565 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288084966 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.286911063 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.281534779 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.288816378 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.283418639 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.284545142 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.285245411 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.288023026 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.287352252 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.284196233 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.294173472 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290774303 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288888179 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.302130619 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.286282783 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.284027008 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.28943616 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281283982 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.2873527 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.284850035 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.289236701 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.287188886 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288844493 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.287031642 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.284476337 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286072568 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.285315627 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.293224097 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.28729009 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.282448378 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.285354383 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.288576789 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.288148765 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.29270444 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.289328036 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.288269445 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.288827704 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.283073131 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295467147 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.29642069 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.289735621 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.28888497 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.287499464 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.286948549 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.287758108 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.29088891 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.292099785 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.289496108 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.289637214 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.2850238 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.29036998 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.28944392 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.283478339 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.284588977 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284238386 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.290283478 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.295026045 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.299006435 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.290765392 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.287866726 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.29195133 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.290351452 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284567985 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.291344544 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.290078577 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.28493944 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.28714828 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.292831683 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.290788629 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.289298843 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.285953337 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.294300429 seconds)
  done (took 762.13022277 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290219709 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290340021 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289745589 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.289713596 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290278263 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289479306 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290779399 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289823417 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.289918903 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290109675 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.28942466 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289587687 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290393266 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.291016727 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290724545 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290653175 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289862249 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.28931955 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291377023 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290715342 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289755793 seconds)
  done (took 28.27787723 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.292095635 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.290260916 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.291156311 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292504991 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291296972 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.29256225 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.29205716 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292232511 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292017623 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291166107 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.293817001 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292109134 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.291150878 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.292063822 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29135191 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.291839074 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.293110579 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291696983 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.293152737 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291963739 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291895192 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.291931831 seconds)
  done (took 29.608628794 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.29410729 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.293652683 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.288281165 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.292977263 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.294749664 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.293206417 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.293694421 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.294149467 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.294160057 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.289809302 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.289754536 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.289649648 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.293350119 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.297309456 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.291925874 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.294958221 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.29346025 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.295069174 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.294549498 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.292913719 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.295001156 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.297529595 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.294143628 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.289343296 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.297146296 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.295461942 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.294609639 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.29684486 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.291090772 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.296445045 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.295099507 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.290583433 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.292255577 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.294217572 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.291251855 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.298337854 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.294842538 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.294973918 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.294794582 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.298958849 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.306877885 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.296033066 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.298551905 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.299202595 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.295965895 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.292943828 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.299866975 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.295525274 seconds)
  done (took 63.32709211 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.296272121 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.297782988 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.295569164 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.298248277 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.296536187 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.297129704 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.295396672 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.295591871 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.295350642 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.296590805 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.296547069 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.296647562 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295747446 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.295955039 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.297526611 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.296560606 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.296266183 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.295652412 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.2953689 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.296777298 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.297241984 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.297631984 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.297859171 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.297638554 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.298632171 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.296767728 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.297155828 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.298091046 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.296184906 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.296314073 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.297805619 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299020075 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.298365125 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.298419829 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.297071526 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.298686957 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.297408362 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.297683079 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.299566552 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.296117231 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.298254844 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.299015589 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.299257032 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.299515227 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.297059025 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.297592783 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.298451854 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.298540034 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.297754285 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.298008262 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.300503748 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.298753983 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.299462805 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.300300129 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.301830086 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.300423707 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.298673859 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.299098525 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.298708095 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.29965196 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.298110561 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300042682 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.298726674 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.302013413 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.300115891 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.298019916 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.300949919 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300071891 seconds)
  done (took 89.452328924 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300786548 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.301733555 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300678205 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302287306 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301561443 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.301454047 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.301850302 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.302326211 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.302884255 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.302037836 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300369599 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301014827 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.303090392 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.301609073 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.301144799 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.301543228 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.302315672 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.301921759 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.302410982 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301655779 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.302413747 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.301267049 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.301171021 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.30142137 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.302587514 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.301875281 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.302272213 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.302110503 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302774736 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302797555 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.302884015 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.302398916 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.303064914 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.302413313 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.30238999 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.303777018 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303297746 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303954204 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.304155128 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.302625043 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.302213185 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.303216361 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30437807 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.303538276 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.304045714 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.303214468 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303561978 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.305796959 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.303199683 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.304984694 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.30337587 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305305955 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303379712 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.305398995 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.302750766 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.304259462 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304481866 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.30453565 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304824188 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304190081 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303724323 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.3038546 seconds)
  done (took 81.969429604 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304157821 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.303712777 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.303454845 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.303085668 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.305721185 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.302935895 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.303746896 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.304155282 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.305356026 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.306418512 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304892727 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304215025 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304671237 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305889749 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.304787789 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305299273 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30394272 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.304851286 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30543783 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.306454703 seconds)
  done (took 27.289492983 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.306668542 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.307066711 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.303711961 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.304412173 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.305010324 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.30454658 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.305545125 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306198243 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305503332 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306190389 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.306450484 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304774977 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304330854 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.305164539 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.306292293 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.30564715 seconds)
  done (took 22.085824421 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.305448733 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.307048404 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.308258702 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.307621223 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.305540707 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.306748239 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.307197855 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.306226967 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.307117644 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.307916826 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.306479563 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.306768306 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.307184161 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.307937992 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.307053273 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.307004117 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.307625899 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.306082553 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.308087039 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.309482542 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.308352966 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.307704602 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.309381137 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.309230654 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.306906209 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.306242027 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.306767753 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.306047805 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.308130738 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.308761945 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.306715381 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.308390819 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.307037929 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.308254521 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.309641379 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.307498594 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.308137315 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.309091942 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.310746658 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.310525355 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.311154149 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.308521951 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.309257273 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.309123514 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.30702561 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.309154004 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.308625682 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.308092264 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.307934535 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.308481466 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.310626477 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.308744605 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.310367794 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.310096382 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.310681904 seconds)
  done (took 73.143819136 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309860672 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.309600987 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.307948871 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.311424741 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310715566 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.30893011 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.311871943 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.310550684 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309281719 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.310516624 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.309881299 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311531706 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309319304 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.309858333 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.309796975 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310626484 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.309691207 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.30852815 seconds)
  done (took 24.781487946 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.31120374 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.309764689 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.312237052 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.311267007 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.310242507 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.311222905 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310692411 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.311085421 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310986282 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.310877536 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310810228 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.311618285 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313216075 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.311654038 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.31021015 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310566817 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.312819089 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312905194 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.311469712 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.310754469 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.312194469 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312432024 seconds)
  done (took 30.052569832 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.305555165 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.305951373 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.305351261 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.321488828 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.317147374 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.306099266 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.307067685 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.304711009 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.326186185 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.345171602 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.338527638 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.316230752 seconds)
  done (took 17.003400655 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311399834 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31308728 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312371414 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314615961 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314172617 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31273023 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31246101 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312918521 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313770009 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313015196 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314316359 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313260182 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313966815 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313823287 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314834592 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314336672 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314321527 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312385869 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313102379 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314477203 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314760982 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313929559 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314049634 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312817742 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315015211 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314296748 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314493459 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313996676 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315015259 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315158686 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31379043 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314430729 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315592966 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314915167 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315434736 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314557473 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315476641 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315082986 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316016501 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315637597 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.314789384 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315709136 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31714243 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314565366 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317356636 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314432034 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315093603 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317101581 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315790157 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317298535 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317423295 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314544942 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317991033 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317476499 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31831809 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31626625 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316192179 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315500056 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316368154 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317094464 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315642761 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317530223 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316422126 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315501988 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319187949 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318477697 seconds)
  done (took 87.998104539 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316300999 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.31636035 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316381514 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316188733 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316331383 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316536756 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316880333 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315812657 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316552866 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316662842 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318586377 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316557002 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318062723 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317415002 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316671243 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31767432 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319067975 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318581109 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317181364 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318895881 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317380183 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318044761 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318394692 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318719409 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318105925 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319166465 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318586841 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318131586 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317555535 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318960348 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317354407 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31804262 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317965386 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.318214121 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318420088 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318727451 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319148002 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31862461 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319265745 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318490333 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318919717 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32040638 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318062422 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318711712 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318275876 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319189696 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318350078 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318173545 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319192555 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31941997 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319526846 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319568695 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319448907 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319709139 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319644335 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320039403 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319931185 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321317676 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320668569 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321964666 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319401093 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319178706 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322163818 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320250576 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32250868 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321532731 seconds)
  done (took 88.234664071 seconds)
done (took 1800.432962322 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.480247253 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.432220264 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.314501665 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.325958029 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.315684405 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.309611122 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.328504508 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.314795234 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.314644674 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.314646272 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.315956875 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.503721039 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.371538444 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.314997933 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.315142012 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.411393552 seconds)
  done (took 26.895037731 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.342391607 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.324505077 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.428247038 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.324774073 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.343387349 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.502829291 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.373653059 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.32022627 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.484299021 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.338395617 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.312678982 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.341062296 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.322364402 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.313540051 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.338990434 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.504168801 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.558825379 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.317915029 seconds)
  done (took 29.004188401 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.741108014 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.339334777 seconds)
  done (took 5.295000868 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.340844976 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.321901176 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.321092474 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.318272513 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.313021661 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.312468776 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.319681073 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.318642784 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.318563701 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.444678058 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.327940392 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.331995118 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.320699163 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.322783716 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.324765696 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.364329504 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.463237918 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.326303131 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.326062536 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.327673005 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.320370497 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.417793725 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.362260458 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.326519458 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.440087234 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.326500585 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.327371133 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.328860134 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.462330764 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.326431861 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.322082036 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.320969992 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.323366457 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.315560333 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.790895356 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.316339935 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.32974608 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.347221843 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.326082264 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.464505861 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.323608888 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.326937253 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.315617543 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.786533709 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.445051329 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.439688354 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.316112957 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.323460835 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.324952724 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.38705607 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.323953565 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.326874742 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.378145278 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.138373105 seconds)
  done (took 84.634010183 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.378664793 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.318152194 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484822289 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.337677613 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.317508852 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.321632325 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.316320692 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.589243861 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.371258625 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.329985628 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.600824762 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.821042789 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.320902106 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.33818562 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.859039366 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.414501161 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.319129862 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.316114411 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.320002245 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.321267492 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.820662159 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.323613877 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.317630933 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.361783265 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.356118256 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.760761189 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.31880075 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.322878225 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.318267777 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.319130127 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.777589115 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.320178844 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.323637325 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.3222328 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.587460865 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.663997315 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.639052411 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.320784818 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.32354331 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.320813092 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.350646373 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.757255929 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.645787308 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.320300856 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.32015897 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.765369189 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.319569859 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.323256224 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.323447665 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.539014291 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.31949531 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.321112251 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.320149882 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.324401986 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.31959103 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.402711243 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.328758135 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.805148965 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320402141 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.321208156 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.320815343 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.322038323 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.329327386 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.32357587 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.322038625 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.657372359 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.522567327 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.321864725 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.656904089 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.774453753 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.321718621 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.844461259 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.326384845 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.337403264 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.527833252 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.33010654 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.324983019 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.790177863 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.346747507 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.3212486 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.639121505 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.326953912 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.618811736 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.339706878 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324225417 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.847732417 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.329346961 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.356474205 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.322038257 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.322993133 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.32374259 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.327114271 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.596448981 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.399591413 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.3241408 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.322906129 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.349013126 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.33606559 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.323895391 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.327494342 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.846792264 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.324567702 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.322371905 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.324621872 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.323607277 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.328192122 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.323418339 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.325461053 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.562936436 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.32352341 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.334621583 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.325033849 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.324602229 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.330649508 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.369686468 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.327556143 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.614760356 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.326701896 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.325638427 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.328775985 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.324293498 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.351728792 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.3240119 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.328238603 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.212363286 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.540072336 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.340383424 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.325632847 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.325107443 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.327597681 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.325120211 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.329189714 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.330623538 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.328477687 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.057264592 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.342953643 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.35027328 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.326214717 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.329014921 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.325881007 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.333558951 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.325324119 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.623373807 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.595052081 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.509645389 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.329002323 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.326387165 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.038036481 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.37032671 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473281668 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.344273218 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.325871285 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531156407 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.534483565 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.327384147 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.325701292 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.327805034 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.55828425 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.326965088 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.645013087 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.810216553 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.32645505 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.32662849 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.054930568 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.034115609 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.327389537 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.329800021 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.611087045 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.343323037 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.327274143 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.327170574 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.329303196 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.328353458 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.332519071 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.329668753 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.327635954 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.328221699 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.386680846 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.501677903 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.343675376 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.333533535 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.763018591 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.373636236 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.328216607 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.33694846 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.33164028 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.328696737 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.40252811 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.328479621 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.361009204 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.33002235 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.332373765 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.787989272 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.328611131 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.32899471 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.479928915 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.968503735 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.331598958 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.329556589 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.328637029 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.877106643 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.83273839 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.337005913 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.622213484 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.334786648 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.366587624 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.339906743 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.387312849 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.827154454 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.333819107 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.329621738 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.928442129 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.333838357 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.738586479 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.329959407 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.330412873 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.857826423 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.329940431 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.334584291 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.330183983 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.330849152 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.616841705 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.330730335 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.335451788 seconds)
  done (took 493.372659126 seconds)
done (took 640.411508188 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.331305759 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.33095138 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.318596288 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.3359812 seconds)
  done (took 10.544941968 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.351001299 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.335535423 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.345956101 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.33570217 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.345211934 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.337693254 seconds)
  done (took 9.280451586 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.331117254 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.333417306 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.336324056 seconds)
  done (took 8.229587341 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.545702893 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.35470166 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.685329933 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.333626106 seconds)
  done (took 9.14906264 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.347320834 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.34544188 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.345239317 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.346199183 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.353277262 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.353847689 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.34494965 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.344577777 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.35214725 seconds)
  done (took 13.361701695 seconds)
done (took 51.794518694 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.031642211 seconds)
    (2/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.367143452 seconds)
    (3/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.409641772 seconds)
    (4/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.314893516 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.402423199 seconds)
    (6/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.314421647 seconds)
    (7/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.137206432 seconds)
    (8/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.398471842 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.366084712 seconds)
    (10/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.187180691 seconds)
    (11/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.329850806 seconds)
    (12/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.330498861 seconds)
    (13/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.450865547 seconds)
    (14/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.364254897 seconds)
    (15/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.352896517 seconds)
    (16/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.050021083 seconds)
    (17/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.371136673 seconds)
    (18/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.515630251 seconds)
    (19/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.421366435 seconds)
    (20/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.456668125 seconds)
    (21/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.152674804 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.502203799 seconds)
    (23/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.336401256 seconds)
    (24/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.314843578 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.425325044 seconds)
    (26/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.364762896 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.449972274 seconds)
    (28/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.323082332 seconds)
    (29/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.488169451 seconds)
    (30/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.193203387 seconds)
    (31/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.553388025 seconds)
    (32/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.465845312 seconds)
    (33/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.521068977 seconds)
    (34/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.335426216 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.421542489 seconds)
    (36/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.436460992 seconds)
    (37/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.451519803 seconds)
    (38/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.320326467 seconds)
    (39/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.549111115 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.39365123 seconds)
    (41/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.136942421 seconds)
    (42/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.549434086 seconds)
    (43/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.549481278 seconds)
    (44/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.10361239 seconds)
    (45/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.318031488 seconds)
    (46/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.216690553 seconds)
    (47/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.317131188 seconds)
    (48/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.441207797 seconds)
    (49/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.36449434 seconds)
    (50/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.395325106 seconds)
    (51/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.318179368 seconds)
    (52/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.373928059 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.49707529 seconds)
    (54/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.318647784 seconds)
    (55/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.484167185 seconds)
    (56/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.317690097 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.439382683 seconds)
    (58/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.318177256 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.341479943 seconds)
    (60/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.514650935 seconds)
    (61/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.598774584 seconds)
    (62/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.509164334 seconds)
    (63/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.47339037 seconds)
    (64/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.4376092 seconds)
    (65/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.320265127 seconds)
    (66/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.161752253 seconds)
    (67/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.459393004 seconds)
    (68/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.319358202 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.425247578 seconds)
    (70/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.377480618 seconds)
    (71/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.19375884 seconds)
    (72/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.416157359 seconds)
    (73/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.372502186 seconds)
    (74/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.40542033 seconds)
    (75/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.319451574 seconds)
    (76/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.367717187 seconds)
    (77/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.31788349 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.558638354 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.565716819 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.488498466 seconds)
    (81/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.557091929 seconds)
    (82/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.672718096 seconds)
    (83/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.323376996 seconds)
    (84/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.089025009 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.422189135 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.501829761 seconds)
    (87/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.320914832 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.456122995 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.421013919 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.444461568 seconds)
    (91/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.408801808 seconds)
    (92/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.477186092 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.458718886 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.368868187 seconds)
    (95/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.321485285 seconds)
    (96/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.449663516 seconds)
    (97/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.322278525 seconds)
    (98/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.369550479 seconds)
    (99/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.614633664 seconds)
    (100/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.111123812 seconds)
    (101/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.32323135 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.347140943 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.409109335 seconds)
    (104/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.321179733 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.454667821 seconds)
    (106/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.349286126 seconds)
    (107/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.559058674 seconds)
    (108/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.527030541 seconds)
    (109/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.482582486 seconds)
    (110/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.423108314 seconds)
    (111/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.465315069 seconds)
    (112/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.425073287 seconds)
    (113/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.375368448 seconds)
    (114/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.372742531 seconds)
    (115/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.450508149 seconds)
    (116/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.230985088 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.493658303 seconds)
    (118/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.48500072 seconds)
    (119/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.325911833 seconds)
    (120/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.153066456 seconds)
    (121/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.511226805 seconds)
    (122/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.379398561 seconds)
    (123/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.367981712 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.379093361 seconds)
    (125/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.514935754 seconds)
    (126/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.189157804 seconds)
    (127/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.153668017 seconds)
    (128/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.323672509 seconds)
    (129/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.325449288 seconds)
    (130/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.087951269 seconds)
    (131/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.445559483 seconds)
    (132/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.407503784 seconds)
    (133/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.510226617 seconds)
    (134/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.326334049 seconds)
    (135/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.45832753 seconds)
    (136/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.002027633 seconds)
    (137/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.324156667 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.445799018 seconds)
    (139/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.372940035 seconds)
    (140/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.324083225 seconds)
    (141/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.333587578 seconds)
    (142/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.479896263 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.436388517 seconds)
    (144/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.469585488 seconds)
    (145/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.323661169 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.377394872 seconds)
    (147/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.455911339 seconds)
    (148/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.460809356 seconds)
    (149/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.305001481 seconds)
    (150/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.425841218 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.565806068 seconds)
    (152/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.326608896 seconds)
    (153/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.442382006 seconds)
    (154/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.427228013 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.486309627 seconds)
    (156/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.423030658 seconds)
    (157/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.333309283 seconds)
    (158/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.450428651 seconds)
    (159/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.062480342 seconds)
    (160/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.500541518 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.342542463 seconds)
    (162/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.350875976 seconds)
    (163/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.411377483 seconds)
    (164/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.493074968 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.437147494 seconds)
    (166/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.361348891 seconds)
    (167/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.402560028 seconds)
    (168/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.404068937 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.448311962 seconds)
    (170/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.563596548 seconds)
    (171/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.378143013 seconds)
    (172/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.297227728 seconds)
    (173/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.596564461 seconds)
    (174/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.452092757 seconds)
    (175/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.325644193 seconds)
    (176/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.337436429 seconds)
    (177/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.458294948 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.537365678 seconds)
    (179/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.406601636 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.467466019 seconds)
    (181/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.590964864 seconds)
    (182/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.325721059 seconds)
    (183/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.32664828 seconds)
    (184/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.366567717 seconds)
    (185/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.497388001 seconds)
    (186/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.047926453 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.468586397 seconds)
    (188/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.415455442 seconds)
    (189/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.344464176 seconds)
    (190/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.505476032 seconds)
    (191/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.335228824 seconds)
    (192/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.013745614 seconds)
  done (took 340.94739708 seconds)
done (took 342.177882092 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368870443 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.431043248 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.351509085 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.352979307 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352914546 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.358584513 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.371386684 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.35469324 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.364947451 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.36325352 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.358488026 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.359440322 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.366441489 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.360899962 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.387714437 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.353408074 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.353239163 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.36177429 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.366664212 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.366367434 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.356586169 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.354303864 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.372745524 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.353147249 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361498984 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361968344 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.359724341 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.349976422 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.357656341 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.364900506 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.355536813 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.360300584 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.367304482 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.364132618 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.35685785 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.360609588 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.355928809 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.433655861 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.370972078 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.362570263 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.35997586 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.368757872 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.36042128 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.360747592 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.365263994 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.375464198 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36406221 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.370809777 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.354952823 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.353577936 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371364494 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.365059532 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.360450446 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.352239759 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.347579922 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.371681462 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.364096169 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371849015 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.360140816 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358098952 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.388515787 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37124473 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.365488567 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364166217 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.361555342 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.368121539 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.363353585 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.367747814 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.360428946 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.357797162 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357440011 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.362886602 seconds)
done (took 107.474279776 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.486986629 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.354664419 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.502861922 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.361234796 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.519584877 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.487152264 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.361597721 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.362904303 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.360597953 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.185624073 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.361083311 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.361214581 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.355789834 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.360733311 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.487971535 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.362821433 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.360919983 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.078333726 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.364354895 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.502618808 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.356233226 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.360438707 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.363621375 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.185800682 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.356787206 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.353208188 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.50347392 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.363662515 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.080263082 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.352182629 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.355625421 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.079239361 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.504182025 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.381044575 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.373283432 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.371626924 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.520645719 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.366028543 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.487765478 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.488661904 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.505187997 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.402929831 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.354349589 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.357364634 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.366178886 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.364684721 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.362231388 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.391177321 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.360410344 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.363279213 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.081060543 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.3730235 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.371471179 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.36263629 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.362891968 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.383818702 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.363755904 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.366229774 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.505155231 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.365705349 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.49035704 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.186365307 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.190774105 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.364744759 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.357400977 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.364350481 seconds)
  done (took 110.348234726 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.429489192 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.436951745 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.467686143 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.360624069 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.412357115 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.470918986 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.361849977 seconds)
  done (took 11.18772108 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.36510573 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.366950739 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.409509863 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.408726974 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.366266769 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.516319785 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.36721006 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.371421506 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.364595062 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.412711454 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.368598124 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.369731209 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.374333142 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.359834847 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.409329611 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.372069745 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.477057268 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.362648815 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.36727327 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.514417399 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366068237 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.374822065 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.412363809 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.372465186 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.369900285 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.367684292 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.130114344 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366843493 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.36745231 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.36940475 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.367053802 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.416348238 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.368881527 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.360732026 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.366860288 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.479243141 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.369187563 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368233301 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.371622332 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.364077147 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.371306275 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.368918146 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.371549588 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.36594135 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.370610189 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.386991817 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.37111113 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.368885287 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.368251973 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.371797191 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.414898639 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.369590142 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.367984652 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.368466869 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.419967693 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378491839 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.370011986 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.36868775 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.373238886 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368856121 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.519044259 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.412185949 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.371462682 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.411143901 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.369881957 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.370556909 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.373107509 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.370752501 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.417977537 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.369645082 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.413206775 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.368390498 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.54641978 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.387673054 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370581911 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.367027854 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.367098959 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371958351 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.362057019 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.37064947 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.369626504 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.36684834 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.372142553 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370307581 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371238799 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.523608023 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.475947377 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.370731066 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.377178271 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.3731916 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.369835979 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.419013454 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.372235945 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.370913861 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.417153468 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.480245 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.41872616 seconds)
  done (took 140.751259295 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.378037325 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.37824822 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.369766293 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.391495018 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.36638389 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.366256766 seconds)
  done (took 9.50416253 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.36767202 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.373702902 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.371744981 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.373164902 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.3718015 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.374454984 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.378921541 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367489139 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.374787072 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.37625409 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.376411636 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.380971275 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.37793695 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.373550443 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.37626293 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.374123535 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.37863945 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.371535769 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.373023396 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37316061 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.366388207 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.373029508 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37295896 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.369111528 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.378294571 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.375629878 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.388645415 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.374978335 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.373633992 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.375400723 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.375270346 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.374441879 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.367852248 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.372639333 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.382614864 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.369303399 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37459179 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.380428606 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.372800544 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.375109631 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.381763596 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374164963 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.379197997 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.38168197 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.371509711 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.373281503 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.384389637 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.390558919 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.377601993 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.381257823 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.384368629 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.374535566 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.377090787 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.38311595 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.371830793 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372699168 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.387347576 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.381830336 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.375461666 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.369746876 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.377121642 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.376800507 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.372672174 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.381863271 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.376556277 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.383688006 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.372815575 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378818256 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375954769 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.375396415 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.384305371 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.376223915 seconds)
  done (took 101.341895175 seconds)
done (took 374.379779534 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.661925041 seconds)
  done (took 3.922166989 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.369475375 seconds)
  done (took 3.629090548 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.727152967 seconds)
  done (took 22.989191683 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.412868401 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.488366551 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.392372551 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.372475249 seconds)
  done (took 10.924420586 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.666508113 seconds)
  done (took 3.925794516 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.373026098 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.369796363 seconds)
  done (took 6.002719309 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.575436213 seconds)
  done (took 3.835518661 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.568891309 seconds)
  done (took 3.828261551 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.385956016 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.38437414 seconds)
  done (took 6.036677079 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.346978875 seconds)
  done (took 3.605782606 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.287886712 seconds)
  done (took 20.548229782 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.379175678 seconds)
  done (took 3.64093771 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.425850182 seconds)
  done (took 3.685714176 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.928710373 seconds)
  done (took 6.188560521 seconds)
done (took 104.022268241 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.366289937 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.366732381 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.367516781 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.365734774 seconds)
  done (took 10.725160656 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.431681849 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.433145175 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.438063853 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.432442334 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.432317208 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.43176251 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.406426377 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.408148763 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.434985198 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.432997685 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.438216871 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.431891413 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.432325159 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.407406969 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.432338517 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.439400178 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.434258853 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.439074931 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.407491895 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.432810005 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.382157489 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.433654023 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.432222169 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.382057242 seconds)
  done (took 35.467661809 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.890157231 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.446011155 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.526961845 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.426143732 seconds)
  done (took 7.551493579 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.462228844 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.466724813 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.480459775 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.517510889 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.546091164 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.480938508 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.408459079 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.405051754 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.390722207 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.463875001 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.51363358 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.451825722 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.553607069 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.382947348 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.602933455 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.383450141 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.385863703 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.465385429 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.516240455 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.533041183 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.384859503 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.462889358 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.468155454 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.450346811 seconds)
  done (took 36.439558298 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.388745404 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.402119184 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.382302596 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.396361353 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.383862568 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.38339006 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.383944864 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.389237442 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.382929645 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.381653802 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.382311938 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.396044237 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.383060564 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.382874739 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.39030834 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.384304436 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.384873301 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.390236494 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.393141997 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.382952316 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.384591625 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.392149083 seconds)
  done (took 31.786659787 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.3716815 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.371144713 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.723352403 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.628188482 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.372497548 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.373876169 seconds)
  done (took 14.104379649 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.447382696 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.589802301 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.38404197 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.726205229 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.820299344 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.380677461 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.378603354 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.622042642 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.920749485 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.916113173 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.441574358 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.448732579 seconds)
  done (took 20.341363439 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.377050849 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.377564834 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.379578636 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.39293638 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.431877011 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.385617253 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.384140854 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.374058361 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.438518749 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.439395288 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.388259377 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.433128201 seconds)
  done (took 22.069513465 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466890505 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380825601 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.378317556 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375991843 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379613045 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.224955506 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395371391 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.078616727 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.384509841 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652820856 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394905813 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473473753 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.634206546 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38390218 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386659959 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.356588931 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607688082 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887628313 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381761806 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380621988 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4183677 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38771296 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385823346 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.598564838 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.223834753 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380427946 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.641383988 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380670367 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673408214 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650203547 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.651160856 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386670542 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654487217 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020874892 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478785643 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59225446 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374979481 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381483138 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.374639668 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.40085204 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387740744 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384474771 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.645288225 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388669322 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383592607 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382638445 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09522705 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.389642394 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.381536776 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382190796 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650013754 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486519414 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.387960666 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383241032 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448091265 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383965396 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.387168421 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509652336 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945643822 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395408465 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391789242 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.388938463 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380818281 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387426236 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045497138 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.392483654 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.387091438 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387415056 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382749197 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385433452 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410050404 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383670199 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.402956104 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384512622 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204516392 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387794163 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408469843 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95127784 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390937568 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.389617212 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613560919 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385384492 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383709815 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.382480047 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385533195 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125201755 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393538993 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.362280993 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426725953 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.085305703 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.595183103 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406244112 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416689196 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.607882229 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.363616933 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388379211 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.395398011 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393683157 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408077005 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.090150054 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385053947 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.389638545 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641698091 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.596438829 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385243867 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.368948635 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864305818 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390371121 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.412213702 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396827502 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.602706634 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.029226184 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659286928 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392685435 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423313418 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386750351 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189000505 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389210614 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.39572295 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387989461 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680425481 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.236177609 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386231211 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455394348 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393904784 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388316645 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391472152 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393703503 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387906703 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.596126619 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38795304 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.660080323 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.396239936 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389870967 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.399988836 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394324173 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.395964716 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609476653 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393320077 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668618091 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387627738 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388749819 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390330589 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.610647303 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.400929146 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.398156643 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65095595 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388231122 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421526625 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659374574 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425365981 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497630451 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41749499 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.399014098 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647243462 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.392633521 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.393236792 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395029773 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396449137 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394786377 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.395964468 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391709746 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051988786 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370053317 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392769504 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389983293 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.407434178 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459298295 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396069945 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602977938 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.389812692 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412649122 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.396019861 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.38948186 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61943128 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657535114 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.39595266 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470977504 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.865877252 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03419561 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410535634 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.391171279 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.391253042 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.390756382 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392997791 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392698437 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393010919 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602677246 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660195651 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391776464 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.055035824 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396724808 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395852914 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.402398556 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658415288 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.403687128 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394586894 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.393056586 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398304935 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407137215 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.664204241 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534291507 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.409449869 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393152504 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.954519474 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401347605 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394420525 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394626552 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425001102 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397381678 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23852863 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655300973 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397183137 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662510949 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400881509 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.411334327 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.393757701 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406027981 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402449898 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.418471527 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405345618 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.606244588 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401462967 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401635275 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954076937 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192636971 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979958586 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401903043 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.394925451 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400062475 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.10381109 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394347369 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394716792 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631107925 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100168457 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392266032 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87196976 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.393596179 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150833221 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666088768 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631625556 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400328253 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.409738557 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671878858 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610193359 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429472067 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396676756 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401092746 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.3713427 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949680167 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395688082 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494626021 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101409804 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405584576 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397503153 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.428617808 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.413985334 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786170419 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395437083 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397140557 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404016743 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401371253 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244416958 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400293447 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396198285 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061520609 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408100574 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.879747575 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395251551 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.608058703 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663959562 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.665789247 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.401531248 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.421209148 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.654206782 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665415027 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402263837 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404730539 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990831146 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.272758733 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.403478046 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398664016 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204379621 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404772145 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699471058 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.405878273 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.408273002 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403653198 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399368542 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399298769 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.398222459 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406124977 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376307178 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905952354 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.403557257 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41015262 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40118165 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404409887 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652823324 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.413922826 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.046469771 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63139132 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396583144 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4476772 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.402540599 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397345213 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.3801876 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398861757 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398768163 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467443507 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.620198191 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400183677 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.375184086 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.435465714 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608656444 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399651512 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398727067 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632361961 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.399305074 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.402185816 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202455614 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429905778 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401021406 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405637991 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401758849 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439942354 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468741756 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614357015 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.669558965 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.675655146 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795542179 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400846701 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407218973 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.414248225 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4965598 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400963551 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.415913883 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.179347394 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051531903 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208168704 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.055189648 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676329578 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407789919 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40878553 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40166674 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538678746 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402633608 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678750161 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402339371 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.399475782 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423438529 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400893265 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419741184 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61612148 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677029463 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401357157 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413791027 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406764615 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.402308299 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673331791 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.618475329 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914622154 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983111956 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402772843 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403551513 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.11593243 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676172172 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403739046 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405037482 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403415913 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.407686657 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.408530284 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.410192604 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409382327 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542678772 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671622231 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052417678 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.672949098 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.449268479 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.922331462 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404254623 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.662642438 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172237369 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.617917532 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055158369 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.172697815 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673271381 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475769079 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619133583 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.403979492 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540527146 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.417794036 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411184828 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40588297 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407424562 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.40350101 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.673602322 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066221393 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675430548 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.410802058 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.405382348 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44152122 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.619369804 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.62691981 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159850317 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628298892 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67925167 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41919912 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407930247 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063626439 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683302048 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413371396 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.411274156 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632810673 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408379478 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433704416 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.094721885 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.405259275 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975385714 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.296093528 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428875595 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408438911 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.176126315 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068397732 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.412547078 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939064518 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408208624 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422275665 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687789162 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.414884351 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410652398 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691570357 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.411684253 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408926716 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62769216 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.060630987 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176855196 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.418815552 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424360934 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.414426071 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407934044 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439501935 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409178097 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417128849 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.824312385 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407922907 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409513059 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421121411 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.409856848 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412787042 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.411892671 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409664071 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.414760349 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.390541652 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.393593681 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.42267662 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537827794 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964688025 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408812643 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.235273972 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.758338651 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663472416 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.419427647 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.39033364 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.414565365 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410581588 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409815704 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410928765 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406160902 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97960083 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.420408564 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.684985325 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420444652 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.619904275 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621968786 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415121163 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631480916 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417826059 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436152782 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.386446568 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410638017 seconds)
  done (took 992.243424242 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.435851739 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.40778137 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.409953584 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.436278732 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.407629539 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.472910149 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.476739789 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.504631082 seconds)
  done (took 20.845485159 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.41434081 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.415924998 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.411547439 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.412726825 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.410893625 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.88897728 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.406114933 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.413274004 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.427131382 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.408799375 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.412718487 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.104948709 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.434947807 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.414219623 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.406086941 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.419540193 seconds)
  done (took 33.098362253 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.51420735 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.603047377 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.422465395 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.476697214 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.452850382 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.411623507 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.664816071 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.432516749 seconds)
  done (took 27.273028784 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.42076293 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.419382107 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.418802606 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.420198545 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.42095058 seconds)
  done (took 8.395876744 seconds)
done (took 1261.60213167 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.416814982 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.417554104 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.418675194 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.418725948 seconds)
  done (took 6.967202896 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.391352944 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.388686822 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.389601635 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.40499389 seconds)
  done (took 9.871609555 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.12524068 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.026294965 seconds)
  done (took 5.448000649 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.914609451 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.90309789 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.898224224 seconds)
  done (took 7.010927112 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.68932873 seconds)
  done (took 2.984624887 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.336798323 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.409067797 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.090777432 seconds)
  done (took 8.133178088 seconds)
done (took 41.71097451 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.421363871 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.746438151 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.561253389 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.421536024 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.617210847 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.562440919 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.148463404 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.409111097 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.418013728 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.411797469 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.428914416 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.570012747 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.199104434 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.748504173 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.198459559 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.6565874 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.568955918 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.409873542 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.40932481 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.410062416 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.151121548 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.415558172 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.412767 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.414847582 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.57152468 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.553778195 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.410080859 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.665755847 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.41227389 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.409756844 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.554188361 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.413797298 seconds)
  done (took 83.999493998 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.409986901 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.418755986 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.411502467 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.44160825 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.41067123 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.430739659 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.411466702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.410534961 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.410662747 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.413008148 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.410029683 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.425998996 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.410078277 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.410972618 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.411994503 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.410664054 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.408963938 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.410113793 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.410118919 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.410782791 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.411047475 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.426207289 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.412466323 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.41160766 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.426604414 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.412379458 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.436543947 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.418363528 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412965056 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.427437529 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.418258802 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.429528818 seconds)
  done (took 78.632113595 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.410842356 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.416500758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.417576582 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.416878614 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.416477961 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.417885487 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.418641729 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.418218098 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.417298224 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.422706228 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.417208541 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.417251389 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.420608287 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.414607946 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.419621272 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.412974765 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.415696128 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.418328621 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.418032645 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.433618096 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.418104716 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.413451288 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.43278258 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.427393128 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.418782417 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.420118547 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.426480216 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.422877556 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417156667 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.432542092 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.417583766 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.422255911 seconds)
  done (took 78.732119805 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.651348963 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.427926441 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.432471074 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.424930488 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.430233554 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.430710279 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.422243508 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.661150634 seconds)
  done (took 15.182842186 seconds)
done (took 257.842906442 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.429951332 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.91753065 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.450315652 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.419588648 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.440021517 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.44465097 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.645554113 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.445632 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.644412821 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.447944645 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.43736514 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.419290988 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.228342831 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.578956448 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.294998614 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.411872009 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.311889499 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.420980525 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.984725774 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.708655691 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.443560283 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.415831651 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.284224453 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.318857491 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.399348678 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.522581125 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.524119711 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.655524957 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.58403162 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.500574124 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.935494029 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.422702874 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.422058233 seconds)
  done (took 65.815776126 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.421928248 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.42755198 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.432250599 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.431681346 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.428416225 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.431049044 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.423077246 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.432215891 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.431973576 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.431016271 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.432058164 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.429817891 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.431128527 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.427862999 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.427921631 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.410906836 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.422608544 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.428337089 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.423789766 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.412333976 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.429571834 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.433952001 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.432684955 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.427017412 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.433489722 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.433360594 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.429024091 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.431629064 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.429458726 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.427125882 seconds)
  done (took 44.15073075 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.432984366 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.992849786 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.15200876 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.432738301 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.424626186 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.428516443 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.714478298 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.438517956 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.42887391 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.427653446 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.91399605 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.4397195 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.458061539 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.154124943 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.432671552 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.433518807 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.4341251 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.42644927 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.001590643 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.439511114 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.713257187 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.437551602 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.714932391 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.440104774 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.429118651 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.426234642 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.431184972 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.234899763 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.449462319 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.920412725 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.218104197 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.715185949 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.17491704 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.205641911 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.220909471 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.442298963 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.435747668 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.917401405 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.434280107 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.426813994 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.714341412 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.434482498 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.158327869 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.104299567 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.446238491 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.436873214 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.262238715 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.939464856 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.676200473 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.439149594 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.194938012 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.435772149 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.436830326 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.428787727 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.671855466 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.434798064 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.427650412 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.263126772 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.451454544 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.715249685 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.443392981 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.42965274 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.999839833 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.435066833 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.996765411 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.434859631 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.436181362 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.429975147 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.163099175 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.438057199 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.140092945 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.447386603 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.437007659 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.915645979 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.007657709 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.320738279 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.435230325 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.002150687 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.209309427 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.738621476 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.438262394 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.241989498 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.74035114 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.438095858 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.441016341 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.440022522 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.438722098 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.50252364 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.714654186 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.061595665 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.118284932 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.279532024 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.736993287 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.443144583 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.431702609 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.264788577 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.455564453 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.439218662 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.158667049 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.134246591 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.45015102 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.438549362 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.107151844 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.449688827 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.720575311 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.442059614 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.200354402 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.435249291 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.505633015 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.440507881 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.437897538 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.43661873 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.719518649 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.440355026 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.44149984 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.10679447 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.952167036 seconds)
  done (took 199.283057127 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.428791611 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.426924226 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.428698909 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.428721701 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.426639593 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.436101493 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.428221493 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.426591766 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.432491336 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.425874715 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.429459849 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.43645456 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.434239989 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.427373345 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.429750238 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.429696374 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.427419222 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.446860332 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.428852183 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.43008934 seconds)
  done (took 45.922150942 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.442050791 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.998936135 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.966303863 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.446887325 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.438478271 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.432394195 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.490687082 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.440671521 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.439975994 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.733386332 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.608428225 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.450996117 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.440182438 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.43923933 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.965576756 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.425474235 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.736168974 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.005600546 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.449203197 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.999095036 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.425059428 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.443059466 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.434152727 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.000914865 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.751457233 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.725493307 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.499213507 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.008866968 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.444270016 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.439907621 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.00281611 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.450455257 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.434447759 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.993622531 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.448506315 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.458086155 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.440593131 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.49507013 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.497264291 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.74464752 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.012935085 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.734753472 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.460839327 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.61001186 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.442634519 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.421355201 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.013679755 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.451987321 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.423536693 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.443777438 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.44986997 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.976775074 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.444341527 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.977500985 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.447476544 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.444825793 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.005954325 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.983193868 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.97562675 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.614109939 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.442252784 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.725152659 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.448312531 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.015747704 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.451541519 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.446798608 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.445762079 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.611599331 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.014114847 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.73144504 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.749045157 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.748863088 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.453913435 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.50421385 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.445971082 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.744404313 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.505818677 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.8478671 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.744432572 seconds)
  done (took 130.216909839 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.694499127 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.553913255 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.818902215 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.044701549 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.95540298 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.581735892 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.551928966 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.682435152 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.443940431 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.531944541 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.094461842 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.542233379 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.200242181 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.526842565 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.544386452 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.56575756 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.841518543 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.440693109 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.094856596 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.069456874 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.443205058 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.542172078 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.949128046 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.634561323 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.441082639 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.018428892 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.411889556 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.971579401 seconds)
  done (took 54.511393305 seconds)
done (took 541.202780789 seconds)
SAVING RESULT...
DONE!
