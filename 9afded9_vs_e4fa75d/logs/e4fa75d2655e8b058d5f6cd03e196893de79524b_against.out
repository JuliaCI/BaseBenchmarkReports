cset: moving following pidspec: 1032
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.52238592 seconds)
loading group "string"... done (took 0.538675643 seconds)
loading group "linalg"... done (took 9.104840929 seconds)
loading group "parallel"... done (took 0.182074136 seconds)
loading group "find"... done (took 1.316893587 seconds)
loading group "tuple"... done (took 2.049834516 seconds)
loading group "dates"... done (took 1.530506292 seconds)
loading group "micro"... done (took 0.212075072 seconds)
loading group "io"... done (took 0.549898878 seconds)
loading group "scalar"... done (took 52.352473485 seconds)
loading group "sparse"... done (took 13.783882986 seconds)
loading group "broadcast"... done (took 1.306532757 seconds)
loading group "union"... done (took 10.258807748 seconds)
loading group "simd"... done (took 3.04850849 seconds)
loading group "random"... done (took 11.546320148 seconds)
loading group "problem"... done (took 2.215014624 seconds)
loading group "array"... done (took 24.328402274 seconds)
loading group "misc"... done (took 1.147878883 seconds)
loading group "sort"... done (took 3.7882698 seconds)
loading group "collection"... done (took 19.357911421 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.6253764 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.184822466 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.208084714 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.289094338 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.23735332 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.153464552 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141519125 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.261443213 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.586217881 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209467165 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.134405647 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.512814525 seconds)
done (took 6.285975915 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.254056358 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.182463696 seconds)
    (2/2) benchmarking "String"...
    done (took 0.168692588 seconds)
  done (took 1.035591688 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07556185 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.154438345 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.106795637 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093082946 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092127907 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108150136 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092311235 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107844735 seconds)
  done (took 1.445680808 seconds)
done (took 3.502666048 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.512511086 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.868629934 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.521091418 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.164538868 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.304143221 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.301349799 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.337313215 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.202787031 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091621944 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.09185502 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177320337 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.402607596 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.440651051 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.970513481 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090594654 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.115248575 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.123557326 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.774062128 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079464418 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.126514394 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.497618508 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.192957417 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113106315 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.108640368 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185675278 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132682056 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.165102263 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102621748 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.672717963 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131250412 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.188661666 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097944812 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.165247856 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.196567745 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.210660012 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092256355 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.69316727 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202571344 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.091846339 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098671047 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680070369 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.119038267 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.186816869 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10279844 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.091671311 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18331091 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.09646404 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078385856 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.117028359 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084888853 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.165334006 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.455768057 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104731776 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.172047593 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092194951 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69634602 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101655881 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.277434916 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124837043 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092806003 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089793836 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089205266 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.161327616 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094229592 seconds)
  done (took 20.216898456 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.150350354 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.166134589 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077220259 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155328121 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123862419 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080301674 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100738903 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079820423 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126757967 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.225134727 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13993729 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.157824735 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092052068 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088458383 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.127439111 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.251016605 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10646428 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121848219 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088649504 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090213955 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140933249 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096981162 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108087563 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095211762 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170469049 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203019528 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108693647 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122710511 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.087944237 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097488606 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142564223 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147316224 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091406499 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085869651 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.190461139 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106661478 seconds)
  done (took 5.252858172 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.205957569 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125853922 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.216355212 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.113856932 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.182503838 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145374878 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.177157901 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132205205 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.286919665 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.278286005 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177258636 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114013975 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.122272954 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07903723 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081036081 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093713866 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.504055499 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.136597721 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.175502707 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.153348013 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088125206 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096994881 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36854459 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099473786 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080960238 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08549306 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082784242 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.183488699 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103245046 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.104668891 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084643356 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089402038 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133256892 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200661991 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132057357 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122412987 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10204302 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083198951 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.220061892 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093421928 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076261884 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.126160664 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116238654 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131343714 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098368826 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09513597 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223375389 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081870851 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122040795 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.043367952 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197577813 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.125744045 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078753467 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288606148 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118335005 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086187597 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081994052 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.252140788 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.11432925 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081524314 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096515421 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086647598 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077091818 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.435575423 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1076386 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.866520646 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084118117 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161610221 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084002599 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104266614 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085216824 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084784153 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118830145 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.139709721 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098407526 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079729466 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078699134 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095797524 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084646287 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093811016 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100622891 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078692151 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146900038 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113095552 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100057846 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124696496 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085758052 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080577558 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126916458 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082010465 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083291513 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.172434089 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086661175 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097797251 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082567606 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.094013806 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102831693 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141004932 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081816981 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.195429326 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097645622 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.109343327 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097078779 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112945032 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116487129 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080729254 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083484125 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098099001 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079754927 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147944853 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096512919 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083512341 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082914635 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110093378 seconds)
  done (took 23.07761033 seconds)
done (took 49.23243707 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.455432923 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.088124389 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086999212 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104844217 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086820362 seconds)
  done (took 1.592721333 seconds)
done (took 2.337810659 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.333182161 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200551424 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099837501 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.194861286 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086116891 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203733935 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.19076599 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094446079 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215605447 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085238714 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.193487003 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084141571 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102510267 seconds)
  done (took 2.853310559 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099631401 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107535362 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.115037275 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097971834 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079637421 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096776223 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112746479 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108866443 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096496466 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106102935 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081397794 seconds)
  done (took 1.845475762 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096935061 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101899861 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094772431 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112457721 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081053513 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094305131 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111105764 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105006853 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09493472 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108840813 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080632361 seconds)
  done (took 1.826747179 seconds)
done (took 7.26851673 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.138986635 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.63394653 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.168182754 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.217001499 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.353993737 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.244380472 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.568075164 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.155876983 seconds)
  done (took 14.381231714 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.123528998 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.156916938 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088165231 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089252952 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087778214 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.105215042 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.092906445 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.093342773 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.107504024 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089785305 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.091138878 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.105412483 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092415875 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086752454 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.091880041 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.106412391 seconds)
  done (took 2.414877303 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.137932103 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121978398 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.11059446 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.095046983 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.108077657 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.094312184 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.096685842 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.109538959 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089620056 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.091284895 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.114273707 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.096597724 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.093250437 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.087894871 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109158977 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110229444 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.104272039 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.094883381 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106368792 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.110182067 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.095427397 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.091724365 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.108363229 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.095099816 seconds)
  done (took 3.302831148 seconds)
done (took 20.846742195 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149864162 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099161906 seconds)
  done (took 0.998013387 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.14038462 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156055587 seconds)
  done (took 1.050153234 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109069554 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.086268684 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133263094 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101347224 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.086943856 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.102853422 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11370219 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.101996317 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.087631797 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.087228138 seconds)
  done (took 1.769381018 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091601623 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09069804 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.118291319 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.138714741 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111675297 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08991234 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091729388 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.089285404 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.10904221 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.088556841 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095610234 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.123075443 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.091017208 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12282306 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092695662 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.093418217 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11229392 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.091435542 seconds)
  done (took 2.603732077 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08722633 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.088350309 seconds)
  done (took 0.937901971 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.090474859 seconds)
    (2/7) benchmarking "second"...
    done (took 0.086787142 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088156072 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10490631 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.087184994 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.086220673 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10190537 seconds)
  done (took 1.408583713 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.49745363 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.26390001 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.367183131 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.1046488 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.141649098 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.348422533 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.142146078 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.100084726 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.098412127 seconds)
  done (took 2.861108757 seconds)
done (took 12.385848838 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092553992 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.216930942 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.751304273 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.109799165 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.085838725 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161173293 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.290071555 seconds)
done (took 2.473978758 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354756784 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.150746886 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084610186 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085713101 seconds)
  done (took 1.435268707 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081247489 seconds)
    (2/2) benchmarking "read"...
    done (took 0.094585639 seconds)
  done (took 0.943662331 seconds)
done (took 3.147082162 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086697507 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.118404417 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.102788546 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085905376 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.084523051 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084217049 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.102274465 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.084913709 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084732952 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.102302392 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087014642 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085946893 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.084740644 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.102012931 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084769523 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084702478 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083510976 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100985372 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.083779798 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083759529 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099361874 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085200724 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.083622342 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083021948 seconds)
  done (took 2.969933856 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109375394 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085184081 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104830021 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091139638 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.089438872 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.105190773 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090702654 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.086211745 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.106057172 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.088167806 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089620673 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.104182733 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.088510751 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088862195 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086683767 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.106597944 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090519467 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086139967 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10410288 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089837013 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.090452132 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103573573 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.089967128 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089587504 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.106185129 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090149866 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086846008 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.102425607 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091278171 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088805573 seconds)
  done (took 3.600431217 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098110796 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.083990815 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088079547 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113104491 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085416488 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087872027 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.100962019 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.087516769 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089995749 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087751493 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108326502 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088951617 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.084918193 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106076911 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09089215 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091906733 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113960924 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.086037478 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08654373 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089632537 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.108392782 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086939301 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087912231 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.104361007 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089499358 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085946145 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08881967 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.104852419 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090060428 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088885799 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.106714256 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.092921649 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089358431 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097233382 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.10877668 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089151698 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093523844 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.101978536 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091161168 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085640038 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.10154296 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090159436 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085451004 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093628199 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.107242617 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089917593 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086066671 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.105968392 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091487941 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092809941 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084982825 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.102104365 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091711439 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090656182 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.107428684 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086881489 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090090395 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084621205 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.106985688 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088241583 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085051109 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.100783206 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096007201 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088872894 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.121891649 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096252076 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.084742166 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.106847525 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090241466 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.0944383 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090783642 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.116109569 seconds)
  done (took 7.58607605 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100271797 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09571317 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086545594 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103013136 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085918316 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08630637 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107102946 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087069613 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086584533 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.10880151 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08809654 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.086991882 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101876566 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.088244188 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088208237 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085929458 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109130902 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086990907 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.087051875 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103695549 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087551737 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090586218 seconds)
  done (took 2.826270122 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.22991126 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093533753 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.134957247 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.116581135 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.104056714 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.115868529 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.091675191 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092066579 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106818981 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096340708 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094945217 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107266033 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.103744398 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093864707 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111539498 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095387386 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109786447 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096543346 seconds)
  done (took 2.771959785 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.100604818 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.088282898 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126930743 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.088816025 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087958114 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087605351 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111069402 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109365542 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.104875733 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.08914578 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095445382 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105146007 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.089903821 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0884491 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089402495 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106905243 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.089131144 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087631001 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112455596 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094910403 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092949056 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113432064 seconds)
  done (took 2.939961985 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103117116 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089246139 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.121921161 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091505253 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086780944 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104028136 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.094150887 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.087267692 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093710744 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.106645774 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088039138 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088219484 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.119205645 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088742437 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.092567326 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104093021 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088673967 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087325803 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104989816 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087450299 seconds)
  done (took 2.707867023 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.174055068 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123464221 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108247613 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114689626 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123511528 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10617509 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11537531 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126505431 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105310783 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133734988 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106882226 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106674424 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132038344 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114434611 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123305222 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116317753 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114121439 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133154683 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107249143 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123321475 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118771193 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107033282 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133156117 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108086338 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106727244 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124236276 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108273713 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128138788 seconds)
  done (took 4.127548477 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088232372 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087488318 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.085003199 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.102896368 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.088807108 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.085511079 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08548016 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.104317272 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088024691 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085482912 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.10341857 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.089320419 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087057868 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.086346434 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105012187 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.088894456 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08762873 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.102070637 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087750062 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087108297 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.086793634 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103089327 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.087526862 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086379592 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101740252 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.087997387 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087274704 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085252762 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104405151 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086834097 seconds)
  done (took 3.527228752 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.099955307 seconds)
    (2/2) benchmarking "in"...
    done (took 0.096542294 seconds)
  done (took 0.985004514 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.095500714 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102515283 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.086367007 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103425092 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095142862 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087441546 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113737201 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094803902 seconds)
  done (took 1.567784257 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.145320025 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.161146489 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.092984727 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.099509927 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.163008876 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.156050631 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135006471 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.092399862 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107312624 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084012096 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.158993909 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083584353 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090731288 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104647178 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092069017 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097168245 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.106199376 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.099652208 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.095177908 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.106538799 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095138771 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09609309 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10967129 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099141877 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084534126 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108755524 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096342971 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103748971 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104538132 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093604576 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089837881 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.086490002 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.110523432 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.093555293 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.089247814 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162626288 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098223448 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106046898 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092375756 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092680881 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.140435707 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.089021957 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092894162 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106584551 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09578509 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.093216657 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.109621107 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.089027911 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083163825 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103478837 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.088668899 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086373121 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.088563963 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110451694 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092173328 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113999138 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.091563171 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088074848 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087083486 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104019529 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.0907509 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086679129 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111208357 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.093684912 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091935429 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.108789469 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091280534 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.088429406 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.106526193 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.090755744 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.089868866 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124251518 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093425671 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.094441093 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110109663 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.090505671 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088246584 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112099363 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091018073 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09183257 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.109525408 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119568829 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093024923 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103435364 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088247362 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.096392757 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.107854726 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.093041653 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084038699 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117748073 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.093615492 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.089617339 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083937212 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107255336 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087906936 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.093196598 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.101839922 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094028553 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.087632716 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.110522753 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096058929 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090702648 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109410271 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095634355 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096107106 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107571827 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.138999291 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087661596 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105257054 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091215206 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093550312 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103078036 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092827433 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.087885233 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106296597 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088332409 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.093858865 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107060341 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093257339 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.094299816 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110708705 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095096422 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.091045287 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.08786104 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.106010076 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.094099415 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0971301 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111474536 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.092328603 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.088188582 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.106396929 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092504536 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09311247 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10681176 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095922843 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088601177 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.104167858 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.091520915 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.094337738 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090748371 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.105564019 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.090271341 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091909902 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.109047842 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.092043086 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091909462 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105366932 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084021332 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09119215 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105538014 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.089152063 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097070963 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105714567 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.093747908 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088194087 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115016899 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089381621 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.094644225 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108910664 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096038882 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094731627 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099576558 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08997547 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.0917979 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092394443 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106285904 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.089341837 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.087569142 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.114211285 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085236592 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.093056532 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101138963 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089570203 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.095273451 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.10752062 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.093805234 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087877901 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.148173256 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103845895 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095499567 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108645554 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09392579 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.094237071 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.090706233 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.112277676 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096392612 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.093965382 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110813686 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091779389 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094368847 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.107640747 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.092131106 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089607194 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112563269 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085491944 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.090932856 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101625266 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095899425 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093546891 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.095026789 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.113665051 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092633932 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091291888 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116976303 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08991787 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.092057218 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.102725113 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095953805 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099621976 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.11381669 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096778198 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093318152 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107483645 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.090196185 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097933929 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109514358 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094256172 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.090973705 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083994418 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104090337 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.096558516 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.091853853 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106100256 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089309765 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094289205 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112535448 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090760685 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083631384 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.112304793 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096940698 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087722193 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109551854 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089988253 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090016396 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117607071 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085946353 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088236756 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112081809 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096004208 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.088561445 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091251984 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.112176014 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098333257 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.092704406 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.111904576 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091081655 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097097655 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108525028 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.089430427 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08911139 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.110635787 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087067975 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.090519094 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091473475 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108616016 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088407868 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09549922 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115137716 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.094893054 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090335264 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.113092846 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.095722708 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.094879542 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108267799 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.096271347 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088345053 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.103006425 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08916885 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084904805 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.090793933 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106933348 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.096191237 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089965478 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110262428 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.093875624 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093474004 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.109322452 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.095674563 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.120454171 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088203478 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085519944 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08988296 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112049418 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.089527312 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087183233 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.109550355 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09548351 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09439362 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114137018 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088724388 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.088623506 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.114422814 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089730179 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105041093 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.113524308 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098189435 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087733018 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.093170914 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108019952 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097177037 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086259958 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110386834 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099514523 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090986625 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109521325 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091812605 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087654784 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.10444437 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089652174 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.095166815 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.109654662 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.096061294 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091855356 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.109672889 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090524455 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087512306 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.113742421 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.0919865 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.097131028 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.089085418 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.105536324 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085762129 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.095235056 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111534843 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.09763145 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087472233 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.112523269 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097814607 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.094453065 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.108240684 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101122096 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098442479 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.09488139 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117216557 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085916003 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089405709 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116870722 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.088935331 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.092738732 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.110688156 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087355905 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095470635 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.115217157 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096123275 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.090512507 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105416248 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.092497706 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.096506079 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.111838293 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094643413 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.092044182 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093155569 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106706676 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094385021 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.096105195 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.111595001 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097678279 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091854028 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.113640388 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090337535 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.095925338 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.109063264 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087405054 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085320406 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089360384 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.115594676 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087130944 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096407544 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.11435568 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090559269 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089091592 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.113986845 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089753215 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095212354 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114026813 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092675448 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099559591 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.109188265 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091683112 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.095135137 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.095448695 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.105668345 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092097692 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090777402 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116947848 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09158122 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.09517014 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111650461 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097767177 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.091878464 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.114174326 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.096611695 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.095713746 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084883057 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.1178189 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09663545 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.091697326 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108827446 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092283024 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087337787 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110432297 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.097049798 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089381659 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11715529 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.096730572 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090119429 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108721523 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.096893234 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090543984 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115584448 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090223148 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094276335 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085186783 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11545098 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092461552 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.096413747 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.108744891 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087354288 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095342327 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.115236333 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095962403 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094372971 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.116064952 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088077314 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086226137 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.110572787 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090309133 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100137072 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114709536 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093137637 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091780678 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.091256428 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.109928618 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098448596 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086792567 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.108798954 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094227043 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093104955 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.1107244 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088901435 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.093803014 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110774338 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096243857 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09172059 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.106176386 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093396487 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.097202001 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.110822027 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091591861 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090544194 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098095652 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.113416704 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090402773 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087175517 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119041371 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095335318 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098337989 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.110505843 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094085811 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.089748597 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.111848027 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.099575195 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.09107304 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113321364 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.09328715 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09632188 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118718031 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088223796 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090387563 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119844706 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097408001 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.09752874 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.111142453 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.09373253 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097813086 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116169807 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.093120855 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087942512 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087353198 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.110423372 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088397151 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.091608302 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118137522 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09288442 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090025177 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114218012 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096832069 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.092037905 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09158396 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.108844907 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099411035 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089884226 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11605109 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088027177 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086723051 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.111241429 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098070422 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09247312 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.112896657 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.094139637 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.092841271 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087532692 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.111677817 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.096775233 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095970228 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.117317847 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093203638 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09185609 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.114220759 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101962241 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.092444203 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.112437807 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102421065 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.097461249 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113294954 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094431299 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097305557 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.117571744 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095160583 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.097606046 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.109960414 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093538945 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.099031267 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.117495024 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105048636 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092957729 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105908345 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.098417803 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091759458 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087918848 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117898647 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09897762 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.09767557 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.114722691 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092708722 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100517853 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117233058 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093597198 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090977315 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.110750687 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.096859769 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090687399 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.115263576 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092170561 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.099407825 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.117749347 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09861842 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.101374633 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087868968 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120808824 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097333542 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.101120365 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.113596399 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088157357 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088134466 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.113481416 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.100017844 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099806785 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.11418182 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.096455387 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.096354512 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.093622692 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114264534 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092104864 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.098003155 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.117445823 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09195357 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.095793232 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.111666268 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096091762 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.092657569 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.116305279 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10030144 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094883585 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12210869 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.098520243 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092559609 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.110150774 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097229257 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09360495 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094597423 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117301604 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090984074 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087959374 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116952803 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.100665525 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09370458 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120903464 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100562258 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092684857 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115999035 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101603657 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.095422496 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.091294864 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.116995368 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.095571306 seconds)
  done (took 60.063240654 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146594637 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099127148 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112969402 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093873528 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111571913 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115158602 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093965376 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09335271 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115151505 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105115455 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.091980854 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111756287 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110711371 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133105337 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113025664 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103346564 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112646418 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096224029 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093364306 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112857862 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10965728 seconds)
  done (took 3.11443745 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112701207 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.107400769 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123882563 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107854865 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09985959 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.12684767 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103662515 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125807537 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109103769 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100898284 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129355746 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105931741 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.120612155 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.103884781 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101220241 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122995709 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108819998 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10020174 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.126748184 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105307999 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122651862 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.105670255 seconds)
  done (took 3.311101557 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.104416035 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.098866763 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099221669 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.11324545 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.097727704 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.092538385 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12193487 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.095399076 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.101931945 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.113834375 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091346396 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094879278 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098486049 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.113653202 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091324144 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.093949919 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.122866349 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.098518245 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.098970638 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.111492956 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107849419 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.092843734 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.113710736 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.091470102 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105932023 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.119727354 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096228559 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.098305838 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089580594 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.118310691 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.095735952 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094189211 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.114701814 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091362152 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089813149 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.117581296 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099832583 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.093638912 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.093558539 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.117309093 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.094195791 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.098500592 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.120427581 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.094325457 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.095264499 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.115538472 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.098533688 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.093481281 seconds)
  done (took 5.748407031 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12611821 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160279404 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.097983442 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135579482 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129834806 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.104227531 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.096683155 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.134307667 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.095651234 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.118909994 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.111163161 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107744494 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120905624 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.102375144 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.121308235 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.099722759 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099842134 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096706354 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.123172235 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.097522401 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.121354582 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.101893803 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.108670109 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.127352064 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.101505051 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096838758 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.117776901 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.102430749 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.106223835 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.123700188 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.341398881 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.123017049 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.110618111 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.099901402 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.115898841 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.101201095 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.109936888 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.118957843 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.100051029 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.096418341 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.119124436 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.103105649 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.099510656 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.131124832 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09948644 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.098705453 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.119406093 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.094523893 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.10565272 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.119819651 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.10544019 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.127997943 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101592571 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.099700786 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.121189345 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.109842564 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.098020279 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.11679128 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.101371469 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.10597303 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.116126669 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102719463 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.107150382 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.119477186 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.104243756 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126767101 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.101415012 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.100530766 seconds)
  done (took 8.74028871 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135113446 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10191891 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13043132 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110833569 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102608373 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12389201 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102288679 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.101804825 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124154233 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107551155 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12200186 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.202333018 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.121043408 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.106979023 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102007229 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.123158377 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103244598 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101997697 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124726563 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102300884 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.102083358 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132772632 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102231602 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129775005 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114439006 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099061063 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.123272987 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103741853 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130268839 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103897007 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112867575 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.122838368 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10338963 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110379511 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135402519 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103118842 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.117131945 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10418381 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.102873629 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.121917662 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101046664 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109895108 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.123711183 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.101084644 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101879836 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124182247 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111335541 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.134054491 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109897933 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107512109 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.12325379 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11146045 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102957368 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.123960945 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111293402 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.138000588 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111444453 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130919632 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105411572 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110460757 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131901293 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.118432789 seconds)
  done (took 8.022602079 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098548357 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095243695 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.094980896 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.114143052 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09752001 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094405252 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095017076 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.116439968 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096156351 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09617755 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117198413 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095005883 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095342821 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095365805 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116499481 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096184238 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094357386 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113904851 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097479676 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094265744 seconds)
  done (took 2.870658056 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.106883287 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113615729 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.116614717 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104339256 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.097811701 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.122790729 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.100338956 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098812436 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096677549 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120295775 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107023563 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.125731347 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099350084 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103352434 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125118159 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10409857 seconds)
  done (took 2.599868693 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119319453 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.114329611 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.191245561 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.101040584 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.118743484 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.1064008 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.098567468 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.120742462 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.097935898 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.103412006 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.101185455 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.123237053 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.099656468 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.099243658 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.119204071 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.102164264 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095397323 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.122496944 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.099970854 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.189749949 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.102374087 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.099964436 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.120864641 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.103286451 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.098941536 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.122994307 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.104254243 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.097136614 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.119445293 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10020068 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.099941683 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.124045648 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.098263408 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.103021507 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099155567 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.121136839 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.099502659 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.098595472 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.122222632 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.099672743 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.100010793 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.120519539 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.100854453 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101049323 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.117031057 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.101024151 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.096257519 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.124285857 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.100927776 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.099415143 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.098338542 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128912095 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.104696863 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.106244118 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.128058585 seconds)
  done (took 6.946073925 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112130319 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09969334 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.130802761 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098648114 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.098704313 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.098821808 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.121181437 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.100055082 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098017016 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.117442479 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100141332 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099791613 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119369306 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101586331 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098861054 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120208176 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09760332 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.099029834 seconds)
  done (took 2.772340391 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105778803 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098492183 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.101812427 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.119404276 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.098425858 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098003566 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117952417 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.098730072 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097931317 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.11881856 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100027653 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.098693836 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097344575 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.119165299 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097973357 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096564396 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.120287582 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099923345 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097850993 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116683942 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100431636 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097860366 seconds)
  done (took 3.163464129 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113484151 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.183770889 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108506348 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.194382722 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098578292 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096034288 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128890923 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098900557 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113265531 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.118212956 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097265399 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096058084 seconds)
  done (took 2.312810467 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128677298 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135864319 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119030077 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100777477 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107810076 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123874155 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102640149 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102006842 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133900906 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115014774 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121922139 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112670005 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109923896 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132355035 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107158854 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128331032 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103812396 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102256032 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119335568 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118888704 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101405125 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132391185 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103049439 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101979688 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124582993 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110299795 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1316515 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114260819 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101928984 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133427242 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107140471 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121898819 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113393933 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113332329 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121421484 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112007533 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122446174 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120314839 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108360768 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132100438 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100119677 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1073312 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134025468 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10751658 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132491693 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104233055 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1077438 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124338649 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104245373 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145249738 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108752713 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110234212 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131095109 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112620644 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133054406 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126283161 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136193183 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112091156 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107484807 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137186246 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110573651 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129623977 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112101614 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135205941 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110661548 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110073633 seconds)
  done (took 8.615280945 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141856537 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099116495 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123427637 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115461345 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131925419 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104727383 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103253993 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125196929 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105900116 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099563087 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170495974 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104264145 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134000315 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112357039 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102618528 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124379008 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104754464 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111378817 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122178519 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125790552 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123588261 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112568776 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11180691 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13356502 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11465185 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129607273 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104662714 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102588491 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125369304 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103915657 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108078688 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125587121 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111367284 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.119901466 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113789922 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103734327 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124633154 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109830315 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102628599 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130362317 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112200161 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141564378 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104641615 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103764074 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137409123 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104143063 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102350401 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1217884 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103493497 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099816952 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137230263 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115211655 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137067972 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11237131 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124647521 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105064517 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103482005 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124691382 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104854846 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109406199 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133378085 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104381744 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147422858 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105148365 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103577074 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134708724 seconds)
  done (took 8.584528788 seconds)
done (took 163.243489087 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.150607022 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.192268545 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.146551762 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.18043538 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094310049 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.129089383 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.148676945 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148632359 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092152082 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115994735 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093457909 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097257606 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.182060908 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093962832 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092892363 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.119031572 seconds)
  done (took 2.946043929 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.192550328 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.310880737 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109668232 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118958738 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102396637 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099621921 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119211729 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100636071 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097303437 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12793036 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101621502 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09512336 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127374186 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097050348 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09653627 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123086047 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10725716 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099357025 seconds)
  done (took 3.101107414 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120064368 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141479056 seconds)
  done (took 1.14445465 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130957061 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.198125154 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278827359 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171925119 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122463285 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13758412 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151873661 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13430576 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.180273458 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133654585 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111832257 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097549213 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147514548 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103936305 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.133906394 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100582872 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126106106 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.131750042 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111013057 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100062494 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143528032 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104149473 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102914562 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.133127657 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.170213711 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133278009 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104009101 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101999101 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123751571 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109940382 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105251212 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136727432 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111330222 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173861892 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103730992 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.171051965 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.128416851 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.099346356 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.109333615 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.119845238 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104453444 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102005501 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.137426846 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099024099 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101990427 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.131718453 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103853231 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102835384 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.130540675 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108798717 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.129759888 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107119539 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.169872615 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109287548 seconds)
  done (took 7.809263093 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.862781216 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139833044 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09968473 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.012387638 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149155635 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114638375 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.857739237 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145559847 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252919643 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.874483754 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115959143 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11173066 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.26089062 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.233804359 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.018389368 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.326796871 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.715905406 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114020446 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127351306 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164554516 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10733508 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148344662 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120044318 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.423833991 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099706585 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09853337 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129066754 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111063788 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177176649 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098489078 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125391247 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195070453 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.244633222 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209299429 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121352714 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098759026 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098411962 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184186969 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271415988 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218225792 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.187793197 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095933028 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09707632 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129678113 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119172504 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117383825 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158630978 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189617418 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190246303 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10212807 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.13396629 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109650066 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127594042 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.157731508 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.11854175 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.328132835 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.330329383 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09796512 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12971744 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114434292 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265538203 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.119151359 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233235362 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125650816 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21536634 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097396108 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.83271184 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.161356386 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120254943 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106712258 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105315982 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127556377 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106415033 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181349927 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.372259622 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134149536 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102517526 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098498427 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.243931802 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.121757568 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099218691 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181830782 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100390565 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106913733 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134604714 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110184032 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187725226 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.253090451 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.110597677 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130542168 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103726474 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11073521 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.123251472 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231353963 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230204637 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.152960988 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231669808 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130494596 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159397005 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18274517 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127394951 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.164483851 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128803734 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114804767 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128885196 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226612605 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133425968 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.120683455 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104837132 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107731496 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.16047495 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101795844 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129883413 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.1627447 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45709696 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.182327772 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095463853 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125038227 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109110426 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181067333 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106185804 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263494093 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129916121 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162728794 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129534209 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09664115 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10610941 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181053385 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129673877 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108891468 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106671961 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132855956 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.229081705 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.24476648 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113475089 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243511677 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19326011 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106822345 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192637428 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108356549 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189380162 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108244016 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130812485 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100744921 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799301182 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13426763 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108953442 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103694731 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.206212307 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099018696 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.120668657 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101440758 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096350052 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804925718 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100915063 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120987675 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099827111 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105856388 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130165914 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107573032 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126300989 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158170505 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.263058409 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114350584 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106038983 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122116465 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156618004 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123919335 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099950112 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098471491 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.122379023 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108720845 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.102610423 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123425961 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189527911 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.155723094 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.230250427 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.558323298 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12446068 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100066689 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237644922 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123702119 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.300381078 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107686495 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233253658 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185217215 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097133921 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.349871641 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165557833 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205015185 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.101878694 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189772869 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096768698 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131025372 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.157520196 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122911404 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107114399 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179017275 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112929336 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13536249 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.001243977 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099142501 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250365025 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096753745 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.187257142 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100867775 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131983374 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.310095762 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100000273 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13874405 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180355398 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106381458 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100074413 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.604836949 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100199879 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134709381 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107533671 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235349592 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185661582 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129661869 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110795481 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112674236 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.18060431 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233787724 seconds)
  done (took 45.237266292 seconds)
done (took 61.113644621 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.296538451 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.262644197 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.305955208 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.213199891 seconds)
  done (took 2.057668479 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.266707827 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165392361 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.235523138 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098118552 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.246005017 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097401347 seconds)
  done (took 2.02176368 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.495769147 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.386038087 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.344410324 seconds)
  done (took 2.141959525 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.263276881 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.247619341 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.352747033 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.413837775 seconds)
  done (took 2.302379096 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.30551787 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130469338 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124263135 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.214210452 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.258730118 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.233605096 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.173201811 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.171374895 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.156363392 seconds)
  done (took 2.72759468 seconds)
done (took 12.162110056 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.155819504 seconds)
    (2/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.388013201 seconds)
    (3/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.281388943 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.104628326 seconds)
    (5/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.341917328 seconds)
    (6/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.184619049 seconds)
    (7/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.207890433 seconds)
    (8/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.232483843 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109438562 seconds)
    (10/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.321314911 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.282447684 seconds)
    (12/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.308570951 seconds)
    (13/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.310766777 seconds)
    (14/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.296471983 seconds)
    (15/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.129872793 seconds)
    (16/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.105480429 seconds)
    (17/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.155291559 seconds)
    (18/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.218137365 seconds)
    (19/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.328520497 seconds)
    (20/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.193222429 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.162421889 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.105699432 seconds)
    (23/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.243360963 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125566396 seconds)
    (25/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.1448407 seconds)
    (26/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.198409251 seconds)
    (27/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.111284048 seconds)
    (28/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.236873338 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.206426312 seconds)
    (30/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.129985642 seconds)
    (31/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.211448581 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.105649745 seconds)
    (33/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.111266917 seconds)
    (34/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.194122458 seconds)
    (35/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.186133577 seconds)
    (36/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.1834805 seconds)
    (37/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.182468953 seconds)
    (38/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111704385 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.127368306 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.134974956 seconds)
    (41/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.107066813 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.136936988 seconds)
    (43/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.10634529 seconds)
    (44/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.289562889 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.16107256 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.105498327 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.106660124 seconds)
    (48/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.107345039 seconds)
    (49/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.106316127 seconds)
    (50/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.201434023 seconds)
    (51/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.107043963 seconds)
    (52/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.178209942 seconds)
    (53/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.149353971 seconds)
    (54/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.104126229 seconds)
    (55/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.081322228 seconds)
    (56/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.145252261 seconds)
    (57/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.081365221 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.128313513 seconds)
    (59/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.270200742 seconds)
    (60/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081356651 seconds)
    (61/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.246316059 seconds)
    (62/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.08081365 seconds)
    (63/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.13993836 seconds)
    (64/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.083517995 seconds)
    (65/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.204107503 seconds)
    (66/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.203409103 seconds)
    (67/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106730523 seconds)
    (68/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.190934818 seconds)
    (69/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.132161826 seconds)
    (70/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.105025166 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.081890932 seconds)
    (72/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.081769556 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.161572088 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126519044 seconds)
    (75/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.082486537 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.131198706 seconds)
    (77/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.125708759 seconds)
    (78/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.223883753 seconds)
    (79/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.126743703 seconds)
    (80/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.196420504 seconds)
    (81/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.215925105 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.139718367 seconds)
    (83/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.227107689 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124229064 seconds)
    (85/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.132199532 seconds)
    (86/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.206839053 seconds)
    (87/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.161260995 seconds)
    (88/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.175090762 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105091281 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.126219771 seconds)
    (91/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.107115903 seconds)
    (92/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.19977064 seconds)
    (93/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.151138709 seconds)
    (94/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.202418962 seconds)
    (95/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.215907385 seconds)
    (96/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082570929 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106860709 seconds)
    (98/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.105397913 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.124780354 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.107218655 seconds)
    (101/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.186483474 seconds)
    (102/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.105339408 seconds)
    (103/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.082634491 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124207291 seconds)
    (105/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.105299607 seconds)
    (106/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.106811525 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.107839828 seconds)
    (108/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.082365804 seconds)
    (109/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.104858174 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.13185569 seconds)
    (111/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082812288 seconds)
    (112/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088437028 seconds)
    (113/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.172387584 seconds)
    (114/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.084022307 seconds)
    (115/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.088956167 seconds)
    (116/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081861802 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.106680692 seconds)
    (118/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.105464186 seconds)
    (119/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.101003735 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.105711838 seconds)
    (121/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.082664674 seconds)
    (122/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.105248548 seconds)
    (123/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083922687 seconds)
    (124/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.083743505 seconds)
    (125/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.082613191 seconds)
    (126/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.09193212 seconds)
    (127/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.123530328 seconds)
    (128/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.176492657 seconds)
    (129/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081840413 seconds)
    (130/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.133712571 seconds)
    (131/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.083891515 seconds)
    (132/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083647912 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125373478 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.151641431 seconds)
    (135/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.082599256 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.107068904 seconds)
    (137/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.129922982 seconds)
    (138/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.082420381 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.108310305 seconds)
    (140/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.203914192 seconds)
    (141/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.083003536 seconds)
    (142/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083500752 seconds)
    (143/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.092965417 seconds)
    (144/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.082294961 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.132495875 seconds)
    (146/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.100490705 seconds)
    (147/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.107744326 seconds)
    (148/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.131310827 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10883147 seconds)
    (150/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.083782555 seconds)
    (151/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098482619 seconds)
    (152/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.130756433 seconds)
    (153/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.085761518 seconds)
    (154/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082572163 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.098986518 seconds)
    (156/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.131896475 seconds)
    (157/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.083214633 seconds)
    (158/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126997748 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.130895216 seconds)
    (160/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.088292552 seconds)
    (161/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.082647591 seconds)
    (162/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.178185421 seconds)
    (163/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.129960067 seconds)
    (164/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103335064 seconds)
    (165/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.132130944 seconds)
    (166/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.109615081 seconds)
    (167/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.113598018 seconds)
    (168/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.082248117 seconds)
    (169/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.082887705 seconds)
    (170/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.130542193 seconds)
    (171/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.103303025 seconds)
    (172/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083868812 seconds)
    (173/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.134934356 seconds)
    (174/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.083151042 seconds)
    (175/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.088578617 seconds)
    (176/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123859873 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.130372671 seconds)
    (178/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084212993 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10041299 seconds)
    (180/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.107481303 seconds)
    (181/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.105928408 seconds)
    (182/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.155309563 seconds)
    (183/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.083375782 seconds)
    (184/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.083010522 seconds)
    (185/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.08135678 seconds)
    (186/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.132336415 seconds)
    (187/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.182096238 seconds)
    (188/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081967215 seconds)
    (189/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.133538148 seconds)
    (190/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.0830011 seconds)
    (191/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082746981 seconds)
    (192/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.081818312 seconds)
  done (took 27.507240486 seconds)
done (took 28.426746466 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.216384041 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128578359 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109999805 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108634032 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.205763554 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115113949 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.142878259 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.1123996 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.114947373 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13155428 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100133626 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.118584658 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.132277709 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.179779939 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.135938802 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.102589428 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101585917 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.139598303 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.119485165 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119924959 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.206764837 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104139577 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.112712907 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.126083337 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.179536894 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128982614 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109253097 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.107726485 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.14182517 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.108257014 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.108720908 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.125742378 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.119669993 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.118953489 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124147592 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.108441147 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100778476 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088216951 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.13221817 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109317692 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.116141077 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.131813674 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110632143 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101811845 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.134535444 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.107878616 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100472302 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.136914466 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100696088 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.108251204 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127320395 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.121433186 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.10669224 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.122776038 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100970098 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102764192 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.138248045 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102376331 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.118506408 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100818487 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.12725825 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101344453 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110256397 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125736352 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.108683854 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102430862 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.131849571 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.110350053 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.106738948 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126703217 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102842136 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.108178188 seconds)
done (took 9.710079021 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108482244 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.158075029 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.203346887 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.213733366 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130787093 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142440796 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122978905 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.129907234 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.144121514 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128020669 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.160142317 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130723159 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.215544343 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.113354186 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115313633 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.137654683 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116918167 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.138206 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.192753139 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.150230507 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.131987541 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.11293942 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159452689 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.125108574 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.132530652 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.130698289 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.107677111 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.1363694 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.109645942 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125028694 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.151743097 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109496136 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.106653788 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.155011847 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121296641 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.13898439 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119313252 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112379207 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.130569298 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.108912347 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11468078 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.151949128 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107812096 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117532754 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.137515773 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116498683 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115445605 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.14172113 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.110535626 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.110363286 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.136579749 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135433442 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.138955008 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.1159493 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.114104415 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.140178678 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.116651053 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115550686 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.133011217 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.116786702 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107385436 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.135023112 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11214571 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.129273979 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.135630661 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.11572053 seconds)
  done (took 9.655593786 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126660154 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137560622 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140498888 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117487169 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110081226 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124549242 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099395135 seconds)
  done (took 1.829561272 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102760024 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187459082 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.211078587 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211604786 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.205671609 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.195789204 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148396644 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100831078 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131839013 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137784664 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.187544585 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.242490467 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.13234572 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.116414557 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.213421671 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.100856811 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.21655762 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.101274481 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.112611182 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.212900296 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113499716 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.156338256 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.113117134 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100685863 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210628623 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.100773768 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.266465092 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14195442 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110611967 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114415691 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110929249 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205786186 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.211102529 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115611747 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.104947929 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.211945323 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.208210338 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110765985 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.226394518 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.104973437 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.210918956 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.112086456 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.140550455 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.114278993 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116009203 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.19731424 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119719487 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.13975296 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.114479203 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.217169588 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.112513606 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208260745 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.11122346 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.111994259 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.136942564 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115511991 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121787501 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.138090335 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.197189097 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.140150693 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184955931 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.212345852 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.210101946 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.184879256 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150656974 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.187611985 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.208172646 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.111129511 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.135927507 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.114000253 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.212263907 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111018654 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.112239547 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.201643485 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116131157 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.214450999 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.212794874 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111064002 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.112975339 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.131904944 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.111248162 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.100843971 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.204270207 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110939073 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.134970636 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12083917 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113651261 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.138566984 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.107413261 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.123374645 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.138344485 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.112698712 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118336344 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.138869262 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117062716 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.217486688 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.111455405 seconds)
  done (took 15.618788647 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107615487 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103002453 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106681112 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129419633 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104130757 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103422889 seconds)
  done (took 1.643578926 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144109626 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114855938 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.149140319 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.116312867 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166343624 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.219044502 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.227575567 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110153634 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.157512587 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127408495 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.217948805 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.200916147 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.226942545 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.116786634 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.227400302 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.14414048 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.203123303 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.137182873 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125888245 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113537354 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142961775 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.118999286 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110884198 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.213304491 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.114937459 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.144548682 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11044672 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125593106 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.149442393 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110468739 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.116664725 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.141995015 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.10842468 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.134659311 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.204047835 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.134026929 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111294265 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.1229619 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.142495247 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117081084 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.22701846 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112858899 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122911115 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.151281537 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11123321 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.108853292 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.152047511 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11139662 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.227772233 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123309044 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.149313783 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.117725767 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.115451801 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.149248325 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.110825925 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11087527 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.148982925 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.202263007 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.144354638 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110563715 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11415397 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.143148648 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.111715232 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121958663 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.142260301 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123967656 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.133868268 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117780697 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111640611 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.140475964 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.127853555 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.11516522 seconds)
  done (took 11.224212022 seconds)
done (took 40.93592692 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.571156903 seconds)
  done (took 2.553878763 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.910647089 seconds)
  done (took 1.897394177 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.007832331 seconds)
  done (took 19.023924816 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.533193434 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.608635248 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.040013108 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.152802341 seconds)
  done (took 3.321563967 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.021777524 seconds)
  done (took 2.026642537 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.295399083 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.264212937 seconds)
  done (took 1.553600377 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.725904042 seconds)
  done (took 1.731344894 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.548437455 seconds)
  done (took 2.541521128 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.360394103 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176596071 seconds)
  done (took 1.547101164 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.62774966 seconds)
  done (took 1.637428606 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.691931481 seconds)
  done (took 20.703743329 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236779831 seconds)
  done (took 1.250403743 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.281740273 seconds)
  done (took 1.296999847 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.622241455 seconds)
  done (took 4.639113052 seconds)
done (took 66.722693608 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114119064 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115905952 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115710563 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.141367672 seconds)
  done (took 1.492870616 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122313242 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117221638 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145672748 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119163003 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122437132 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116678232 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142393112 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119174198 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116002515 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145575456 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117262561 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116746997 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146216084 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116963783 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114219592 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146349434 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121026878 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117536642 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143813914 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119581837 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11804209 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145186028 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12121705 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120072368 seconds)
  done (took 4.049386744 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.11361071 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107173462 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108749532 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13275017 seconds)
  done (took 1.483309881 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127656442 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132039459 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152864211 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126686159 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129410005 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155486362 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117826279 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113934316 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143216478 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128140009 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133293309 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155932288 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129521139 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119264267 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154251537 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11166632 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117526223 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154905621 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123815847 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126246131 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.14377403 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123667589 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122360952 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151777164 seconds)
  done (took 4.2125329 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.19153024 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.126614424 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.166438977 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.15859475 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.1687071 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.112543094 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.136923943 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147340044 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.118982873 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.140541704 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.1171668 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159306923 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.145361916 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.116280765 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113176001 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.145182455 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.125330773 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.118258971 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.182572004 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.117312205 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.145609353 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.126869762 seconds)
  done (took 4.103205305 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119757273 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107265121 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.127336223 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.111519193 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118449488 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.134636251 seconds)
  done (took 1.7452903 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10729896 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.100911407 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.100531217 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127042971 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105934593 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10130676 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.1255874 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.103352909 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101486868 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101697185 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12716566 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.100848923 seconds)
  done (took 2.324151426 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.343229542 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.10761616 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134241926 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.107615821 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112410875 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104348909 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.147051798 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106552102 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.270764422 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.1061951 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.147187016 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.196710494 seconds)
  done (took 2.909222983 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205064307 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142696864 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.298104789 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369964656 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16252037 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185439621 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269476561 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187048073 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200749344 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133328128 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242609932 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151621749 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17522443 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170974386 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163236641 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158819859 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192216513 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18570612 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1709887 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221552517 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152370738 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189188242 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17787112 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173069201 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132127167 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186735058 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116781393 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122653434 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191792691 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188353987 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166840796 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170613191 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136419008 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216598498 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254933173 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16582811 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.30960066 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128314954 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.20133813 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.180133613 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253312416 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161008159 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184547334 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176445692 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124197783 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20201473 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148940505 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.197324584 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.126190747 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164512097 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175781335 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19657429 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200083095 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133422136 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310634249 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158174903 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166296972 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169790887 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207638365 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212792031 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163400417 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.145126063 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180045788 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204286133 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202621115 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.137645431 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187986744 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120701148 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186103707 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189943564 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203041275 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153334516 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.220095914 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155709099 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154169277 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194893367 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174117356 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200829942 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153362456 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.141459253 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145268949 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1586814 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123573765 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198124527 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143843861 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194158518 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154232416 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341528771 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183356673 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179540429 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153223122 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180676548 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180474686 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141971254 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.108389789 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168513684 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158044549 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179140882 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128703487 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180135558 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134630613 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.122768581 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17449881 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.117908516 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180244494 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131787666 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187617016 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153549746 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.151872572 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159841309 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169442715 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149862573 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190635324 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178012989 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154322557 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128252631 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211814225 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152338329 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.153431731 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172983088 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206319019 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145762375 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160798833 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160656765 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211874776 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135748211 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211202908 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131691721 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158166936 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.142447779 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183474195 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152438568 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.17914043 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125046939 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.173621324 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192859728 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151622226 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132853135 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190464747 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127939009 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119817648 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161336946 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133061089 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.162043603 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.140070083 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154607735 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149716831 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17857761 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153277806 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177994654 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129999655 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200830872 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128242452 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.180093717 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142175649 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.113813371 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.196798706 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206952125 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126062362 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224848036 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159637595 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215466836 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181945418 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126449979 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199140156 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12341587 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.114738538 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185531581 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149954186 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185013497 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.174295972 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212865828 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189579381 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.144077941 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171290646 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16195944 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.201211075 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175340144 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140905654 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180161554 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160190798 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.116055615 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.146475237 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123306143 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132066593 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154189049 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129944368 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199035179 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185904718 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182002363 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181019868 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133206482 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208112683 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121004935 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183860367 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.158857116 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164955797 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.176154283 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204537005 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187295753 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136595325 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183188598 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.11679042 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122164646 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.155055502 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15996231 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156858417 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131231433 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135239699 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205449903 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197207741 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143224471 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2218643 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190132678 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189764481 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.143549835 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.163762071 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194617544 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152948305 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.205371265 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134629334 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.154583419 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203173544 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135179667 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209695708 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180219903 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156626775 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212144671 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.14983081 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153474033 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143876913 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18354475 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133653176 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187587161 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141237389 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124310549 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177138876 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132619013 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148101917 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178460023 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166650534 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19149345 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155830672 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192265921 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121070327 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135476202 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18299199 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139331305 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.139046097 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166547927 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208468116 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140970764 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181565014 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195935639 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127378052 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.314651129 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211234445 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201763707 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131006004 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162359103 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158115114 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183698131 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156951973 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205248114 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135631131 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203390438 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153369873 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.166382804 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125911776 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143197521 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175965522 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.143209582 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.156753162 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.1507624 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.165429849 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178773072 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164034414 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154594476 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184268627 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144226197 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.176462725 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135002099 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219630729 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151798984 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19896249 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.148274986 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191722322 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215543854 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1194267 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122468119 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.154993799 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17474829 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153082919 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158138351 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.202769842 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214966194 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158934008 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184845251 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132045291 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.149520371 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153059499 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170622069 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216094804 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130903054 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.131436076 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215268092 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.132757112 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154589297 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155619215 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306789847 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140871655 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196451394 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.117927438 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.299810847 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125264814 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154925048 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159415083 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194922926 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.127256315 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.204038349 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157950908 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163483302 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161824673 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131620191 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210529933 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216477943 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190459809 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167929613 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.167964727 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156221864 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184362144 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170791357 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16770283 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.1401494 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186742503 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177964972 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206492572 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.126566992 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182380341 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152927032 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181289047 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166281668 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160400564 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186834435 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153418714 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159308907 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162894746 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119353025 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182700122 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.176641307 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154965834 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17172534 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183258391 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126981783 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150473686 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141670884 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180476198 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135174548 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.124193986 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208014574 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.152375714 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159859279 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20337373 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12813298 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15071677 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170867765 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12521741 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165685928 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13784237 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126675518 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.192665384 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179073649 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.154042404 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174334539 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187090401 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187175272 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15363587 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136991291 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.690425118 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.121560198 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208225956 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141426057 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212931109 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144646763 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186200465 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153462426 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174635959 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159758204 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171817396 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.238802348 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188089082 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.152377886 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157016536 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136669219 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164189266 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128553855 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175228065 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1536402 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134434501 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.160266701 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.152882701 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166276851 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.140145222 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162801282 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180570287 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17204957 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179612615 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206613027 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13153437 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187254786 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166655228 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157023201 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156641064 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198170425 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135676919 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172284593 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.127822619 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.160221705 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177457169 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.119098904 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182886249 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156525978 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183841066 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152990387 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.159209198 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157064809 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165400321 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155174158 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150214618 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148583665 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182458129 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13001406 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.120180292 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182437499 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152944504 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.180999944 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120234946 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168870908 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204049141 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.119043316 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157219323 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274910349 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18205972 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212929047 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.145424923 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130688448 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168349358 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149081662 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.180114843 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156148341 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.153207034 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125766721 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.12454284 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.196058842 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.150150316 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18310565 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173038733 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185387241 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215402615 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.130867656 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.287314913 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163750937 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153596315 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.152010919 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.124571802 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136262084 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158193548 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135443689 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213456374 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203000729 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150540428 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.168292407 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132027192 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.121301966 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153629364 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161882702 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175076414 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155918992 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166618355 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.112791199 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13795883 seconds)
  done (took 82.392198629 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165717376 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150570066 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167582927 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.225406319 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19594087 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.296393356 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.234648448 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.261403288 seconds)
  done (took 2.811784607 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120169676 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155655104 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140516727 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144504998 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.117525817 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.443658484 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.156775625 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118566383 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.165364656 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.157642111 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.140800801 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.623623619 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.112259077 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144291606 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.125919462 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.116733721 seconds)
  done (took 4.088469846 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.484212356 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.584646658 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.193328306 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.277630444 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.231233697 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.177526489 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.79552318 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.189990465 seconds)
  done (took 13.048562221 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.653035788 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13259567 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.318176579 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.261764482 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.149379226 seconds)
  done (took 2.633251836 seconds)
done (took 128.300213001 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.120127048 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.119240666 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.118949179 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151725729 seconds)
  done (took 1.615470839 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.183590064 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093877932 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096149723 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120179423 seconds)
  done (took 1.610757029 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.446784078 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093216621 seconds)
  done (took 1.681529927 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.146250257 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.141611407 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.16608125 seconds)
  done (took 1.584945794 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.139643601 seconds)
  done (took 1.263581216 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.126886258 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.118931783 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.238324979 seconds)
  done (took 1.610906476 seconds)
done (took 10.49188258 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120016956 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.419301615 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432276686 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134241086 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.708326631 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424762053 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.064238782 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172779839 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173493348 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136795148 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132482266 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688818464 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.046183606 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.358603209 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002855768 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.39068415 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.692800568 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110201298 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.144874056 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110419608 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.045703036 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135585842 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110275853 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110034291 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716692575 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421701056 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108312703 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.398800225 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10785124 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11199853 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.426234804 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108865633 seconds)
  done (took 17.377622116 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11761647 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172305713 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143984311 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109855774 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11222622 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138669898 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119810489 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120958108 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204068917 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108086817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160848692 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108461815 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113079984 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.137174748 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135860886 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108062271 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.140046012 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112969032 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116376645 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.138032282 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134000771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107718586 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137975398 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112972692 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108568177 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158960802 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110174963 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119918577 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136789012 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113955262 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113767374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137410277 seconds)
  done (took 5.240595219 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157461932 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178996504 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146917317 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148236334 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184740637 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111673778 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222697893 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147428851 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202293027 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109424067 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132273982 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136982003 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150306838 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110250175 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164176808 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109389818 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112746764 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139579296 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117909537 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110335108 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161605146 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107487501 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11027568 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.13999801 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109035188 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159478925 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109966683 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12153344 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.13570293 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113786444 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113934541 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.136625392 seconds)
  done (took 5.539411036 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128027795 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125146418 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132914237 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163499688 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120111259 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122664355 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153871474 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.11964941 seconds)
  done (took 2.19340734 seconds)
done (took 31.474292916 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133201987 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.125815121 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.127321082 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.14952044 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.192336977 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.142816904 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.125036984 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.111743752 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.149928859 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129238277 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109079354 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.111870697 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156377531 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.116393554 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.225957358 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.121945573 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.229675532 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.195252506 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.144801382 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.122404558 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.114339047 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.229681213 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.117534356 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.144063956 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.203778763 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111914 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.217633109 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.11687813 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.146901029 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111477899 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.224616903 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.11804516 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112792481 seconds)
  done (took 6.013209707 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.210662869 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.11749743 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148245995 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.117814239 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.11466381 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147580708 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.212964361 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.146069795 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119620867 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117390853 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117167452 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.224691935 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.121377344 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.139992376 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.117741778 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.113004709 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.244151002 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.117313373 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109599556 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.124386868 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.111050437 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117110834 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.255557177 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.110044901 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116518146 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.148644321 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.118010887 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.120648394 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.146757755 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.117673416 seconds)
  done (took 5.388895068 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.127106576 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132149757 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.163644692 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.187377752 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.14730561 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160653315 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140508318 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13325077 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171708152 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111520002 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126844328 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177620674 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12798167 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12236931 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146204891 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131633768 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13513282 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.141441042 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.118062172 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128215121 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162429739 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129402969 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139186441 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149259742 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.109800641 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118435615 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.151792107 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127076338 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119558135 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.155191706 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.113526365 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115236901 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.141544733 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.14788078 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113436729 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.154418788 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138074696 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12383973 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.158151662 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.143975613 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115537947 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.1446801 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138520213 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167317947 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.142657841 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126158157 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122235449 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.155354203 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.110202766 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130619722 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.185426826 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.111430217 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132803598 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.143018939 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.109868494 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11897013 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.141085573 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.1147914 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.125876734 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.143438124 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137376175 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.118545174 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.150662773 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115411194 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.121150345 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.109735193 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.140358473 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.115202974 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.13890645 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.149664325 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150392332 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.110747588 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.153053352 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125065021 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.121800345 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.153248169 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.111473855 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122547936 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.151338075 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119655626 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.124742969 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.113190674 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.14587317 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.128992259 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132480821 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.156591542 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124436864 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.1248673 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.144658798 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.113889227 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128382021 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.14284933 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118837986 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.12456356 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.141782662 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.116088967 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124756852 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.153086028 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.11076422 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137184266 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.144187199 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112410043 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.136589771 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116435094 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.149364043 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122160208 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.182956805 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.112789082 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123638771 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124124184 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.142651239 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.119636735 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.115215698 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.141473818 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.1313187 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.12682626 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.149238135 seconds)
  done (took 16.849776116 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.326282463 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.312952867 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.180184205 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.313683037 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.156716661 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.209915259 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.312448043 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.311418121 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.111752177 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180830031 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.194710618 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.249095202 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.143854121 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.141012677 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.312818098 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.364310825 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.172246306 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149134626 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180008522 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126302245 seconds)
  done (took 5.600529556 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132915486 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149740756 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166050767 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142819113 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119190146 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.156479105 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11153913 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.130803978 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.150495182 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123843034 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114220357 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159173668 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.121447035 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.12507829 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157188837 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150747181 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120618216 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147162338 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135251085 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116095085 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134375998 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140401451 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121066095 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166089111 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128027883 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124244277 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140484549 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118239122 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116493718 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.147579021 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117225295 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131326233 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.147981862 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108083431 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124549392 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.156604156 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.117417215 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115340144 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.115816383 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.146981657 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128403397 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.121723421 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.150842176 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102174553 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.128974583 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.114193713 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.152221456 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126207412 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108881189 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.157370497 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127192268 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12235417 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118757915 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.162463939 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.115808099 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128263053 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.15338784 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124035508 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.11662368 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.140713992 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111137663 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116433451 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.147222554 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.124552765 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124981169 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.163153414 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.12943145 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.11165378 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.146599896 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117896164 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117235257 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.157424305 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134926702 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.117771013 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.146010303 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.12527978 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.116630552 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096597987 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.152849571 seconds)
  done (took 11.578102131 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140090717 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.11833907 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131697631 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.178829427 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.122648478 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117778146 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.150305982 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132539489 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123377933 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.157067929 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.124044729 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125833863 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165186719 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123016606 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.117831669 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158801562 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.122593562 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151334353 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.16319557 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.14197668 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.154136803 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119710735 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126514908 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123671714 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174681415 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125525648 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170168509 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.124803842 seconds)
  done (took 5.050527499 seconds)
done (took 51.616783233 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.287368204 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.481945969 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.261221827 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.25706429 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.259182614 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.270006412 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.255830356 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.274003112 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.670756417 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.234393806 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.257715873 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.255531699 seconds)
done (took 28.927215561 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.336416104 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.780921731 seconds)
    (2/2) benchmarking "String"...
    done (took 1.537195066 seconds)
  done (took 4.47266315 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.250704696 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.249631854 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.472078582 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.24951802 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.260964378 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.249297087 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.24998564 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.258314429 seconds)
  done (took 16.14511419 seconds)
done (took 26.361813361 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.309768165 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.444832236 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.501611771 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.251425215 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.252823004 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.272996904 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.253750295 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.279205338 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.257693834 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.256320011 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.661896813 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.510558482 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.256168606 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.622844661 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.251620934 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.252636592 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.26891442 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.488408913 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.252891873 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.285473123 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.236184396 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.238156054 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.285727887 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.260683369 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.259141202 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.257617034 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.271432309 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.252285149 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.442181278 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.261487286 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.293144745 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.252493823 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.265066538 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.254326266 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.259037632 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.263700122 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.452144389 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.262208771 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.238863316 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.26341437 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.452231531 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.276254224 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.253755965 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.264394643 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.254532545 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.301379896 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.240589459 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.366382789 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.274114 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.261802325 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.255041798 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.630553955 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.261705716 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.267746288 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.253769082 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.478053484 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.274753195 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.315705095 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.279141456 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.267141651 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.253431181 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.252650101 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.323714732 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.260150891 seconds)
  done (took 146.978869458 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.253257365 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.254197304 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.254773918 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.302206859 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.257842317 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.256141154 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.255742914 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.254232037 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.25848067 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.28146433 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.257999225 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.257990539 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.258334048 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.251969308 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.262260684 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.274956445 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.273879137 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.255083899 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.278113268 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.254581078 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.262495935 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.259373696 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.256608533 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.255695509 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.29994648 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.337013332 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.260774053 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.258931232 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.26478202 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.255172504 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.29683885 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.262399778 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.896239632 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.122842687 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.26439767 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.286274183 seconds)
  done (took 82.254430491 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.25765354 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.256515043 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.256993226 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.256371541 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.289679105 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.255543983 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.845491418 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.850610972 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.981280319 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.619411477 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.652068 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.526426273 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.25533277 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.35187128 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.26810498 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.256712782 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.270081192 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.281733491 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.259302233 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.255661545 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.838504371 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.270697098 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.266885145 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.432946694 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.269440041 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.286533984 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.650616819 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.255012727 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28671804 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.585819861 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.303923026 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.252215312 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.65010865 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.082482723 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.36624372 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.256311105 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285818635 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.253207856 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.535864212 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.254208574 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.254459461 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.256225658 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.935436956 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.256858317 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.825530868 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.256435208 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.208197627 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.256692845 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.252203708 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.276756231 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.901027356 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.254977519 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.252681893 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.255744989 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.251993958 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.252736466 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.284186694 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.257391459 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.350488756 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.252188725 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.256287494 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283000119 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.250835083 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.496672364 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.255116904 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.626640059 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.313895651 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.495992485 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.816528627 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.252992682 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.352232704 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.375344803 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.254188012 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.252616521 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.253582695 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.254282861 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.253433064 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.365557107 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.252637293 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.659651884 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.429007092 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.270191362 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.598657706 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.353201404 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.254363448 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.636743298 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.257383777 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.253079052 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.04010679 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.355375488 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.25453545 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.254982088 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.253159679 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.255698101 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.253867909 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.660506259 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.825569081 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.490922957 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.258220182 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.567956874 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.255165486 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.676436667 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.805810809 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.942372702 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.259869598 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.367919673 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.430371222 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.271864901 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.254254497 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.599228348 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.26000773 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.316248693 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.256449462 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.657469525 seconds)
  done (took 372.084956757 seconds)
done (took 602.478288405 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.142858445 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.090616303 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.241519096 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.09673824 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.079907588 seconds)
  done (took 11.810234986 seconds)
done (took 12.970267323 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.445627061 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.446514137 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.315653317 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.446846173 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.289904321 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.463669325 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.434347299 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.276112848 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.368794693 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.338539668 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.365176951 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.310011069 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.289531475 seconds)
  done (took 18.950549576 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.525589222 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.264768294 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.32680376 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.508407183 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.301346239 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.55374033 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.5817525 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.264691818 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.421210026 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.275410022 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.274626192 seconds)
  done (took 18.459195413 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526225739 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.264212319 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.319243773 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.517887721 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.298755713 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.522269378 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.583372544 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.266201327 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.419065014 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.275963658 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.274194202 seconds)
  done (took 18.424568691 seconds)
done (took 56.995775275 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.341442638 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.643053677 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.290536627 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.282012971 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.269466334 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.274470493 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.284068833 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.271361282 seconds)
  done (took 11.815845838 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.268602339 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.270850038 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.267709409 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.269042422 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.268779717 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.267186447 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.268860342 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.268609617 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.269530867 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.268881599 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.268442741 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.270347872 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.268001855 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.267839167 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.268346923 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.26894279 seconds)
  done (took 21.460155616 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.270583416 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.267946149 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.270289336 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.268400604 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.267719897 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.268730437 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.270216401 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.268466363 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.267845867 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.26852747 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.269609586 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.268616987 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.267693051 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.269758804 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.269365841 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.269769743 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.268070276 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.270228987 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.274634959 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.267242764 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.268510119 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.268698005 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.270504278 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.268659472 seconds)
  done (took 31.621884631 seconds)
done (took 66.058009157 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.258973202 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.262147069 seconds)
  done (took 5.682541375 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.329020029 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.330024299 seconds)
  done (took 3.821133484 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.270728212 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.27006214 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.269860762 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.270098861 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.268643221 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.26984308 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.269140997 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.268627589 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.270250424 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.269213865 seconds)
  done (took 13.857710392 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.271403703 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.270614875 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.268898345 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.270781434 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.269516062 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.269299258 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.268874682 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.268447292 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.268851338 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.270122225 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.27314323 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.268878442 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.268784919 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.270605562 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.270007024 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.26921845 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.270341306 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.269652407 seconds)
  done (took 24.018085749 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.282342758 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.292333121 seconds)
  done (took 3.735797935 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.409216931 seconds)
    (2/7) benchmarking "second"...
    done (took 1.311368584 seconds)
    (3/7) benchmarking "month"...
    done (took 1.385476138 seconds)
    (4/7) benchmarking "year"...
    done (took 1.376102475 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.310401013 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.290999273 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.310250875 seconds)
  done (took 10.554554267 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.270826827 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.482916416 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.6095032 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.841360093 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.27068151 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.274335753 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.104931063 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.273727558 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.277671012 seconds)
  done (took 14.567313952 seconds)
done (took 77.399487507 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.259875645 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.319417202 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.276589703 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.282944993 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.563711965 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.2580434 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.263892288 seconds)
done (took 16.38623691 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.25290946 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.255369613 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.246522778 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.267432612 seconds)
  done (took 10.182416432 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.259144737 seconds)
    (2/2) benchmarking "read"...
    done (took 1.547731345 seconds)
  done (took 4.9679355 seconds)
done (took 16.312416385 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273387353 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.269536064 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.270329518 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.271808729 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.270256046 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.272054683 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.269704384 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.270589243 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.270953736 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.27138144 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.270646502 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.26997223 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.27075373 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.270720235 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27134756 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.271443267 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271417555 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271485478 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.273068447 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271226411 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270343019 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271967673 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.272350529 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.269588226 seconds)
  done (took 31.667472457 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.273719001 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.27192605 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.273005097 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.273447009 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.27251898 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.272230063 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.272906817 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.271107964 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.272730607 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.273402307 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272351307 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.27282052 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.272931279 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.273205872 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274109131 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.271557721 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.273158449 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272327065 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273742207 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.274214111 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.274492171 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274366164 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.273215205 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27291756 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.271498287 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273883758 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.27573393 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.275761043 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274734141 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.273335268 seconds)
  done (took 39.359800943 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.281331132 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.281204918 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.276582007 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.276846253 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.276160475 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.274728898 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.277707733 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.277474636 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.275684612 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.278538811 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.276715341 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.277819175 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.277727829 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.277906477 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.278390749 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.278897173 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.276421873 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.278378288 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.278919536 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.27705258 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.279353155 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.277605011 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.277374442 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.277765561 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.277917843 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.278291201 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.27806424 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.277820861 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.278180908 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.278420434 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.278961927 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.276539874 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.277848651 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.277817308 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.276372642 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.278646984 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.282564711 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.283359499 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.279175984 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.279021868 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.277515847 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.278414505 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.278629807 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.279098667 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.277933379 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.278216697 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.27989026 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.280170463 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.279220116 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.278196527 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.281122084 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.280697494 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.280168185 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.280784219 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.280861275 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.280335677 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.2786055 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.280608825 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.279882589 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.279201293 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.278860162 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.280523961 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.280099652 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.281184414 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.281173305 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.280073947 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.281858093 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.280102943 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.280225551 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.280558064 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.280633865 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.280862129 seconds)
  done (took 93.246464153 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.27799867 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277583164 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.276169454 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.276092396 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276112965 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.278931704 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.277515518 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279219574 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277103718 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.278815709 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277701412 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278351855 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27796127 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.279312366 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278297208 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.278838852 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.279259952 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276759228 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.277518325 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280554022 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278502241 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.280059466 seconds)
  done (took 29.285819296 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280012001 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.279779634 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.278190094 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.280290946 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.280607041 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.279510922 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.278454003 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.280324192 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278105839 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277951282 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277335923 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279000302 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.281329731 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277859793 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277583388 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280233715 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279403124 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280207184 seconds)
  done (took 24.193906593 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.279245309 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.281827319 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.281225648 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.278535358 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.278590557 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.280027777 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27959726 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.279497554 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.28033268 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.280396426 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.278798761 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279958217 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.280093772 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279699505 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279994789 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.28053892 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.280319004 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279479685 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279557359 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279382248 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.278351067 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280407441 seconds)
  done (took 29.32397223 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279391154 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.279563675 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.279890567 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.279813503 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.278541574 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.280809819 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.27952968 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.280109419 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.281987 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.2805466 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279989176 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.280840427 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.281226511 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282996678 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.279388986 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280224077 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.279774924 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281619799 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280324657 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.27855291 seconds)
  done (took 26.774352812 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.282964443 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283442357 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.282881411 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283652601 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285497782 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.283920674 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282321616 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.282648216 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283034711 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283838742 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.2844798 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282425476 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284777335 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284408717 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283116393 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284272861 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282239686 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.284426878 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.283709854 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284212414 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.284776652 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28339639 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284194946 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283700225 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.282451307 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.284091393 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282072429 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283219233 seconds)
  done (took 37.109314155 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281225147 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282038571 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.28087988 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.28174186 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.280919864 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.281314882 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.284101965 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.281895508 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.281933233 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.280456999 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.282180889 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.281888743 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.28286327 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.28385771 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.284634108 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.282695282 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281832901 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.280883138 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281102991 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281390837 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.283278928 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282235804 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.282981171 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.281591074 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282444945 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.282614599 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28245048 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.281852982 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283095757 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.282411191 seconds)
  done (took 39.635286451 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.30327807 seconds)
    (2/2) benchmarking "in"...
    done (took 1.301472439 seconds)
  done (took 3.776453462 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.28145665 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283854899 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.284831758 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.282862998 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.282954295 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.28387659 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.283944937 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281787494 seconds)
  done (took 11.436681275 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.279434134 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.283997474 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.282908284 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.284086007 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.283381035 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.279757448 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.284495435 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.287908262 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.278766278 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.280470877 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.284525659 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.282178196 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.281992452 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.279447102 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.281076809 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283353243 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.286992936 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.284030916 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.286437577 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.28511153 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28398124 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281285952 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.282852095 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.28549749 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.278850631 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.287266294 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.285053521 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.289893164 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.279438631 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.283244215 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.28335714 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.28426148 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.284888858 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.287568845 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.285619438 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.285727639 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28873455 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.284862184 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.286845543 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289060528 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284152213 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.285638518 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.281401573 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.283913227 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.282386255 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.288955486 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.285371603 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.284275435 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.278943728 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.28586852 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.289175848 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.279156685 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.283199637 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.285500965 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.284402082 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.290033725 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.291642837 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.284393392 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.285682258 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.290415863 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.295007367 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.291066736 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.284115913 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.289098903 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.290754152 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.2974918 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289996033 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.289866646 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.286198341 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.287638575 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.286989499 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.296263219 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.293166544 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.289229534 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286424209 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.286974924 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.281740798 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.287713718 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.287742845 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.287893143 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.29077073 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28740253 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289873237 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.295252886 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.283128944 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.288323817 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.287086184 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.287943497 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.281758487 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.289875792 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.291949689 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.288268725 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.279288957 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.283951232 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.282774524 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.287974025 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.280961067 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.282291499 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.287143097 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.288410656 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.288530625 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284849142 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.288319948 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290723697 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28918554 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.287910789 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.289383604 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.282111463 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.288770978 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.291065802 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.287697869 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.283999339 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.289088437 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.28885867 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.284630155 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.288142779 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.289770244 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.284800297 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.289960653 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.288368246 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.29149267 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.302084582 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.290136078 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.289409126 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.287178522 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.297378839 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.290769184 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.28616492 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.290842467 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.288111842 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.288914052 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.286457187 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.292030277 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.283406889 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.291744488 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.284007183 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.288663176 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.290036799 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.290954825 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.285224275 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.287795417 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.28439241 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.290421163 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.28974098 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.292817352 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.28759969 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.294519233 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.289301474 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.288937378 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.289226112 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.291447109 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.291720672 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.287307756 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.293278963 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.286389483 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.29202913 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.286721118 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.29252839 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291603849 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.290328372 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.292305554 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.286399985 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.289711811 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.293503642 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.289385283 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.288814288 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.29253883 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.290468035 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.291895029 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.28490922 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.292562348 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.285649437 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.288843399 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.29665424 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.2916347 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.291579269 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.289264701 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.293891653 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.291151089 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.291905832 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.28812205 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.291217194 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.292282999 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.29036227 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.295908882 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.291628075 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.292222973 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.286970051 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.288051827 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2940571 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.2891721 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.296990982 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.297409926 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.298269123 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.288288147 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.294647106 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.287937844 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.296049491 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.291984663 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.296461758 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.294036212 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.294158184 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.28758315 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.294469568 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.288657542 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.296082574 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.287714092 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.294621033 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.294662236 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.294736953 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.295620551 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.289947441 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.290029462 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.293925241 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.293220917 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.296193941 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.28927655 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.293374287 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.288252514 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.289813407 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.294928209 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.293773414 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.295723985 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.296462829 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.292007229 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.294081596 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.291539417 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.289242189 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.295354411 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.293178127 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.293596033 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.298182107 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.294312105 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.292056715 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.297731408 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.295632069 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.290390786 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.293370231 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.299595726 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.2933564 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.291652174 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.301840714 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.299040152 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.296600571 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.297148651 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.291719438 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.296361734 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.297135183 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.297193146 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.290648033 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.298914586 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.29146478 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.295733763 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.292273635 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.292717841 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.29339941 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.295025947 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.300598297 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.295843155 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292976338 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.299140082 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.298682002 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.29616743 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.295116878 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.303524741 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.296168582 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.294609103 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.294439268 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.292789663 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.298817429 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.292660315 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.298072217 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.292382399 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.304055428 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.309994738 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.299619461 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.297516325 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.299192713 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.298872452 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.296322996 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.296820062 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.295576911 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.293696654 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.294248524 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.294955437 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.299094842 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294419541 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.299305754 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295875951 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.297973827 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.300280111 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.299234907 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.294122821 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.300028995 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.300142706 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.300019899 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.294818719 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.300424597 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.295570437 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.297320306 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.295909559 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.295172583 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.304075185 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.300258939 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.297632379 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.297007904 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.297592979 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.296299573 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.29769918 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.302322747 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.298815418 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.307119268 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.297872837 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.299955933 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.296417407 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.304043503 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.306370909 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.29845964 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.305789377 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.299898232 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.295046032 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.296692375 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.301312962 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.303186722 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.306042191 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.298083087 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.303667338 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.302350595 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.302369395 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.302876587 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.30213704 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.301339049 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.302346696 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.305117655 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.302883063 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.298463555 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.299415212 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.301681685 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.301886779 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.30178167 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.295310904 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.300567891 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.305728848 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.298286787 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.298718599 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.298509301 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.301991845 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.303036478 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.304336312 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.302735896 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.303394277 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.304486216 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.303857949 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.304692038 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.301738348 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.303768256 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.307305759 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.305669634 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.30895659 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.298715759 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.30389856 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.304340776 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.29990383 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.29987806 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.300954255 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.305229611 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.298987511 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.309207149 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.30293235 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.300865119 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.302181425 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.306581506 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.298351258 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.307375243 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.32039713 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.300281882 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.306016577 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.302456734 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.300140367 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.309094792 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.305172448 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.298580098 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.30411295 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.306070351 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.310378456 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.301617889 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.306942797 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.301105361 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.306603098 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.305187732 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.306684546 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.306151886 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.304663145 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.300287181 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.306500643 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.303499996 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.307476037 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.301760321 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.303767445 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.303194264 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.308911257 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.31077703 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.30145898 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.307011938 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.306348591 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.30149818 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.300993823 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.308009801 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.302607486 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.309031333 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.303941629 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.305672814 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.305976628 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.304036921 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.303657434 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.308370813 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.303248638 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.303725987 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.308493645 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.308491349 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.309296214 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.303171731 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.308036078 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.302513277 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.3005378 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.307931096 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.301805889 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.308740155 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.304256946 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.306831177 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.30335953 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.307801568 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.306898462 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.308540246 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.302240213 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.303750092 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.312719783 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.309168511 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.310765519 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.307639669 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.312289078 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.304402028 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.306505223 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.308760076 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.305072255 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.304442943 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.310717133 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.305043079 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.306794739 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.306763715 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.310719898 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.313463023 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.307993124 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.304142269 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.31408534 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.310904295 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.311409953 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.306776682 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.308221647 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.305547564 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.311143317 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.31138897 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.305933857 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.313535806 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.310303868 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.31405978 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.30865493 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.307137875 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.306615634 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.313971298 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.311554472 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.305895322 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.31173806 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.306788435 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.312003363 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.312269972 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.309343125 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.305224177 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.306045507 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.310256456 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.310052703 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.310174224 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.308047808 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.31008126 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.308694477 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.313638193 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.311753458 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.311485381 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.311023073 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.306371672 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.313541725 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.30698451 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.310095548 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.310028112 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.307871076 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.315792916 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.313247757 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.309389331 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.313677852 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.317937132 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.311901278 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.306465035 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.309067695 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.311995022 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.316023436 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.313376973 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.308636727 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.308553222 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.31499805 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.314245876 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.313938386 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.30982236 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.322671078 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.31888666 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.308354673 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.310061324 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.312952824 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.317330511 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.314024875 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.315068215 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.311080882 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.313204992 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.320984653 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.315276068 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.317228393 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.315682164 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.312396515 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.31813496 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.312888912 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.313883865 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.313258226 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.318528608 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.316247627 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.313763108 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.322502525 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.319309211 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.319992054 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.333128543 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.315819406 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.311671845 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.318435921 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.311844316 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.317812324 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.313048512 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.318631852 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.317301037 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.316159482 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.318194941 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.312636002 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.315418118 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.315664469 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.323331416 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.316508395 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.311170927 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.31285292 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.317027807 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.317614631 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.319487513 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.317492 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.317799535 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.318561667 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.312384824 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.32421394 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.324098784 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.318684926 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.318675023 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.316940053 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.314303994 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.316006359 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.31792159 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.322968163 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.318943014 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.318181321 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.313306097 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.3208723 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.31921597 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.312088363 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.312983035 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.314576873 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.317722878 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.325498043 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.329853167 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.318122773 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.315848195 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.321357436 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.317798811 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.313403111 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.321373754 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.320580692 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.314283566 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.315620099 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.322568576 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.318203888 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.317658757 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.316336307 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.324374884 seconds)
  done (took 775.778422963 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.319735974 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318143002 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.319222327 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.320036199 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.317998131 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.319644392 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.320215502 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.321056651 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.320981802 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.317561443 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.320180297 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317804145 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.318935103 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.319555136 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.318730068 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.317494699 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.319709776 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.31870156 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.318825729 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.318962002 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.320005563 seconds)
  done (took 28.905201073 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.321170424 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.319927134 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.318650533 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.321037566 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31875516 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.320698078 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.320015075 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321767778 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.31988932 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319475875 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.321670425 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320148961 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.320318446 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.319397541 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319689541 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.321252006 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.320968561 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.319441193 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.32174342 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.32078129 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.322584497 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.321003865 seconds)
  done (took 30.252271611 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.321462279 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.322658679 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.317116556 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.32274235 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.322309718 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.320975102 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.322546444 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.32317694 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.321327697 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.317069525 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.317108909 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.318584288 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.321769679 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.32712827 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.319674875 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.323529549 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.321870537 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.322612549 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.32404395 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.322008729 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.324130457 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.325298595 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.322866713 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.317241858 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.325539356 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.324140118 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.322754865 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.324658616 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.317675584 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.326232182 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.324850729 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.318857002 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.321467299 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.321855967 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.320610057 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.326296897 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.326479094 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.323089789 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.324434977 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.327184033 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.338595436 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.324021902 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.326844266 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.327295509 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.32452877 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.322691499 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.331925867 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.324529806 seconds)
  done (took 64.720523481 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.323655633 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.325243638 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.324999878 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.325746811 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.325170901 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.325691896 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.325390374 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.325189265 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.324009961 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.324259894 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.325940378 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.325260382 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.323628773 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.324821462 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.325033389 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.325130317 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.32575275 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.324796375 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.324099917 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.324332522 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.325537093 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.326031219 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.326543199 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.325677383 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.327364435 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.326121888 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.324496842 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.326051112 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.327293555 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.325614281 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.325736504 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.327002855 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.327150001 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.325848543 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.325033632 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.327571934 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.32665898 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.325486097 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.326515196 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.325709962 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.328525894 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.328161271 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.326468804 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.327843363 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.326747928 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.326272033 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.325410126 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.326647125 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.326119394 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.325844535 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.327327826 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.325812472 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.3270838 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.326783362 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.327700701 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.328900326 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.325312662 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.327332084 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.328786312 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.328190124 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.32699028 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.328823531 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.328323863 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.329250583 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.328735583 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.327270548 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.328611226 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.328769907 seconds)
  done (took 91.398264009 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.328373094 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.330356656 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.33017999 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.329666457 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.33057302 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.331204978 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.330828231 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.329303777 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.329069995 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.331226005 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.329643851 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.331025722 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.329692678 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.330712914 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.331175996 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.33154051 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.331218009 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.332140472 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.332433779 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.331816961 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.332281324 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.329971869 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.33175103 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.331720238 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.332668324 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.331281444 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.332377152 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.33295471 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.334017793 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.33372649 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.333223877 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.332364615 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.331641604 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.332732079 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.333059713 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.33223809 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.331616699 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.332731033 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.332576354 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.332906494 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.332362946 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.331622479 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.333802596 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.333451592 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.333799043 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.33356701 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.332623677 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.333886407 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.33253403 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.332385715 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.333563074 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.331688569 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.334041405 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.334007844 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.332917884 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.33300834 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.333685965 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.332944199 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.33223285 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.33478873 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.335199968 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.334048182 seconds)
  done (took 83.804210404 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.333733708 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.334725302 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.332188701 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.333231069 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.333254339 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.333147349 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.334822895 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.333402907 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.333955768 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.333919645 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.333857362 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.332450183 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334311042 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.334531748 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.335192038 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334793074 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.332443396 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.33323615 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.335056899 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.334271541 seconds)
  done (took 27.890952811 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.33510965 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.334181508 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.333442496 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.334495733 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.334364361 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.333846646 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.334341724 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335262903 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.33339052 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335644653 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.334090718 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.335199889 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333911746 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.33455146 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.335991755 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.333913265 seconds)
  done (took 22.565615682 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.334912444 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.336033612 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.336892202 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.336142983 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.333599257 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.334556901 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.335472133 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.334176914 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.335160642 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.336828814 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.336553798 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.337032564 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.336232101 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.336619907 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.334049878 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.335338299 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.335231944 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.334597969 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.336055956 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.337539674 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.337349017 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.334779429 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.33703724 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.337141189 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.335486062 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.336745939 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.33596237 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.336929048 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.336024703 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.336800561 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.335613004 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.336976933 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.335877484 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.336155762 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.338206483 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.337255518 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.338299274 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.338545723 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.337695983 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.336780317 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.337697655 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.33670316 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.33811705 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.337629984 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.338940308 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.33866996 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.336092206 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.336449138 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.337371184 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.338038982 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.338815469 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.338449975 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.33916098 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.339219376 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.337831333 seconds)
  done (took 74.733458472 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.339457622 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.338731846 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.33793528 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.339495562 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.339995197 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.337730167 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.339757806 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.340044649 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.337810212 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.33980214 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.339182239 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.340670558 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.339412246 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.339672375 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.339404138 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.339578205 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.337602767 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.339082965 seconds)
  done (took 25.32396325 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.340421937 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.33881572 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.340230422 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.338506907 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.338477741 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.342685786 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.339397746 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.34142879 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341904008 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.339041768 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340970132 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.342796579 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.341120812 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.342441069 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.341285882 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.339072613 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.341633448 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.341609247 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.339743395 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.339396932 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.342588376 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.341987796 seconds)
  done (took 30.715711462 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.335400989 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.335568635 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.335931278 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.352002753 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.349189921 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.33556097 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.336176048 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.336559923 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.359044164 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.377449833 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.372460808 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.348986006 seconds)
  done (took 17.394664819 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342250987 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34441099 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.343391673 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345281518 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34411295 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343090072 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343171801 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343144142 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343968394 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342851443 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342523602 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344100093 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34355695 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344232617 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343896556 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34469798 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343381603 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342734539 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344131698 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34513767 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343267781 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343923806 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342733684 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342977348 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344140854 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343415914 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345441533 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345232385 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3429141 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344887025 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34655726 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344561697 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345373782 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344391464 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346038171 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344693649 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345097138 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346005094 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344653999 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342810091 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.345276135 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347004545 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34587199 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344745077 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345551783 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345632443 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344376232 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345775695 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346256526 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347040554 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346666814 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345305798 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34492409 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34612166 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347358178 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346244841 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346381632 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345997793 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345800712 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345246865 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346400216 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34938232 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34823721 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347410177 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348473069 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346994319 seconds)
  done (took 89.991179071 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347575037 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.346766488 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346210809 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346402062 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345636403 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346111343 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346709885 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346922927 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347164839 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347543397 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34757362 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346889377 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34700547 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347862659 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346355404 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351798711 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347800455 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348732934 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346678626 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348698047 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346771553 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347217297 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349162851 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348091706 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347316714 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348462711 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347163971 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347496057 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3483278 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347658206 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349128912 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347347528 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347383272 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.346477719 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348180485 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34885711 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347236031 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350004036 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347044009 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349383981 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3482567 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349577161 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347803527 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349981248 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347638452 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347122577 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348379354 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34789357 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349286348 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348751128 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348774274 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348021636 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348859873 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348684426 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349406299 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350252322 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349082959 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349726032 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350754191 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351049528 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347466898 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349288645 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3524238 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349936421 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350763344 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350696999 seconds)
  done (took 90.214048221 seconds)
done (took 1820.660160337 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.511547452 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.462408553 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.344568742 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.350758839 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.346243564 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.368986836 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.358115357 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.345215449 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.3438219 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.345837382 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.344169367 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.533388446 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.342132036 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.346204285 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.344224548 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.442706624 seconds)
  done (took 27.359176912 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.372354448 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.353605708 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.460272637 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.348711043 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.374121777 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.530173408 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.408774396 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.351655893 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.513493174 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.371664509 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.344584369 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.374270554 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.35181361 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.344509072 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.370758698 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.529788878 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.591662793 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.346625452 seconds)
  done (took 29.568167451 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.775421106 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.355714848 seconds)
  done (took 5.361304237 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.368440532 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.349920681 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.35159929 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.349487584 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.341181825 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.341645066 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.348690645 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.347167365 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.343164381 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.47076456 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.351449999 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.363164755 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.350899905 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.350738164 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.352332437 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.392822264 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.491324021 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.35456788 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.353456066 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.354960011 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.349922617 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.44392222 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.38890828 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.355022539 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.471418545 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.347791495 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.357971576 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.356398145 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.491025008 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.356954427 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.351514194 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.352027138 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.352297423 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.344498122 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.829916909 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.345355049 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.359778074 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.375730159 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.355231906 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.494999278 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.351866551 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.357192692 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.345183228 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.831803675 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.469301923 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.468990139 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.346987419 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.35299073 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.354218669 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.417054788 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.353715235 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.353679837 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.409825798 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.170141638 seconds)
  done (took 86.223649682 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.345392044 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.345459576 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.512903729 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.365966344 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.346503966 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.344761972 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.346112658 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.616926976 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.39389062 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.35699366 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.627224893 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.845706378 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.347165794 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.38269345 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.883706353 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.420672766 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.348274768 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.345273772 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.360036332 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.351586022 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.848295912 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.348665851 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.344700888 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.388822834 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.383723033 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.785278943 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.347060797 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.345112519 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.348808793 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.344122708 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.80090662 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.347924812 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.349606706 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.344821176 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.612101426 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.685264726 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.662446237 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.352228926 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.35776125 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.350389866 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.364555382 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.78260512 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.6710488 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.346554523 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.348425058 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.788678639 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.347654152 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.348449233 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.353597175 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.56537865 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.346483644 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.349025858 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.346262192 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.349044617 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.34733231 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.415070876 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.40444615 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.823095594 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.347849815 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.348381491 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.36509254 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.348825233 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.351880279 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.350826563 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.350505532 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.679999499 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.542072722 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.356288242 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.679002091 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.796924104 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.352699907 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.868121339 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.349090668 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.372141226 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.550997226 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.350788694 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.348564136 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.813622626 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.370836194 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.348183315 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.662395635 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.350462074 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.640677859 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.364142883 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.35063108 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873455245 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.358765863 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.400395285 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.349206841 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.350265003 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.348419025 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.352388632 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.62036895 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.378857698 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.349124805 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.351388549 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.371537166 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.362717935 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.349812221 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.353814729 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.874657046 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.356747817 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.351041481 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.353064596 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.351309527 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.34951202 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.353158665 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.349030477 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.587175322 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.350999501 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.367945029 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.352246114 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.351638813 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.35758544 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.397017736 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.351876522 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.637486338 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.353166486 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.349888534 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.355444379 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.351721309 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.361406378 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.350717388 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.356651686 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.233325785 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.560685001 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.36888234 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.354295137 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.354499094 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.35394599 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.352101625 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.353944745 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.360824235 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.354727096 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089120443 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.354795571 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.361696431 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.353070886 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.358741448 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.354138956 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.354174275 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.354602387 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.646735367 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.620333478 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.529340378 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.354322388 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.353046657 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.063070545 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.390915934 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.500186998 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.371926431 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.352882531 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.554809218 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.558343253 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.354107732 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.35265343 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.355725751 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.584426064 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.353736082 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.666543377 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.832275559 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.352891452 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.361917924 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.087540069 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.057063195 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.356188656 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.356589118 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.637984908 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.367340282 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.355601885 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.354231539 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.353389615 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.356408046 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.357785096 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.36375377 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.355670549 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.354673273 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.408991089 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.527608221 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.371761132 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.35541068 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.784966229 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.417168118 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.35637708 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.360707515 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.359495569 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.355137366 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.429210672 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.358773268 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.389983754 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.355285453 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.355632939 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.810436753 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.356583347 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.356178658 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.506312696 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.994184562 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.356340082 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.356927896 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.356093986 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.907944477 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.853353446 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.360712844 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.643135791 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.361485712 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.395167554 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.356894512 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.360962042 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.848416963 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.357253339 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.35577022 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.953459681 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.356562255 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.765169862 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.35612927 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.357768582 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.882280034 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.355412744 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.359622924 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.356003607 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.358146942 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.644796256 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.357342089 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.363924487 seconds)
  done (took 499.12553738 seconds)
done (took 648.865598361 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.357679501 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.357483618 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.346839665 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.361456668 seconds)
  done (took 10.666040794 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.378336033 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.362711855 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.370328132 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.363711248 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.370309402 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.36130087 seconds)
  done (took 9.448852096 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.357314744 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.359393185 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.360302987 seconds)
  done (took 8.319095322 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.574143555 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.376160379 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.706511623 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.367192047 seconds)
  done (took 9.266380422 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.373855287 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.372171315 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.372133913 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.373823226 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.380180529 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.382336785 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.37394192 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.373430639 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.38070373 seconds)
  done (took 13.623294179 seconds)
done (took 52.567824928 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.4167784 seconds)
    (2/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.362258498 seconds)
    (3/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.549653524 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.426365572 seconds)
    (5/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.343405423 seconds)
    (6/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.347921198 seconds)
    (7/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.345109637 seconds)
    (8/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.074903231 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.392990461 seconds)
    (10/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.34620154 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.365322921 seconds)
    (12/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.506476409 seconds)
    (13/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.343267707 seconds)
    (14/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.486303287 seconds)
    (15/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.362594959 seconds)
    (16/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.43036398 seconds)
    (17/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.48886241 seconds)
    (18/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.579827068 seconds)
    (19/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.210308583 seconds)
    (20/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.344868359 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.466805754 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.464436344 seconds)
    (23/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.360894024 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.434266784 seconds)
    (25/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.461030876 seconds)
    (26/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.54667452 seconds)
    (27/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.393202162 seconds)
    (28/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.109845059 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.488895842 seconds)
    (30/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.534458417 seconds)
    (31/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.444675732 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.488913566 seconds)
    (33/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.580473879 seconds)
    (34/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.443191888 seconds)
    (35/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.473165213 seconds)
    (36/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.475046615 seconds)
    (37/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.34519493 seconds)
    (38/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.610757523 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.448030477 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.510563519 seconds)
    (41/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.111344185 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.472307534 seconds)
    (43/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.390234274 seconds)
    (44/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.469814933 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.361261305 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.504128402 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.424296398 seconds)
    (48/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.345021884 seconds)
    (49/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.401183916 seconds)
    (50/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.068031991 seconds)
    (51/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.345997586 seconds)
    (52/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.097925477 seconds)
    (53/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.488799172 seconds)
    (54/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.469769407 seconds)
    (55/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.402165519 seconds)
    (56/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.446465354 seconds)
    (57/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.08450622 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.471409274 seconds)
    (59/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.626516144 seconds)
    (60/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.347452068 seconds)
    (61/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.507046209 seconds)
    (62/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.346179267 seconds)
    (63/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.364487874 seconds)
    (64/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.350169726 seconds)
    (65/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.146684277 seconds)
    (66/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.519909617 seconds)
    (67/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.45217216 seconds)
    (68/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.346156853 seconds)
    (69/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.397910512 seconds)
    (70/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.469176716 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.495668702 seconds)
    (72/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.24878064 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.510819358 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.454082845 seconds)
    (75/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.347842984 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.515882888 seconds)
    (77/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.428071966 seconds)
    (78/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.543981406 seconds)
    (79/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.421672909 seconds)
    (80/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.347546059 seconds)
    (81/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.210847813 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.605192412 seconds)
    (83/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.174528469 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.451334988 seconds)
    (85/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.42921195 seconds)
    (86/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.630176301 seconds)
    (87/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.350257755 seconds)
    (88/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.498782587 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.47326829 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.452212181 seconds)
    (91/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.347367913 seconds)
    (92/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.551135715 seconds)
    (93/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.545670088 seconds)
    (94/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.349744454 seconds)
    (95/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.447587382 seconds)
    (96/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.514454203 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.484513427 seconds)
    (98/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.395758454 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.478604892 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.39468126 seconds)
    (101/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.348450693 seconds)
    (102/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.406395577 seconds)
    (103/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.189161942 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.450898487 seconds)
    (105/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.396328251 seconds)
    (106/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.350253218 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.364235114 seconds)
    (108/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.355333731 seconds)
    (109/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.398166412 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.516536162 seconds)
    (111/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.138613636 seconds)
    (112/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.349701791 seconds)
    (113/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.58202823 seconds)
    (114/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.353367604 seconds)
    (115/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.710305206 seconds)
    (116/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.262809363 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.586882149 seconds)
    (118/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.454159446 seconds)
    (119/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.535984371 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.403800454 seconds)
    (121/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.35061703 seconds)
    (122/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.438340676 seconds)
    (123/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.351221554 seconds)
    (124/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.519796183 seconds)
    (125/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.365253536 seconds)
    (126/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.327779798 seconds)
    (127/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.46675609 seconds)
    (128/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.522262814 seconds)
    (129/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.508688758 seconds)
    (130/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.43795685 seconds)
    (131/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.358082023 seconds)
    (132/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.36229798 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.499514254 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.454409414 seconds)
    (135/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.220064364 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.540399321 seconds)
    (137/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.486867558 seconds)
    (138/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.445031999 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.428393605 seconds)
    (140/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.352374204 seconds)
    (141/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.037255311 seconds)
    (142/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.219066663 seconds)
    (143/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.354015017 seconds)
    (144/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.55209484 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.465772161 seconds)
    (146/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.428387365 seconds)
    (147/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.400821752 seconds)
    (148/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.406043816 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.591251275 seconds)
    (150/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.179845904 seconds)
    (151/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.478407281 seconds)
    (152/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.405603278 seconds)
    (153/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.220793041 seconds)
    (154/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.510955484 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.42828331 seconds)
    (156/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.403349938 seconds)
    (157/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.537576175 seconds)
    (158/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.476834046 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.470386777 seconds)
    (160/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.588251172 seconds)
    (161/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.412101928 seconds)
    (162/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.521635701 seconds)
    (163/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.482207397 seconds)
    (164/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.371123586 seconds)
    (165/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.517822402 seconds)
    (166/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.353333496 seconds)
    (167/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.442191155 seconds)
    (168/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.405594226 seconds)
    (169/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.361027518 seconds)
    (170/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.474127407 seconds)
    (171/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.388581596 seconds)
    (172/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.373440419 seconds)
    (173/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.501668378 seconds)
    (174/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.186805948 seconds)
    (175/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.593713954 seconds)
    (176/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.57251162 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.370454521 seconds)
    (178/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.355287591 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.485231203 seconds)
    (180/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.40893871 seconds)
    (181/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.403304703 seconds)
    (182/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.639054469 seconds)
    (183/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.369116185 seconds)
    (184/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.356429059 seconds)
    (185/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.361303989 seconds)
    (186/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.428900955 seconds)
    (187/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.584867512 seconds)
    (188/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.475529992 seconds)
    (189/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.37119227 seconds)
    (190/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.193147784 seconds)
    (191/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.077872674 seconds)
    (192/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.325910663 seconds)
  done (took 346.297720891 seconds)
done (took 347.544005018 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397198767 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.460253022 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.379501009 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.379175835 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38088439 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.376667537 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.39681485 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.380427733 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.389838977 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.389711906 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.37413589 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.386092164 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.392736839 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.387564089 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.413598663 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.379859774 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.379892878 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.389154641 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.391456107 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.393129435 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381435256 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382014584 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.399895936 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.381178996 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389940709 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.389474259 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.387186929 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.380239431 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.385903193 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.392406702 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.384005612 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.38798989 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.394722971 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.390149995 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384777842 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.389412018 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383816003 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.462338171 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.39758022 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.389105831 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.384735772 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.394258959 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.384968827 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.385314775 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.390499542 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.398938114 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389882559 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.395218678 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.384006966 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.383347468 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396703667 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.391933423 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.38667576 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.38174457 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.375431017 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.396123477 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.389976994 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397397901 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.385608227 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383223746 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.41615934 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.397267167 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.392011628 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391237833 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.387403156 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.395370856 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.388564469 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.395320992 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.386075978 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385064248 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384161203 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.388774612 seconds)
done (took 109.394768871 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.510071553 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.380013169 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.523955069 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.38762789 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.543265122 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.517024188 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.386079051 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.386562018 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.385505023 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.208793508 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.387389844 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.386882121 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.383744825 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.387252009 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.514886671 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.388880346 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.385507482 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.10341321 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.390700867 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.524488952 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.381325008 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.387797829 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.388858374 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.211577864 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.381812494 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.37855716 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.525277925 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.388689264 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.101881377 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.378222297 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.381098305 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.102584355 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.527589002 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.407738263 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.398347613 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.398211639 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.547685144 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.391414511 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.511918432 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.511725033 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.528184086 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.428629025 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.377793414 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.382091783 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.392600448 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.393536166 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.388878957 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.418286651 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.38371012 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.388431278 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.104390099 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.399960214 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.389712296 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.390700545 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.388456147 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.420574878 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.390840511 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.392594564 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.529715934 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.392597946 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.512304447 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.213769897 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.211197813 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.392402976 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.383275416 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.392560953 seconds)
  done (took 112.030327375 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.452893877 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.461058399 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.493340028 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.386479252 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.436998359 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.492813875 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.385900409 seconds)
  done (took 11.37031636 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.392249235 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.392919058 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.435876667 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.435384804 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.392341762 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.543312729 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.39095975 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.397896769 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.390708814 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.439241009 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.394584517 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.395296672 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.400168655 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.386162488 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.436074456 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.397865756 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.501938659 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.389032789 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.394044141 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.541634608 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.392003237 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.401931831 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.437702316 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.398485368 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.396170451 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.394779618 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.162065892 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393821224 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.392331542 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.396656887 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.391103377 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.441283573 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.394370566 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.386186011 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.394188541 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.504712148 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.394593105 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.394819476 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.397839219 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.390685118 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.397011454 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.394910585 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.398246841 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.393225779 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.397343782 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.413797403 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.397207842 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.395549387 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.395757807 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.398322696 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.440323885 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.396096311 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.394464917 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.393086333 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.444024271 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.403989833 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.39660434 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.393648054 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.399141133 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.393052387 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.544180778 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.437331814 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.396983296 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.437485345 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.394293974 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396447275 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.399756425 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.396843909 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.443826666 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.395053139 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.439650399 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.394796169 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.572230951 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.416938087 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.398129303 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.393365539 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.394666638 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.396509868 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.389212146 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.396754984 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.396617 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.392016845 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.398050532 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.396023293 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.39537495 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.552972054 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.499903788 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.395567148 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.403370498 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.397093122 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.398112566 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.445693799 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.397889994 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.396995834 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.444476688 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.506767662 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.446437775 seconds)
  done (took 143.300848146 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.405439907 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.404065175 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.39749256 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.418617168 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.393617257 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.392003674 seconds)
  done (took 9.677520876 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.393158646 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.3980052 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.39759878 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.398689187 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.399466617 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.399692545 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.405647496 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.393919265 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.402267423 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.400166039 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.400864584 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.405775028 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.406733096 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.400145274 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.404625236 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.40225299 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.405541543 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.399217736 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.400794353 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399727192 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.393409308 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.399499132 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.399264358 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.39548607 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.405777442 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.403637968 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.414143363 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.40208738 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.400130482 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.399982685 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.402232517 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.401724979 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.396233275 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.399121138 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.408040909 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.397045644 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402015081 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.408020915 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.399519942 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.401529843 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.409027886 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.40282401 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.402838988 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.408332694 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.398388906 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.399690527 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.412985959 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.41706074 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.404520741 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.40909218 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.408522737 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.402704264 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.403818356 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.408665289 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.397173588 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398247674 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.412060732 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.407762633 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.401450351 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.397558921 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.403277883 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.404168101 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.399886762 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.409683274 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.401400578 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.410467365 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.399001105 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.404696453 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402892377 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.403019132 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.411196292 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.40216717 seconds)
  done (took 103.267038345 seconds)
done (took 380.904737537 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.744992591 seconds)
  done (took 4.016958787 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.467591471 seconds)
  done (took 3.741014413 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.343061669 seconds)
  done (took 22.622575195 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.407892095 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.483270223 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.414588111 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.398768288 seconds)
  done (took 10.976180169 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.66156638 seconds)
  done (took 3.934865634 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.397961427 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.425533927 seconds)
  done (took 6.096803117 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.670086061 seconds)
  done (took 3.941028031 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.724696046 seconds)
  done (took 3.997717649 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.414055809 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.409541983 seconds)
  done (took 6.104580383 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.380158234 seconds)
  done (took 3.652555263 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.844039841 seconds)
  done (took 21.117004586 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.406231572 seconds)
  done (took 3.680339838 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.450873104 seconds)
  done (took 3.724093457 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.877869961 seconds)
  done (took 6.150430309 seconds)
done (took 105.029465549 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.391461374 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.395118756 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.395570067 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.393033746 seconds)
  done (took 10.847176985 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.459336777 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.458284349 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.465780842 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.459234571 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.45919066 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.4578686 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.431735202 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.431644517 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.461190749 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.459012897 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.465242204 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.458121072 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.458858528 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.433431232 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.459203821 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.464391134 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.460095646 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.464557531 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.433693421 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.459635639 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.406463524 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.457735242 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.457448575 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.408745763 seconds)
  done (took 36.103642538 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.915585349 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.470664419 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.552257807 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.450424542 seconds)
  done (took 7.662420483 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.489294356 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.489417458 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.506823011 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.543152835 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.573968026 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.505035122 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.435637908 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.429269091 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.416125032 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.490166036 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.539631273 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.477381823 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.588130938 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.411148864 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.629841692 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.407668875 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.407872657 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.488308237 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.540931182 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.558111462 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.411856655 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.487150579 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.494845054 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.475820899 seconds)
  done (took 37.071708291 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.414101784 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.426483679 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.410318662 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.421133651 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.40789367 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.406582667 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.409238569 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.414239875 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.406150672 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.409958528 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.408548652 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.420898747 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.406409596 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.408111284 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.414402147 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.409026737 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.411459005 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.413815784 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.416302801 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.408690391 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.40712009 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.414240269 seconds)
  done (took 32.340273467 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.397913226 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.39564669 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.747826964 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.652087457 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.397139396 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.398712178 seconds)
  done (took 14.265336227 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.469171017 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.600080215 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.40235205 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.735904426 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.8213834 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.404856518 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.401767409 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.635481344 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.920094731 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.92163274 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.457995178 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.46789844 seconds)
  done (took 20.514832423 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.40158771 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.400497551 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.416390507 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.416863788 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.452803458 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.406402315 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.409157509 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.396942061 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.461049979 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.458535708 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.406536519 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.454989538 seconds)
  done (took 22.361023617 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491965058 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.40492731 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406315357 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435082246 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404159932 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247851429 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.441465144 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.094260441 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.408233225 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683686711 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408379663 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495553203 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.659395613 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405993644 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411895898 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.382824573 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655588612 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870752421 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40898793 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412561541 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438214461 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.417960063 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410445426 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.606634621 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250866027 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404825731 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.668467719 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406344912 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.682728661 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661309126 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.662982634 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411815943 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680206763 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045773571 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503180663 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.60536649 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40994031 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40888575 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.387152495 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.406466357 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409897657 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408100648 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.654492936 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412487848 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40696822 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410526842 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108718373 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.412150867 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.40676421 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408665644 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657183784 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510447496 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.412729218 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407662489 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465995556 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408619994 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.414105288 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539294822 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971252982 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408911868 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41491649 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.413739809 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40203336 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410357943 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022297821 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.416128684 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.414007351 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4128212 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409920971 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407975594 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448618362 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408037765 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.42995452 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408508613 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144203076 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420835181 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411370543 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941037043 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411682831 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.414730037 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639656235 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411113196 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410773724 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.408210369 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408678288 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110875671 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418819344 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.386457057 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473688708 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.102224583 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.609051731 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430305096 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441416886 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.633265827 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.388380087 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410345681 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.410432477 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413460371 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431364914 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.107579985 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410542583 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.416179803 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667807989 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.620885175 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415178423 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.406213459 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876814498 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425076843 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.439140925 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.410390797 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.615657004 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.016341252 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671159677 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42247002 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443411625 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412711849 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172940233 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425940697 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.421493586 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417589856 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677059419 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.232232467 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412995726 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481075909 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41879525 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412025396 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412177504 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429578742 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413367953 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.614534126 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422931833 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.66449466 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.422179853 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414433257 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.412179117 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425293386 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.415300187 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.635381322 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428150922 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693409509 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413528747 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414405828 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413842883 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.635840121 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.413211142 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.418726718 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675692152 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425829965 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420238107 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669181843 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451859705 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523685529 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444711043 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.419862982 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.669593021 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.419083154 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.420119204 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415814694 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421054304 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415878283 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.42319626 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415369832 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013540471 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398448482 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.419978292 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416915488 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.428879077 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488817639 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.422665122 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61543789 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.421243071 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425295977 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.425378463 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.414278846 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639614198 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664056346 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.428090379 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496409441 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.874643918 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.011920871 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434211175 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.415841342 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.415155534 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.406594145 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40883325 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409959305 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410123182 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.598287774 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659330228 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403352136 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.001255305 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402783818 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393168024 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.413872699 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642224793 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.407938299 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3929913 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.389222489 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396137906 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404986708 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.644101381 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530656373 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.40082599 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384691091 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.946195951 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390130619 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38555432 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386682363 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418341832 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400237397 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227552108 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648767965 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38700901 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641550735 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404535709 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.405195991 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.388563281 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390496467 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402721282 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.396438737 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419253168 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.590401878 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391741528 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393215994 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951116836 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135425435 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936518092 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402940879 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.401414509 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396719643 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.089650184 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390537891 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390281822 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615708948 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088318612 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390192498 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845977264 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.390599304 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13399303 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640707313 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629497012 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395983024 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.401543983 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64398864 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606450089 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422812569 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401542954 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396544725 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.369032741 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926895776 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390183789 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469237766 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092582721 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40185729 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394610752 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.431385035 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.391317166 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796033131 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391270193 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392393356 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391344647 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396347586 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242380339 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393802773 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392661461 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012510281 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396900199 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.860976936 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392265837 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594983248 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.643712686 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.647893851 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.398583746 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.40165271 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.642386171 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641773007 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397562988 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39230753 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93872994 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.260416762 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.395168782 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389718974 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151371823 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39039122 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673963671 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.404418312 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.401207138 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395573458 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390602592 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390903217 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.38984703 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399115438 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366444302 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856432903 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.389439658 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386529288 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415454963 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397775636 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646455379 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.406342466 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.992597391 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621251192 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409238773 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423456479 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.39663637 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396870279 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.37338655 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393346514 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393338107 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451392555 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.614699431 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394437385 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.371957812 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.469788121 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603606914 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393679373 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404343486 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608129715 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.393914802 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.394221435 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151801062 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431732071 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402540639 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395034295 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394255595 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43520101 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461296209 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59629656 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.646384784 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.6520647 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787908355 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403068328 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396272091 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.408879559 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489545825 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39883184 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.407266485 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.171956421 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997390573 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154691506 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.003056586 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651316292 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402625662 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401735563 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395016501 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533870453 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394874354 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670271776 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396077664 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.413167454 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418900445 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397744889 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40830635 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612258305 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672628225 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396493136 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407086232 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400387316 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.395961859 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651830414 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.61293318 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863926903 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930595699 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396374778 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403100577 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.1028103 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671646175 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395811531 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397667497 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397135075 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.399307177 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.403789816 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.403460742 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410837971 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531067821 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647842644 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054104583 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.64825794 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.441862133 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.9097692 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390977891 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645196756 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159707798 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.594228584 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99768662 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.094089328 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657051279 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456747666 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589297852 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.387944454 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520382512 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.381348202 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38293271 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383936348 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384477328 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.381764513 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.635298608 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994201889 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649556297 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.388533751 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.382768378 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414319872 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.587195461 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.606597949 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10370253 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.6056065 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64016493 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391619107 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383879272 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993642527 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64043187 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38905795 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.387083932 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596804759 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384211576 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410817895 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.0721765 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.381310694 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911391901 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.272654914 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405011777 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393269424 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.100564493 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994262308 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.398036731 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857154368 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385478155 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396377311 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663004375 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.38939035 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389745886 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669037755 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.389812446 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398722563 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592473844 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.991240878 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133073277 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.40293612 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403127623 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.386729671 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385780824 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397503959 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385165285 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395178363 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.798335673 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380714936 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383044627 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394362272 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.383974731 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384533106 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.382713128 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37837789 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.385812849 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.37202728 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.364481939 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389563239 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503980845 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913782404 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376662388 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.053651289 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.72469749 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.628783715 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375389534 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.361312754 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.380383758 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374995358 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376435134 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37613499 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384006372 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903993417 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.378159939 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.635881774 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3828225 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.585921265 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585954626 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386929374 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580251949 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380232626 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401549443 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.353539224 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376628751 seconds)
  done (took 990.67814133 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.400711427 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.397589658 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.370137359 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.388601792 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.399164441 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.426018404 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.427755021 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.458163835 seconds)
  done (took 20.526118023 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.375409314 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.379857721 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.37938792 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.379731666 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.372983609 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.841176061 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.371278341 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.380097999 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.393223069 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.373699559 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.374714315 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.044604828 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.398343107 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.385790296 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.366533438 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.382163799 seconds)
  done (took 32.458983607 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.405015356 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.543083893 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.236838952 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.411719312 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.392952756 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.371676181 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.597105884 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.395769187 seconds)
  done (took 26.613701204 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.384695274 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.385038643 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.384790553 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.384976373 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.386495182 seconds)
  done (took 8.185925392 seconds)
done (took 1260.903944201 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.383581126 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.384276491 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.38313935 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.384177461 seconds)
  done (took 6.796112767 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.357455508 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.358153475 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.35772587 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.371264372 seconds)
  done (took 9.704600234 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.055639676 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.994949465 seconds)
  done (took 5.310921407 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.875809161 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.877590323 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.866781315 seconds)
  done (took 6.881239439 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.651886282 seconds)
  done (took 2.91246694 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.333745818 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.372675425 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.049624128 seconds)
  done (took 8.01774707 seconds)
done (took 40.883872344 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.381710455 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.618687652 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.532559094 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.380490864 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.535735962 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.642698098 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.165925794 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.385285463 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.37586695 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.372113211 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.374545274 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.527866749 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.079860894 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.610418645 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.085102314 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.60846933 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.522601998 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.35897719 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.364826446 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.360350367 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.168429378 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.359359425 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.362571689 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.358449093 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.519917075 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.504967431 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.358683624 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.607659001 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.359662677 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.36288761 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.525830456 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.365773537 seconds)
  done (took 82.402150309 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.358521256 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.360583261 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.366209159 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.364503139 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.361526209 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.383083032 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.36167334 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.361687642 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.364637546 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.359360906 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.36647656 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.372702221 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.362657127 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.382222155 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.361026186 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.360801745 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.376599327 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.377387723 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.362711377 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.361247794 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.36445793 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.361472945 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.360996894 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.371049946 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.370833218 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.373359355 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.361431914 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.36150893 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.361299611 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.362281303 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.380216756 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.37136913 seconds)
  done (took 76.977058734 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.361044658 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.365429039 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.362127673 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.371542287 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.361789301 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.378138597 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.364304805 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.362605708 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.362068592 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.363701017 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.362577508 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.376565621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.362765942 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.363022934 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.378609311 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.363011554 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.371762949 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.362217902 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.363370111 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.376154285 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.366692478 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.363113761 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.378553166 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.377379921 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.373695806 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.364433527 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.36451906 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.364066705 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.374404826 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.364258801 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.36500282 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.363719735 seconds)
  done (took 77.00433787 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.602226311 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.378233244 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.381750719 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.371880589 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.381288526 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.37796576 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.373779921 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.630368545 seconds)
  done (took 14.750800535 seconds)
done (took 252.396615939 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.370415367 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.85755806 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.397789277 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.370488129 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.395075143 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.397744467 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.583507719 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.396730516 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.591352537 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.387503894 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.387837784 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.38033718 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.150943485 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.517476879 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.230392407 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.350252225 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.236257876 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.36656219 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.933186482 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.64674549 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.396441527 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.374775696 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.223665988 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.247214576 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.35675352 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.454827447 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.46694486 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.59572865 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.533613876 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.448872086 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.87182356 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.374292912 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.373905451 seconds)
  done (took 63.92156935 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.372558732 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.37754068 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.382376598 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.383851338 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.378848167 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.382124948 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.37222403 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.381733155 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.381995422 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.382660896 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.381719438 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.380264258 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.379490347 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.377936721 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.37867695 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.361596028 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.373256057 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.37749102 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.373223921 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.363148581 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.378380952 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.381327734 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.381563376 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.379162987 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.383172416 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.382758644 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.38011867 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.380301662 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.378285788 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.380511962 seconds)
  done (took 42.605745171 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.384160891 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.930832379 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.091318135 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.382483249 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.376892045 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.379602264 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.653941585 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.384093541 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.378565734 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.377754452 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.851270866 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.386917951 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.408578148 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.096763812 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.380707837 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.385646064 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.384010301 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.376586562 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.941143869 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.387526657 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.652450534 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.385369357 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.65454549 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.385826138 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.379832483 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.377556765 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.381442685 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.174015146 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.397013992 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.850784852 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.141209083 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.655594788 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.102546173 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.141264236 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.132202541 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.391863424 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.386045218 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.855312738 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.37961036 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.378575826 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.653241964 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.380091039 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.09683683 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.051015856 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.396306232 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.387790242 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.190353746 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.877395096 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.614980597 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.384001659 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.14252719 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.381626081 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.38883812 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.381242308 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.613244167 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.381254215 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.379429619 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.20528158 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.400211342 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.653860754 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.388631771 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.380549855 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.939256321 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.380645983 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.937213873 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.385586255 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.387453382 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.381622446 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.105986384 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.383529375 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.063656255 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.398833076 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.388071681 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.857339784 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.935759229 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.249328362 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.382480907 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.944960248 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.132198974 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.669932001 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.388872729 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.173037735 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.673513635 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.384857581 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.391995717 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.392225277 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.390158715 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.478542336 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.652487702 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.997967424 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.057764267 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.212656966 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.672885143 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.389033008 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.382507992 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.208476373 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.405794548 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.388658702 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.09952089 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.061854121 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.398934367 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.389390238 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.054622387 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.401552222 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.659520551 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.3869196 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.14638234 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.384282892 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.480214901 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.390699136 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.389780192 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.386505935 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.658396695 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.385953967 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.389914123 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.052666357 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.8797666 seconds)
  done (took 192.693872067 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.37972246 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.396788522 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.377572757 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.393231026 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.378296212 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.38522793 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.378685243 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.377932051 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.382695724 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.378170477 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.378488116 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.386623026 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.384345839 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.379096214 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.37744111 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.379692159 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.378451206 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.39577373 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.379183332 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.379581263 seconds)
  done (took 44.911263685 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.393766517 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.922568458 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.896630014 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.392242362 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.390400629 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.385145633 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.438385833 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.390495058 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.389330474 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.671409616 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.552582867 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.395543342 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.390198873 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.389932353 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.897563087 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.371823191 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.672965098 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.921819931 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.394050731 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.923577698 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.373767361 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.393843064 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.384122469 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.923668358 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.679535362 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.661353816 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.44124423 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.925493507 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.392338561 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.391226592 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.924109157 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.396143227 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.386994723 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.918676006 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.397179557 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.408883211 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.39097924 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.441937081 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.443533804 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.67523259 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.930845359 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.668704231 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.406433971 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.568191427 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.395489482 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.373186417 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.932622427 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.396812548 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.375699653 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.394204155 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.399502008 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.909595269 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.389739182 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.90990613 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.393303927 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.397560664 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.927509171 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.911054546 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.903516582 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.553815564 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.38773558 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.663924262 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.394005353 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.936111678 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.396391713 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.396928391 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.397792758 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.556351353 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.931007246 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.665349506 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.67748635 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.678181802 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.398126325 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.450886598 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.396228614 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.677838879 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.450539774 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.812832744 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.680845866 seconds)
  done (took 125.484661254 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.640432259 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.500294146 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.749500657 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.972856439 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.880329387 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.5228781 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.499946946 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.626884568 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.402426792 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.480915651 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.011000696 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.485408493 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.120855064 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.478557846 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.492196908 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.518655323 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.774533623 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.38807075 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.048819105 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.985095648 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.408395847 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.491074165 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.904571463 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.575579522 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.401778233 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.947248511 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.332777802 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.896408392 seconds)
  done (took 52.809261186 seconds)
done (took 523.679300211 seconds)
SAVING RESULT...
DONE!
